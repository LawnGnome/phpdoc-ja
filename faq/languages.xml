<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
 <chapter id="faq.languages">
  <title>PHPと他の言語</title>
  <titleabbrev>PHPと他の言語</titleabbrev>

  <para>
   PHPはウェブプログラミングをするには最高の言語です。が、他の言語はどうなので
   しょうか？
  </para>

  <qandaset>
   <qandaentry id="faq.languages.asp">
    <question>
     <para>PHP vs. ASP?</para>
    </question>
    <answer>
     <para>
      ASPそれ自体は言語ではなく、Active Server Pagesの頭文字です。ASPを作成す
      るのに使用される実際の言語はVisual Basic ScriptかJScriptです。ASPの最大
      の欠点は、それがMicrosoft Internet Information Server (IIS)でのみ動作す
      るメーカー独自のシステムだという点です。これにより、ASPはWin32ベースのサー
      バ上でしか動作しません。ASPを他のプラットフォーム、ウェブサーバで動作さ
      せようといういくつかのプロジェクトが進行中です：
      <ulink url="&faqurl.halcyon;">Halcyon</ulink>の<ulink
      url="&faqurl.instantasp;">InstantASP</ulink>(商用)、<ulink
      url="&faqurl.chilisoft;">Chili!Soft</ulink>の<ulink
      url="&faqurl.chilisoft.asp;">Chili!Soft ASP</ulink>(商用)、そして<ulink
      url="&faqurl.openasp;">ActiveScripting.orgのOpenASP</ulink>です。
      ASPはPHPに比べて遅く、面倒で安定性も低いといわれています。ASPのプロフェッ
      ショナルの人たちの中には、ASPでは主にVBScriptが使用されているのでVisual
      Basicでのプログラミングに慣れている人にとっては覚えるのが比較的簡単だ、
      という人もいます。また、IISサーバではASPサポートがデフォルトで有効になっ
      ているので設定が簡単という利点もあります。ASPに組み込まれているコンポー
      ネントは非常に限られていて、もしFTPサーバと協調するといった「進んだ」機
      能を使おうと思ったら別途コンポーネントを購入しなければなりません。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.aspconverter">
    <question>
     <para>ASPからPHPへのコンバータはありますか？</para>
    </question>
    <answer>
     <para>
      はい。<ulink url="&faqurl.asp2php;">asp2php</ulink>が有名です。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.coldfusion">
    <question>
     <para>PHP vs. Cold Fusion?</para>
    </question>
    <answer>
     <para>
      世間ではPHPはCold Fusionに比べて速く、複雑なプログラミングを
      効率的に行うことができ、新しいアイデアを意欲的に取り込んでいる、と言われ
      ています。また、安定していてより少ないリソースで動作するというのが一般的
      な意見です。Cold Fusionはエラー処理、データベースの抽象化、日付
      の扱いにおいて優れていますが、データベースの抽象化についてはPHP 4で行わ
      れています。Cold Fusionの利点として挙げられることの一つに、その優れたサー
      チエンジンがありますが、サーチエンジンはウェブスクリプト言語に含まれるべ
      き機能ではないのではないか、という意見もあります。PHPはほとんど全てのプ
      ラットフォームで動作しますがCold Fusionが動作するのはWin32, Solaris,
      Linux, HP/UXだけです。PHPは初期段階から多少のプログラミングに関する知識
      を必要としますが、Cold FusionにはすばらしいIDEがあって、一般にとっつ
      きやすいと言われています。Cold Fusionはプログラマではない人たちも意識し
      てデザインされていますが、PHPはプログラマ主なターゲットとしています。
     </para>
     <para>
      Michael J Sheldonによるこのトピックに関するすばらしいサマリがPHPのメーリ
      ングリストに投稿されました。<ulink url="&faqurl.coldfusion.summary;">こ
      こ</ulink>でその内容を読むことができます。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.perl">
    <question>
     <para>PHP vs. Perl?</para>
    </question>
    <answer>
     <para>
      PHPのPerlに対して最も有利な点ははPerlが何もかもやろうとしてその結果複雑
      になってきているのに対して、PHPはウェブスクリプティングを念頭においてデ
      ザインされていることです。Perlの柔軟さ/複雑さは、他人にとって非常に読み
      にくいコードが簡単に書けてしまうということでもあります。PHPは、柔軟さを
      失うことなくそれほどややこしくもなく厳密でもない構成になっています。
      PHPはPerlに比べ、簡単に既存のHTMLに統合することができます。PHPにはPerl
      で使用されている非常に多くの「良い」機能があります：構成や文法等です。そ
      してこれらがPerlほど複雑になることなく提供されます。Perlは80年代後半から
      在る十分に枯れた真の言語ですが、PHPは急速に成長しています。 
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
