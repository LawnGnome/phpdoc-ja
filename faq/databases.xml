<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.23 Maintainer: hirokawa Status: ready -->
 <chapter id="faq.databases">
  <title>データベースに関する問題</title>
  <titleabbrev>データベースに関する問題</titleabbrev>

  <para>
   このセクションではPHPとデータベースとの関係に関する一般的な質問を扱
   います。なんと！PHPは事実上あらゆるデータベースにアクセスすることが
   できます。
  </para>

  <qandaset>
   <qandaentry id="faq.databases.mssql">
    <question>
     <para>
      PHPはMicrosoft SQLサーバにアクセスできると聞きました。どうすれば
      よいのでしょうか？
     </para>
    </question>
    <answer>
     <para>
      Windowsマシン上では、ODBCサポートと適切なODBCドライバを使用すれ
      ばよいだけです。
     </para>
     <para>
      Unixマシン上では、Sybase-CTドライバを使ってMicrosoft SQLサーバに
      アクセスすることができます。なぜなら(ほとんど完全に)プロトコル互
      換だからです。Sybaseは
      <ulink url="&url.sybase.ctlib;">必要なLinux用ライブラリのフリーな実装</ulink>
      を作成しました。他のUnixシステムでは適切なライブラリを手に入れるためにSybaseと
      連絡を取る必要があります。
      次の質問に対する回答も参照してください。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.access">
    <question>
     <para>Microsoft Accessデータベースにアクセスできますか？</para>
    </question>
    <answer>
     <para>
      はい。もし全て(PHPとMicrosoft Access)をWindows9x/Me/NT/2000上で
      動作させるのであり、ODBCとMicrosoftが提供するODBCドライバ for
      Microsoft Accessが使用できる状態ならば、すべての必要なツールは揃っ
      ています。
     </para>
     <para>
      UnixでPHPを動作させてWindowsマシンで操作するMS Accessに接続した
      い場合にはUnix ODBCドライバが必要です。<ulink
      url="&url.openlink;">OpenLink Software</ulink>がUnixベース
      のODBCドライバを提供しています。このドライバには無期限の試用版が
      あり、また商用サポートバージョンが675ドル〜
      で提供されています。
     </para>
     <para>
      他には、Microsoft SQLサーバにODBCドライバを使用してデータを保存
      するという手段もあります。これによって、Microsoft Access(ODBCを
      使用します)とPHP(組み込まれているドライバを使用します)でデータに
      アクセスすることができます。また、Microsoft AccessとPHP両者共に
      解釈可能な中間ファイル(例えば単層からなるファイルや、 dBaseデー
      タベース等)を使用する手もあります。これに関してはOpeLink
      SoftwareのTim Hayesが以下のように述べています：
      <programlisting>
       PHPからじかにODBCドライバが使用できる場合(つまりOpenLinkのドラ
       イバを使用している場合)には、他のデータベースを中継手段として用
       いることはよいアイデアとは言えない。どうしても中間ファイルが必
       要な場合のために、OpenLinkはNT, Linux, そして他のUnix用の
       Virtuoso(仮想データベースエンジン)をリリースした。私たちの
       <ulink url="&url.openlink;">ウェブサイト</ulink>を訪れても
       らえれば、無料でダウンロードできる。
      </programlisting>
     </para>
     <para>
      うまくいくことが分かってるもう一つの方法はMySQLと、Windows用の
      MyODBCドライバを利用してデータベースを同期する方法です。Steve
      Lawrenceが言うには：
     </para>
     <para>
      <itemizedlist>
       <listitem>
        <simpara>
         MySQLを説明に従って任意のプラットフォームにインストールします。
         最新バージョンは<ulink
         url="&url.mysql;">www.mysql.com</ulink>(ミラーを使うこと！)
         にあります。データベースを作成するとき、そしてユーザアカウン
         トを設定するときに、ホストフィールドに%か、MySQLを使ってアク
         セスするWindowsマシンのホスト名を入力する、ということ以外には
         特別な設定は必要ありません。
         使用するサーバ名、ユーザ名、パスワードを書きとめておいてください。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         MySQLサイトからWindows用MyODBCドライバをダウンロードします。
         最新のリリースはmyodbc-2_50_19-win95.zipです(NT版、ソースコー
         ドも入手可能です)。これをWindowsマシンにインストールします。
         アーカイブに含まれるユーティリティプログラムでテストを行うこ
         とができます。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         コントロールパネルのODBC administratorを使用してユーザ、もし
         くはシステムDSNを作成します。DSN名を決定して、Step1でMySQLに
         設定したホスト名、ユーザ名、パスワード、ポート等を入力します。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Accessをフルインストールでインストールします。これは適切なア
         ドインをインストールするためです。少なくともODBCサポートとリ
         ンクテーブルマネージャが必要です。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         ここからがお楽しみです。新規データベースを作成しましょう。テー
         ブルウィンドウで右クリックしてリンクテーブルを選択します。も
         しくはファイルメニューから外部データの取り込みを選びリンクテー
         ブルを選択します。ファイルブラウザが表示されたらファイルタイ
         プからODBCを選択します。次にシステムDSNを選択肢STEP3で作成し
         たDSN名を選択します。リンクするテーブルを選んでOKボタンを押し
         ましょう。MySQLサーバでテーブルのオープンをオープンできるよう
         になっていて、データの追加/削除/編集ができるようになっていま
         す。さらに、クエリの構築、テーブルのインポート/エクスポート、
         フォームやレポートの構築等が可能です。
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
     <para>
      Tips and Tricks(役に立つヒント):
      <itemizedlist>
       <listitem>
        <simpara>
         Accessでテーブルを作成してそれをMySQLへエクスポートします。そ
         れを再度アクセスからリンクすれば素早くテーブルを作成すること
         ができます。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Accessでテーブルを作成するときは、そのテーブルに書き込み権限
         をもたせるためにプライマリキーを設定しておく必要があります。
         Accessとテーブルをリンクする前にMySQLにプライマリキーを設定し
         ておくことも忘れないでください。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         MySQL側でテーブル(の構成)を変更した場合、再度Accessとリンクす
         る必要があります。ツール>アドイン>リンクテーブルマネージャか
         ら適切なODBC DSNを選んで再リンクが必要なテーブルを選択します。
         また、ここでOKボタンを押す前に「リンク先を更新するためのプロ
         ンプトを毎回表示する」をチェックしておけばDSNソースを移動させ
         ることができます。
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.upgraded">
    <question>
     <para>
      PHP 4にアップグレードしたら、mysqlサーバが"Warning: MySQL:
      Unable to save result set in ..."という警告をしつづけます。何が
      起こっているのでしょうか？
     </para>
    </question>
    <answer>
     <para>
      一番に考えられるのはPHP 4を、MySQLへのパス指定なしに'--with-mysql'
      オプションをつけてコンパイルしたという場合です。これ
      はPHPが組み込まれたMySQLクライアントライブラリを使用するというこ
      とを意味します。もしあなたのシステムで、PHP 3やauth-mysqlの
      apacheモジュールといった他のバージョンのMySQLクライアントを使用
      するアプリケーションが同時に動作している場合には、各クライアント
      間でバージョンの競合が発生してしまいます。
     </para>
     <para>
      PHP 4を
      '<link linkend="mysql.configure">--with-mysql=/your/path/to/mysql</link>' 
      というようにオプションにパスを記述して再コンパイルすることで通常
      の場合は問題は解決されます。
     </para>
    </answer>
   </qandaentry>
   
   <qandaentry id="faq.databases.mysql.php5">
    <question>
     <para>
      PHP 5 no longer bundles MySQL client libraries, what does this mean to
      me?  Can I still use MySQL with PHP?  I try to use MySQL and get
      "function undefined" errors, what gives? 
     </para>
    </question>
    <answer>
     <para>
      Yes.  There will always be MySQL support in PHP of one kind or
      another.  The only change in PHP 5 is that we are no longer bundling
      the client library itself.  Some reasons in no particular order:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        Most systems these days already have the client library installed.
       </para>
      </listitem>
      <listitem>
       <para>
        Given the above, having multiple versions of the library can get
        messy.  For example, if you link mod_auth_mysql against one version
        and PHP against another, and then enable both in Apache, you get a
        nice fat crash.  Also, the bundled library didn't always play well
        with the installed server version.  The most obvious symptom of this
        being disagreement over where to find the mysql.socket Unix domain
        socket file.
       </para>
      </listitem>
      <listitem>
       <para>
        Maintenance was somewhat lax and it was falling further and further
        behind the released version.
       </para>
      </listitem>
      <listitem>
       <para>
        Future versions of the library are under the GPL and thus we don't
        have an upgrade path since we cannot bundle a GPL'ed library in a
        BSD/Apache-style licensed project.  A clean break in PHP 5 seemed
        like the best option.
       </para>
      </listitem>
     </itemizedlist>
     <para>
      This won't actually affect that many people.  Unix users, at least the
      ones who know what they are doing, tend to always build PHP against
      their system's libmyqlclient library simply by doing --with-mysql=/usr
      when building PHP.  Windows users may enable the extension 
      <filename>php_mysql.dll</filename> inside &php.ini;.  Also, copy 
      <filename>libmySQL.dll</filename> into the appropriate 
      <literal>%SYSTEMROOT%</literal> directory, just like you do with every
      other bundled DLL from the <filename>dll</filename> directory.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.shared-mysql">
    <question>
     <para>
      共有MySQLサポートをインストールしたら、libphp4がロードされると同
      時にApacheがコアダンプします。直りますか？
     </para>
    </question>
    <answer>
     <para>
      もしあなたのシステムのMySQLライブラリがpthreadsとリンクされてい
      る場合にはこの現象が発生します。lddコマンドを使用してチェックし
      てください。もしpthreadsがリンクされている場合は、MySQLのtarball
      を展開してソースからコンパイルしなおしてください。もしくはSRPMの
      SPECファイルのスレッドクライアントコードの箇所を削除してコンパイ
      ルしなおしてください。いずれかの方法で問題を解決できます。その後、
      PHPを新しいMySQLライブラリでコンパイルしなおしてください。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.mysqlresource">
    <question>
     <para>
      なぜこのようなエラーがでるのでしょうか？： "Warning: 0 is not a MySQL
      result index in &lt;file&gt; on line &lt;x&gt;" もしくは "Warning: Supplied argument
      is not a valid MySQL result resource in &lt;file&gt; on line &lt;x&gt;? 
     </para>
    </question>
    <answer>
     <para>
      あなたは値が0である結果(result)IDを指定しようとしています。0はあ
      なたのクエリが何らかの理由で失敗したことを示しています。応答
      (result)IDを使用する前に、クエリを送信したあとのエラーをチェック
      する必要があります。以下のようなコードが正しい方法です。
      <programlisting>
$result = mysql_query("SELECT * FROM tables_priv");
if (!$result) {
    echo mysql_error();
    exit;
}
      </programlisting>
      もしくは
      <programlisting>
$result = mysql_query("SELECT * FROM tables_priv")
    or die("Bad query: ".mysql_error());
      </programlisting>
     </para>
    </answer>
   </qandaentry>
  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
