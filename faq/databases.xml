<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.30 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
 <chapter id="faq.databases">
  <title>データベースに関する問題</title>
  <titleabbrev>データベースに関する問題</titleabbrev>

  <para>
   このセクションでは PHP とデータベースとの関係に関する一般的な質問を
   扱います。なんと! PHP は事実上あらゆるデータベースにアクセスすることが
   できます。
  </para>

  <qandaset>
   <qandaentry id="faq.databases.mssql">
    <question>
     <para>
      PHP は Microsoft SQL Server にアクセスできると聞きました。どうすれば
      よいのでしょうか？
     </para>
    </question>
    <answer>
     <para>
      Windows マシン上では、ODBC サポートと適切な ODBC ドライバを
      使用すればよいだけです。
     </para>
     <para>
      Unix マシン上では、Sybase-CT ドライバを使って Microsoft SQL Server
      にアクセスすることができます。なぜなら(ほとんど完全に)プロトコル
      互換だからです。Sybase は
      <ulink url="&url.sybase.ctlib;">必要な Linux 用ライブラリのフリーな実装</ulink>
      を作成しました。他の Unix システムでは適切なライブラリを手に入れるために
      Sybase と連絡を取る必要があります。
      次の質問に対する回答も参照してください。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.access">
    <question>
     <para>Microsoft Access データベースにアクセスできますか？</para>
    </question>
    <answer>
     <para>
      はい。もし全て (PHP と Microsoft Access) を Windows9x/Me/NT/2000
      上で動作させるのであり、ODBC と Microsoft が提供する Microsoft Access 用
      ODBC ドライバ が使用できる状態ならば、
      すべての必要なツールは揃っています。
     </para>
     <para>
      Unix で PHP を動作させて Windows マシンで動作する MS Access
      に接続したい場合には Unix ODBC ドライバが必要です。<ulink
      url="&url.openlink;">OpenLink Software</ulink> が Unix ベースの
      ODBC ドライバを提供しています。
     </para>
     <para>
      他には、Microsoft SQL Server に ODBC ドライバを使用してデータを
      保存するという手段もあります。これによって、Microsoft Access (ODBC
      を使用します) と PHP (組み込まれているドライバを使用します) でデータに
      アクセスすることができます。また、Microsoft Access と PHP 両者共に
      解釈可能な中間ファイル(例えば単層からなるファイルや、dBase
      データベース等)を使用する手もあります。これに関しては OpenLink
      Software の Tim Hayes が以下のように述べています。
      <blockquote>
       <para>
        PHP からじかに ODBC ドライバが使用できる場合(つまり OpenLink の
        ドライバを使用している場合)には、他のデータベースを中継手段として
        用いることはよいアイデアとは言えない。どうしても中間ファイルが
        必要な場合のために、OpenLink は NT、Linux、そして他の Unix 用の
        Virtuoso(仮想データベースエンジン)をリリースした。私たちの
        <ulink url="&url.openlink;">ウェブサイト</ulink>を
        訪れてもらえれば、無料でダウンロードできる。
       </para>
      </blockquote>
     </para>
     <para>
      うまくいくことが分かってるもう一つの方法は、MySQL と Windows 用の
      MyODBC ドライバを利用してデータベースを同期する方法です。Steve
      Lawrence が言うには、
     </para>
     <para>
      <itemizedlist>
       <listitem>
        <simpara>
         MySQL を説明に従って任意のプラットフォームにインストールします。
         最新バージョンは <ulink
         url="&url.mysql;">&url.mysql;</ulink>
         にあります。データベースを作成するとき、そしてユーザアカウントを
         を設定するときに、ホストフィールドに % か MySQL を使って
         アクセスする Windows マシンのホスト名を入力する、ということ以外には
         特別な設定は必要ありません。
         使用するサーバ名、ユーザ名、パスワードを書きとめておいてください。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         MySQL サイトから Windows 用 MyODBC ドライバをダウンロードします。
         それを Windows マシンにインストールします。
         アーカイブに含まれるユーティリティプログラムで、
         テストを行うことができます。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         コントロールパネルの ODBC administrator を使用して、ユーザ
         もしくはシステム DSN を作成します。DSN 名を決定して、Step1 で MySQL
         に設定したホスト名、ユーザ名、パスワード、ポート等を入力します。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Access をフルインストールでインストールします。これは適切な
         アドインをインストールするためです。少なくとも ODBC サポートと
         リンクテーブルマネージャが必要です。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         ここからがお楽しみです。新規データベースを作成しましょう。
         テーブルウィンドウで右クリックしてリンクテーブルを選択します。
         もしくはファイルメニューから外部データの取り込みを選び
         リンクテーブルを選択します。ファイルブラウザが表示されたら
         ファイルタイプから ODBC を選択します。次にシステム DSN で
         選択肢 STEP3 で作成した DSN 名を選択します。リンクするテーブルを
         選んで OK ボタンを押しましょう。MySQL サーバでテーブルを
         オープンできるようになっていて、データの追加/削除/編集ができるように
         なっています。さらに、クエリの構築、テーブルのインポート/エクスポート、
         フォームやレポートの構築等が可能です。
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
     <para>
      Tips and Tricks(役に立つヒント):
      <itemizedlist>
       <listitem>
        <simpara>
         Access でテーブルを作成してそれを MySQL へエクスポートします。
         それを再度アクセスからリンクすれば素早くテーブルを作成すること
         ができます。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Access でテーブルを作成するときは、そのテーブルに書き込み権限を
         もたせるためにプライマリキーを設定しておく必要があります。
         Access とテーブルをリンクする前に MySQL にプライマリキーを設定
         しておくことも忘れないでください。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         MySQL 側でテーブル(の構成)を変更した場合、再度 Access とリンクする
         必要があります。ツール>アドイン>リンクテーブルマネージャから
         適切な ODBC DSN を選んで再リンクが必要なテーブルを選択します。
         また、ここで OK ボタンを押す前に「リンク先を更新するための
         プロンプトを毎回表示する」をチェックしておけば DSN ソースを
         移動させることができます。
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.upgraded">
    <question>
     <para>
      PHP 4 にアップグレードしたら、mysql サーバが "Warning: MySQL:
      Unable to save result set in ..." という警告をしつづけます。何が
      起こっているのでしょうか?
     </para>
    </question>
    <answer>
     <para>
      一番に考えられるのは、PHP 4 を MySQL へのパス指定なしに
      <option role="configure">--with-mysql</option>
      オプションをつけてコンパイルしたという場合です。これは
      PHP が組み込まれた MySQL クライアントライブラリを使用するという
      ことを意味します。もしあなたのシステムで、PHP 3 や auth-mysql の
      apache モジュールといった他のバージョンの MySQL クライアントを
      使用するアプリケーションが同時に動作している場合には、
      各クライアント間でバージョンの競合が発生してしまいます。
     </para>
     <para>
      PHP 4 を
      '<link linkend="mysql.configure">--with-mysql=/your/path/to/mysql</link>'
      というようにオプションにパスを記述して再コンパイルすることで、
      通常の場合は問題は解決されます。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.mysql.php5">
    <question>
     <para>
      PHP 5 では MySQL クライアントライブラリがバンドルされません。これは
      私にとってどのような意味がありますか? PHP を MySQL とともに使用する
      ことはできるのですか? MySQL を使用しようとすると
      "function undefined" エラーが出るのですが、どうしたらいいのですか?
     </para>
    </question>
    <answer>
     <para>
      はい。どのような意味においても PHP は常に MySQL をサポートしています。
      PHP 5 で変わったことといえば、クライアントライブラリをバンドルしなく
      なったということだけです。以下に、順不同で理由を挙げます。
     </para>
     <itemizedlist>
      <listitem>
       <para>
        最近のシステムにはすでにクライアントライブラリがインストールされています。
       </para>
      </listitem>
      <listitem>
       <para>
        上と関連して、複数バージョンのライブラリを共存させると環境がおかしく
        なりがちです。たとえば、mod_auth_mysql と PHP をそれぞれ別のバージョンの
        ライブラリとリンクさせ、Apache でそれら両方を有効にすると、いとも簡単に
        クラッシュすることでしょう。また、バンドルされているライブラリが
        インストールされているサーバとうまく動作するとは限りません。もっとも
        ありがちな症状は、Unix ドメインソケットのファイル mysql.socket
        を探す場所の不一致です。
       </para>
      </listitem>
      <listitem>
       <para>
        保守がとどこおりがちで、現在リリースされているバージョンに
        どんどん遅れをとってしまいます。
       </para>
      </listitem>
      <listitem>
       <para>
        将来のバージョンのライブラリは GPL の元で配布されます。そのため、
        私たちはアップグレードの手段を提供することができません。なぜなら
        私たちのような BSD/Apache スタイルのライセンスを採用している
        プロジェクトは、GPL のライブラリをバンドルできないからです。
        PHP 5 でバンドルをやめたことは最善の方法だと考えます。
       </para>
      </listitem>
     </itemizedlist>
     <para>
      このことがそんなに多くの人々に影響することはないでしょう。
      Unix ユーザ、少なくとも自分が何をしているかを把握している人たちは、
      PHP をビルドする際には常に  <option role="configure">--with-mysql=/usr</option>
      してシステムの libmyqlclient ライブラリを使用するようにしているでしょう。
      Windows ユーザは、&php.ini; で <filename>php_mysql.dll</filename>
      を有効にしていることでしょう。
      インストール手順の詳細は、<link linkend="ref.mysql">MySQL リファレンス</link>
      を参照ください。また、<filename>libmysql.dll</filename> が
      システムの PATH が通った場所にあることを確認してください。その方法に
      ついては、FAQ の <link linkend="faq.installation.addtopath">Windows のシステム
      PATH を設定する</link> を参照ください。
      <filename>libmysql.dll</filename>（やその他多くの PHP 関連ファイル）が
      PHP フォルダにあることから、このフォルダをシステムの PATH に追加
      したくなるかもしれません。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.shared-mysql">
    <question>
     <para>
      共有 MySQL サポートをインストールしたら、libphp4 がロードされると
      同時に Apache がコアダンプします。直りますか？
     </para>
    </question>
    <answer>
     <para>
      もしあなたのシステムの MySQL ライブラリが pthreads とリンクされて
      いる場合にはこの現象が発生します。ldd コマンドを使用してチェック
      してください。もし pthreads がリンクされている場合は、MySQL の tarball
      を展開してソースからコンパイルしなおしてください。もしくは SRPM の
      SPEC ファイルのスレッドクライアントコードの箇所を削除してコンパイル
      しなおしてください。いずれかの方法で問題を解決できます。その後、
      PHP を新しい MySQL ライブラリでコンパイルしなおしてください。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.mysqlresource">
    <question>
     <para>
      "Warning: 0 is not a MySQL
      result index in &lt;file&gt; on line &lt;x&gt;" もしくは "Warning: Supplied argument
      is not a valid MySQL result resource in &lt;file&gt; on line &lt;x&gt;"
      のようなエラーが出るのはなぜでしょうか?
     </para>
    </question>
    <answer>
     <para>
      あなたは値が 0 である結果(result)ID を指定しようとしています。0 は
      あなたのクエリが何らかの理由で失敗したことを示しています。結果
      (result)ID を使用する前に、クエリを送信したあとのエラーをチェック
      する必要があります。以下のようなコードが正しい方法です。
      <programlisting role="php">
<![CDATA[
<?php

$result = mysql_query("SELECT * FROM tables_priv");
if (!$result) {
    echo mysql_error();
    exit;
}
?>
]]>
      </programlisting>
      もしくは
      <programlisting role="php">
<![CDATA[
<?php

$result = mysql_query("SELECT * FROM tables_priv")
    or die("Bad query: " . mysql_error());
?>
]]>
      </programlisting>
     </para>
    </answer>
   </qandaentry>
  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
