<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.3 Maintainer: hirokawa Status: ready -->

  <chapter xml:id="security.hiding" xmlns="http://docbook.org/ns/docbook">
   <title>PHPの隠蔽</title>
   <para>
    一般に隠蔽という手段はセキュリティとしては弱いものだと言われています。
    しかしこうした手法が望ましい場合もあります。
   </para>
   <para>
    PHPを隠すための簡単な技法がいくつかあり、システムの弱点を見つけよ
    うとする攻撃を遅延させることができる可能性があります。&php.ini;ファ
    イルでexpose_php = offと設定することにより、攻撃者が利用可能な情
    報を減らすことが可能です。
   </para>
   <para>
    他の手段は、ApacheのようなWebサーバをPHPに異なるファイル形式をパー
    スさせるように設定することです。これは、.htaccessディレクティブま
    たはApacheの設定ファイル自体で指定します。これにより、紛らわしい
    ファイル拡張子を使用可能です。
    <example>
     <title>PHPを他の言語として隠す</title>
     <programlisting role="apache-conf">
<![CDATA[
# PHPコードを他のコード型のようにする
AddType application/x-httpd-php .asp .py .pl
]]>
     </programlisting>
    </example>
    または、次のように完全に隠すことも可能です。
    <example>
     <title>PHP拡張子用に未知の型を使用する</title>
     <programlisting role="apache-conf">
<![CDATA[
# Make PHP code look like unknown types
AddType application/x-httpd-php .bop .foo .133t
]]>
     </programlisting>
    </example>
    または、HTMLコードとして隠すことも可能です。この場合、全てのHTMLファ
    イルがPHPエンジンを通じてパースされることになるため、若干の性能上の
    問題があります。
    <example>
     <title>PHP拡張子としてHTML型を使用する</title>
     <programlisting role="apache-conf">
<![CDATA[
# 全てのPHPコードをHTMLのように作成する
AddType application/x-httpd-php .htm .html
]]>
     </programlisting>
    </example>
    効率的にこれを使用するには、全てのPHPファイルの名前を上の拡張子に変更
    する必要があります。これは、あいまいさに基づく形式のセキュリティですが、
    欠点の少ない簡単な防衛策です。
   </para>
  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
