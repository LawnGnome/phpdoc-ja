<?xml version='1.0' encoding='utf-8'?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.2 Maintainer: takagi Status: ready -->
<sect1 id="internals.pdo.preparation">
 <title>準備</title>
 <sect2>
  <title>ソースディレクトリの構造</title>

  <para>
   典型的な PDO ドライバのソースディレクトリは以下のようになっています。
   ここで、<literal>SKEL</literal> はドライバが接続しようとしている
   データベース名の短縮形式を表します。ここでは SKEL が大文字で
   表記されていますが(存在をはっきりさせるためです)、実際は
   小文字を使用するのが慣例です。
  </para>
  <screen>
pdo_SKEL/          
  config.m4                  <co id="internals.pdo.layout.co.m4"/>
  config.w32                 <co id="internals.pdo.layout.co.w32"/>
  CREDITS
  package.xml                <co id="internals.pdo.layout.co.cred"/>
  pdo_SKEL.c           <co id="internals.pdo.layout.co.glue"/>
  php_pdo_SKEL.h
  php_pdo_SKEL_int.h   <co id="internals.pdo.layout.co.priv"/>
  SKEL_dbh.c           <co id="internals.pdo.layout.co.dbh"/>
  SKEL_stmt.c          <co id="internals.pdo.layout.co.stmt"/>
  </screen>
  <calloutlist>
   <callout arearefs="internals.pdo.layout.co.m4">
    <para>unix 用のビルドスクリプト</para>
   </callout>
   <callout arearefs="internals.pdo.layout.co.w32">
    <para>win32 用のビルドスクリプト</para>
   </callout>
   <callout arearefs="internals.pdo.layout.co.cred">
    <para>パッケージのメタ情報</para>
   </callout>
   <callout arearefs="internals.pdo.layout.co.glue">
    <para>標準 PHP 拡張モジュールとの橋渡し</para>
   </callout>
   <callout arearefs="internals.pdo.layout.co.priv">
    <para>ドライバ固有のヘッダ</para>
   </callout>
   <callout arearefs="internals.pdo.layout.co.dbh">
    <para>PDO ドライバインターフェイスの実装を含みます</para>
   </callout>
   <callout arearefs="internals.pdo.layout.co.stmt">
    <para>PDO ステートメントインターフェイスの実装を含みます</para>
   </callout>
  </calloutlist>
  <para>これらのファイルの内容については、この文書の後半で説明します。</para>
 </sect2>
 <sect2>
  <title>雛形の作成</title>

  <para>
   開発を始めるにあたっての最もお手軽な方法は、PHP ビルドツリーの
   <filename>ext</filename> ディレクトリにあるシェルスクリプト
   <command>ext_skel</command> を使用することです。
   このスクリプトは、上で挙げた多くのファイルを含む雛形ディレクトリを
   作成します。スクリプトは、<filename>ext</filename> ディレクトリの
   中で以下のように実行します。
  </para>
  <screen>./ext_skel --extname=pdo_SKEL</screen>
  <para>
   これにより pdo_SKEL というディレクトリが作成され、その中に
   これから書き換えていく元となるファイルが作成されます
   次に、このディレクトリを PHP のエクステンションディレクトリに
   移動します。PDO は PECL 拡張モジュールなので、標準的な
   エクステンションディレクトリには含まれません。
   PHP および PDO がインストールされていれば、どのディレクトリからでも
   ビルドすることが可能です。
  </para>
 </sect2>
 <sect2>
  <title>標準的な include ファイル</title>
  <sect3>
   <title>ビルド固有のヘッダ</title>
   <para>
    configure の際に、ドライバのビルドに使用するプラットフォーム固有の
    ヘッダファイル config.h が作成されます。このヘッダが存在する場合、
    コンパイラ変数 HAVE_CONFIG_H が設定されます。コンパイル時には
    この変数が存在するかどうかが調べられ、もし設定されていれば
    config.h が include されます。
   </para>
  </sect3>
  <sect3>
   <title>PHP のヘッダ</title>
   <para>
    各ソースモジュールには、以下の標準 PHP ヘッダが include されます。
   </para>
   <orderedlist>
    <listitem>
     <para>php.h</para>
    </listitem>
    <listitem>
     <para>php_ini.h</para>
    </listitem>
    <listitem>
     <para>ext/standard/info.h</para>
    </listitem>
   </orderedlist>
  </sect3>
  <sect3>
   <title>PDO インターフェイスのヘッダ</title>
   <para>
    各ソースモジュールには、以下の標準 PDO ヘッダファイルも include されます。
   </para>
   <variablelist>
    <varlistentry>
     <term>pdo/php_pdo.h</term>
     <listitem>
      <para>
       このヘッダファイルには、ドライバの初期化やシャットダウンのための
       関数の定義やグローバル PDO 変数の定義が含まれます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>pdo/php_pdo_driver.h</term>
     <listitem>
      <para>
       このヘッダには、PDO ドライバを書く際に使用する型や API の規約が
       含まれます。PDO レイヤへのコールバックの定義、PDO にドライバを
       登録したり登録を解除したりする関数の定義も含まれます。
       最も重要なものとして、このヘッダファイルには PDO データベース
       ハンドルやステートメントの型定義が含まれています。
       ドライバが主に使用する 2 つの構造体
       pdo_dbh_t および pdo_stmt_t については、それぞれ
       付録 A および B で詳細に説明します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3>
   <title>ドライバ固有のヘッダ</title>
   <para>
    典型的な PDO ドライバは 2 つのヘッダファイルを保持しており、ここに
    データベースの実装に依存する内容が記述されます。実装内容によって
    これが変わることがあってもかまいませんが、規約では以下の 2 つの
    ヘッダが標準となっています。
   </para>
   <variablelist>
    <varlistentry>
     <term>php_pdo_SKEL.h</term>
     <listitem>
      <para>
       このヘッダファイルは、先ほど挙げた pdo/php_pdo.h の機能と内容を
       完全に複製したもので、データベースに応じて変更していきます。
       ドライバがグローバル変数を使用する場合、マクロ
       ZEND_BEGIN_MODULE_GLOBALS および ZEND_END_MODULE_GLOBALS を
       使用してそれを定義しておく必要があります。これらの変数に
       アクセスする際に、マクロが使用されます。このマクロは
       通常は PDO_SKEL_G(v) という名前で、v がアクセスされる
       グローバル変数となります。
       詳細な情報は、Zend のプログラマ向けドキュメントを参照ください。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>php_pdo_SKEL_int.h</term>
     <listitem>
      <para>
       このヘッダファイルには、ドライバの実装固有の型定義や関数宣言が
       含まれます。また、データベース固有の構造体 pdo_SKEL_handle
       および pdo_SKEL_stmt の定義も含みます。これらは private
       構造体で、ハンドル構造体やステートメント構造体のメンバ
       driver_data として参照されます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3>
   <title>オプションのヘッダ</title>
   <para>
    ドライバの実装方法によっては、以下のヘッダを include する
    必要があるかもしれません。
   </para>
   <synopsis>
#include &lt;zend_exceptions.h&gt;
   </synopsis>
  </sect3>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
