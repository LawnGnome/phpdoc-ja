<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.16 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka,takagi -->

 <chapter xml:id="install.pecl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>PECL 拡張モジュールのインストール</title>

  <sect1 xml:id="install.pecl.intro">
   <title>PECL インストール入門</title>
   <simpara>
    <link xlink:href="&url.pecl;">PECL</link> は PHP 拡張モジュールのリポジトリで、
    <link xlink:href="&url.php.pear;">PEAR</link> パッケージシステムを経由して使用可能です。
    ここでは PECL 拡張モジュールを取得してインストールする方法を解説します。
   </simpara>
   <simpara>
    以下に示す手順では、PHP のソース配布物へのパスが <literal>/your/phpsrcdir/</literal>
    であり、PECL 拡張モジュールの名前が <literal>extname</literal>
    であると仮定しています。適切に変更してください。また、
    <link xlink:href="&url.php.pear.cli;">pear コマンド</link>
    についても理解していることとします。
    PEAR マニュアルにある <literal>pear</literal> コマンドについての情報は、
    そのまま <literal>pecl</literal> コマンドにもあてはまります。
   </simpara>
   <simpara>
    便利な機能を使用するには、拡張モジュールをビルドし、
    インストールして読み込まなければなりません。
    拡張モジュールのビルドとインストールについては以下でさまざまな方法を説明しますが、
    モジュールの読み込みは自動的には行われません。モジュールを読み込むには、
    &php.ini; ファイルに <link linkend="ini.extension">extension</link>
    ディレクティブを追加するか、<function>dl</function> 関数を使用します。
   </simpara>
   <simpara>
    拡張モジュールのビルドにあたっては、適切なバージョンのツール
    (autoconf, automake, libtool など) を使用することが重要です。
    必要なツールとそのバージョンについては、
    <link xlink:href="&url.php.anoncvs;">Anonymous CVS の手順</link> を参照してください。
   </simpara>
  </sect1>

  <sect1 xml:id="install.pecl.downloads">
   <title>PECL 拡張モジュールをダウンロードする</title>
   <simpara>
    PECL 拡張モジュールをダウンロードするには、以下に示す通り、いくつかの方法があります。
   </simpara>
   <itemizedlist>
    <listitem>
     <simpara>
      <link xlink:href="&url.pecl;">&url.pecl;</link>
     </simpara>
     <simpara>
      PECL のウェブサイトでは、PHP 開発チームが提供する
      さまざまな拡張モジュールについての情報が公開されています。
      ChangeLog やリリース情報、必要な要件、リビジョンといった情報が参照可能です。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>pecl download extname</literal>
     </simpara>
     <simpara>
      PECL のウェブサイトで公開されている PECL 拡張モジュールは、
      <link xlink:href="&url.php.pear.cli;">pecl コマンド</link>
      を使ってソースファイルをダウンロードすることもできます。
      特定のバージョンを指定可能です。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <acronym>CVS</acronym>
     </simpara>
     <simpara>
      大半の PECL 拡張モジュールは <acronym>CVS</acronym> にも収められています。
      <link xlink:href="&url.php.cvs;pecl/">&url.php.cvs;pecl/</link> で、
      ウェブから参照することができます。
      <acronym>CVS</acronym> から直接ダウンロードする場合は、
      以下の一連のコマンドを使用します。
      ユーザ <emphasis>cvsread</emphasis> のパスワードは
      <emphasis>phpfi</emphasis> であることに注意しましょう。
     </simpara>
     <para>
      <screen>
$ cvs -d:pserver:cvsread@cvs.php.net:/repository login
$ cvs -d:pserver:cvsread@cvs.php.net:/repository co pecl/extname
      </screen>
     </para>
    </listitem>
    <listitem>
     <simpara>
      Windows ダウンロード
     </simpara>
     <simpara>
      Windows 用にコンパイルされた PECL バイナリを
      <link xlink:href="&url.php.downloads;">PHP Downloads</link> ページの
      <emphasis>Collection of PECL modules</emphasis>
      のところからダウンロードできます。あるいは
      <link xlink:href="&url.php.snapshots;">PECL のスナップショット</link>
      からも取得できます。また、拡張モジュールの DLL は、
      <link xlink:href="&url.pecl.win;">PECL4WIN</link> で取得できます。
      Windows での PHP のコンパイル方法については、
      <link linkend="install.windows.building">こちらの章</link>
      により適切な説明があります。
     </simpara>
    </listitem>
   </itemizedlist>
  </sect1>

  <sect1 xml:id="install.pecl.windows">
   <title>Windows で PECL を使用する</title>
   <simpara>
    他の PHP 拡張モジュールの <acronym>DLL</acronym> と同様に、
    PECL 拡張モジュールの <acronym>DLL</acronym> も &php.ini; の
    <link linkend="ini.extension-dir">extension_dir</link>
    フォルダにコピーし、&php.ini; の設定を行ってください。例を以下に示します。
   </simpara>
   <para>
    <screen>
extension=php_extname.dll
   </screen>
   </para>
   <simpara>
    完了したら、ウェブサーバを再起動してください。
   </simpara>
  </sect1>

  <sect1 xml:id="install.pecl.pear">
   <title>共有 PECL 拡張モジュールを、pecl コマンドを用いてコンパイルする</title>
   <simpara>
    PECL を用いると、共有 PECL 拡張モジュールを容易に作成することができます。
    以下のように <link xlink:href="&url.php.pear.cli;">pecl コマンド</link> を用います。
   </simpara>
   <para>
    <screen>
$ pecl install extname
    </screen>
   </para>
   <simpara>
    <emphasis>extname</emphasis> のソースがダウンロードされ、
    コンパイルおよび <link linkend="ini.extension-dir">extension_dir</link>
    への <filename>extname.so</filename> のインストールが行われます。
    <filename>extname.so</filename> は、&php.ini; 経由で読み込まれます。
   </simpara>
   <simpara>
    デフォルトでは、<literal>pecl</literal> コマンドは
    状態が <literal>alpha</literal> あるいは <literal>beta</literal>
    のパッケージをインストールしません。<literal>stable</literal>
    なパッケージが存在しない場合は、以下のコマンドを使用して
    <literal>beta</literal> パッケージをインストールします。
   </simpara>
   <para>
    <screen>
$ pecl install extname-beta
   </screen>
  </para>
  <para>
   特定のバージョンをインストールするには、次のような変化形を使用します。
  </para>
  <para>
   <screen>
$ pecl install extname-0.1
    </screen>
   </para>
  </sect1>

  <sect1 xml:id="install.pecl.phpize">
   <title>phpize で共有 PECL 拡張モジュールをコンパイルする方法</title>
   <simpara>
    時には <literal>pecl</literal> インストーラを使用するという選択肢が使えない場合もあります。
    たとえばファイアウォールの内部で作業をしている場合がそうですし、
    まだリリースされていない CVS 版のように
    PECL パッケージ形式になっていないものをインストールする場合も
    それにあてはまります。このようなモジュールをビルドする必要がある場合は、
    より低レベルなビルドツールを使用して手動でビルドします。
   </simpara>
   <simpara>
    PHP 拡張モジュールのビルド環境を準備するために、
    <literal>phpize</literal> コマンドを使用します。以下の例では、
    拡張モジュールのソースが <filename>extname</filename>
    というディレクトリにあると仮定します。
   </simpara>
   <para>
    <screen>
<![CDATA[
$ cd extname
$ phpize
$ ./configure
$ make
# make install
]]>
    </screen>
   </para>
   <simpara>
    上手くいけば、<filename>extname.so</filename> が作成され、
    それが PHP の
    <link linkend="ini.extension-dir">拡張モジュールディレクトリ</link>
    に置かれます。
    この拡張モジュールを使用する前に、&php.ini; に
    <literal>extension=extname.so</literal> という行を追加する必要があります。
   </simpara>
  <simpara>
   コンパイル済みのパッケージ (RPM など) を使用している場合などで、もし
   <literal>phpize</literal> コマンドが見つからない場合は、適切な
   <literal>devel</literal> 版の PHP パッケージをインストールしましょう。
   PHP や拡張モジュールをビルドするために必要なヘッダファイルや
   <literal>phpize</literal> コマンドは、このパッケージに含まれます。
  </simpara>
  <simpara>
   使用法についての詳細な情報を表示するには、
   <literal>phpize --help</literal> を実行します。
  </simpara>
  </sect1>

  <sect1 xml:id="install.pecl.static">
   <title>PECL 拡張モジュールを PHP に静的に組み込む</title>
   <simpara>
    PECL 拡張モジュールを PHP に静的に組み込みたいと思うこともあるでしょう。
    そのためには、拡張モジュールのソースを <filename>php-src/ext/</filename>
    ディレクトリに置き、PHP にその設定スクリプトを生成させる必要があります。
   </simpara>
   <para>
    <screen>
<![CDATA[
$ cd /your/phpsrcdir/ext
$ pecl download extname
$ gzip -d < extname.tgz | tar -xvf -
$ mv extname-x.x.x extname
]]>
    </screen>
   </para>
   <simpara>
    上記を行うと、以下のディレクトリが作成されます。
   </simpara>
   <para>
    <screen>
     /your/phpsrcdir/ext/extname
    </screen>
   </para>
   <simpara>
    これ以降、PHP に configure スクリプトを再実行させ、通常通りに
    PHP をビルドします。
   </simpara>
   <para>
    <screen>
$ cd /your/phpsrcdir
$ rm configure
$ ./buildconf --force
$ ./configure --help
$ ./configure --with-extname --enable-someotherext --with-foobar
$ make
$ make install
    </screen>
   </para>
   <note>
    <simpara>
     'buildconf' スクリプトを実行するためには、autoconf 2.13 と automake 1.4+
     が必要です
     (新しいバージョンの autoconf では動作するかも知れませんが、
     サポートされていません)。
    </simpara>
   </note>
   <simpara>
    拡張モジュールによって、<literal>--enable-extname</literal>
    もしくは <literal>--with-extname</literal> オプションを指定します。
    外部ライブラリを使用しない拡張モジュールについては、
    <literal>--enable</literal> が使われるのが一般的です。
    buildconf の後で、以下を行うと確認できます。
   </simpara>
   <para>
    <screen>
$ ./configure --help | grep extname
    </screen>
   </para>
  </sect1>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
