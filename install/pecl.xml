<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.8 Maintainer: hirokawa Status: working -->
<!-- CREDITS: shimooka -->

 <chapter id="install.pecl">
  <title>PECL 拡張モジュールのインストール</title>

  <sect1 id="install.pecl.intro">
   <title>PECL インストール入門</title>
   <simpara>
    PHP 拡張モジュールをインストールする方法はいくつかあります。
    <ulink url="&url.pecl;">PECL</ulink> は、拡張モジュールのリポジトリで、
    <ulink url="&url.php.pear;">PEAR</ulink> のストラクチャに含まれています。
    ここでは PECL 拡張モジュールのインストール方法を解説します。
   </simpara>
   <simpara>
    以下に示す手順では、PHP のソースへのパスが <literal>/your/phpsrcdir/</literal>
    であり、PECL 拡張モジュールの名前が <literal>extname</literal> であると
    仮定しています。適切に変更してください。また、
    <ulink url="&url.php.pear.cli;">pear コマンド</ulink> についても理解している
    こととします。
   </simpara>
   <simpara>
    共有拡張モジュールの読み込みは、&php.ini; で <link linkend="ini.extension">extension</link>
    ディレクティブを用いて設定されます。これに関連して、
    <link linkend="ini.extension-dir">extensions_dir</link> ディレクティブ
    および <function>dl</function> 関数についても参照してください。
    以下の手順では、拡張モジュールを読み込むための PHP の設定変更は
    自動で行われません。手動で設定変更してください。
   </simpara>
   <simpara>
    拡張モジュールのビルドにあたっては、適切なバージョンのツール
    (autoconf, automake, libtool など) を使用することが重要です。
    必要なツールとそのバージョンについては、
    <ulink url="&url.php.anoncvs;">Anonymous CVS の手順</ulink> を参照してください。
   </simpara>
  </sect1>

  <sect1 id="install.pecl.downloads">
   <title>PECL 拡張モジュールをダウンロードする</title>
   <simpara>
    PECL 拡張モジュールをダウンロードするには、以下に示す通り、いくつかの方法があります。
   </simpara>
   <itemizedlist>
    <listitem>
     <simpara>
      <ulink url="&url.pecl;">&url.pecl;</ulink>
     </simpara>
     <simpara>
      ChangeLog やリリース情報、必要な要件、リビジョンといった情報が
      リストアップされています。ただし、Web ページがない PECL
      拡張モジュールもあります。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>pear download extname</literal>
     </simpara>
     <simpara>
      <ulink url="&url.php.pear.cli;">pear コマンド</ulink> を使って
      ソースファイルをダウンロードすることもできます。
      特定のバージョンを指定可能です。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <acronym>CVS</acronym>
     </simpara>
     <simpara>
      すべての PECL ファイルは <acronym>CVS</acronym> に収められています。
      <ulink url="&url.php.cvs;pecl/">&url.php.cvs;pecl/</ulink> で、
      Web から参照することができます。
      <acronym>CVS</acronym> から直接ダウンロードする場合は、以下のようにします。
      このとき、ユーザ名は <emphasis>cvsread</emphasis> 、パスワードは
      <emphasis>phpfi</emphasis> です。
     </simpara>
     <para>
      <screen>
$ cvs -d:pserver:cvsread@cvs.php.net:/repository login
$ cvs -d:pserver:cvsread@cvs.php.net:/repository co pecl/extname
      </screen>
     </para>
    </listitem>
    <listitem>
     <simpara>
      Windows ダウンロード
     </simpara>
     <simpara>
      Windows 用にコンパイルされた PECL バイナリを
      <ulink url="&url.php.downloads;">PHP Downloads</ulink> ページの
      <emphasis>Collection of PECL modules</emphasis> のところから
      ダウンロードできます。
      <ulink url="&url.php.snapshots;">PECL のスナップショット</ulink>
      も取得できます。
      Windows での PHP のコンパイル方法については、
      <ulink url="&url.php.win32.build.readme;">Win32 Build README</ulink>
      を参照してください。
     </simpara>
    </listitem>
   </itemizedlist>
  </sect1>

  <sect1 id="install.pecl.windows">
   <title>Windows で PECL を使用する</title>
   <simpara>
    他の拡張モジュールの <acronym>DLL</acronym> と同様に、
    PECL 拡張モジュールの <acronym>DLL</acronym> も
    <link linkend="ini.extension-dir">extension_dir</link> フォルダに
    インストールし、&php.ini; の設定を行ってください。例を以下に示します。
   </simpara>
   <para>
    <screen>
extension=php_extname.dll
   </screen>
   </para>
   <simpara>
    完了したら、Web サーバを再起動してください。
   </simpara>
  </sect1>

  <sect1 id="install.pecl.pear">
   <title>共有 PECL 拡張モジュールを PEAR を用いてコンパイルする</title>
   <simpara>
    PEAR を用いると、共有 PECL 拡張モジュールを容易に作成することができます。
    以下のように <ulink url="&url.php.pear.cli;">pear コマンド</ulink> を用います。
   </simpara>
   <para>
    <screen>
$ pear install extname
    </screen>
   </para>
   <simpara>
    <emphasis>extname</emphasis> のソースがダウンロードされ、
    コンパイルが行われます。 <filename>extname.so</filename> ファイルが
    作成されますので、&php.ini; を設定してください。
   </simpara>
   <simpara>
    システムの <emphasis>preferred_state</emphasis> が <emphasis>extname</emphasis>
    の使用可能なバージョンのものより高い場合、たとえば、システムが stable なのに
    拡張モジュールが beta であるとかの場合、<literal>pear config-set</literal>
    コマンドで <emphasis>preferred_state</emphasis> を変更するか、
    拡張モジュールのバージョンを指定するかしてください。例を以下に示します。
   </simpara>
   <para>
    <screen>
$ pear install extname-0.1.1
    </screen>
   </para>
   <simpara>
    PEAR により、<filename>extname.so</filename> は
    <link linkend="ini.extension-dir">extension_dir</link> へ
    コピーされます。
    &php.ini; を適当に修正してください。
   </simpara>
  </sect1>

  <sect1 id="install.pecl.phpize">
   <title>phpize で共有 PECL 拡張モジュールをコンパイルする方法</title>
   <simpara>
    <acronym>CVS</acronym> 版の共有 PECL 拡張モジュールをビルドする場合など、
    PEAR が使えない場合は、<literal>phpize</literal> コマンドを使って
    手動でビルドすることができます。
    行われる内容は PEAR と本質的には同じですが、手動である点が異なります。
    使用法は以下をご覧ください。ソースファイル <filename>extname.tgz</filename>
    がカレントディレクトリにダウンロードされていると仮定しています。
   </simpara>
   <para>
    <screen>
<![CDATA[
$ pear download extname
$ gzip -d < extname.tgz | tar -xvf -
$ cd extname
$ phpize
$ ./configure && make
]]>
    </screen>
   </para>
   <simpara>
    上手くいけば、拡張モジュールのソースディレクトリ
    <filename>extname/</filename> 下の <filename>modules/</filename>
    もしくは <filename>.libs/</filename> ディレクトリに、
    <filename>extname.so</filename> が作成されます。
    この共有拡張モジュール (<filename>extname.so</filename>) を
    PHP の <link linkend="ini.extension-dir">extension_dir</link> フォルダへ
    移動させ、&php.ini; を適当に修正してください。
   </simpara>
  </sect1>

  <sect1 id="install.pecl.static">
   <title>PECL 拡張モジュールを PHP に静的に組み込む</title>
   <simpara>
    PECL 拡張モジュールを PHP に静的に組み込んでビルドするには、
    拡張モジュールのソースを PHP のソースの <filename>ext/</filename>
    ディレクトリに置きます。
    例えば、以下の様に行います。
   </simpara>
   <para>
    <screen>
<![CDATA[
$ cd /your/phpsrcdir/ext
$ pear download extname
$ gzip -d < extname.tgz | tar -xvf -
$ mv extname-x.x.x extname
$ rm package.xml
]]>
    </screen>
   </para>
  <note>
   <simpara>
    'buildconf' スクリプトを実行するためには、autoconf 2.13 と automake 1.4
    が必要です
    (新しいバージョンの autoconf では動作するかも知れませんが、
    サポートされていません)。
   </simpara>
  </note>
   <simpara>
    上記を行うと、以下のディレクトリが作成されます。
   </simpara>
   <para>
    <screen>
     /your/phpsrcdir/ext/extname
    </screen>
   </para>
   <simpara>
    以降、通常通りに PHP をビルドします。
   </simpara>
   <para>
    <screen>
$ cd /your/phpsrcdir
$ rm configure
$ ./buildconf --force
$ ./configure --help
$ ./configure --with-extname --enable-someotherext --with-foobar
$ make
$ make install
    </screen>
   </para>
   <simpara>
    拡張モジュールによって、<literal>--enable-extname</literal>
    もしくは <literal>--with-extname</literal> オプションを指定します。
    外部ライブラリを使用しない拡張モジュールについては、
    <literal>--enable</literal> が使われるのが一般的です。
    buildconf の後で、以下を行うと確認できます。
   </simpara>
   <para>
    <screen>
$ ./configure --help | grep extname
    </screen>
   </para>
  </sect1>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
