<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.3 Maintainer: hirokawa Status: ready -->

 <chapter id="configuration">
  <title>実行用設定</title>

  <sect1 id="configuration.file">
   <title>設定ファイル</title>

   <simpara>
    PHPの起動時に 設定ファイル (PHP 3 では <filename>php3.ini</filename>、
    PHP 4以降では &php.ini;) が読み込まれます。
    PHP のサーバーモジュール版では、このファイルは、Web サーバーの起動
    時に一度だけ読み込まれます。<acronym>CGI</acronym>と
    <acronym>CLI</acronym>版では、起動する度にこのファイルが読み込まれます。
   </simpara>
   <para>
    &php.ini; のデフォルトの場所は、コンパイル時のオプションです。
    (<link linkend="faq.installation.phpini">FAQ</link>エントリを参照下さい。)
    しかし、<acronym>CGI</acronym> および
    <acronym>CLI</acronym> 版の場合、コマンドラインスイッチ
    <literal>-c</literal>によりこれを変更することができます。
    <link linkend="features.commandline">コマンドライン</link>からの
    PHPの使用に関する章を参照下さい。
    &php.ini;を探すパスを追加するために環境変数
    <literal>PHPRC</literal> を使用することもできます。
   </para>
   <para>
    <filename>php-SAPI.ini</filename> が存在する場合 (ただし、SAPIは使用するSAPIであり
    このファイル名は例えば <filename>php-cli.ini</filename> または
    <filename>php-apache.ini</filename>)、&php.ini;の代わりに使用されます。
   </para>
   <note>
    <para>
     Apache web サーバー は、スタート時にディレクトリをルート
     に変更するので、PHPは、ルートファイルシステムに &php.ini;
     が存在する場合、それを読もうとします。
    </para>
   </note>
   <para>
    拡張モジュールにより処理される&php.ini;ディレクティブは、各拡張モジュール自体の
    ドキュメントに記述されています。
    <link linkend="ini">コアディレクティブのリスト</link> が付録にあります。
    おそらくあなたが使用するPHPのバージョンでこれらのPHPディレクティブが全て
    利用可能なわけではないでしょう。コメントが充実した &php.ini; ファイルを
    読んでみて下さい。
    もしくは、CVS から入手可能な <ulink url="&url.php.cvs.phpini;">
     最新の &php.ini;</ulink> も役に立つでしょう。
   </para>
   <para>
    <example>
     <title>&php.ini; の例</title>
     <programlisting role="ini">
<![CDATA[
; 引用符をつけないセミコロン(;)の後のテキストは全て無視されます。
[php] ; セクションマーカ (角括弧の中のテキスト) は無視されます
; 論理値は次のどれかとなります:
;    true, on, yes
; または false, off, no, none
register_globals = off
magic_quotes_gpc = yes

; 文字列を二重引用符で括ることも可能です
include_path = ".:/usr/local/lib/php"

; バックスラッシュは他の文字と同様に処理されます
include_path = ".;c:\php\lib"
]]>
</programlisting>
<!-- TODO: add more details about values and expressions -->
    </example>
   </para>
  </sect1>

  <sect1 id="configuration.changes">
   <title>設定を変更するには</title>

   <sect2 id="configuration.changes.apache">
    <title>ApacheモジュールとしてPHPを実行する場合</title>
    <simpara>
     PHP を Apache モジュールとして使用する場合、Apache用設定ファイル(例:&httpd.conf;)や
     &htaccess; ファイルに命令を記述することにより、PHPの設定を行うことが
     可能です。この設定を行うには、"AllowOverride Options" もしくは "AllowOverride All"
     権限が必要です。
    </simpara>

    <para>
     PHP 4および PHP 5においては、PHP設定用の複数のApacheディレクティブがあり、
     Apacheの設定ファイルでPHPの設定を変更可能です。どのディレクティブが、
     <constant>PHP_INI_ALL</constant> か, <constant>PHP_INI_PERDIR</constant>,
     または <constant>PHP_INI_SYSTEM</constant> なのかについてのリストは、
     <function>ini_set</function>に関するドキュメント内の表を参照下さい。
    </para>
    
    <note>
     <simpara>
      PHP 3においては、<filename>php3.ini</filename>の各ディレクティ
      ブに対応した Apache 用ディレクティブが存在し、PHP 用のディレクティ
      ブの前に "php3_" を付けて使用することにより、設定の変更が可能です。
     </simpara>
    </note>

    <para>
     <variablelist>
      <varlistentry>
       <term>
        <systemitem role="directive">php_value</systemitem>
        <parameter>name</parameter>
        <parameter>value</parameter>
       </term>
       <listitem>
        <para>
         指定した変数の値を設定します。<constant>PHP_INI_ALL</constant> と
         <constant>PHP_INI_PERDIR</constant> ディレクティブでのみ利用可能です。
         以前にセットされた値をクリアしたい場合は、<literal>none</literal> を
         値として使用してください。
        </para>
        <note>
         <simpara>
          論理値を設定する際に<systemitem role="directive">php_value</systemitem>を使用しないで下さい。
          代わりに、<systemitem role="directive">php_flag</systemitem> (下記参照)を使用する必要があります。
         </simpara>
        </note>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         論理値のオプション設定を変更するために使用します。
         <constant>PHP_INI_ALL</constant> および
         <constant>PHP_INI_PERDIR</constant>ディレクティブでのみ利用可能です。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_value</systemitem>
        <parameter>name</parameter>
        <parameter>value</parameter>
       </term>
       <listitem>
        <para>
         指定した変数の値を設定します。このディレクティブは、&htaccess;
         ファイルでは利用できません。
         <systemitem role="directive">php_admin_value</systemitem>
         で設定されたディレクティブの値は、&htaccess; や
         バーチャルホストディレクティブ内から上書きできません。
         以前にセットされた値をクリアしたい場合は、<literal>none</literal> を
         値として使用してください。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         論理値のオプションを設定するために使用されます。
         このディレクティブは、&htaccess; ファイルでは利用できません。
         php_admin_value で設定されたディレクティブの値は、&htaccess; や
         バーチャルホストディレクティブ内から上書きできません。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <example>
      <title>Apache 設定の例</title>
      <programlisting role="ini">
<![CDATA[
<IfModule mod_php5.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php3.c>
  php3_include_path ".:/usr/local/lib/php"
  php3_safe_mode on
</IfModule>
]]>
      </programlisting>
     </example>
    </para>
    <caution>
     <para>
      PHP定数はPHP以外では使用できません。例えば、
      <filename>httpd.conf</filename>の中で
      <link linkend="ini.error-reporting">error_reporting</link>
      ディレクティブを設定するために <constant>E_ALL</constant>
      または <constant>E_NOTICE</constant> のようなPHP定数を使用することは
      できません。これらは意味を有さないため、
      <emphasis>0</emphasis> と評価されてしまいます。
      代わりに対応するビットマスクを使用して下さい。これらの定数は、
      &php.ini; で使用することができます。
     </para>
    </caution>
   </sect2>

   <sect2 id="configuration.changes.windows">
    <title>WindowsレジストリによりPHPの設定を変更する</title>
    <simpara>
     Windows上でPHPを実行する際、Windowsレジストリを使用して設定値を
     ディレクトリ毎に変更することができます。
     設定値は、レジストリキー <literal>HKLM\SOFTWARE\PHP\Per Directory Values</literal>
     に保存され、そのサブキーをパス名とします。
     例えば、ディレクトリ <literal>c:\inetpub\wwwroot</literal>の設定値
     は、 キー <literal>HKLM\SOFTWARE\PHP\Per Directory 
      Values\c\inetpub\wwwroot</literal> に保存されます。
     このディレクトリの設定は、このディレクトリまたはそのサブディレクトリで
     実行される全てのスクリプトで有効となります。
     キーの値は、PHP設定ディレクティブの名前と文字列の値を有している必要があります。
     この値にPHP定数を書いても解釈されません。
    </simpara>
   </sect2>
   
   <sect2 id="configuration.changes.other">
    <title>PHPへの別のインターフェイス</title>
    <para>
     PHPへのインターフェイスによらず、
     <function>ini_set</function>によりスクリプトの実行時ある種の値を
     変更することができます。詳細は、
     <function>ini_set</function>を参照して下さい。
    </para>
    <para>
     使用するシステム上での設定とその現在の値に関する完全なリストを見たい場合、
     <function>phpinfo</function>関数を実行し、出力される結果を見ることができます。
     また、<function>ini_get</function> または
     <function>get_cfg_var</function>により個々の設定値にアクセスする
     ことも可能です。
    </para>
   </sect2>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
