<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.3 Maintainer: hirokawa Status: ready -->

 <chapter id="configuration">
  <title>実行時設定</title>

  <sect1 id="configuration.file">
   <title>設定ファイル</title>

   <simpara>
    設定ファイル (PHP 3 では <filename>php3.ini</filename>、
    PHP 4 以降では &php.ini;) は PHP の起動時に 読み込まれます。
    PHP のサーバモジュール版では、Web サーバの起動時に
    一度だけ読み込まれます。<acronym>CGI</acronym> 版と
    <acronym>CLI</acronym> 版では、スクリプトが呼び出される度に読み込まれます。
   </simpara>
   <para>
    &php.ini; のデフォルトの場所は、コンパイル時のオプションにより決定されます
    (<link linkend="faq.installation.phpini">FAQ</link> のエントリを参照。)
    しかし、<acronym>CGI</acronym> 版および
    <acronym>CLI</acronym> 版の場合、コマンドラインスイッチ
    <literal>-c</literal> により、読み込む設定ファイルを変更することができます。
    <link linkend="features.commandline">コマンドラインからの PHP の使用</link>
    に関する章を参照してください。環境変数 <literal>PHPRC</literal> を使用して、
    &php.ini; を探すパスを追加することもできます。
   </para>
   <para>
    <filename>php-SAPI.ini</filename> (ここで SAPI は使用する SAPI 名。
    たとえば <filename>php-cli.ini</filename> や <filename>php-apache.ini</filename>)
    が存在する場合、
    &php.ini; の代わりに使用されます。
   </para>
   <note>
    <para>
     Apache web サーバは、スタート時にディレクトリをルート
     に変更するので、ファイルシステムのルートに &php.ini;
     が存在する場合、PHP はそれを読もうとします。
    </para>
   </note>
   <para>
    拡張モジュールに対する &php.ini; ディレクティブは、
    各拡張モジュールのドキュメントで解説されています。
    <link linkend="ini">コア ディレクティブ</link> 
    （PHP 本体に対するディレクティブ）のリストは付録にまとめられてます。
    ただし、（更新の都合上）すべての PHP ディレクティブが
    本マニュアル中で解説されている訳ではありません。
    使っているバージョンの PHP で指定可能なすべてのディレクティブについては、
    &php.ini; ファイル内に詳細なコメントが記されていますので、参照してください。
    もしくは、CVS から入手可能な <ulink url="&url.php.cvs.phpini;">
    最新の &php.ini;</ulink> も有用でしょう。
   </para>
   <para>
    <example>
     <title>&php.ini; の例</title>
     <programlisting role="ini">
<![CDATA[
; 引用符をつけないセミコロン(;)の後のテキストは、すべて無視されます
[php] ; セクションマーカ (角括弧の中のテキスト) は無視されます
; 論理値は、次のいずれかで指定します
;    true, on, yes
; または false, off, no, none
register_globals = off
magic_quotes_gpc = yes

; 文字列を二重引用符で括ることも可能です
include_path = ".:/usr/local/lib/php"

; バックスラッシュは他の文字と同様に処理されます
include_path = ".;c:\php\lib"
]]>
</programlisting>
<!-- TODO: add more details about values and expressions -->
    </example>
   </para>
  </sect1>

  <sect1 id="configuration.changes">
   <title>設定を変更するには</title>

   <sect2 id="configuration.changes.apache">
    <title>Apache モジュールとして PHP を実行している場合</title>
    <simpara>
     PHP を Apache モジュールとして使用している場合、Apache 設定ファイル (例、&httpd.conf;) 
     もしくは &htaccess; ファイルにディレクティブを記述することで、PHP の設定の変更を行うことが
     可能です。このようにして設定変更を行うには、"AllowOverride Options" もしくは 
     "AllowOverride All" 権限が必要です。
    </simpara>

    <para>
     Apache 設定ファイルから PHP の設定を変更するには、
     PHP 4 および PHP 5 に対しては、以下に示す Apache ディレクティブを使用します。
     各設定オプションの変更の可否 (<constant>PHP_INI_ALL</constant>, 
     <constant>PHP_INI_PERDIR</constant>, または <constant>PHP_INI_SYSTEM</constant>) 
     については、<function>ini_set</function> に関するドキュメント内の表を参照してください。
    </para>
    
    <note>
     <simpara>
      PHP 3 においては、<filename>php3.ini</filename> の各設定オプションに
      対応した Apache 用ディレクティブが存在します。それらのディレクティブ名は
      "php3_" から始まります。
     </simpara>
    </note>

    <para>
     <variablelist>
      <varlistentry>
       <term>
        <systemitem role="directive">php_value</systemitem>
        <parameter>name</parameter>
        <parameter>value</parameter>
       </term>
       <listitem>
        <para>
         指定した設定オプションに値を設定します。変更の可否が、
         <constant>PHP_INI_ALL</constant> もしくは
         <constant>PHP_INI_PERDIR</constant> である設定オプションに対し利用できます。
         セット済みの値をクリアしたい場合は、<literal>none</literal> を
         値として使用してください。
        </para>
        <note>
         <simpara>
          論理値を設定する場合には <systemitem role="directive">php_value</systemitem> 
          を使用しないでください。代わりに、<systemitem role="directive">php_flag</systemitem> 
          （下記参照）を使用する必要があります。
         </simpara>
        </note>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         設定オプションに論理値を設定するために使用します。変更の可否が、
         <constant>PHP_INI_ALL</constant> もしくは
         <constant>PHP_INI_PERDIR</constant> である設定オプションで利用できます。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_value</systemitem>
        <parameter>name</parameter>
        <parameter>value</parameter>
       </term>
       <listitem>
        <para>
         指定した設定オプションに値を設定します。このディレクティブは、&htaccess;
         ファイルでは利用できません。また、
         <systemitem role="directive">php_admin_value</systemitem>
         で設定された設定オプションの値は、&htaccess; や
         VirtualHost ディレクティブ内から上書きできません。
         セット済みの値をクリアしたい場合は、<literal>none</literal> を
         値として使用してください。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         設定オプションに論理値を設定するために使用します。
         このディレクティブは、&htaccess; ファイルでは利用できません。
         php_admin_value で設定された設定オプションの値は、&htaccess; や
         VirtualHost ディレクティブ内から上書きできません。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <example>
      <title>Apache 設定の例</title>
      <programlisting role="ini">
<![CDATA[
<IfModule mod_php5.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php3.c>
  php3_include_path ".:/usr/local/lib/php"
  php3_safe_mode on
</IfModule>
]]>
      </programlisting>
     </example>
    </para>
    <caution>
     <para>
      PHP 定数は PHP 以外では使用できません。たとえば、
      <filename>httpd.conf</filename> の中で
      <link linkend="ini.error-reporting">error_reporting</link>
      オプションを設定しようとして <constant>E_ALL</constant>
      や <constant>E_NOTICE</constant> のような PHP 定数を使用することは
      できません。これらは意味を有さないため、
      <emphasis>0</emphasis> と評価されてしまいます。
      代わりに、対応するビットマスク値を使用してください。
      &php.ini; の中では、これらの PHP 定数を使用することができます。
     </para>
    </caution>
   </sect2>

   <sect2 id="configuration.changes.windows">
    <title>Windows レジストリによる PHP の設定の変更</title>
    <simpara>
     Windows 上で PHP を実行している場合、Windows レジストリを使用して設定値を
     ディレクトリ毎に変更することができます。
     設定値は、レジストリキー <literal>HKLM\SOFTWARE\PHP\Per Directory Values</literal>
     に保存され、そのサブキーがパス名となります。例えば、ディレクトリ 
     <literal>c:\inetpub\wwwroot</literal> に対する設定値は、 キー
     <literal>HKLM\SOFTWARE\PHP\Per Directory Values\c\inetpub\wwwroot</literal> 
     に保存されます。ディレクトリに対する設定は、そのディレクトリ、
     およびそのサブディレクトリで実行されるすべてのスクリプトで有効となります。
     PHP 設定オプションのディレクティブを名前とする文字列値をキーに登録してください。
     また、値のデータに PHP 定数を記述しても解釈されませんので、注意してください。
    </simpara>
   </sect2>
   
   <sect2 id="configuration.changes.other">
    <title>他の方法</title>
    <para>
     どのように PHP を実行しているかに係わらず、<function>ini_set</function> 関数を
     用いて、スクリプトの実行時に一部のオプションの設定値を変更することができます。詳細は、
     <function>ini_set</function> 関数のリファレンスを参照してください。
    </para>
    <para>
     使用しているシステムにおける現在のオプション設定値の完全なリストを得たい場合は、
     <function>phpinfo</function> 関数を実行し、出力された結果を参照してください。
     また、<function>ini_get</function> 関数または <function>get_cfg_var</function> 
     関数を用いて、個々のオプションの設定値にアクセスすることも可能です。
    </para>
   </sect2>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
