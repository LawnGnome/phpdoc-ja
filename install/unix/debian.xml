<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.5 Maintainer: haruki Status: ready -->
<!-- Credits: haruki -->
<sect1 xml:id="install.unix.debian" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Debian GNU/Linux へのインストール</title>
 <para>
   このセクションでは、<link xlink:href="&url.debian;">Debian GNU/Linux</link> に 
   PHP をインストールする際の注意事項とヒントについて説明します。
 </para>
 <sect2 xml:id="install.unix.debian.apt">
  <title>APT の使用</title>
   <simpara>
    PHP のソースコードをダウンロードし自分でコンパイルすることも可能ですが、
    Debian のパッケージシステムを使用することが、もっともシンプルでクリーンな
    インストール方法です。Linux でのソフトウエアのビルドに不慣れならば、
    この方法を取るのが良いでしょう。
   </simpara>
   <simpara>
    最初に決めなければいけないのは、Apache 1.3.x と Apache 2.x のどちらを
    インストールするかです。それぞれに対応するパッケージは、
    libapache-mod-php* および libapache2-mod-php* という名前です。
    以下では、Apache 1.3.x を使用する場合について説明します。
    また、現在のところ、PHP 5 の Debian 公式パッケージはありません。
    ですので、PHP 4 のインストールについて解説します。
   </simpara>
   <simpara>
    Debian では、PHP を CGI や CLI として使用することもできます。
    それぞれ、php4-cgi と php4-cli という名前が付けられています。
    これらが必要な場合は、下記のステップを対応する名前でもって行ってください。
    また、特別なパッケージとしては、さらに、php4-pear があります。
    これは、<command>pear</command> コマンドラインユーティリティ
    および PEAR の最小限の部分がインストールされるものです。
   </simpara>
   <simpara>
    Debian の安定版のパッケージよりも新しいパッケージが必要な場合や、
    Debian の公式レポジトリに含まれない PHP 拡張モジュールが必要な場合は、
    <link xlink:href="&url.apt-get;">http://www.apt-get.org/</link> を探してみると
    良いかもしれません。たとえば、<link xlink:href="http://www.dotdeb.org/">Dotdeb</link>
    などが見つかるでしょう。この非公式レポジトリは <link xlink:href="mailto:gui@php.net">
    Guillaume Plessis</link> が管理しており、最新版の PHP 4 および PHP 5
    の Debian パッケージがアップされています。このリポジトリを使用するには、以下の２行を
    <filename>/etc/apt/sources.lists</filename> に追加し、<command>apt-get
    update</command> を実行します。
   </simpara>
   <example>
    <title>Dotdeb 関連の apt line</title>
    <programlisting role="shell">
<![CDATA[
deb http://packages.dotdeb.org stable all
deb-src http://packages.dotdeb.org stable all
]]>
    </programlisting>
   </example>
   <simpara>
    パッケージのリストが最新であるかにも注意を払う必要があります。
    パッケージの更新をしばらく行っていないのならば、<command>apt-get update</command>
    をまず最初に実行する必要があります。こうすることにより、
    Apache と PHP の最新の安定版パッケージを取得することができます。
   </simpara>
   <simpara>
    すべての準備が完了したら、以下の例に従って Apache と PHP
    をインストールします。
   </simpara>
   <example xml:id="install.unix.debian.apt.example">
    <title>Debian への Apache 1.3 のインストール</title>
    <programlisting role="shell">
<![CDATA[
# apt-get install libapache-mod-php4
]]>
    </programlisting>
   </example>
   <simpara>
    APT により、Apache 1.3 用の PHP 4 モジュールが自動的にインストールされます。
    インストール中に Apache を再起動する旨が表示されなかった場合は、手動で
    再起動する必要があります。
   </simpara>
   <example xml:id="install.unix.debian.apt.example2">
    <title>PHP 4 インストール後に Apache を停止・起動させる</title>
    <programlisting role="shell">
<![CDATA[
# /etc/init.d/apache stop
# /etc/init.d/apache start
]]>
    </programlisting>
   </example>
 </sect2>
 <sect2 xml:id="install.unix.debian.config">
  <title>追加モジュールと適切な設定</title>
   <simpara>
    上記では、PHP のコアモジュールだけがインストールされています。
    これだけでは不足の場合もあるでしょう。また将来、MySQL や cURL, GD といった
    より多くのモジュールを有効にすることが必要になるかも知れません。
   </simpara>
   <simpara>
    PHP を自らコンパイルする場合は、有効にするモジュールを <command>configure</command> 
    コマンドで指定します。APT では、追加のパッケージをインストールします。
    それら追加パッケージは、'php4-*'（サードパーティのリポジトリから
    PHP 5 をインストールする場合は 'php5-*'）といった名前が付けられています。
   </simpara>
   <example xml:id="install.unix.debian.config.example">
    <title>追加のパッケージの名前を取得する</title>
    <programlisting role="shell">
<![CDATA[
# dpkg -l 'php4-*'
]]>
    </programlisting>
   </example>
   <simpara>
    上記の出力を見てわかるとおり、(php4-cgi や php4-cli, php4-pear といった
    特別なパッケージのほかにも) さまざまなパッケージがあり、インストールが可能です。
    詳細に参照して、必要なものを選択してください。選択したモジュールに必要な
    ライブラリがインストールされていない場合、APT により自動的にインストールされます。
   </simpara>
   <simpara>
    MySQL, cURL および GD サポートを PHP に追加する場合のコマンドは
    以下のようになります。
   </simpara>
   <example xml:id="install.unix.debian.config.example2">
    <title>MySQL, cURL および GD を PHP にインストールする</title>
    <programlisting role="shell">
<![CDATA[
# apt-get install php4-mysql php4-curl php4-gd
]]>
    </programlisting>
   </example>
   <simpara>
    APT により、（システムで）用いられている &php.ini; 
    (<filename>/etc/php4/apache/php.ini</filename>,
    <filename>/etc/php4/cgi/php.ini</filename> など)
    に適切な設定が追加されます。
   </simpara>
   <example xml:id="install.unix.debian.config.example3">
    <title>MySQL, cURL および GD を有効にする設定</title>
    <programlisting role="shell">
<![CDATA[
extension=mysql.so
extension=curl.so
extension=gd.so
]]>
    </programlisting>
   </example>
   <simpara>
    追加したモジュールを有効にするには、前述したとおり、Apache を再起動させる必要があります。
   </simpara>
 </sect2>
 <sect2 xml:id="install.unix.debian.faq">
  <title>よく起きる問題</title>
  <itemizedlist>
   <listitem>
    <simpara>
     PHP スクリプトが実行された結果が出力されず、PHP のソースコードが表示される場合は、
     APT によって、<filename>/etc/apache/conf.d/php4</filename> が読み込まれるように、 
     Apache 1.3 の設定ファイルが変更されるべきところが、
     実際には変更されていないものと思われます。
     以下の行を <filename>/etc/apache/httpd.conf</filename> に追加し、
     Apache を再起動させてください。
    </simpara>
   <example xml:id="install.unix.debian.faq.example">
    <title>PHP 4 を Apache で有効にする</title>
    <programlisting role="shell">
<![CDATA[
# Include /etc/apache/conf.d/
]]>
    </programlisting>
   </example>
   </listitem>
   <listitem>
    <simpara>
     追加の拡張モジュールをインストールしたにもかかわらず、
     その機能がスクリプトから利用できない場合は、前述した適切な設定が
     &php.ini; に追加されているかどうか確認してください。debconf による設定で
     コンフリクトが起こると、追加モジュールのインストールに失敗する場合があります。
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
