<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.4 Maintainer: hirokawa Status: translating -->

<sect1 id="install.unix.apache2">
 <title>Unixシステム上のApache 2.0</title>
 <para>
  本節には、PHPをUnixシステム上のApache 2.0にインストールする際の注意やヒントが含まれています。
 </para>
 
 &warn.apache2.compat;
 
 <para>
  Apache 2.0サーバに関する基本的な知識を得るために、<ulink 
   url="&url.apache2.docs;">Apache Documentation</ulink>を一読することを
  強くお勧めします。
 </para>
 
 &install.snippet.apache2.compat;
 
 <para>
  最新バージョンの<ulink url= "&url.apache;">Apache 2.0</ulink>を
  ダウンロードして上述のいずれかのバージョンのPHPを用意してください。
  このクイックガイドはApache 2.0で<literal>PHP</literal>を動作させるための
  基本的な部分しかカバーしていません。更なる情報については<ulink
   url="&url.apache2.docs;">Apache Documentation</ulink>をご覧ください。
  情報が古く不正確になってしまうため、ここには詳細なバージョン番号は
  記述されていません。'NN'という文字列をご使用のバージョンに適宜置き換えて
  ください。
 </para>
 <example>
  <title>
   インストール手順 (Apache 2 共有モジュール版)
  </title>
  <screen>
<![CDATA[
1.  gzip -d httpd-2_0_NN.tar.gz
2.  tar xvf httpd-2_0_NN.tar
3.  gunzip php-NN.tar.gz
4.  tar -xvf php-NN.tar
5.  cd httpd-2_0_NN
6.  ./configure --enable-so
7.  make
8.  make install

    この状態でApache 2.0.NNが/usr/local/apache2で使用可能になっており、
    モジュールのダイナミックロードと標準MPMのpreforkがサポートされている
    はずです。正しくインストールされたかどうかをテストするために
    Apacheサーバを起動するには:
    /usr/local/apache2/bin/apachectl start
    とします。PHPの設定を開始するためにサーバを停止するには:
    /usr/local/apache2/bin/apachectl stop
    とします。

9.  cd ../php-NN

10. ここでPHPのconfigureを行います。
   This is where you customize your PHP
   with various options, like which extensions will be enabled.  Do a
   ./configure --help for a list of available options.  In our example
   we'll do a simple configure with Apache 2 and MySQL support.  Your
   path to apxs may differ, in fact, the binary may even be named apxs2 on
    your system. 
   
   ./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql

11. make

12. make install

   インストール後に設定オプションを変更する場合、繰り返す必要があるのは、最後の３つの手順だけです。
   この設定を反映するためにするべきことは、Apacheを再起動することだけです。
   再コンパイルは不用です。
   
                
   Note that unless told otherwise, 'make install' will also install PEAR,
   various PHP tools such as phpize, install the PHP CLI, and more.
    
13. Setup your php.ini 
    
   cp php.ini-dist /usr/local/lib/php.ini
          
   You may edit your .ini file to set PHP options.  If you prefer having
   php.ini in another location, use --with-config-file-path=/some/path in
   step 10.
   
   If you instead choose php.ini-recommended, be certain to read the list
    of changes within, as they affect how PHP behaves.

14. Edit your httpd.conf to load the PHP module.  The path on the right hand
   side of the LoadModule statement must point to the path of the PHP
   module on your system.  The make install from above may have already
   added this for you, but be sure to check.
   
   For PHP 4:
   
   LoadModule php4_module libexec/libphp4.so
   
   For PHP 5:
   
   LoadModule php5_module libexec/libphp5.so
   
15. Tell Apache to parse certain extensions as PHP.  For example,
    let's have Apache parse the .php extension as PHP.  You could
    have any extension(s) parse as PHP by simply adding more, with
    each separated by a space.  We'll add .phtml to demonstrate.
            
   AddType application/x-httpd-php .php .phtml
   
   It's also common to setup the .phps extension to show highlighted PHP
   source, this can be done with:
   
   AddType application/x-httpd-php-source .phps
   
16. Use your normal procedure for starting the Apache server, e.g.:
   
   /usr/local/apache2/bin/apachectl start
   
]]>

  </screen>
 </example>
 <para>
  上記の手順で、<literal>SAPI</literal>モジュールサポートとしてPHPを
  Apache 2.0で動作させることが出来ます。もちろん、Apacheと<literal>
   PHP</literal>共にもっと多くのconfigureオプションを指定することが出来ます。
  詳しい情報を得るにはそれぞれのソースツリーディレクトリで<command>./configure
   --help</command>を実行してください。マルチスレッド版のApache 2.0を
  構築する場合は、標準MPM-Moduleである<filename>prefork</filename>を
  <filename>worker</filename>もしくは<filename>perchild</filename>で
  上書きする必要があります。このためには、上記の手順6で<option
   role="configure">--with-mpm=worker</option>もしくは<option
   role="configure">--with-mpm=perchild</option>を指定します。マルチ
  スレッド版については、その動作に関して十分注意してください。
  詳細はApacheドキュメントの<ulink url="&url.apache2.mpm;">MPM-Modules
  </ulink>を参照してください。
 </para>
 <note>
  <para>
   コンテンツネゴシエーションを使用したい場合には、
   <link linkend="faq.installation.apache.multiviews">関連するFAQ</link>を参照してください。
  </para>
 </note>
 <note>
  <para>
   マルチスレッド版のApacheを構築する場合は、あなたのシステムがスレッドを
   サポートしている必要があります。また、この場合<literal>PHP</literal>を
   実験的なステータスにあるZend Thread Safety(ZTS)で構築することを意味します。
   従って全ての拡張モジュールを使用できるわけではありません。標準の<filename>
    prefork</filename>MPM-Moduleでの構築をお勧めします。
  </para>
 </note>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
