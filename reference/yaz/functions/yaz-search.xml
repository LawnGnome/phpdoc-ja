<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/yaz.xml, last change in rev 1.1 -->
<!-- last change to 'yaz-search' in en/ tree in rev 1.1 -->
  <refentry id="function.yaz-search">
   <refnamediv>
    <refname>yaz_search</refname>
    <refpurpose>検索を準備する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>yaz_search</methodname>
      <methodparam><type>int</type><parameter>id</parameter></methodparam>
      <methodparam><type>string</type><parameter>type</parameter></methodparam>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>yaz_search</function> は、指定したidを有するターゲット
     で検索を行う準備をします。type は、クエリの型を表します。現在、
     "rpn" のみがサポートされており、この場合、3番目の引数はType-1クエ
     リ(RPN)を指定します。<function>yaz_connect</function> と同じく、
     この関数は、非ブロックモードで動作し、後で
     <function>yaz_wait</function> がコールされた際に実行される検索の
     準備をするだけです。
    </para>
   </refsect1>
   <refsect1>
    <title>RPNクエリ</title>
    <para>
     RPNクエリは、Z39.50規格により定義されたType-1 クエリのテキスト表
     現です。しかし、YAZにより使用されるテキスト表現では、演算子がオペ
     ランドの前にある前置表記が使用されます。クエリ文字列はトークンの
     並びであり、このトークンでは2重引用符で括られない限り空白文字は無
     視されます。トークンは、アットマーク(<literal>@</literal>)で始ま
     り、演算子とみなされるか、そうでない場合は検索項目として処理され
     ます。
    </para>
    <table>
     <title>RPN 演算子</title>
     <tgroup cols="2">
      <thead>
       <row>
	<entry>構文</entry>
	<entry>説明</entry>
       </row>
      </thead>
      <tbody>
       <row>
	<entry><literal>@and query1 query2</literal></entry>
	<entry>
	 query1 および query2の積集合
	</entry>
       </row>
       <row>
	<entry><literal>@or query1 query2</literal></entry>
	<entry>
	 query1 および query2の和集合
	</entry>
       </row>
       <row>
	<entry><literal>@not query1 query2</literal></entry>
	<entry>
	 query1 であり、query2でない
	</entry>
       </row>
       <row>
	<entry><literal>@set name</literal></entry>
	<entry>
	 結果セットへのリファレンス
	</entry>
       </row>
       <row>
	<entry><literal>@attrset set query</literal></entry>
	<entry>
	 クエリの属性セットを指定します。この構造が使用できるの
         は全てのクエリの始めに一回だけです。
	</entry>
        </row>
        <row>
	<entry><literal>@attr set type=value query</literal></entry>
	<entry>
	 クエリに属性を適用します。型と値は属性型と属性値をそれぞれ指
	 定する整数です。この組みが指定された場合、属性の組を指定しま
	 す。
	</entry>
        </row>
      </tbody>
     </tgroup>
    </table> 
    <example>
     <title>クエリの例</title>
     <para>
      クエリ
      <screen>computer</screen>
      は、"computer"を含む文書にマッチします。属性は指定されていません。
     </para>
     <para>
      クエリ
      <screen>"donald knuth"</screen>
      は、"donald knuth" がある文書にマッチします。
     </para>
     <para>
      クエリ
      <screen>@attr 1=4 art</screen>の場合、
      属性型は1 (Bib-1 use)、属性の値は4 (Title)となります。このため、
      titleに<literal>art</literal>が現れる文書にマッチします。
     </para>
     <para>
      その他のより複雑なクエリの例:
      <screen>@attrset gils @and @attr 1=4 art @attr 1=1003 "donald knuth"</screen>
      このクエリは、GILS属性集合を使用しています。クエリはtitleに
      <literal>art</literal>が現れ、authorに<literal>donald knuth</literal>
      が現れる文書にマッチします。
     </para>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
