<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.21 Maintainer: hirokawa Status: ready -->
<!-- Purpose: remote.other -->
<!-- Membership: pecl, external -->

 <reference xml:id="ref.yaz" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>YAZ 関数</title>
  <titleabbrev>YAZ</titleabbrev>
  
  <partintro>
   <section xml:id="yaz.intro">
    &reftitle.intro;
    <para>
     この拡張モジュールは、情報取得用の Z39.50 プロトコルを実装する
     <productname>YAZ</productname> ツールキットへの PHP インターフェースを
     提供するものです。この拡張モジュールにより、Z39.50 ターゲット（サーバ）
     を並列に検索またはスキャンする Z39.50 オリジン（クライアント）を
     容易に実装することが可能になります。
    </para>
    <para>
     このモジュールは Z39.50 の複雑さを隠蔽するため、使用法がかなり容易に
     なります。PHP で利用可能な様々な RDB の API により提供されているものに
     非常によく似た、ステートレスな持続的接続がサポートされています。
     これは、セッションはステートレスですが、ユーザ間で共有されるということを
     意味します。これにより多くの場合に接続および初期化手順が保存されます。
    </para>
    <para>
     <productname>YAZ</productname> は、<link
     xlink:href="&url.yaz;">&url.yaz;</link> で取得可能です。この拡張モジュールに
     関する新しい情報、スクリプトの例等を
     <link xlink:href="&url.yaz-phpyaz;">&url.yaz-phpyaz;</link> にて
     参照可能です。
    </para>
    <note>
     <para>
      &pecl.moved-ver;5.0.0.
     </para>
    </note>
   </section>

   &reference.yaz.configure;
   
   &reference.yaz.ini;

   <section xml:id="yaz.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section xml:id="yaz.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section xml:id="yaz.examples">
    &reftitle.examples;
    <para>
     PHP/YAZ はターゲット(Z-Associations)との接続を保持し続けます。
     正の整数で特定の接続のIDを表します。
    </para>
    <para>
     以下のスクリプトは、API の並列検索機能のデモです。引数を指定せずに
     コールした場合、この関数はクエリフォームを出力します。そうでない場合
     （引数を指定した場合）は、配列 <literal>host</literal> にあるターゲットを
     検索します。
    </para>
    <para>
     <example>
      <title>YAZ による並列検索</title>
      <programlisting role="php">
<![CDATA[
<?php
$host=$_REQUEST[host];
$query=$_REQUEST[query];
$num_hosts = count($host);
if (empty($query) || count($host) == 0) {
    echo '<form method="get">
    <input type="checkbox"
    name="host[]" value="bagel.indexdata.dk/gils" />
        GILS test
    <input type="checkbox"
    name="host[]" value="localhost:9999/Default" />
        local test
    <input type="checkbox" checked="checked"
    name="host[]" value="z3950.loc.gov:7090/voyager" />
        Library of Congress
    <br />
    RPN Query:
    <input type="text" size="30" name="query" />
    <input type="submit" name="action" value="Search" />
    </form>
    ';        
} else {
    echo 'You searched for ' . htmlspecialchars($query) . '<br />';
    for ($i = 0; $i < $num_hosts; $i++) {
        $id[] = yaz_connect($host[$i]);
	yaz_syntax($id[$i], "usmarc");
        yaz_range($id[$i], 1, 10);
        yaz_search($id[$i], "rpn", $query);
    }
    yaz_wait();
    for ($i = 0; $i < $num_hosts; $i++) {
        echo '<hr />' . $host[$i] . ':';
        $error = yaz_error($id[$i]);
        if (!empty($error)) {
            echo "Error: $error";
        } else {
            $hits = yaz_hits($id[$i]);
            echo "Result Count $hits";
        }
        echo '<dl>';
        for ($p = 1; $p <= 10; $p++) {
            $rec = yaz_record($id[$i], $p, "string");
            if (empty($rec)) continue;
            echo "<dt><b>$p</b></dt><dd>";
            echo nl2br($rec);
            echo "</dd>";
        }
        echo '</dl>';
    }
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>
  
&reference.yaz.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

