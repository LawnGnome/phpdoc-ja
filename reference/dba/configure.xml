<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.16 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<section xml:id="dba.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.install;
 <para>
  設定オプション <option role="configure">--enable-dba=shared</option>
  を使用することにより、dbm 形式のデータベースをサポートする動的に
  ロード可能なモジュールを有効にして PHP を構築することができます。
  また、PHP の configure 行に設定スイッチ <literal>--with-XXXX</literal>
  を指定することにより、少なくとも以下のハンドラの一つのサポートを
  追加する必要があります。
 </para>
 <warning>
  <para>
   PHP の configuring とコンパイルを済ませたら、コマンドラインから次の
   テストを実行する必要があります: <literal>php run-tests.php ext/dba</literal>
   これは、指定したハンドラの組み合わせが動作するかどうかを調べます。
   いちばん問題のあるのは <literal>dbm</literal> と <literal>ndbm</literal>
   の組み合わせで、これらは多くの場合何らかの衝突を引き起こします。
   その原因は、いくつかのシステムではこれらのライブラリが他のライブラリの
   一部となっていることで。configure 時のテストでは個々のハンドラについての
   設定不備は調べられますが、それらの組み合わせについてはテストできません。
  </para>
 </warning>
 <para>
  <table>
   <title>サポートされるDBAハンドラ</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>ハンドラ</entry>
      <entry>configure のスイッチ</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><literal>dbm</literal></entry>
      <entry>
       dbm のサポートを有効にするには、
       <option role="configure">--with-dbm[=DIR]</option> を追加します。
       <note>
        <para>
         dbm は一般的にはラッパで、しばしば失敗を引き起こします。
         その動作をしっかり把握しており、ほんとうにそれを必要とする場合のみ
         dbm を使用するようにすべきです。
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>ndbm</literal></entry>
      <entry>
       ndbm のサポートを有効にするには、
       <option role="configure">--with-ndbm[=DIR]</option> を追加します。
       <note>
        <para>
         ndbm は一般的にはラッパで、しばしば失敗を引き起こします。
         その動作をしっかり把握しており、ほんとうにそれを必要とする場合のみ
         ndbm を使用するようにすべきです。
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>gdbm</literal></entry>
      <entry>
       gdbm のサポートを有効にするには、
       <option role="configure">--with-gdbm[=DIR]</option> を追加します。
      </entry>
     </row>

     <row>
      <entry><literal>db2</literal></entry>
      <entry>
       db2 のサポートを有効にするには、
       <option role="configure">--with-db2[=DIR]</option> を追加します。
       <note>
        <para>
         db2 は db3 および db4 とは同時に使えません。
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>db3</literal></entry>
      <entry>
       db3 のサポートを有効にするには、
       <option role="configure">--with-db3[=DIR]</option> を追加します。
       <note>
        <para>
         db3 は db2 および db4 とは同時に使えません。
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>db4</literal></entry>
      <entry>
       db4 のサポートを有効にするには、
       <option role="configure">--with-db4[=DIR]</option> を追加します。
       <note>
        <para>
         db4 は db2 および db3 とは同時に使えません。
        </para>
       </note>
       <note>
        <para>
         これは PHP 4.3.2 で追加されました。これ以前のバージョンでは、
         <option role="configure">--with-db3=DIR</option> を使用し、
         DIR に db4 ライブラリのパスを指定する必要する必要があります。
         バージョン 4.3.0 より前の PHP では、4.1 以降のバージョンの db
         を使用することはできません。また、バージョン 4.1 から 4.1.24
         までの db ライブラリは、どの PHP のバージョンでも利用できません。
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>cdb</literal></entry>
      <entry>
       cdb のサポートを有効にするには、
       <option role="configure">--with-cdb[=DIR]</option> を追加します。
       <note>
        <para>
         PHP 4.3.0 以降、付属する cdb ライブラリを使用するために DIR
         を省略することができます。この場合、cdb_make ハンドラが追加されます。
         これにより cdb ファイルを作成したり、PHPのストリームを用いて
         ネットワーク上の cdb ファイルにアクセスできるようになります。
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>flatfile</literal></entry>
      <entry>
       flatfile のサポートを有効にするには、
       <option role="configure">--with-flatfile</option> を追加します。
       <note>
        <para>
         これは、古い <link linkend="ref.dbm">dbm</link> 拡張モジュール
         との互換性のために PHP 4.3.0 で追加されました。
         このハンドラは、他のハンドラで必要とされるライブラリをひとつも
         インストールすることができない場合、そして、付属する cdb
         ハンドラを使用することができない場合にのみ使用してください。
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>inifile</literal></entry>
      <entry>
       inifile のサポートを有効にするには、
       <option role="configure">--with-inifile</option> を追加します。
       <note>
        <para>
         これは PHP 5.0.0 で追加されました。これにより Microsoft 形式の
         <filename>.ini</filename> ファイル（&php.ini; のような）を
         読み書きできるようになります。
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>qdbm</literal></entry>
      <entry>
       qdbm のサポートを有効にするには、
       <option role="configure">--with-qdbm[=DIR]</option> を追加します。
       <note>
        <para>
         qdbm は dbm および gdbm とは同時に使えません。
        </para>
       </note>
       <note>
        <para>
         これは PHP 5.0.0 で追加されました。qdbm ライブラリは
         <link xlink:href="http://qdbm.sourceforge.net">http://qdbm.sourceforge.net</link>
         にあります。
        </para>
       </note>
      </entry>
     </row>

    </tbody>
   </tgroup>
  </table>
  <note>
   <para>
    PHP 4.3.0 までは、db2 および db3 ハンドラの両方を追加することが
    できましたが、内部的に使用できるのは片方だけでした。
    これは、両方のファイル形式を使用することができないことを意味します。
    PHP 5.0.0 以降、このような設定ミスを回避するよう設定の確認が行われます。
   </para>
  </note>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
