<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
 <reference id="ref.dba">
  <title>(dbm型の)データベース・アブストラクション レイヤー関数</title>
  <titleabbrev>dba</titleabbrev>
  
  <partintro>
   <section id="dba.intro">
    &reftitle.intro;
    <para>
     これらの関数は、Berkeley DB 型データベースへのアクセス用の基本関数を
     構成します。
    </para>
    <para>
     これらの関数は、複数のファイルベースのデータベース用のアブストラクション
     ・レイヤーです。その機能は、<ulink url="&url.sleepycat;">Sleepycat
      Software's DB2</ulink>サポートのような近代的なデータベースの機能の
     サブセットに制限されています。(IBMのソフトウエアDB2と混同しないで
     下さい。このデータベースは、<link linkend="ref.odbc">ODBC 関数
     </link>を通じてサポートされます。)
    </para>
   </section>

   <section id="dba.requirements">
    &reftitle.required;
    <para>
     各機能の動作は、使用するデータベースの実装に依存します。
     <function>dba_optimize</function> および <function>dba_sync</function> の
     ような関数は、特定のデータベースでは動作しますが、他のデータベース
     では機能しません。サポートされるdbaハンドラをダウンロードし、イン
     ストールする必要があります。
     <table>
      <title>DBAハンドラのリスト</title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>ハンドラ</entry>
         <entry>注意</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>dbm</literal></entry>
         <entry>
          dbm は最も古い(元祖の)Berkeley DB 型データベースです。可能なら
          ば使用しない方が良いでしょう。DB2およびgdbmに組み込まれている互
          換性を保つための関数は、サポートされません。これは、実装されて
          いるのがソースレベルの互換性のみであり、元のdbmフォーマットを処
          理することができないためです。
         </entry>
        </row>

        <row>
         <entry><literal>ndbm</literal></entry>
         <entry>
          ndbm は、より新型であり、dbmよりも柔軟です。
          dbm固有の制約の多くをまだ有しています。(そのため、古い実装です。)
         </entry>
        </row>
        
        <row>
         <entry><literal>gdbm</literal></entry>
         <entry>
          gdbmは、<ulink url="&url.gdbm;">GNUデータベースマネージャ
          </ulink>です。
         </entry>
        </row>

        <row>
         <entry><literal>db2</literal></entry>
         <entry>
          DB2 は、<ulink url="&url.sleepycat;">Sleepycat Software's DB2</ulink>
          です。これは、「スタンドアローンおよびクライアント/サーバー
          アプリケーションの両方で高性能な組込みデータベースサポートを提供する
          プログラム用ツールキット」として記述されています。
         </entry>
       </row>

        <row>
         <entry><literal>db3</literal></entry>
         <entry>
          DB3 は、<ulink url="&url.sleepycat;">Sleepycat Softwareの
           DB3</ulink>です。
         </entry>
        </row>

        <row>
         <entry><literal>db4</literal></entry>
         <entry>
          DB4 は、<ulink url="&url.sleepycat;">Sleepycat Software's
           DB4</ulink>です。これは、PHP 4.4.0以降で利用可能です。
         </entry>
        </row>
        
        <row>
         <entry><literal>cdb</literal></entry>
         <entry>
          cdbは、固定データベースの作成・読込み用の高速で高信頼性の軽量型
          パッケージです。これは、qmailの作者によるものであり、<ulink
           url="&url.cdb;">ここ</ulink>にあります。固定であるため、読込
          み操作のみがサポートされます。
          PHP 4.3.0以降、内部的なcdbライブラリにより(更新ではなく)書き
          込みがサポートされています。
         </entry>
        </row>

        <row>
         <entry><literal>cdb_make</literal></entry>
         <entry>
          PHP 4.3.0以降、付属するcdbライブラリを使用する場合にcdbファ
          イルの(更新ではなく)作成をサポートします。
         </entry>
        </row>
        
        <row>
         <entry><literal>flatfile</literal></entry>
         <entry>
          これは、PHP 4.3.0以降で利用可能で、古い
          <link linkend="ref.dbm">dbm</link> 拡張モジュールとの互換性
          のためのものであり、使用するべきではありません。
          しかし、ファイルがこの形式で作成された場所でこれを使用するこ
          とができます。これは、configureが外部ライブラリを見付けるこ
          とができない場合に生じます。
         </entry>
        </row>        
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <function>dba_open</function>または<function>dba_popen</function>
     関数を実行する際、引数にハンドラ名の一つを指定する必要があります。
     実際に利用可能なハンドラのリストは、
     <function>phpinfo</function> または
     <function>dba_handlers</function>をコールした際に表示されます。
    </para>
   </section>

   &reference.dba.configure;

   <section id="dba.runtime">
    &reftitle.runtime;
    &no.config;
   </section>
   
   <section id="dba.resources">
    &reftitle.resources;
    <para>
     関数 <function>dba_open</function> および
     <function>dba_popen</function> は、指定したデータベースファイルを
     アクセスするためのハンドルを返します。このハンドルは、他の全ての
     dba関数コールで使用されます。
    </para>
   </section>
   
   <section id="dba.constants">
    &reftitle.constants;
    &no.constants;
   </section>
   
   <section id="dba.examples">
    &reftitle.examples;
     <para>
      <example>
       <title>DBAの例</title>
       <programlisting role="php">
<![CDATA[
<?php

$id = dba_open ("/tmp/test.db", "n", "db2");

if (!$id) {
    echo "dba_open failed\n";
    exit;
}

dba_replace ("key", "This is an example!", $id);

if (dba_exists ("key", $id)) {
    echo dba_fetch ("key", $id);
    dba_delete ("key", $id);
}

dba_close ($id);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     DBAは、バイナリセーフでありいかなる制限も受けません。
     DBA は、使用するデータベースの実装による全ての制約を継承します。
    </para>
    <para>
     全てのファイルベースのデータベースは、完全に使用可能なものについて
     新規に作成されたデータベースのファイルモードを設定する手段を、
     提供する必要があります。
     ファイルモードは、通常 <function>dba_open</function> または
     <function>dba_popen</function> に4番目の引数として渡されます。
    </para>
    <para>
     <function>dba_firstkey</function> および
     <function>dba_nextkey</function>関数を用いて連続的に全てのエント
     リにアクセスすることができます。アクセスする際にデータベースを変
     更できない可能性があります。
    </para>
    <para>
    <example>
      <title>データベースへの連続アクセス</title>
      <programlisting role="php">
<![CDATA[
<?php

# ...データベースをオープンする...

$key = dba_firstkey ($id);
      
while ($key != false) {
    if (...) { # 他の操作を後で行うためにキーを記憶する
        $handle_later[] = $key;
    }
    $key = dba_nextkey ($id);
}

for ($i = 0; $i < count($handle_later); $i++)
    dba_delete ($handle_later[$i], $id);

?>
]]>
      </programlisting>
     </example>
    </para>
   </section>

  </partintro>
  
&reference.dba.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

