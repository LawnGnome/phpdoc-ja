<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: shimooka Status: ready -->
<!-- CREDITS: hirokawa -->
<refentry xml:id='function.domnode-append-child' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DomNode->append_child</refname>
  <refpurpose>
   子ノードの最後に新規に子ノードを追加する
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>DOMNode</classname></ooclass>
   <methodsynopsis>
    <type>DOMNode</type><methodname>append_child</methodname>
    <methodparam><type>DOMNode</type><parameter>newnode</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   この関数は既存の子ノードに子ノードを追加する、
   もしくは新規子ノードを作成します。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>newnode</parameter></term>
     <listitem>
      <para>
       追加するノード。これには、例えば
       <xref linkend="function.domdocument-create-element" />,
       <xref linkend="function.domdocument-create-text-node" />
       など、もしくは単純にあらゆる他のノードによって作成されたノードを
       指定することが可能です。
      </para>
      <note>
       <para>
        このメソッドを使用して <classname>DOMAttribute</classname>
        を追加することはできません。代わりに
        <xref linkend="function.domelement-set-attribute" />
        を使用してください。
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功時は追加されたノード、失敗時は &false; を返します。
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        他の文章からのノードを挿入することは、もはや許可されません。
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        PHP 4.3.0 以前では、新規子ノードは追加する前に複製されます。
        そのため、新規子ノードは完全に新しいコピーとなります。これは、
        この関数に渡されたノードを変更することなしに修正することが可能です。
        渡されたノードが子ノード自身の場合うまくコピーされますので、
        XML 文章の大きな部位を簡単にコピーすることができます。
        戻り値は追加された子ノードです。
        もし追加された子ノードを変更するつもりであれば、
        返されたノードを使用する必要があります。
       </entry>
      </row>
      <row>
       <entry>4.3.0 と 4.3.1</entry>
       <entry>
        新規子ノード <parameter>newnode</parameter> がすでに DomNode
        の子ノードである場合、最初に既存のコンテキストから削除されます。
        そのため、<parameter>newnode</parameter> は移動され、
        コピーされません。この動作は W3C 規格に準じるものです。
        もし古い動作をさせる必要がある場合、追加ではなく <xref
        linkend="function.domnode-clone-node" /> を使用してください。
       </entry>
      </row>
      <row>
       <entry>4.3.2</entry>
       <entry>
        新規子ノード <parameter>newnode</parameter> がすでにツリーにある場合、
        最初に既存のコンテキストから削除されます。同じ規則が適用されます。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   以下の例は新規ドキュメントに新規要素ノードを追加し、
   属性 <literal>align</literal> を <literal>left</literal> に設定します。
  </para>
  <para>
   <example>
    <title>子ノードを追加する</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = domxml_new_doc("1.0");
$node = $doc->create_element("para");
$newnode = $doc->append_child($node);
$newnode->set_attribute("align", "left");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   上記の例は、以下のようにも書くことができました:
  </para>
  <para>
   <example>
    <title>子ノードを追加する</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = domxml_new_doc("1.0");
$node = $doc->create_element("para");
$node->set_attribute("align", "left");
$newnode = $doc->append_child($node);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   より複雑な例は以下の通りです。最初に特定の要素を検索し、
   子を含むノードを複製し、兄弟ノードとして追加します。
   最後に新規属性を新規兄弟ノード能古ノードの一つに追加し、
   文章全体をダンプします。
  </para>
  <para>
   <example>
    <title>子ノードを追加する</title>
    <programlisting role="php">
<![CDATA[
<?php
include("example.inc");

if (!$dom = domxml_open_mem($xmlstr)) {
  echo "Error while parsing the document\n";
  exit;
}

$elements = $dom->get_elements_by_tagname("informaltable");
print_r($elements);
$element = $elements[0];

$parent = $element->parent_node();
$newnode = $parent->append_child($element);
$children = $newnode->children();
$attr = $children[1]->set_attribute("align", "left");

$xmlfile = $dom->dump_mem();
echo htmlentities($xmlfile);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   上記の例は
   <xref linkend="function.domnode-append-child" />
   の代わりに <xref linkend="function.domnode-insert-before" />
   を用いても動作します。
  </para>
 </refsect1>
 <refsect1 role="migration">
  <title>PHP 5 への移行</title>
  <para>
   <xref linkend='domnode.appendchild' />
   を使用してください。
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.domnode-insert-before" /></member>
    <member><xref linkend="function.domnode-clone-node" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
