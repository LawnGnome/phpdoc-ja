<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.11 Maintainer: shimooka Status: ready -->
<!-- CREDITS: hirokawa -->
<refentry id='function.domnode-replace-child'>
 <refnamediv>
  <refname>DomNode->replace_child</refname>
  <refpurpose>
   子ノードを置換する
  </refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>domelement</type><methodname>DomNode->replace_child</methodname>
   <methodparam><type>domelement</type><parameter>newnode</parameter></methodparam>
   <methodparam><type>domelement</type><parameter>oldnode</parameter></methodparam>
  </methodsynopsis>
  <para>
   (PHP 4.2) この関数は子ノード <parameter>oldnode</parameter>
   を渡された新規ノードに置換します。もし新規ノードがすでに子ノードの場合、
   二度目は追加されません。もし古いノードが存在しない場合、
   この関数は &false; を返します。もし置換が成功した場合、
   古いノードが返されます。
  </para>
  <para>
   (PHP 4.3) この関数は新規ノードがすでに DomNode の子ノードだったとしても、
   子ノード <parameter>oldnode</parameter> を渡された
   <parameter>newnode</parameter> に置換します。
   もし <parameter>newnode</parameter> ガスでに文章に挿入されている場合、
   最初に既存のコンテキストから削除されます。
   もし古いノードが存在しない場合、この関数は &false; を返し、
   置換が成功した場合は古いノードが返されます (この動作は W3C
   規格に準拠しています。)
  </para>
  <para>
   <function>domnode_append_child</function>
   も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
