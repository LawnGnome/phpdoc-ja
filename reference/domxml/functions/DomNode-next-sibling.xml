<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.10 Maintainer: shimooka Status: ready -->
<!-- CREDITS: hirokawa -->
<refentry id='function.domnode-next-sibling'>
 <refnamediv>
  <refname>DomNode->next_sibling</refname>
  <refpurpose>
   次の兄弟ノードを返す
  </refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>domelement</type><methodname>DomNode->next_sibling</methodname>
   <void/>
  </methodsynopsis>
  <para>
   この関数は現在のノードの次の兄弟ノードを返します。
   次の兄弟ノードが存在しない場合、&false; (&lt; 4.3) もしくは null (&gt;= 4.3)
   を返します。この関数を使用することで、
   例に示されたようにノードの全ての子コードを走査する事ができます。
  </para>
  <para>
   <example>
    <title>子ノードを走査する</title>
    <programlisting role="php">
<![CDATA[
<?php
include("example.inc");

if (!$dom = domxml_open_mem($xmlstr)) {
  echo "Error while parsing the document\n";
  exit;
}

$elements = $dom->get_elements_by_tagname("tbody");
$element = $elements[0];
$child = $element->first_child();

while ($child) {
   print_r($child);
   $child = $child->next_sibling();
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <function>domnode_previous_sibling</function>
   も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
