<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322140 Maintainer: shimooka Status: ready -->
<!-- CREDITS: hirokawa -->
<refentry xml:id='function.domnode-replace-node' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DomNode::replace_node</refname>
  <refpurpose>
   ノードを置換する
  </refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>domelement</type><methodname>DomNode::replace_node</methodname>
   <methodparam><type>domelement</type><parameter>newnode</parameter></methodparam>
  </methodsynopsis>
  <para>
   (PHP 4.2) この関数は既存のノードを渡された新規ノードに置換します。
   文章にすでに存在しているノードが二度目に挿入されないようにするため、
   <parameter>newnode</parameter> は置換前にコピーされます。
   この動作は、置換前にノードに対して行う全ての修正、もしくは
   <function>domnode_first_child</function>,
   <function>domnode_child_nodes</function>
   などの関数を用いた後に挿入されたノードを再取得させることを強制します。
  </para>
  <para>
   (PHP 4.3) この関数は既存ノードを渡された新規ノードに置換します。
   もはやコピーはされません。もし <parameter>newnode</parameter>
   が文章に挿入されている場合、最初に既存のコンテキストから削除されます。
   もし置換が成功した場合、古いノードが返されます。
  </para>
  <para>
   <function>domnode_append_child</function>
   も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
