<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283800 Maintainer: takagi Status: ready -->
<refentry xml:id="function.apc-define-constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>apc_define_constants</refname>
  <refpurpose>
   定数の組を定義し、それを取得あるいは一括定義する
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>apc_define_constants</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>array</type><parameter>constants</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>case_sensitive</parameter><initializer>true</initializer></methodparam>
  </methodsynopsis>

  <para>
   ご存知のとおり、<function>define</function> は非常に遅いです。
   APC を使用する主な利点はスクリプト/アプリケーションのパフォーマンスの改善なので、
   大量の定数を定義する手順を合理化するために、この仕組みが提供されています。
   しかし、この関数は期待通りの動作をしません。
  </para>

  <para>
   よりよい解決策として、PECL の
   <link xlink:href="&url.pecl.package;hidef">hidef</link>
   拡張モジュールを試してみましょう。
  </para>

  <note>
   <simpara>
    （キャッシュ全体をクリアすることなく）格納されている定数を削除するには、
    <parameter>constants</parameter> に空の配列を渡します。そうすれば、
    そこに格納されていた値は事実上削除されます。
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       <parameter>key</parameter> は、格納される定数群の名前を表します。
       この <parameter>key</parameter> は、格納されている定数を
       <function>apc_load_constants</function> で取得するために使用されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>constants</parameter></term>
     <listitem>
      <para>
       <literal>constant_name => value</literal> 形式の連想配列。
       <literal>constant_name</literal> は、一般の
       <link linkend="language.constants">定数</link> の命名規則に従う
       必要があります。 <literal>value</literal> は、スカラ値でなければ
       なりません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>case_sensitive</parameter></term>
     <listitem>
      <para>
       デフォルトでは、定数名の大文字・小文字は区別されます。すなわち、
       <literal>CONSTANT</literal> と <literal>Constant</literal>
       は別の値を表します。このパラメータを &false; にすると、
       定数名の大文字・小文字は区別されなくなります。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>


 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>apc_define_constants</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$constants = array(
    'ONE'   => 1,
    'TWO'   => 2,
    'THREE' => 3,
);
apc_define_constants('numbers', $constants);
echo ONE, TWO, THREE;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
123
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>apc_load_constants</function></member>
    <member><function>define</function></member>
    <member><function>constant</function></member>
    <member>
     あるいは <link linkend="language.constants">PHP リファレンスの「定数」</link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
