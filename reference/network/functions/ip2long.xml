<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./ja/functions/network.xml, last change in rev 1.18 -->
<!-- EN-Revision: 1.14 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
  <refentry id="function.ip2long">
   <refnamediv>
    <refname>ip2long</refname>
    <refpurpose>
     (IPv4) インターネットプロトコルドット表記のアドレスを適当なアドレ
     スを有する文字列に変換する
    </refpurpose> 
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>ip2long</methodname>
      <methodparam><type>string</type><parameter>ip_address</parameter></methodparam>
     </methodsynopsis>
    <para>
     関数 <function>ip2long</function> は、インターネット標準形式
     （ドット表記の文字列）表現から IPv4 インターネットネットアドレスを
     生成します。<parameter>ip_address</parameter> が不正な形式の場合は
     <literal>-1</literal> を返します。PHP では <literal>-1</literal>
     と &false; は等価ではないことに注意してください。
    </para>
    <note>
     <para>
      PHP 5.0.0 では、<function>ip2long</function> は
      <parameter>ip_address</parameter> が不正な形式の場合に &false; を返します。
     </para>
    </note>
    <example>
     <title><function>ip2long</function> Example</title>
     <programlisting role="php">
<![CDATA[
<?php
$ip = gethostbyname('www.example.com');
$out = "以下の URL は同じ意味です:<br />\n";
$out .= 'http://www.example.com/, http://' . $ip . '/, and http://' . sprintf("%u", ip2long($ip)) . "/<br />\n";
echo $out;
?>
]]>
     </programlisting>
    </example>
    <para>
     <note>
      <para>
       PHP の整数型は符号付き形式であり、多くの IP アドレスは負の整数値に
       なります。そのため、符号なし IP アドレスを文字列形式で取得するには
       <function>sprintf</function> や <function>printf</function> で "%u"
       を使用する必要があります。
      </para>
     </note>
    </para>
    <para>
     2 番目の例は、<function>printf</function> 関数で変換されたアドレスを
     出力する方法を示すものです。PHP 4 と PHP 5 のどちらでも使えます。
    </para>
    <example>
     <title>IP アドレスの表示</title>
     <programlisting role="php">
<![CDATA[
<?php
$ip   = gethostbyname('www.example.com');
$long = ip2long($ip);

if ($long == -1 || $long === FALSE) {
    echo 'Invalid IP, please try again';
} else {
    echo $ip   . "\n";           // 192.0.34.166
    echo $long . "\n";           // -1073732954
    printf("%u\n", ip2long($ip)); // 3221234342
}
?>
]]>
     </programlisting>
    </example>
    <para>
     <function>ip2long</function> を、それ単体で IP の検証に
     利用するべきではありません。<function>long2ip</function>
     と組み合わせて利用します。
    </para>
    <example>
     <title>IP の検証</title>
     <programlisting role="php">
<![CDATA[
<?php
// IP が有効であることを確認します。また、不完全な形式の IP を
// 以下で示すような正しい形式（ドットで 4 つに区切られている）に変換します。
$ip = long2ip(ip2long("127.0.0.1")); // "127.0.0.1"
$ip = long2ip(ip2long("10.0.0")); // "10.0.0.0"
$ip = long2ip(ip2long("10.0.256")); // "10.0.1.0"
?>
]]>
     </programlisting>
    </example>
    <para>
     <function>ip2long</function> は不完全な形式の IP アドレスに対しても
     動作します。詳しい情報は
     <ulink url="&url.ip2long.tech;">&url.ip2long.tech;</ulink>
     を参照ください。
    </para>
    <note>
     <para>
      PHP 5 &lt;= 5.0.2 では、IP <literal>255.255.255.255</literal>
      に対して <function>ip2long</function> が &false; を返します。
      これは PHP 5.0.3 で <literal>-1</literal> を返すように修正されています
      （PHP 4 と同じ動作です）。
     </para>
    </note>
    <para>
     <function>long2ip</function>
     および <function>sprintf</function> も参照ください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
