<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.15 Maintainer: shimooka Status: ready -->
<refentry id="function.http-build-query">
 <refnamediv>
  <refname>http_build_query</refname>
  <refpurpose>URL エンコードされたクエリ文字列を生成する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>http_build_query</methodname>
   <methodparam><type>array</type><parameter>formdata</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>numeric_prefix</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>arg_separator</parameter></methodparam>
  </methodsynopsis>
  <para>
   与えられた連想配列 (もしくは添字配列) から URL
   エンコードされたクエリ文字列を生成します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>formdata</parameter></term>
     <listitem>
      <para>
       プロパティを含む配列もしくはオブジェクト。
      </para>
      <para>
       配列の形式は、単純な一次元構造、
       もしくは配列の配列 (言い換えると、他の配列を含む配列) となります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>numeric_prefix</parameter></term>
     <listitem>
      <para>
       もし数値インデックスが基底となる配列に使用されたり
       <parameter>numeric_prefix</parameter> が指定された場合、
       基底となる配列の要素に対する数値インデックスの前にこれが追加されます。
      </para>
      <para>
       これは、後で PHP や他の CGI
       アプリケーションによってデータがデコードされる際、
       正当な変数名になるよう考慮したものです。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg_separator</parameter></term>
     <listitem>
      <para>
       <link linkend="ini.arg-separator.output">arg_separator.output</link>
       が区分のためのセパレータとして使用されます。ただし、
       このパラメータが指定されていた場合は
       それが使用されます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   URL エンコードされた文字列を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.2</entry>
       <entry>
        パラメータ <parameter>arg_separator</parameter> が追加されました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>http_build_query</function> の簡単な使用法</title>
   <programlisting role="php">
<![CDATA[
<?php
$data = array('foo'=>'bar',
              'baz'=>'boom',
              'cow'=>'milk',
              'php'=>'hypertext processor');

echo http_build_query($data); // foo=bar&baz=boom&cow=milk&php=hypertext+processor
echo http_build_query($data, '', '&amp;'); // foo=bar&amp;baz=boom&amp;cow=milk&amp;php=hypertext+processor

?>
]]>
   </programlisting>
  </example>

  <example>
   <title>数値インデックス要素の場合での
   <function>http_build_query</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$data = array('foo', 'bar', 'baz', 'boom', 'cow' => 'milk', 'php' =>'hypertext processor');

echo http_build_query($data) . "\n";
echo http_build_query($data, 'myvar_');
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
0=foo&1=bar&2=baz&3=boom&cow=milk&php=hypertext+processor
myvar_0=foo&myvar_1=bar&myvar_2=baz&myvar_3=boom&cow=milk&php=hypertext+processor
]]>
   </screen>
  </example>
  <example>
   <title>複雑な配列の場合での <function>http_build_query</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$data = array('user'=>array('name'=>'Bob Smith',
                            'age'=>47,
                            'sex'=>'M',
                            'dob'=>'5/12/1956'),
              'pastimes'=>array('golf', 'opera', 'poker', 'rap'),
              'children'=>array('bobby'=>array('age'=>12,
                                               'sex'=>'M'),
                                'sally'=>array('age'=>8,
                                               'sex'=>'F')),
              'CEO');

echo http_build_query($data, 'flags_');
?>
]]>
   </programlisting>
   <para>
    この例は以下を出力します: (可読性のため適宜折り返しています)
   </para>
   <screen>
<![CDATA[
user[name]=Bob+Smith&user[age]=47&user[sex]=M&user[dob]=5%2F12%2F1956&
pastimes[0]=golf&pastimes[1]=opera&pastimes[2]=poker&pastimes[3]=rap&
children[bobby][age]=12&children[bobby][sex]=M&children[sally][age]=8&
children[sally][sex]=F&flags_0=CEO
]]>
   </screen>
   <para>
    <note>
     <para>
      基底の配列内の数値インデックス要素 "CEO" のみ、
      接頭辞を受け取ります。pastimes 以下にある他の数値インデックスは、
      正当な変数名にするための文字列の接頭辞を要求しません。
     </para>
    </note>
   </para>
  </example>

  <example>
   <title>オブジェクトの場合の <function>http_build_query</function> の使用</title>
   <programlisting role="php">
<![CDATA[
<?php
class myClass {
    var $foo;
    var $baz;

    function myClass() {
        $this->foo = 'bar';
        $this->baz = 'boom';
    }
}

$data = new myClass();

echo http_build_query($data); // foo=bar&baz=boom

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>parse_str</function></member>
    <member><function>parse_url</function></member>
    <member><function>urlencode</function></member>
    <member><function>array_walk</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
