<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/pgsql.xml, last change in rev 1.6 -->
<!-- sync: 1.2 -->
<refentry id="function.pg-fetch-object">
 <refnamediv>
  <refname>pg_fetch_object</refname>
  <refpurpose>行をオブジェクトとして得る</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>object</type><methodname>pg_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam><type>int</type><parameter>row</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam>
  </methodsynopsis>
  <para> 
   <function>pg_fetch_object</function>は、取得した行に対応するプロ
   パティを有するオブジェクトを返します。この関数は、行がもうない場
   合またはエラーには&false;を返します。
  </para>
  <para> 
   <function>pg_fetch_object</function>は
   <function>pg_fetch_array</function>に似ていますが、配列の代わりに
   オブジェクトが返されという違いがあります。間接的に、このことはデー
   タがオフセットではなくフィールド名によってのみアクセス可能である
   ことを意味します。(数字はプロパティ名として使用できません。)
  </para>
  <para>
   <parameter>row</parameter> は、取得する行(レコード)番号です。最初の
   レコードは0です。
  </para>
  <para>
   速度面では、この関数は、<function>pg_fetch_array</function>と同じであり、
   <function>pg_fetch_row</function>とほとんど同じ程度です。
   (違いはわずかです)
  </para>
  <note>
   <para>
    <parameter>result_type</parameter>に関して従来のバージョンのデフォ
    ルト値は、PGSQL_BOTHでしたが、4.3.0から
    <parameter>result_type</parameter>のデフォルトはPGSQL_ASSOCとなっ
    ています。PHPではプロパティ名に数値を使用することはできないため、
    プロパティ名に数値を使用することはできません。
   </para>
   <para>
    <parameter>result_type</parameter>は、将来的なバージョンでは削除さ
    れる可能性があります。
   </para>
  </note>
  <para>
   <function>pg_query</function>, <function>pg_fetch_array</function>,
   <function>pg_fetch_row</function>, <function>pg_fetch_result</function>
   も参照下さい。
  </para>
  <para>
   <example>
    <title>Postgres によりオブジェクトを取得する</title>
    <programlisting role="php">
<![CDATA[
<?php 
$database = "verlag";
$db_conn = pg_connect ("host=localhost port=5432 dbname=$database");
if (!$db_conn): ?>
    <H1>Failed connecting to postgres database <? echo $database ?></H1> <?php
    exit;
endif;
 
$qu = pg_query ($db_conn, "SELECT * FROM verlag ORDER BY autor");
$row = 0; // Postgresでは他のデータベースと異なり、行カウンタが必要
 
while ($data = pg_fetch_object ($qu, $row)) {
    echo $data->autor." (";
    echo $data->jahr ."): ";
    echo $data->titel."<BR>";
    $row++;
}
?>
<PRE>
<?php
$fields[] = Array ("autor", "Author");
$fields[] = Array ("jahr",  "  Year");
$fields[] = Array ("titel", " Title");
 
$row= 0; // Postgresでは他のデータベースと異なり、行カウンタが必要
while ($data = pg_fetch_object ($qu, $row)) {
    echo "----------\n";
    reset ($fields);
    while (list (,$item) = each ($fields)):
        echo $item[1].": ".$data->$item[0]."\n";
    endwhile;
    $row++;
}
echo "----------\n"; ?>
</PRE> 
<?php
pg_free_result ($qu);
pg_close ($db_conn);
?>
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <para>
    4.1.0以降、<parameter>row</parameter>はオプションとなっています。
    <function>pg_fetch_object</function> をコールすることにより、内部
    的なレコードカウンタは1増加します。
   </para>
  </note>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
