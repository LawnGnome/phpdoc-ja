<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.7 Maintainer: hirokawa Status: working -->
<refentry id="function.pg-fetch-assoc">
 <refnamediv>
  <refname>pg_fetch_assoc</refname>
  <refpurpose>行を配列として取得する</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>array</type><methodname>pg_fetch_assoc</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>row</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_fetch_assoc</function>は、取得された行(タプル/レコード)を
   保持する配列を返します。行がもうない場合は&false;を返します。
  </para>
  <para>
   <function>pg_fetch_assoc</function> is equivalent to calling
   <function>pg_fetch_array</function> with PGSQL_ASSOC for the
   optional third parameter. It only returns an associative array.
   If you need the numeric indices, use 
   <function>pg_fetch_row</function>.  
  </para>
  &database.fetch-null;
  <para>
   <parameter>row</parameter>は、取得する行(レコード)番号です。
   最初の行は0です。
  </para>
  <para>
   注意すべき重要な点として、<function>pg_fetch_assoc</function>を
   使用しても、かなりの付加価値があるにもかかわらず
   <function>pg_fetch_row</function>を使用した場合に比べて
   極端に遅くなるわけではないということがあげられます。
  </para>
  <para>
   <example>
    <title><function>pg_fetch_assoc</function>の例</title>
    <programlisting role="php">
<![CDATA[
<?php 
$conn = pg_connect("dbname=publisher");
if (!$conn) {
    echo "An error occured.\n";
    exit;
}

$result = pg_query($conn, "SELECT id, author, email FROM authors");
if (!$result) {
    echo "An error occured.\n";
    exit;
}

while ($row = pg_fetch_assoc($result)) {
    echo $row['id'];
    echo $row['author'];
    echo $row['email'];
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <function>pg_fetch_row</function>,
   <function>pg_fetch_array</function>,
   <function>pg_fetch_object</function>,
   <function>pg_fetch_result</function>も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
