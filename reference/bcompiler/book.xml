<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283801 Maintainer: takagi Status: ready -->
<!-- Purpose: basic.php -->
<!-- Membership: pecl -->
<!-- State: experimental -->

<book xml:id="book.bcompiler" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>PHP バイトコードコンパイラ</title>
 <titleabbrev>bcompiler</titleabbrev>

  <preface xml:id="intro.bcompiler">
   &reftitle.intro;
   &warn.experimental;
    <para>
     Bcompiler は、以下のような目的で作成されました。
     <simplelist>
      <member>
       プロプライエタリな PHP アプリケーションのスクリプト全体をエンコードするため
      </member>
      <member>
       プロプライエタリな PHP アプリケーションの一部のクラスや関数をエンコードするため
      </member>
      <member>
       クライアントのデスクトップで動作する php-gtk アプリケーションを、
       php.exe を用いずに実行させるため
      </member>
      <member>PHP から C へのコンバータの実現可能性を調べるため</member>
     </simplelist>
     最初の目的は
     <function>bcompiler_write_header</function>、
     <function>bcompiler_write_file</function> および
     <function>bcompiler_write_footer</function>
     を使用することで実現できます。バイトコードのファイルが、
     圧縮されていないかあるいはプレーンな形式で書き出されます。
     出来上がったバイトコードは、単純に include や require を用いることで使用可能です。
    </para>
    <para>
     2 番目の目的を実現するには
     <function>bcompiler_write_header</function>、
     <function>bcompiler_write_class</function>、
     <function>bcompiler_write_footer</function>、
     <function>bcompiler_read</function>
     および <function>bcompiler_load</function> 関数を使用します。
     バイトコードのファイルが、圧縮されていないか
     あるいはプレーンな形式で書き出されます。
     <function>bcompiler_load</function> は、bzip で圧縮された
     バイトコードファイルを読み込みます。これは元のファイルに比べて
     1/3 程度の大きさになります。
    </para>
    <para>
     EXE 形式のファイルを作成するには、修正された sapi ファイルか
     共有ライブラリとしてコンパイルされた PHP とともに bcompiler
     を使用する必要があります。この場合、bcompiler は
     圧縮されたバイトコードを exe ファイルの後ろから読み込みます。
    </para>
    <para>
     圧縮しないバイトコードのみで使用した場合、bcompiler によって
     処理速度を約 30% 向上させることが可能です。しかし、圧縮しない
     バイトコードは元のソースコードに比べて 5 倍程度の大きさに
     なることに気をつけてください。バイトコードを圧縮することで
     容量を節約することが可能ですが、圧縮ファイルを展開するのには
     ソースコードをパースするよりはるかに長い時間がかかります。
     bcompiler はバイトコードに対する最適化を一切行いません。
     これは将来のバージョンで対応する予定です…。
    </para>
    <para>
     コードの保護という点に関しては、もとのソースコードやコメントを
     復元することは不可能であると考えて間違いありません。bcompiler
     のバイトコードをもとにしてコードを復元し、クラスに手を加える
     といったことは無意味です。しかし、bcompiler で作成した
     バイトコードファイルからデータを取り出すことは可能です。
     個人的なパスワードなどの情報をバイトコードの中に含めないでください。
    </para>
 </preface>

 &reference.bcompiler.setup;
 &reference.bcompiler.constants;
 &reference.bcompiler.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

