<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.5 Maintainer: takagi Status: ready -->
<refentry id="function.bcompiler-load">
 <refnamediv>
  <refname>bcompiler_load</refname>
  <refpurpose>bz 圧縮されたファイルを読み込み、クラスを生成する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>bcompiler_load</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   bzip 圧縮されたファイルを読み込み、バイトコードからクラスを生成します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       bzcompress されたファイルのパスを表す文字列。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>bcompiler_load</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php

bcompiler_load("/tmp/example");

print_r(get_defined_classes());

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.experimental.func;
  <note>
   <para>
    バイトコードをパースするには、include 文や require 文を
    使用してください。この関数を使用するよりも、そのほうが
    より移植性が高く便利です。
   </para>
   <para>
    この関数は、バイトコードファイルに含まれるスクリプト本体のコードを
    実行するわけではないことに注意しましょう。
   </para>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
