<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xml:id="function.spl-autoload-register" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>spl_autoload_register</refname>
  <refpurpose>指定した関数を __autoload() の実装として登録する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>spl_autoload_register</methodname>
   <methodparam choice="opt"><type>callback</type><parameter>autoload_function</parameter></methodparam>
  </methodsynopsis>
  <para>
   指定した関数を、spl が提供する __autoload スタックに登録します。
   スタックがまだアクティブになっていない場合は、まずアクティブにします。
  </para>
  <para>
   もしあなたのコード中に __autoload 関数が存在するのなら、
   それを明示的に __autoload スタックに登録しなければなりません。
   なぜなら、spl_autoload_register() は、
   spl_autoload() あるいは spl_autoload_call() によって
   __autoload 関数のエンジンキャッシュを効率的に置き換えるからです。
  </para>
  <para>
   複数の autoload 関数が必要となる場合でも <function>spl_autoload_register</function>
   は対応できます。この関数は autoload 関数のキューを作成し、
   定義された順にそれを実行していきます。一方
   <function>__autoload</function> は、一度しか定義できません。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>autoload_function</parameter></term>
     <listitem>
      <para>
       登録したい autoload 関数。
       パラメータが指定されなかった場合は、デフォルト実装である
       <function>spl_autoload</function> が登録されます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        名前空間に対応するようになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>spl_autoload_register</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Foobar;

class Foo {
    static public function test($name) {
        print '[['. $name .']]';
    }
}

spl_autoload_register(__NAMESPACE__ .'\Foo::test'); // PHP 5.3.0 以降

new InexistentClass;

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
[[Foobar\InexistentClass]]
Fatal error: Class 'Foobar\InexistentClass' not found in ...
]]>
    </screen>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
