<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- Generated by xml_proto.php v2.2. Found in /scripts directory of phpdoc. -->
<!-- EN-Revision: 1.12 Maintainer: takagi Status: ready -->
<refentry id="runkit.sandbox">
 <refnamediv>
  <refname>Runkit_Sandbox</refname>
  <refpurpose>
   Runkit Sandbox クラス -- PHP バーチャルマシン
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;

  <para>
   <classname>Runkit_Sandbox</classname> クラスをインスタンス化すると、
   独自のスコープとプログラムスタックを持つ新しいスレッドが生成されます。
   コンストラクタに渡すオプションを設定することで、この環境では
   インタプリタの機能を制限することが可能す。そのため、ユーザから渡された
   コードを実行する場合などに、より安全な環境を提供可能です。
  </para>

  &note.runkit.sandbox;
 </refsect1>

 <refsect1 role="constructor">
  <title>コンストラクタ</title>
  <methodsynopsis>
   <type>void</type><methodname>Runkit_Sandbox::__construct</methodname>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>

  <para>
   <parameter>options</parameter> は連想配列で、その中に
   以下の ini オプションの組み合わせを格納します。
  </para>

  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>safe_mode</parameter></term>
     <listitem>
      <para>
       <classname>Runkit_Sandbox</classname> クラスをインスタンス化した
       外部スクリプトが <literal>safe_mode = off</literal> と設定されている
       場合、サンドボックス内の safe_mode を on にすることが可能です。
       外部スクリプトで <literal>safe_mode</literal> が有効になっている
       場合に、サンドボックス内でそれを無効にすることはできません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>safe_mode_gid</parameter></term>
     <listitem>
      <para>
       <classname>Runkit_Sandbox</classname> クラスをインスタンス化した
       外部スクリプトが <literal>safe_mode_gid = on</literal> と設定されている
       場合、サンドボックス内の safe_mode_gid を off にすることが可能です。
       外部スクリプトで <literal>safe_mode_gid</literal> が無効になっている
       場合に、サンドボックス内でそれを有効にすることはできません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>safe_mode_include_dir</parameter></term>
     <listitem>
      <para>
       <classname>Runkit_Sandbox</classname> クラスをインスタンス化した
       外部スクリプトが <literal>safe_mode_include_dir</literal> を
       組み込んで configure されていた場合、サンドボックス内の
       safe_mode_include_dir を定義されているディレクトリ以下に指定することが
       可能です。この機能を無効にすることを示すため、safe_mode_include_dir
       をクリアすることも可能です。
       外部スクリプトで safe_mode_include_dir が空白になっているが
       safe_mode は有効でない場合、任意の safe_mode_include_dir を
       指定して safe_mode を on にすることが可能です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>open_basedir</parameter></term>
     <listitem>
      <para>
       <parameter>open_basedir</parameter> は、カレントの
       <literal>open_basedir</literal> 以下の任意のパスを指定可能です。
       グローバルスコープで <literal>open_basedir</literal> 
       が指定されていない場合、それはルートディレクトリと判断され、
       どの場所でも指定可能となります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>allow_url_fopen</parameter></term>
     <listitem>
      <para>
       <parameter>safe_mode</parameter> と同様、より厳しくする方向にのみ
       指定可能です。この場合は &true; と指定されている場合に &false; を
       指定することが可能となります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>disable_functions</parameter></term>
     <listitem>
      <para>
       サンドボックス内のインタプリタで無効とする関数を、カンマ区切りの
       リストで指定します。現在すでに無効になっている関数名を含める必要は
       ありません。それらはリストに載っているか否かにかかわらず無効となります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>disable_classes</parameter></term>
     <listitem>
      <para>
       サンドボックス内のインタプリタで無効とするクラスを、カンマ区切りの
       リストで指定します。現在すでに無効になっているクラス名を含める必要は
       ありません。それらはリストに載っているか否かにかかわらず無効となります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>runkit.superglobal</parameter></term>
     <listitem>
      <para>
       サンドボックス内のインタプリタでスーパーグローバルとして扱う変数を、
       カンマ区切りのリストで指定します。これらの変数は、既に内部で
       定義されている変数やグローバルの runkit.superglobal 設定に
       追加して使用されます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <example>
   <title>機能を制限したサンドボックスのインスタンス化</title>
   <programlisting role="php">
<![CDATA[
<?php
$options = array(
  'safe_mode'=>true,
  'open_basedir'=>'/var/www/users/jdoe/',
  'allow_url_fopen'=>'false',
  'disable_functions'=>'exec,shell_exec,passthru,system',
  'disable_classes'=>'myAppClass');
$sandbox = new Runkit_Sandbox($options);
/* 制限されていない ini 項目は、普通に設定できる */
$sandbox->ini_set('html_errors',true);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="variables">
  <title>変数へのアクセス</title>
  <para>
   サンドボックス環境内のすべてのグローバル変数は、サンドボックス
   オブジェクトのプロパティとしてアクセス可能です。しかし、
   オブジェクト変数やりソース変数はインタプリタ越しに
   利用することができないことに注意しましょう。これは、これらの
   2 つのスレッドのメモリ管理が仮想マシン上で行われていることが原因です。
   さらに、配列はすべてディープコピーされ、参照渡しのデータは
   失われます。つまり、参照渡しのデータをインタプリタ越しに使用することは
   できないということです。
  </para>

  <example>
   <title>サンドボックス内部の変数の扱い</title>
   <programlisting role="php">
<![CDATA[
<?php
$sandbox = new Runkit_Sandbox();

$sandbox->foo = 'bar';
$sandbox->eval('echo "$foo\n"; $bar = $foo . "baz";');
echo "{$sandbox->bar}\n";
if (isset($sandbox->foo)) unset($sandbox->foo);
$sandbox->eval('var_dump(isset($foo));');
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
bar
barbaz
bool(false)
]]>
  </screen>
 </refsect1>

 <refsect1 role="variables">
  <title>PHP 関数のコール</title>
  <para>
   サンドボックス内で定義されている関数は、すべてサンドボックス
   オブジェクトのメソッドとしてコールできます。これには、擬似関数として
   扱われる以下のような言語構造も含みます。<function>eval</function>、
   <function>include</function>、<function>include_once</function>、
   <function>require</function>、<function>require_once</function>、
   <function>echo</function>、<function>print</function>、
   <function>die</function> および <function>exit</function>。
  </para>

  <example>
   <title>サンドボックス内の関数のコール</title>
   <programlisting role="php">
<![CDATA[
<?php
$sandbox = new Runkit_Sandbox();

echo $sandbox->str_replace('a','f','abc');
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
fbc
]]>
  </screen>

  <para>
   サンドボックス内の関数への引数は、外部の PHP インスタンスから
   渡されます。もしサンドボックスのスコープから引数を渡したい場合は、
   上で示したようにサンドボックスのプロパティとしてそれにアクセスする
   ようにしてください。
  </para>

  <example>
   <title>サンドボックス内の関数に引数を渡す</title>
   <programlisting role="php">
<![CDATA[
<?php
$sandbox = new Runkit_Sandbox();

$foo = 'bar';
$sandbox->foo = 'baz';
echo $sandbox->str_replace('a',$foo,'a');
echo $sandbox->str_replace('a',$sandbox->foo,'a');
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
bar
baz
]]>
  </screen>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
