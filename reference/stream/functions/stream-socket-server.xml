<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 1.2 $ -->
<!-- sync: 1.4 -->
  <refentry id="function.stream-socket-server">
   <refnamediv>
    <refname>stream_socket_server</refname>
    <refpurpose>
     インターネットドメインまたは Unix ドメインのサーバソケットを作成する
    </refpurpose> 
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>resource</type><methodname>stream_socket_server</methodname>
      <methodparam><type>string</type><parameter>local_socket</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>&amp;errno</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>&amp;errstr</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>local_socket</parameter> で指定された接続ポイントに、
     ストリームまたはデータグラムソケットによる接続を作成します。
     作成されるソケットのタイプは、URL フォーマットによって指定された
     トランスポートによって決定されます:
     <literal>トランスポート://ターゲット</literal>。
     TCP や UDP といったインターネットドメインのソケット (AF_INET)
     には、<parameter>remote_socket</parameter> パラメータの
     <literal>ターゲット</literal> の部分は、ホスト名または IP アドレスと、
     それに続くコロンで区切られたポート番号から構成されていなければなりません。
     Unix ドメインのソケットの場合は、<parameter>ターゲット</parameter>
     の部分は、ファイルシステムにおけるソケットのファイルを指定しなくては
     いけません。

     <parameter>flags</parameter> は、ソケット作成フラグの任意の組み合わせ
     を指定できるビットフィールドです。
     デフォルトの値は、<constant>STREAM_SERVER_BIND</constant> |
     <constant>STREAM_SERVER_LISTEN</constant> です。
    </para>
    <para>
     この関数は、ソケットのみを作成します。接続待ちの状態に入るには、
     <function>stream_socket_accept</function> 関数を使います。
    </para>
    <para>
     もし失敗した場合は、&false; を返し、その時オプションの
     <parameter>errno</parameter> と <parameter>errstr</parameter>
     パラメータが存在するときは、そこにシステムレベルの
     <literal>connect</literal> コールにおいて発生した実際のシステムレベルの
     エラーが返されます。
     もし、<parameter>errno</parameter> に返された値が <literal>0</literal>
     で、かつ &false; が返された場合、<literal>connect()</literal>
     コールを行う前にエラーが発生したことを示しており、これは多くの場合
     ソケットの初期化に失敗したことを示しています。
     <parameter>errno</parameter> と <parameter>errstr</parameter>
     パラメータは常に参照渡しとなることに留意してください。
    </para>
    <para>
     システムの種類によって、Unix ドメインのソケットが利用できない場合が
     あります。
     利用できるトランスポートの種類は、<function>stream_get_transports</function>
     によって知ることができます。
     組み込みのトランスポートのリストは、<xref linkend="transports"/>
     を参照下さい。
    </para>
    <para>
     <function>stream_socket_server</function>.
     <example>
      <title><function>stream_socket_server</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php
$socket = stream_socket_server("tcp://0.0.0.0:8000", $errno, $errstr);
if (!$socket) {
  echo "$errstr ($errno)<br>\n";
} else {
  while ($conn = stream_socket_accept($socket)) {
    fputs ($conn, 'Thank you for connecting to my server. The local time is ' . date('n/j/Y g:i a') . "\n");
    fclose ($conn);
  }
  fclose($socket);
}
?>
]]>
      </programlisting>
     </example>
     下記の例は、PHP のスクリプトが、どうやって
     <function>stream_socket_client</function> で示したような、
     問い合わせに応答するタイムサーバとして機能するかを示したものです。
     <note>
      <simpara>1024 番よりも小さいポート番号のサーバソケットを作成する場合、
       多くのシステムでは root 権限を必要とします。
      </simpara>
     </note>
     <example>
     <title>UDP サーバソケットを利用する</title>
     <programlisting role="php">
<![CDATA[
<?php
$socket = stream_socket_server("udp://0.0.0.0:13", $errno, $errstr);
if (!$socket) {
    echo "ERROR: $errno - $errstr<br>\n";
} else {
  while ($conn = stream_socket_accept($socket)) {
    fwrite($conn, date("D M j H:i:s Y\r\n"));
    fclose($conn);
  }
  fclose($socket);
}
?>
]]>
     </programlisting>
     </example>
     &ipv6.brackets;
     <function>stream_socket_client</function>, 
     <function>stream_set_blocking</function>,
     <function>stream_set_timeout</function>, 
     <function>fgets</function>,
     <function>fgetss</function>, <function>fputs</function>,
     <function>fclose</function>, <function>feof</function>,
     と <link linkend="ref.curl">Curl 拡張モジュール</link> も参照下さい。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
