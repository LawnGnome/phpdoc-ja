<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.14 Maintainer: hirokawa Status: ready -->
  <refentry id="function.stream-socket-client">
   <refnamediv>
    <refname>stream_socket_client</refname>
    <refpurpose>
     インターネットドメインまたは Unix ドメインのソケット接続を開く
    </refpurpose> 
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>resource</type><methodname>stream_socket_client</methodname>
      <methodparam><type>string</type><parameter>remote_socket</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter role="reference">errno</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter role="reference">errstr</parameter></methodparam>
      <methodparam choice="opt"><type>float</type><parameter>timeout</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>remote_socket</parameter> で指定された接続先との、
     ストリームまたはデータグラム接続を確立します。
     作成されるソケットのタイプは、<literal>[トランスポート]://[ターゲット]</literal>
     という形式の URL フォーマットによって指定された
     トランスポートによって決定されます。
     TCP や UDP といったインターネットドメインのソケット (AF_INET)
     には、<parameter>remote_socket</parameter> パラメータの
     <literal>ターゲット</literal> の部分は、ホスト名または IP アドレスと、
     それに続くコロンで区切られたポート番号から構成されていなければなりません。
     Unix ドメインのソケットの場合は、<parameter>ターゲット</parameter>
     の部分は、ファイルシステムにおけるソケットのファイルを指定しなくては
     いけません。

     省略可能な <parameter>timeout</parameter> パラメータを使うことで、
     接続するためのシステムコールにおけるタイムアウトを設定することができます。

     <parameter>flags</parameter> は、接続設定フラグの任意の組み合わせ
     を指定できるビットフィールドです。
     現在、接続設定フラグとして選択できる値は、
     <constant>STREAM_CLIENT_CONNECT</constant>（デフォルト）、
     <constant>STREAM_CLIENT_ASYNC_CONNECT</constant> と 
     <constant>STREAM_CLIENT_PERSISTENT</constant> のみです。
    </para>
    <note>
     <simpara>
      ソケット上のデータの読み書きに関してタイムアウトを設定する必要がある場合は、
      <function>stream_set_timeout</function> を使ってください。
      <function>stream_socket_client</function> に渡される
      <parameter>timeout</parameter> は、ソケットの接続時にのみ適用されます。
     </simpara>
    </note>
    <note>
     <simpara>
      パラメータ timeout は、非同期通信を試みている場合には適用されません。
     </simpara>
    </note>
    <para>
     <function>stream_socket_client</function> は、
     <function>fgets</function>, <function>fgetss</function>,
     <function>fwrite</function>, <function>fclose</function>,
     <function>feof</function> といった、ファイル関数と共に
     使うことのできるストリームリソースを返します。
    </para>
    <para>
     もし、呼び出しに失敗すると、&false; を返し、
     さらに省略可能な <parameter>errno</parameter> 引数と
     <parameter>errstr</parameter> 引数がある場合は、そこに
     システムレベルの <literal>connect()</literal> 関数の実行時に
     発生したシステムレベルのエラーを表す値を返します。
     もし、<parameter>errno</parameter> に返された値が <literal>0</literal>
     で、かつ、 この関数が &false; を返した時は、
     <literal>connect()</literal> システムコールの前に何らかのエラーが
     発生したことを示しています。これは、多くの場合、ソケットの初期化
     に失敗したことで起こります。<parameter>errno</parameter> と 
     <parameter>errstr</parameter> パラメータは常に参照渡しされることに
     留意してください。
    </para>
    <para>
     環境により、Unix ドメインや接続タイムアウトが利用できない場合があります。
     有効なトランスポートのリストは、<function>stream_get_transports</function>
     で取得できます。
     組み込むのポートの一覧については、<xref linkend="transports"/> を
     参照ください。
    </para>
    <para>
     ストリームはデフォルトではブロックモードで開かれますが、
     <function>stream_set_blocking</function> を使うことで非ブロックモードに
     変更することができます。
     <example>
      <title><function>stream_socket_client</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php
$fp = stream_socket_client("tcp://www.example.com:80", $errno, $errstr, 30);
if (!$fp) {
    echo "$errstr ($errno)<br />\n";
} else {
    fwrite($fp, "GET / HTTP/1.0\r\nHost: www.example.com\r\nAccept: */*\r\n\r\n");
    while (!feof($fp)) {
        echo fgets($fp, 1024);
    }
    fclose($fp);
}
?>
]]>
      </programlisting>
     </example>
     下記の例は、PHP のスクリプトで、どのようにローカル上で動いている
     UDP サービスの "daytime" (ポート 13) によって日時の情報を
     取得できるかを表しています。
     <example>
      <title>UDP 接続を使う</title>
      <programlisting role="php">
<![CDATA[
<?php
$fp = stream_socket_client("udp://127.0.0.1:13", $errno, $errstr);
if (!$fp) {
    echo "ERROR: $errno - $errstr<br />\n";
} else {
    fwrite($fp, "\n");
    echo fread($fp, 26);
    fclose($fp);
}
?>
]]>
      </programlisting>
     </example>
     <warning>
      <simpara>
        UDP ソケットは、リモートホストに到達できなくても
        エラーを発生せず、開いているかような状態になることがありす。
        このエラーは、実際にソケットに対して、読み込みや書き込み動作を
        行ってみないと判断できません。原因としては、UDP が非接続型の
        プロトコルであることが挙げられます。つまり、実際にデータを
        送受信する段階になるまで、OS の側では接続を確立しようとしないという
        ことです。
      </simpara>
     </warning>
    </para>
    &ipv6.brackets;
    <para>
     <function>stream_socket_server</function>, 
     <function>stream_set_blocking</function>,
     <function>stream_set_timeout</function>, 
     <function>stream_select</function>, 
     <function>fgets</function>,
     <function>fgetss</function>, <function>fwrite</function>,
     <function>fclose</function>, <function>feof</function>,
     <link linkend="ref.curl">Curl extension</link> も参照ください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
