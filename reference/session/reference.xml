<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
 <reference id="ref.session">
  <title>セッション処理関数(session)</title>
  <titleabbrev>セッション</titleabbrev>

  <partintro>
   <para>
    PHPのセッションサポート機能は、複数回のアクセスを通じて特定のデー
    タを保持する手段を実現するものです。これにより、よりカスタマイズさ
    れたアプリケーションを構築し、自分の Web サイトのアピール度を増加
    させることが可能となります。
   </para>
   <para>
    PHPLIB のセッション管理に精通している場合には、そのコンセプトがPHPの
    セッションサポートに似ていることに気づくことでしょう。
   </para>
   <para>
    Web サイトの訪問者にはセッションIDというユニークなIDが割りつけられ
    ます。このIDは、ユーザー側にクッキーとして保存するか、または、URL
    に埋め込みます。
   </para>
   <para>
    セッションサポート機能により、任意の数の変数をリクエスト間で受けわたせる
    ようになります。来訪者がサイトにアクセスした際、
    PHP は特定のセッションIDがリクエストとともに送信されているかどうかを
    (session.auto_start が 1 の場合は)自動的に、または
    (<function>session_start</function> により明示的な、あるいは
    <function>session_register</function> により暗黙の)
    要求を受けて確認します。
    このIDが送信されている場合には、以前保存された変数が再現されます。
   </para>
   <para>
    全ての登録された変数は、リクエストが終了した後に、シリアル化されます。
    未定義の登録変数は、未定義としてマーク付けされます。
    後でユーザーがこれらの変数を定義しない限り、以降のアクセスにおいて
    セッションモジュールにより定義されません。
   </para>
   <para>
    設定ファイルの設定値
    <link linkend="ini.track-vars"><literal>track_vars</literal></link>
    および <link
     linkend="ini.register-globals"><literal>register_globals</literal></link>
    によりセッション変数の回復方法を指定します。
   </para>
   <note>
    <para>
     PHP 4.0.3以降、<link
     linkend="ini.track-vars"><literal>track_vars</literal></link>は常
     に on となりました。
    </para>
   </note>
   <note>
    <para>
     PHP 4.1.0以降、$_SESSIONは、$_POST, $_GET, $_REQUEST等のようにグ
     ローバル変数として利用可能です。$HTTP_SESSION_VARSと異なり、
     $_SESSIONは常にグローバルです。そこで、
     <literal>global</literal>は$_SESSIONの場合は不要です。
    </para>
   </note>
   <para>
    <link linkend="ini.track-vars"><literal>track_vars</literal></link>
    が有効で<link linkend="ini.register-globals">
     <literal>register_globals</literal></link>
    が無効の場合、グローバル変数配列$HTTP_SESSION_VARSのメンバーのみを
    セッション変数として登録可能です。回復されたセッション変数は配列
    $HTTP_SESSION_VARSでのみ利用可能です。
    <example>
     <title>
      <link
      linkend="ini.track-vars"><literal>track_vars</literal></link>
      が有効な時に変数を登録する
     </title>
     <programlisting role="php">
<![CDATA[
<?php
if (isset($HTTP_SESSION_VARS['count'])) {
   $HTTP_SESSION_VARS['count']++;
}
else {
   $HTTP_SESSION_VARS['count'] = 0;
}
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    セキュリティとコードの可読性のために$_SESSION(またはPHP 4.0.6以前
    は$HTTP_SESSION_VARS)の使用が推奨されます。$_SESSIONまたは
    $HTTP_SESSION_VARSの場合、
    session_register()/session_unregister()/session_is_registered()は
    不要です。ユーザは、通常の変数と同様にセッション変数にアクセス可能
    です。
    <example>
     <title>
      $_SESSIONで変数を登録
     </title>
     <programlisting role="php">
<![CDATA[
<?php
// PHP 4.0.6以前の場合は$HTTP_SESSION_VARSを使用して下さい
if (!isset($_SESSION['count'])) {
    $_SESSION['count'] = 0;
}
else {
    $_SESSION['count']++;
?>
]]>
     </programlisting>
    </example>
    <example>
     <title>$_SESSIONで変数の登録を解除する</title>
     <programlisting role="php">
<![CDATA[
<?php
// PHP 4.0.6以前の場合は$HTTP_SESSION_VARSを使用して下さい
unset($_SESSION['count']);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    <link
    linkend="ini.register-globals"><literal>register_globals</literal></link>
    が有効な場合、全てのグローバル変数はセッション変数として登録するこ
    とが可能で、セッション変数は対応するグローバル変数として回復されま
    す。PHPは、どのグローバル変数がセッション変数として登録されるのか
    を知る必要があるため、ユーザは、変数をsession_register()関数で登録
    する必要があります。しかし、$HTTP_SESSION_VARS/$_SESSIONの場合は、
    session_register()を使用する必要はありません。
    <caution>
     <para>
      $HTTP_SESSION_VARS/$_SESSIONを使用する場合、セッションモジュール
      の内部動作を知っているユーザ以外は、
      <function>session_register</function>,
      <function>session_is_registered</function>,
      <function>session_unregister</function>を使用しないで下さい。
     </para>
    </caution>
    <example>
     <title>
      <link
      linkend="ini.register-globals"><literal>register_globals</literal></link>
      が有効な場合に、変数を登録する
     </title>
     <programlisting role="php">
<![CDATA[
<?php
if (!session_is_registered('count')) {
    session_register("count");
    $count = 0;
}
else {
    $count++;
}
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    <link
    linkend="ini.track-vars"><literal>track_vars</literal></link>と
    <link
    linkend="ini.register-globals"><literal>register_globals</literal></link>
    が共に有効な場合、グローバル変数と$HTTP_SESSION_VARS/$_SESSIONエン
    トリは同じ値へのリファレンスとなります。
   </para>
   <para>
    セッションIDの通知を行うためには次の二つの方法があります。
    <itemizedlist>
     <listitem>
      <simpara>
      クッキー
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       URLパラメータ
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    セッションモジュールは、両方の方法をサポートします。
    クッキーは最適ですが、(クライアントがクッキーを受け入れない可能性が
    あるため)信頼性がなく、頼ることができません。二番目の方法は、
    セッションIDを直接URLに埋め込みます。
   </para>
   <para>
    PHP は、<literal>--enable-trans-sid</literal>を付けてコンパイルされた
    場合にこの処理を透過的に行います。
    このオプションを有効にした場合、相対 URI はセッションIDを有するように
    自動的に変更されます。
    もしくは、クライアントが適当なクッキーを送信しない場合に
    定義される定数 <literal>SID</literal> を使用することができます。
    <literal>SID</literal> は、<literal>session_name=session_id</literal> 
    の形式または空の文字列です。
   </para>
   <para>
    次の例は、変数の登録法および SID を用いて他のページに
    正しくリンクする方法のデモです。
    <example>
     <title>単一のユーザーに関するヒット数を数える</title>
     <programlisting role="php">
<![CDATA[
<?php
if (!session_is_registered('count')) {
    session_register('count');
    $count = 1;
}
else {
    $count++;
}
?>

こんにちは、あなたがこのページに来たのは<?php echo $count; ?>回目ですね。 <p>

<?php
# ユーザーがクッキーを使用不可としている場合は、セッションIDを
# 保持するために<?=SID> が必要です。
?>

続けるには、<A HREF="nextpage.php?<?=SID?>">ここをクリック</A>して下さい。
]]>
     </programlisting>
    </example>
   </para>
   <para>
    PHPのコンパイル時に <link linkend="install.configure.enable-trans-sid">
    <literal>--enable-trans-sid</literal></link>を指定した場合には、
    <literal>&lt;?=SID?&gt;</literal> は必要ありません。
   </para>
   <note>
    <para>
     相対URLでないものは、外部サイトを指していると仮定されSIDが追加
     されません。これは、SIDを異なったサーバにもらすことはセキュリティ
     上のリスクとなるためです。
    </para>
   </note>
   <para>
    セッション情報をデータベースに保存する機能か他の保存法を実装するに
    は、一連のユーザレベルの保存関数を作成し、
    <function>session_set_save_handler</function>を使用する必要があり
    ます。
   </para>
   <para>
    セッション管理システムは、php.ini ファイルに記述可能な多くの設定オ
    プションをサポートします。以下に概要を示します。
    <itemizedlist>
     <listitem>
      <simpara>
       <literal>session.save_handler</literal> は、セッションに関連す
       るデータの保存および取得に使用されるハンドル名を定義します。デ
       フォルトは、<literal>files</literal>です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.save_path</literal> は、保存ハンドラに渡される
       引数を定義します。デフォルトのファイルハンドラ選択した場合、
       ファイルが作成される場所のパスになります。デフォルトは、
       <literal>/tmp</literal> です。
       <literal>session.save_path</literal>のパスの深さが2より大きい場
       合、ガーベッジコレクションは行われません。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.name</literal> はセッション名を指定し、
       クッキー名として使用されます。
       アルファベット文字のみで指定する必要があります。
       デフォルトは、<literal>PHPSESSID</literal> です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.auto_start</literal> はリクエスト開始時に
       セッションモジュールがセッションを自動的に開始するかどうかを
       指定します。デフォルトは、<literal>0</literal>(無効)です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cookie_lifetime</literal>は、ブラウザに送信す
       るクッキーの有効期間を秒数で指定します。値0は、"ブラウザを閉じ
       るまで"を意味します。デフォルトは、<literal>0</literal>です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.serialize_handler</literal> は、シリアル化また
       はシリアル化データを復元するために使用されるハンドラの名前を定
       義します。現在、( <literal>php</literal>という名前の)PHP 内部
       フォーマットおよび(<literal>wddx</literal>という名前の)WDDX が
       サポートされています。WDDXは、PHP が<link
       linkend="ref.wddx">WDDX サポート</link> を有効にしてコンパイル
       されている場合のみ使用可能です。デフォルトは、
       <literal>php</literal> です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.gc_probability</literal> は、gc (ガーベッジ・
       コレクション)ルーチンが各リクエストにおいて開始される確率をパー
       セントで指定します。デフォルトは、<literal>1</literal> です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.gc_maxlifetime</literal> は、データが'ごみ'と
       みなされてから消去されるまでの秒数を指定します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.referer_check</literal> には、HTTP Referer に
       おいて確認を行う文字列を指定します。Refererがクライアントにより
       送信されており、かつ、指定した文字列が見付からない場合、埋め込
       まれたセッションIDは無効となります。デフォルトは空の文字列です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.entropy_file</literal> は、
       セッションIDを作成する際の別のエントロピソースとして使用する
       外部リソースへのパスを指定します。
       例としては、多くの UNIX で利用可能な <literal>/dev/random</literal> 
       または <literal>/dev/urandom</literal> があげられます。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.entropy_length</literal> は、前記のファイルから読みこむ
       バイト数を指定します。デフォルトは、<literal>0</literal> (無効)です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.use_cookies</literal>によりクライアント側にセッションID
       を保存する際にクッキーを使用するかどうかを指定します。デフォルトは
       <literal>1</literal> (有効)です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cookie_path</literal>によりsession_cokkieで設定する
       パスを指定します。デフォルトは<literal>/</literal>です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cookie_domain</literal>によりsession_cookieで指定する
       ドメインを指定します。デフォルトでは指定されません。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cache_limiter</literal>により
       セッションページにおけるキャッシュ制御の方法(nocache/private/public)
       を指定します。デフォルトは、<literal>nocache</literal>です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cache_expire</literal>によりキャッシュされた
       セッションページの生存期間を分単位で指定します。
       このオプションは、nocacheリミッタに関しては効果がありません。
       デフォルトは、<literal>180</literal>です。
      </simpara>
     </listitem>    
     <listitem>
      <simpara>
       <literal>session.use_trans_sid</literal>は、
       <link linkend="install.configure.enable-trans-sid">
       <literal>--enable-trans-sid</literal></link>を指定してコンパイ
       ルを行うことにより有効となった場合に、透過的なセッション
       IDの付加をするかどうかを指定します。
       デフォルトは、<literal>1</literal>(有効)です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>url_rewriter.tags</literal>は、透過的なセッションIDの
       付加機能が有効となった場合に、セッションIDを含めるために書き換
       えられるHTMLタグを指定します。デフォルトは、
       <literal>a=href,area=href,frame=src,input=src,form=fakeentry</literal>
       です。
      </simpara>
     </listitem>
    </itemizedlist>
    <note>
     <para>
      セッション処理機能は、PHP 4.0 でサポートされました。
     </para>
    </note>
   </para>
  </partintro>

&reference.session.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

