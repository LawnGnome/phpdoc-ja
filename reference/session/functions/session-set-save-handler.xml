<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.12 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
  <refentry id="function.session-set-save-handler">
   <refnamediv>
    <refname>session_set_save_handler</refname>
    <refpurpose>
     ユーザ定義のセッション保存関数を設定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>bool</type><methodname>session_set_save_handler</methodname>
      <methodparam><type>string</type><parameter>open</parameter></methodparam>
      <methodparam><type>string</type><parameter>close</parameter></methodparam>
      <methodparam><type>string</type><parameter>read</parameter></methodparam>
      <methodparam><type>string</type><parameter>write</parameter></methodparam>
      <methodparam><type>string</type><parameter>destroy</parameter></methodparam>
      <methodparam><type>string</type><parameter>gc</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>session_set_save_handler</function> は、セッションに
     関連するデータを保存および取得するために使用されるユーザ定義の
     セッション保存関数を設定します。この関数は、セッションデータを
     ローカルデータベースに保存する場合のように PHP セッションにより
     提供されるもの以外の保存方法を使用したい場合に有用です。
     &return.success;
    </para>
    <note>
     <para>
      セッションが何も情報を含んでいない場合には write ハンドラは実行されません。
      空のセッション変数が登録されている場合でも同様です。
      この動作はデフォルトのファイルベースセッションハンドラとは異なるものです。
      デフォルトのファイルベースセッションハンドラは空のセッションファイルを
      生成します。
     </para>
    </note>
    <para>
     以下の例では、デフォルトの保存 <parameter>files</parameter> に似た
     ファイルベースのセッション保存を行います。この例は、PHP がサポート
     する任意のデータベースエンジンを用いてデータベースへの保存を行う
     ように容易に拡張可能です。
    </para>
    <para>
     save ハンドラが期待通りに動作するように read 関数は常に文字列を返す
     必要があります。データがない場合には、空の文字列を返してください。
     他のハンドラからの返り値は、論理式、すなわち成功した場合に &true;、
     失敗した場合に &false; を返します。
    </para>
    <warning>
     <para>
      PHP 5.0.5 以降、Write ハンドラおよび Close ハンドラはオブジェクトが
      破棄されたあとにコールされます。そのため、セッション内でデストラクタを
      使用可能ですが、ハンドラ内ではオブジェクトを使用できません。
      以前のバージョンでは、これらのコールされる順序が逆でした。
      この「ニワトリが先かタマゴが先か」の問題を解決するために、
      デストラクタから <function>session_write_close</function> を
      コールすることが可能です。
     </para>
    </warning>
    <para>
     <example>
      <title>
       <function>session_set_save_handler</function> の例
      </title>
      <programlisting role="php">
<![CDATA[
<?php
function open($save_path, $session_name)
{
  global $sess_save_path, $sess_session_name;

  $sess_save_path = $save_path;
  $sess_session_name = $session_name;
  return(true);
}

function close()
{
  return(true);
}

function read($id)
{
  global $sess_save_path, $sess_session_name;

  $sess_file = "$sess_save_path/sess_$id";
  if ($fp = @fopen($sess_file, "r")) {
    $sess_data = fread($fp, filesize($sess_file));
    return($sess_data);
  } else {
    return(""); // ここで "" を返す必要があります。
  }

}

function write($id, $sess_data)
{
  global $sess_save_path, $sess_session_name;

  $sess_file = "$sess_save_path/sess_$id";
  if ($fp = @fopen($sess_file, "w")) {
    return(fwrite($fp, $sess_data));
  } else {
    return(false);
  }

}

function destroy($id)
{
  global $sess_save_path, $sess_session_name;

  $sess_file = "$sess_save_path/sess_$id";
  return(@unlink($sess_file));
}

/*********************************************
 * 警告 - ここで何らかのガベージコレクション *
 * ルーチンを実装する必要があるでしょう。    *
 *********************************************/
function gc($maxlifetime)
{
  return true;
}

session_set_save_handler("open", "close", "read", "write", "destroy", "gc");

session_start();

// セッションを通常通り使用します。

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <link linkend="ini.session.save-handler">session.save_handler</link>
     設定ディレクティブも参照してください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
