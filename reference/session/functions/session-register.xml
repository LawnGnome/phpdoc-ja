<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/session.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.9 Maintainer: hirokawa Status: ready -->
  <refentry id="function.session-register">
   <refnamediv>
    <refname>session_register</refname>
    <refpurpose>現在のセッションに1つ以上の変数を登録する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>bool</type><methodname>session_register</methodname>
      <methodparam><type>mixed</type><parameter>name</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>session_register</function> の引数の数は可変であり、
     各引数は変数名を保持する文字列または変数名からなる配列
     とすることが可能です。
     各変数名が処理される毎に、<function>session_register</function>
     は、その変数名のグローバル変数を現在のセッションに登録します。
    </para>
    <caution>
     <para>
      <link linkend="ini.register-globals">register_globals</link>を
      考慮することなくスクリプトを書きたい場合には、
      <link linkend="reserved.variables.session">$_SESSION</link>配列を
      代わりに使用する必要があります。
      <varname>$_SESSION</varname>のエントリーは自動的に登録されます。
      スクリプトで<function>session_register</function>を
      使用している場合には、それは
      <link linkend="ini.register-globals">register_globals</link>を
      不可としている環境下では動作しません。
     </para>
    </caution>
    
    &note.registerglobals;

    <caution>
     <para>
      この関数は、<emphasis>global</emphasis>変数を登録します。セッショ
      ン変数を関数の内部で登録したい場合、<function>global</function>
      を用いてその変数をグローバルとするか、下記のようにsession配列を
      使用して下さい。
     </para>
    </caution>
    <caution>
     <para>
      <varname>$HTTP_SESSION_VARS</varname>（または<varname>$_SESSION</varname>）を
      使用する場合、
      <function>session_register</function>,
      <function>session_is_registered</function>,
      <function>session_unregister</function>を使用しないで下さい。
     </para>
    </caution>
    <para>
     この関数は全ての変数のセッションへの登録に成功した場合に&true;を
     返します。
    </para>
    <para>
     この関数をコールする前に<function>session_start</function>をコー
     ルしていない場合、暗黙のうちに引数を付けずに
     <function>session_start</function>がコールされます。
     <varname>$_SESSION</varname> を使う場合はこの動作とは違い、
     使用前に必ず<function>session_start</function>をコールする必要があります。
    </para>
    <para>
     配列$HTTP_SESSION_VARSまたは$_SESSION (PHP >= 4.1.0)の適当なメン
     バに設定をするだけでもセッション変数を作成することが可能です。
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// session_register() の使用は推奨されません。
$barney = "A big purple dinosaur.";
session_register("barney");

// PHP 4.1.0以降では$_SESSIONの使用が推奨されます。
$_SESSION["zim"] = "An invader from another planet.";

// 古い手法としては $HTTP_SESSION_VARS があります。
$HTTP_SESSION_VARS["spongebob"] = "He's got square pants.";
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      セッションにリソース変数を登録することは現在できません。例えば、
      データベースへの接続を生成し、接続IDをセッション変数として登録し、
      セッションが回復された時点で、接続が有効であることを期待すること
      はできません。リソースを返すPHP関数は、その関数定義に
      <literal>resource</literal>型の返り値を有することが示されている。
      リソースを返す関数のリストは、付録
      <link linkend="resource">resource types</link>で見ることができま
      す。
     </para>
     <para>
      $_SESSION (またはPHP 4.0.6以前は$HTTP_SESSION_VARS)が使用されて
      いる場合、$_SESSIONに変数を代入して下さい。
      すなわち、$_SESSION['var'] = 'ABC';
     </para>
    </note>
    <para>
     <function>session_is_registered</function>,
     <function>session_unregister</function>,
     <link linkend="reserved.variables.session">$_SESSION</link>
     も参照して下さい。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
