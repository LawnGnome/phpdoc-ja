<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330340 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka,hirokawa -->

<book xml:id="book.session" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <?phpdoc extension-membership="core" ?>
 <title>セッション処理</title>
 <titleabbrev>Sessions</titleabbrev>

 <!-- {{{ preface -->
 <preface xml:id="intro.session">
  &reftitle.intro;
  <para>
   PHPのセッションサポート機能は、複数回のアクセスを通じて特定のデー
   タを保持する手段を実現するものです。これにより、よりカスタマイズさ
   れたアプリケーションを構築し、自分の Web サイトのアピール度を増加
   させることが可能となります。
  </para>
  <para>
   Web サイトの訪問者にはセッションIDというセッションIDと呼ばれるユニークなIDが割りつけられ
   ます。このIDは、ユーザー側にクッキーとして保存するか、または、URL
   に埋め込みます。
  </para>
  <para>
   セッションサポート機能により、スーパーグローバル配列
   <varname>$_SESSION</varname>
   を使ってリクエスト間でデータを格納できるようになります。
   来訪者がサイトにアクセスした際、
   PHP は特定のセッションIDがリクエストとともに送信されているかどうかを
   (<link linkend="ini.session.auto-start">
    <literal>session.auto_start</literal></link>が1の場合は)自動的に、または
   (<function>session_start</function> により明示的な、あるいは
   <function>session_register</function> により暗黙の)
   要求を受けて確認します。
   このIDが送信されている場合には、以前保存された変数が再現されます。
  </para>
  <caution>
   <para>
    <link linkend="ini.session.auto-start">session.auto_start</link>
    をオンにした場合にオブジェクトをセッションに代入する唯一の方法は、
    クラスの定義を
    <link linkend="ini.auto-prepend-file">auto_prepend_file</link>
    でロードしておき、オブジェクトを
    <function>serialize</function> したうえで後で
    <function>unserialize</function> することです。
   </para>
  </caution>
  <para>
   <varname>$_SESSION</varname> (およびそこに登録されたすべての変数)
   は、リクエストが終了したときに PHP が内部的にシリアライズします。
   シリアライズの方式として、ini 設定
   <link linkend="ini.session.serialize-handler">session.serialize_handler</link>
   で指定したハンドラを使います。
   未定義の登録変数は、未定義としてマーク付けされます。
   これらの変数は、後でユーザーが定義しない限り、以降のアクセスにおいて
   セッションモジュールにより定義されません。
  </para>
  <warning>
   <para>
    セッションデータはシリアライズされるので、
    <type>resource</type> 型の変数はセッションに格納できません。
   </para>
  </warning>
  <note>
   <para>
    セッションを処理している時、
    <function>session_register</function>関数を使用するか
    スーパーグローバル配列<varname>$_SESSION</varname>へ新しいキーを
    追加することにより変数が登録されるまで、セッションのレコードは作
    成されないことに注意してください。これは、セッションが
    <function>session_start</function>関数により開始されている場合で
    も真です。
   </para>
  </note>
  <note>
   <para>
    PHP 5.2.2 以降、
    <link linkend="ini.open-basedir">open_basedir</link>
    を有効にして、許可するパスの一覧に "/tmp" を明示していない場合でも
    "/tmp" にセッションファイルを保存するようになっていました。
    この機能は PHP 5.3.0 で削除されます。
   </para>
  </note>
 </preface>
 <!-- }}} -->

 &reference.session.setup;
 &reference.session.constants;
 &reference.session.examples;
 &reference.session.upload-progress;
 &reference.session.security;
 &reference.session.reference;
 &reference.session.sessionhandler;
 &reference.session.sessionhandlerinterface;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

