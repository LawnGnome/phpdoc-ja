<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./ja/functions/uodbc.xml, last change in rev 1.6 -->
<!-- EN-Revision: 1.4 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<refentry id="function.odbc-prepare">
 <refnamediv>
  <refname>odbc_prepare</refname>
  <refpurpose>実行用に文を準備する</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>resource</type><methodname>odbc_prepare</methodname>
   <methodparam><type>resource</type><parameter>connection_id</parameter></methodparam>
   <methodparam><type>string</type><parameter>query_string</parameter></methodparam>
  </methodsynopsis>
  <para>
   エラー時には、&false; を返します。
  </para>
  <para>
   SQL コマンドの準備に成功した場合は、ODBC 結果 ID を返します。
   結果 ID は、この後 <function>odbc_execute</function>
   で命令を実行する際に使用することができます。
  </para>
  <para>
   (IBM DB2、MS SQL Server および Oracle のように)
   ストアドプロシージャが利用可能で、ODBC 仕様で定義されている IN、INOUT
   および OUT が利用できるものもあります。
   しかし、Unified ODBC ドライバでは現在 IN 型のパラメータしかサポートしていません。
  </para>
  <para>
   以下のコードでは、<varname>$res</varname> が有効な値になるのは
   myproc のすべてのパラメータが IN パラメータの場合のみです。
   <programlisting role='php'>
<![CDATA[<?php
$a = 1;
$b = 2;
$c = 3;
$stmt = odbc_prepare($conn, 'CALL myproc(?,?,?)');
$res = odbc_execute($stmt, array($a, $b, $c));
?>
]]>
   </programlisting>
   INOUT や OUT 型のパラメータを持つストアドプロシージャをコールする必要がある場合に推奨される方法は、
   データベースのネイティブ拡張モジュール
   (例: MS SQL Server なら <link linkend='ref.mssql'>mssql</link>、
   あるいは Oracle なら <link linkend='ref.mssql'>oci8</link>) を使用することです。
  </para>

 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
