<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328215 Maintainer: takagi Status: working -->

<refentry xml:id="mongo.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Mongo::__construct</refname>
  <refpurpose>新しいデータベース接続オブジェクトを作成する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>Mongo::__construct</methodname>
   <methodparam choice="opt"><type>string</type><parameter>server</parameter><initializer>"mongodb://localhost:27017"</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array("connect" => &true;)</initializer></methodparam>
  </methodsynopsis>
  <para>
   パラメータを省略した場合は、"localhost:27017" (あるいは php.ini の
   <link linkend="ini.mongo.default-host">mongo.default_host</link> と
   <link linkend="ini.mongo.default-port">mongo.default_port</link> で設定した場所)
   に接続します。
  </para>
  <para>
   <parameter>server</parameter> は次のような形式にしなければなりません。
   <programlisting>
<![CDATA[
mongodb://[username:password@]host1[:port1][,host2[:port2:],...]/db
]]>
   </programlisting>
  </para>
  <para>
   接続文字列は常に <literal>mongodb://</literal> で始まります。
   この部分が、接続文字列であることを表しています。
  </para>
  <para>
   <literal>username</literal> と <literal>password</literal>
   を指定すれば、コンストラクタが接続を確立する際にデータベースへの認証を試みます。
   ユーザー名とパスワードはオプションで、もし指定するならその後に
   <literal>@</literal> を続けなければなりません。
  </para>
  <para>
   少なくともひとつのホストを指定しなければなりません
   (ポートはオプションで、デフォルトは常に 27017 となります)。
   そのあとに、接続させたいホストをいくつでも続けることができます。
   ホスト名はカンマ区切りで並べ、少なくともひとつのホストへの接続が成功すれば
   コンストラクタは正常な結果を返します。
   どのホストにも接続できなかった場合は
   <classname>MongoConnectionException</classname> をスローします。
  </para>
  <para>
   ユーザー名とパスワードを指定したときには、認証先のデータベースも指定することになるでしょう。
   <literal>db</literal> を省略した場合は "admin" を使います。
  </para>
  <para>
   オプションのクエリ文字列を使って、追加オプションを指定できます。
   同じオプションを <parameter>options</parameter> 配列でもサポートしているので、
   そちらでももう一度説明します。
  </para>
  <para>
   オプションの設定によっては、レプリカセット環境でセカンダリノードから読み込むときの方法に影響するものもあります。
   読み込みの優先順位に関する動きについての詳しい説明は
   <link linkend="mongo.readpreferences">優先読み込み</link> のページを参照ください。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>server</parameter>
     </term>
     <listitem>
      <para>
       サーバー名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       接続オプションの配列。現在使用できるオプションは次のとおりです。
       <itemizedlist>
        <listitem>
         <para>
          <literal>"connect"</literal>
         </para>
         <para>
          コンストラクタで接続を行うか。デフォルトは
          &true;。
         </para>
         <warning>
          <para>
           このオプションは、接続文字列で使うことはできません。
          </para>
         </warning>
        </listitem>
        <listitem>
         <para>
          <literal>"db"</literal>
         </para>
         <para>
          ホスト名に含めるかわりに、認証対象のデータベースをここで指定することができます。
          ホスト名で設定したデータベースを上書きします。
         </para>
        </listitem>
<!--
        <listitem>
         <para>
          <literal>"fireAndForget"</literal>
         </para>
         <para>
          This option influence how the drivers deals with potential errors
          from write operations (<function>MongoCollection::insert</function>,
          <function>MongoCollection::update</function> and
          <function>MongoCollection::delete</function>).
         </para>
         <para>
          When set to <literal>true</literal> (the default) the driver does
          <emphasis>not</emphasis> wait until the server has acknowledged the
          write. When set to <literal>false</literal> (the
          <emphasis>recommended</emphasis> setting), the driver will wait
          until the database has acknowledged the write.
         </para>
         <para>
          If an error occurs, and <literal>fireAndForget</literal> is set to
          <literal>false</literal>, then a
          <classname>MongoCursorException</classname> is thrown.
         </para>
        </listitem>
-->
        <listitem>
         <para>
          <literal>"password"</literal>
         </para>
         <para>
          ホスト名に含めるかわりに、パスワードをここで指定することができます。
          パスワードに "@" を含む場合などに特に便利です。
          ホスト名で設定したパスワードを上書きします。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"readPreference"</literal>
         </para>
         <para>
          Specifies the read preference type. Read preferences provide you
          with control from which secondaries data can be read from.
         </para>
         <para>
          Allows values are: <literal>primary</literal>,
          <literal>primaryPreferred</literal>,
          <literal>secondary</literal>, <literal>secondaryPreferred</literal>
          and <literal>nearest</literal>.
         </para>
         <para>
          See the documentation on <link linkend="mongo.readpreferences">read
          preferences</link> for more information. 
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"readPreferenceTags"</literal>
         </para>
         <para>
          Specifies the read preference tags. Tags can be used in combination
          with the <literal>readPreference</literal> option to further control
          which secondaries data might be read from.
         </para>
         <para>
          See the documentation on <link linkend="mongo.readpreferences">read
          preferences</link> for more information. 
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"replicaSet"</literal>
         </para>
         <para>
          接続先のレプリカセットの名前。指定した場合は、マスタが自動的に決まります。
          つまり、ドライバは、リストに上がっていないサーバーに接続することになるかもしれません。
          詳細は、以下のレプリカセットの例を参照ください。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"timeout"</literal>
         </para>
         <para>
          ドライバがデータベースへの接続を試みる時間の長さ (ミリ秒単位)。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"username"</literal>
         </para>
         <para>
          ホスト名に含めるかわりに、ユーザー名をここで指定することができます。
          ユーザー名に ":" を含む場合などに特に便利です。
          ホスト名で設定したユーザー名を上書きします。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"w"</literal>
         </para>
         <para>
          The <literal>w</literal> options controls until how long the driver
          blocks with regards to writing to replicaset members.
         </para>
         <para>
          A positive integer value controls how <emphasis>many</emphasis>
          nodes in the replicaset have received the write instruction before
          the driver continues. A value of <literal>3</literal> would mean
          that the write has been applied to the primary as well as two other
          replicaset members.
         </para>
         <para>
          A string value is used to control which tag sets are taken into
          account for write concerns. <literal>"majority"</literal> is special
          and makes sure that the write operation has been applied to the
          majority (more than 50%) of the participating nodes.
         </para>
         <para>
          See the <link
          xlink:href="&url.mongodb.docs;applications/replication/#replica-set-write-concern">core
          documentation</link> on replica sets for more information.
         </para>
         <para>
          Please note that setting "w" implicitly sets
          <literal>fireAndForget</literal> to <literal>false</literal>.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"wTimeout"</literal>
         </para>
         <para>
          This option is used in combination with the "w" option. It controls
          how many milliseconds the server waits for the write concern to be
          satisfied. If it takes longer then the server signals to the driver
          that it took too long and the driver will throw a
          <classname>MongoCursorException</classname> exception.
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   新しいデータベース接続オブジェクトを返します。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   指定したすべてのホスト名へのデータベースへの接続に失敗した場合に
   <classname>MongoConnectionException</classname> をスローします。
   指定したユーザー名やパスワードが間違っている場合にも
   <classname>MongoConnnectionException</classname> をスローします。
   一般的な例外とその原因については
   <classname>MongoConnectionException</classname>
   のドキュメントを参照ください。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.3.0</entry>
       <entry><literal>"fireAndForget"</literal>、
       <literal>"readPreference"</literal>、
       <literal>"readPreferenceTags"</literal>、<literal>"w"</literal> および
       <literal>"wTimeout"</literal> オプションが追加されました。</entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>
        <para>
         <literal>"username"</literal> および <literal>"password"</literal>
         オプションが追加されました。
        </para>
        <para>
         <literal>"persist"</literal> オプションが削除されました。すべての接続は持続的な接続となります。
         今でも使うことはできますが、何の影響も及ぼしません。
        </para>
        <variablelist>
         <varlistentry>
          <term>
           <parameter>"persist"</parameter>
          </term>
          <listitem>
           <para>
            持続的な接続を行うかどうか。これを設定すると、接続が持続的なものとなります。
            文字列の値を接続 ID として使うので、
            <literal>array("persist" => "foobar")</literal> で初期化した
            <classname>Mongo</classname> のインスタンスがふたつあれば、
            それは同じデータベース接続をあらわします。一方、
            <literal>array("persist" => "barbaz")</literal>
            で初期化したインスタンスは別のデータベース接続を使います。
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
        <para>
         <literal>"replicaSet"</literal> オプションは、boolean ではなく文字列を受け取るようになりました
         (しかし、今でも boolean で指定することはできます)。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry><literal>"replicaSet"</literal> オプションが追加されました。</entry>
      </row>
      <row>
       <entry>1.0.2</entry>
       <entry>
        <para>
         コンストラクタがオプションの配列を受け取るようになりました。
         以前のバージョンでは、コンストラクタは以下のパラメータを受け取っていました。
        </para>
        <variablelist>
         <varlistentry>
          <term>
           <parameter>server</parameter>
          </term>
          <listitem>
           <para>
            サーバー名。
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>
           <parameter>connect</parameter>
          </term>
          <listitem>
           <para>
            オプションの boolean パラメータで、
            コンストラクタがデータベースに接続するかどうかを示します。
            デフォルトは &true; です。
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>
           <parameter>persistent</parameter>
          </term>
          <listitem>
           <para>
            持続的な接続を行うかどうか。
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>
           <parameter>paired</parameter>
          </term>
          <listitem>
           <para>
            ペア接続を行うかどうか。
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>Mongo::__construct</function> でのレプリカセットの例</title>
   <para>
    この例は、レプリカセットに接続する方法を示します。
    このでは、次の三つのサーバー sf1.example.com、sf2.example.com および
    ny1.example.com があるものと仮定します。
    マスタは、これらのうちのいずれかひとつとなります。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// カンマ区切りのサーバー名をコンストラクタに渡します
$m1 = new Mongo("mongodb://sf2.example.com,ny1.example.com", array("replicaSet" => "myReplSet"));

// ひとつのシードを渡すだけで、ドライバがそこから完全なリストを取得して
// シードからマスタを探します
$m2 = new Mongo("mongodb://ny1.example.com", array("replicaSet" => "myReplSet"));

?>
]]>
   </programlisting>
   <para>
    現在のマスタで処理に失敗した場合、
    セカンダリサーバーのうちのどれを新しいマスタにするかをドライバが判断し、
    自動的にその接続を開始させます。この自動フェイルオーバー機能は、
    <literal>replicaSet</literal> を指定しなければ正しく動作しません。
   </para>
   <para>
    シードリストの中の少なくともひとつのシードに接続できなければ、
    ドライバからレプリカセットに接続することはできません。
   </para>
   <para>
    二つの別のレプリカセットからのシードを指定した場合の挙動は未定義です。
   </para>
   <para>
    レプリカセットに関する詳細な情報は
    <link xlink:href="&url.mongodb.dochub.rs;">コアドキュメント</link>
    を参照ください。
   </para>
  </example>
  <example>
   <title>ドメインソケットへの接続</title>
   <para>
    バージョン 1.0.9 以降では、ローカルで実行している MongoDB への接続に
    UNIX ドメインソケットを使えるようになりました。これは、
    ネットワーク経由で接続するよりもわずかに高速です。
   </para>
   <para>
    バージョン 1.5.0 では、MongoDB サーバーは自動的に
    /tmp/mongodb-&lt;port&gt;.sock でソケットをオープンします。
    ここに接続するには、接続文字列でこのパスを指定します。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// MongoDB サーバーが、ローカルのポート 20000 で起動しています
$m = new Mongo("mongodb:///tmp/mongodb-20000.sock");

?>
]]>
   </programlisting>
   <para>
    これは、その他の接続とも組み合わせることができます。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// まずドメインソケットに接続し、失敗したときにはローカルホストへの接続を使います
$m = new MongoDB("mongodb:///tmp/mongodb-27017.sock,localhost:27017");

?>
]]>
   </programlisting>
  </example>
  <example>
   <title><function>Mongo::__construct</function> での認証の例</title>
   <para>
    認証を使うには、admin データベースにユーザーが存在しなければなりません。
    Mongo シェルでユーザーを作るには、次のようにします。
   </para>
   <programlisting>
<![CDATA[
> use admin
switched to db admin
> db.addUser("testUser", "testPass");
{
        "_id" : ObjectId("4b21272fd9ab21611d19095c"),
        "user" : "testUser",
        "pwd" : "03b9b27e0abf1865e2f6fcbd9845dd59"
}
>
]]>
   </programlisting>
   <para>
    ユーザーを作ったら、このユーザー名 "testUser" とパスワード
    "testPass" で次のようにして認証させることができます。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$m = new Mongo("mongodb://testUser:testPass@localhost");

?>
]]>
   </programlisting>
  </example>
  <example>
   <title><function>Mongo::__construct</function> での優先読み込みの例</title>
   <programlisting role="php">
<![CDATA[
<?php

// "east" データセンターにある最も近いサーバーを優先します
$uri  = 'mongodb://rs1.example.com,rs2.example.com/';
$uri .= '?readPreference=nearest';
$uri .= '&readPreferenceTags=dc:east';
$m = new Mongo($uri, array('replicaSet' => 'rs'));
]]>
   </programlisting>
   <para>
    詳細な情報は、このマニュアルの <link linkend="mongo.readpreferences">優先読み込み</link>
    のページを参照ください。
   </para>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
