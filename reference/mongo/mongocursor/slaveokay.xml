<?xml version="1.0" encoding="utf-8"?>

<!-- $Revision$ -->
<!-- EN-Revision: 328550 Maintainer: takagi Status: ready -->
<refentry xml:id="mongocursor.slaveokay" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::slaveOkay</refname>
  <refpurpose>このクエリをセカンダリ上で完了できるかどうかを設定する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::slaveOkay</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>okay</parameter><initializer>true</initializer></methodparam>
  </methodsynopsis>
  <para>
   このメソッドをコールすると、以下の条件を満たす場合にドライバが読み込みをセカンダリに回すようになります。
   <itemizedlist>
    <listitem>
     <simpara>
      レプリカセットを使っている
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>MongoClient</classname> インスタンスを作るときに、オプション
      <literal>"replicaSet" => "setName"</literal> を指定している
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      ドライバからアクセス可能な、正常なセカンダリが存在する
     </simpara>
    </listitem>
   </itemizedlist>
   どのサーバーがこのクエリを処理したのかを調べるには、クエリを実行した後に
   <function>MongoCursor::info</function> をコールします。
   <literal>server</literal> フィールドが、クエリの送信先のサーバーです。
  </para>
  <para>
   セカンダリへの自動ルーティングを使っていない場合でも、この関数を使わなければならないことに注意しましょう。
   レプリカセットのセカンダリに直接接続したとしても、この関数をコールすべきです。
   そうすることで、古いデータであることを承知の上で取得しているのだということを
   データベースに伝えることができます。コールしなければ、クエリを実行すると
   "not master" エラーが発生します。
  </para>
  <para>
   このメソッドは、静的クラス変数
   <varname>MongoCursor::$slaveOkay</varname> を上書きします。
   また、<function>Mongo::setSlaveOkay</function> や
   <function>MongoDB::setSlaveOkay</function>、
   <function>MongoCollection::setSlaveOkay</function> も上書きします。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>okay</parameter>
     </term>
     <listitem>
      <para>
       セカンダリに問い合わせることが可能かどうか。
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1> 

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   このカーソルを返します。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   このカーソルの反復処理が始まっている場合に
   <classname>MongoCursorException</classname> をスローします。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCursor::slaveOkay</function> の例</title>
   <programlisting role="php">
<![CDATA[
<?php

MongoCursor::$slaveOkay = false;

// セカンダリには問い合わせられません
$cursor = $collection->find();

// セカンダリに問い合わせることができます
$cursor = $collection->find()->slaveOkay();

MongoCursor::$slaveOkay = true;

// セカンダリに問い合わせることができます
$cursor = $collection->find();

// セカンダリには問い合わせられません
$cursor = $collection->find()->slaveOkay(false);

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso"><!-- {{{ -->
  &reftitle.seealso;
  <simplelist>
   <member><xref linkend="mongo.readpreferences" /></member>
   <member><methodname>MongoCursor::setReadPreference</methodname></member>
   <member><methodname>MongoCursor::getReadPreference</methodname></member>
  </simplelist>
 </refsect1><!-- }}} -->


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
