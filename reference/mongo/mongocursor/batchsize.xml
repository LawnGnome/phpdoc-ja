<?xml version="1.0" encoding="utf-8"?>

<!-- $Revision$ -->
<!-- EN-Revision: 317663 Maintainer: takagi Status: ready -->
<refentry xml:id="mongocursor.batchsize" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::batchSize</refname>
  <refpurpose>ひとつの結果セットで返す結果の数を設定する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::batchSize</methodname>
   <methodparam><type>int</type><parameter>num</parameter></methodparam>
  </methodsynopsis>
  <para>
   これは、クライアントに返すデータの量に関する MongoDB 側の制限を上書きすることはできません
   (つまり、たとえバッチサイズを 1,000,000,000 にしたとしても、MongoDB が返す結果は
   4-16MB にしかならないということです)。
  </para>
  <para>
   一貫性を確保するために、batchSize と limit の挙動は多少複雑になっていますが、
   「期待通りに」動作します。規則としては、<function>MongoCursor::limit</function>
   や <function>MongoCursor::batchSize</function> で設定したソフトリミットを
   ハードリミットが上書きするということです。
   その後、設定されている値のうち小さいほうが優先されます。
   以下に例を示します。
  </para>
  <programlisting role="php">
<![CDATA[
<?php

// ひとつのバッチで最大 20 件
$cursor->limit(-20)->batchSize(10);

// ひとつのバッチで最大 10 件
$cursor->limit(20)->batchSize(-10);

// 最初のバッチ。最大 10 件
$cursor->limit(10);

// 最初のバッチ。最大 10 件
$cursor->limit(10)->batchSize(20);

// 最初のバッチ。最大 10 件
$cursor->limit(20)->batchSize(10);


$cursor->limit(30)->batchSize(7)
// 28 件目まで処理を進めると、次に getNext() をコールしたときにデータベースと通信し、
// 2 件のドキュメントを含むバッチを要求します

?>
]]>
  </programlisting>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;  
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>num</parameter>
     </term>
     <listitem>
      <para>
       次のバッチで返す結果の数。
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   このカーソルを返します。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   このカーソルの反復処理が始まっている場合に <classname>MongoCursorException</classname> をスローします。
   この挙動は 1.0.12 からは変わり、いつでもこのメソッドがコールできるようになります。
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
