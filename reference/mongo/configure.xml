<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 296365 Maintainer: takagi Status: ready -->

<section xml:id="mongo.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.install;
 <para>
  &pecl.moved;
  &pecl.info;
  <link xlink:href="&url.pecl.package;mongo">&url.pecl.package;mongo</link>.
 </para>

 <itemizedlist>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.nix">*NIX へのインストール</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.manual">手動インストール</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.osx">OS X</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.gentoo">Gentoo</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.fedora">Fedora</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.windows">Windows へのインストール</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.thirdparty">その他のインストール説明</link>
   </para>
  </listitem>
 </itemizedlist>

 <section xml:id="mongo.installation.nix">
  <title>*NIX へのインストール</title>

  <para>
   <programlisting>
<![CDATA[

$ sudo pecl install mongo

]]>
   </programlisting>
   を実行します。
  </para>

  <para>
   php.ini ファイルに次ぎの行を追加します。
   <programlisting>
<![CDATA[

extension=mongo.so

]]>
   </programlisting>
  </para>

  <para>
   pecl の実行中に out of memory となる場合は、php.ini の memory_limit
   が 32M 以上あるかどうかを確認しましょう。
  </para>
 </section>

 <section xml:id="mongo.installation.manual">
  <title>手動インストール</title>

  <para>
   ドライバの開発者や最新のバグフィックス版に興味のあるかたは、
   <link xlink:href="&url.mongodb.github;">Github</link>
   にある最新のソースからドライバをコンパイルすることもできます。
   Github に行き、"download" ボタンをクリックしましょう。そして以下のようにします。

   <programlisting>
<![CDATA[

$ tar zxvf mongodb-mongodb-php-driver-<commit_id>.tar.gz
$ cd mongodb-mongodb-php-driver-<commit_id>
$ phpize
$ ./configure
$ sudo make install

]]>
   </programlisting>
  </para>

  <para>
   php.ini を次のように変更します。
  </para>
  <itemizedlist>
   <listitem>
    <para>
     1. ビルド中に、PHP ドライバをどこにインストールするのかがこのように表示されます。
     <programlisting>
<![CDATA[

      Installing '/usr/lib/php/extensions/no-debug-zts-20060613/mongo.so'

]]>
     </programlisting>

      この場所が PHP の拡張モジュール用ディレクトリと一致するかどうかは、次のようにして確認します。

     <programlisting>
<![CDATA[

      $ php -i | grep extension_dir
        extension_dir => /usr/lib/php/extensions/no-debug-zts-20060613 =>
      /usr/lib/php/extensions/no-debug-zts-20060613  

]]>
     </programlisting>

     もし一致しない場合は、php.ini の extension_dir を変更するか、あるいは mongo.so
     を移動させます。
    </para>
   </listitem>
   <listitem>
    <para>
     2. PHP の起動時に拡張モジュールを読み込むために、次の行を追加します。

     <programlisting>
<![CDATA[

      extension=mongo.so

]]>
     </programlisting>

    </para>
   </listitem>
  </itemizedlist>

  <section xml:id="mongo.installation.osx">
   <title>OS X</title>

   <para>
    autoconf が見つからない場合は、Xcode をインストールしなければなりません
    (これは、OS X のインストール DVD の中にあります)。
   </para>
   
   <para>
    XAMPP を使っている場合は、次のコマンドでドライバをコンパイルすることができます。
    <programlisting>
<![CDATA[

sudo /Applications/XAMPP/xamppfiles/bin/pecl install mongo

]]>
    </programlisting>
   </para>

   <para>
    MAMP を使っている (あるいは XAMPP を使っているけれども上のコマンドがうまく動かない)
    場合は、コンパイル済みのバイナリを
    <link xlink:href="&url.mongodb.github.downloads;">Github</link> から取得します
    (最新版の "osx" の中から、PHP のバージョンにあわせたものをダウンロードします)。
    アーカイブから mongo.so を取り出して MAMP あるいは XAMPP の拡張モジュール用ディレクトリに追加し、
    php.ini に
    <programlisting>
<![CDATA[

      extension=mongo.so

]]>
    </programlisting>
    を追加してからサーバを再起動します。
   </para>
  </section>

  <section xml:id="mongo.installation.gentoo">
   <title>Gentoo</title>
   <para>
    Gentoo では、PECL を使うと libtool のバージョンによるエラーが出る可能性があります。
    ソースからコンパイルするには aclocal と autoconf を実行しなければなりません。
    
    <programlisting>
<![CDATA[

$ phpize && aclocal && autoconf && ./configure && make && make install

]]>
    </programlisting>

    (<link xlink:href="&url.mongodb.tweet.gentoo;">@riklaunim</link> に感謝します)
   </para>
  </section>
  <section xml:id="mongo.installation.fedora">
   <title>Fedora</title>
   <para>
    php.ini を直接変更したくない場合は、mongo.ini というファイルを別途作成します。
    /etc/php.d ディレクトリの中に mongo (あるいはそれ以外のお好みの名前)
    というサブディレクトリを作り、そこに mongo.ini ファイルをおいて
    以下のように書きましょう。
    <programlisting>
<![CDATA[

extension=mongo.so

; その他、mongo のオプションなど (実行時設定のセクションを参照ください)

]]>
    </programlisting>
   </para>
  </section>
 </section>

 <section xml:id="mongo.installation.windows">
  <title>Windows へのインストール</title>

  <para>
   リリースごとのコンパイル済みバイナリが
   <link xlink:href="&url.mongodb.github.downloads;">Github</link> にあります。
   バージョン、スレッドセーフ/非スレッドセーフ、VCのライブラリのさまざまな組み合わせに対応しています。
   アーカイブを Unzip して、php_mongo.dll を PHP 拡張モジュールのディレクトリ
   (デフォルトは "ext") に置きましょう。
  </para>

  <para>
   最新の (リリース前の) コードをコンパイルした Windows バイナリも、
   コミットのたびに作られています。この zip には、php_mongo.dll が入った zip
   と version.txt が含まれています。version.txt は常に手元に置いてください。
   疑問や問題が発生した場合に、それを使えば正確なバージョンを開発者に伝えることができます
   (バージョン番号は非常に長くて意味がなさそうな数値ですが、
   開発者たちにとってはそれが重要な意味を持つのです!)。
  </para>
  <para>
   最新のバグフィックス版を取得するは、
   インストールしている PHP に対応したバイナリをダウンロードします。
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc652;">
      PHP 5.2 VC6 Non-Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc6ts52;">
      PHP 5.2 VC6 Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc6;">
      PHP 5.3 VC6 Non-Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc6ts;">
      PHP 5.3 VC6 Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc8;">
      PHP 5.3 VC8 Non-Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc8ts;">
      PHP 5.3 VC8 Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc9;">
      PHP 5.3 VC9 Non-Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc9ts;">
      PHP 5.3 VC9 Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
  </itemizedlist>

  <para>
   そして、php.ini に次の行を追加します。
   <programlisting>
<![CDATA[

extension=php_mongo.dll

]]>
   </programlisting>
  </para>
 </section>

 <section xml:id="mongo.installation.thirdparty">
  <title>その他のインストール説明</title>
  
  <para>
   PHP 用ドライバのインストールに関するすばらしいチュートリアルが、
   多くのかたによって公開されています。
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.video;">
      PHP 5.3.1 with Xdebug, MongoDB and Lithium on Ubuntu 9.10 / Apache 2.2
     </link>
    </para>
    <para>
     Jon Adams によるすばらしい動画です。
     Apache, PHP, Xdebug, MongoDB, そして Lithium のインストール手順をひとつひとつ説明しています。
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.ubuntu.9.04;">
      Installing MongoDB and the PHP driver on Ubuntu 9.04
     </link>
    </para>
    <para>
     Javier Aranda によるスペイン語の記事です (<link xlink:href="&url.mongodb.ubuntu.9.04.en;">
      英語訳</link>)。
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.osx;">
      OS X: Installing MongoDB and the PHP Mongo Driver
     </link>
    </para>
    <para>
     Matt Butcher によるものです。
    </para>
   </listitem>
  </itemizedlist>
 </section>

</section>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
