<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338152 Maintainer: takagi Status: ready -->

<refentry xml:id="mongoclient.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Mongo::__construct</refname>
  <refpurpose>新しいデータベース接続オブジェクトを作成する</refpurpose>
 </refnamediv>

 <refsynopsisdiv role="soft-deprecation-notice">
  <sidebar>
   &mongo.alternative.method.note;
    <simplelist role="alternatives">
     <member><methodname>MongoDB\Driver\Manager::__construct</methodname></member>
    </simplelist>
  </sidebar>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>MongoClient::__construct</methodname>
   <methodparam choice="opt"><type>string</type><parameter>server</parameter><initializer>"mongodb://localhost:27017"</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array("connect" => &true;)</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>driver_options</parameter></methodparam>
  </constructorsynopsis>
  <para>
   パラメータを省略した場合は、"localhost:27017" (あるいは php.ini の
   <link linkend="ini.mongo.default-host">mongo.default_host</link> と
   <link linkend="ini.mongo.default-port">mongo.default_port</link> で設定した場所)
   に接続します。
  </para>
  <para>
   <parameter>server</parameter> は次のような形式にしなければなりません。
   <programlisting role="txt">
<![CDATA[
mongodb://[username:password@]host1[:port1][,host2[:port2:],...]/db
]]>
   </programlisting>
  </para>
  <para>
   接続文字列は常に <literal>mongodb://</literal> で始まります。
   この部分が、接続文字列であることを表しています。
  </para>
  <para>
   <literal>username</literal> と <literal>password</literal>
   を指定すれば、コンストラクタが接続を確立する際にデータベースへの認証を試みます。
   ユーザー名とパスワードはオプションで、もし指定するならその後に
   <literal>@</literal> を続けなければなりません。
  </para>
  <para>
   少なくともひとつのホストを指定しなければなりません
   (ポートはオプションで、デフォルトは常に 27017 となります)。
   そのあとに、接続させたいホストをいくつでも続けることができます。
   ホスト名はカンマ区切りで並べ、少なくともひとつのホストへの接続が成功すれば
   コンストラクタは正常な結果を返します。
   どのホストにも接続できなかった場合は
   <classname>MongoConnectionException</classname> をスローします。
   レプリカセットへの接続に関する情報は、
   <link linkend="mongo.connecting.rs">レプリカセット</link>
   を参照ください。
  </para>
  <para>
   ユーザー名とパスワードを指定したときには、認証先のデータベースも指定することになるでしょう。
   <literal>db</literal> を省略した場合は "admin" を使います。
  </para>
  <para>
   オプションのクエリ文字列を使って、追加オプションを指定できます。
   同じオプションを <parameter>options</parameter> 配列でもサポートしているので、
   そちらでももう一度説明します。
   オプションの使いかたについては <link
   linkend="mongo.mongoclient.construct.examples">下のサンプル</link>
   を参照ください。
  </para>
  <para>
   オプションの設定によっては、レプリカセット環境でセカンダリノードから読み込むときの方法に影響するものもあります。
   読み込みの優先順位に関する動きについての詳しい説明は
   <link linkend="mongo.readpreferences">優先読み込み</link> のページを参照ください。
  </para>
 </refsect1>

 <refsect1 role="parameters" xml:id="mongo.mongoclient.construct.parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>server</parameter>
     </term>
     <listitem>
      <para>
       サーバー名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       接続オプションの配列。現在使用できるオプションは次のとおりです。
       <itemizedlist>
        <listitem>
         <para>
          <literal>"authMechanism"</literal>
         </para>
         <para>
          以下の機構が選べます。
          <informaltable>
           <tgroup cols="3">
            <thead>
             <row>
              <entry>認証機構</entry>
              <entry>説明</entry>
              <entry>利用可能</entry>
             </row>
            </thead>
            <tbody>
             <row>
              <entry>MONGODB-CR</entry>
              <entry>チャレンジレスポンス方式を使った認証。デフォルトです。</entry>
              <entry>すべてのバージョンの MongoDB</entry>
             </row>
             <row>
              <entry>X509</entry>
              <entry>X509 証明書による認証。</entry>
              <entry>MongoDB 2.6。<xref linkend="book.openssl" /> が有効な場合のみ。</entry>
             </row>
             <row>
              <entry>PLAIN</entry>
              <entry>暗号化されていないユーザー名とパスワードによる認証。SSL 接続上でのみ使うこと。サードパーティの LDAP サーバー経由での MongoDB へのログインの際に利用する。</entry>
              <entry>MongoDB Enterprise 2.4。CyrusSASL2 を使うようにドライバをコンパイルしておく必要がある。</entry>
             </row>
             <row>
              <entry>GSSAPI</entry>
              <entry>ケルベロス認証</entry>
              <entry>MongoDB Enterprise 2.4。CyrusSASL2 を使うようにドライバをコンパイルしておく必要がある。</entry>
             </row>
            </tbody>
           </tgroup>
          </informaltable>
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"authSource"</literal>
         </para>
         <para>
          ユーザーが定義されているデータベース名を設定します。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"connect"</literal>
         </para>
         <para>
          コンストラクタで接続を行うか。デフォルトは
          &true;。&false; にすると、ドライバが
          <emphasis>自動的に</emphasis> サーバーと接続するようになります。
          クエリの実行に接続が必要かどうかは関係ありません。
          それ以外に、手動で
          <function>Mongo::connect</function> を実行する方法もあります。
         </para>
         <warning>
          <para>
           このオプションは、接続文字列で使うことはできません。
          </para>
         </warning>
        </listitem>
        <listitem>
         <para>
          <literal>"connectTimeoutMS"</literal>
         </para>
         <para>
          接続を開こうとしてタイムアウトになるまでの時間の長さ（ミリ秒単位）。
          デフォルトは <literal>60000</literal> (60 秒) です。
         </para>
         <para>
          <literal>-1</literal> を指定すると、接続タイムアウトを適用せず、PHP は
          <link linkend="ini.default-socket-timeout">default_socket_timeout</link>
          を利用します。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"db"</literal>
         </para>
         <para>
          ホスト名に含めるかわりに、認証対象のデータベースをここで指定することができます。
          ホスト名で設定したデータベースを上書きします。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"fsync"</literal>
         </para>
         <para>
          <literal>"fsync"</literal> を設定すると、データベース上のすべての書き込み操作は、
          その書き込みがディスクに同期されるまでは成功とみなさないようになります。
          書き込み処理の速度は大幅に低下しますが、書き込みがきちんと成功してディスクに書き出されたことを保証できます。
         </para>
         <para>
          MongoDB のジャーナリングを有効にしている (デフォルト) 場合、このオプションは
          <emphasis>"journal"</emphasis> と同じ意味になります。
          ジャーナリングが無効になっている場合は、このオプションは、
          書き込み操作がディスク上のデータベースファイルに同期されることを保証します。
         </para>
         <note>
          <simpara>
           ジャーナリングを有効にしている場合は、<literal>"fsync"</literal> ではなく
           <literal>"journal"</literal> を使うことを強く推奨します。
           <literal>"fsync"</literal> と
           <literal>"journal"</literal> を同時に使わないようにしましょう。
           同時に使うとエラーが発生します。
          </simpara>
         </note>
        </listitem>
        <listitem>
         <para>
          <literal>"journal"</literal>
         </para>
         <para>
          <literal>"journal"</literal> を設定すると、データベース上のすべての書き込み操作が、
          データベースがジャーナルへの変更をディスクにフラッシュするまでブロックされます。
          書き込み処理の速度は多少低下しますが、書き込みがきちんと成功して、
          万一システムに障害が発生したとしても復旧可能なことを保証できます。
         </para>
         <note>
          <simpara>
           ジャーナリングが無効になっている場合にこのオプションを使うと、
           MongoDB 2.6+ ではエラーが発生して書き込みが失敗します。
           それより前のバージョンでは、単純にこのオプションを無視します。
          </simpara>
         </note>
        </listitem>
        <listitem>
         <para>
          <literal>"gssapiServiceName"</literal>
         </para>
         <para>
          <link xlink:href="&url.mongodb.docs.kerberos.service-principal;">Kerberos サービスプリンシパル</link>
          を設定します。authMechanism=GSSAPI の場合にのみ用いられるもので、デフォルトは "mongodb" です。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"password"</literal>
         </para>
         <para>
          ホスト名に含めるかわりに、パスワードをここで指定することができます。
          パスワードに "@" を含む場合などに特に便利です。
          ホスト名で設定したパスワードを上書きします。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"readPreference"</literal>
         </para>
         <para>
          優先読み込みの型を指定します。優先読み込みを使うと、
          どのセカンダリからデータを読み込めるのかを制御できるようになります。
         </para>
         <para>
          指定できる値は <literal>primary</literal>、
          <literal>primaryPreferred</literal>、
          <literal>secondary</literal>、<literal>secondaryPreferred</literal>
          および <literal>nearest</literal> です。
         </para>
         <para>
          詳細な情報は、<link linkend="mongo.readpreferences">優先読み込み</link>のドキュメントを参照ください。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"readPreferenceTags"</literal>
         </para>
         <para>
          優先読み込みのタグを指定します。タグを
          <literal>readPreference</literal> と組み合わせて使うと、
          どのセカンダリからデータを読み込めるのかをより細かく制御できるようになります。
         </para>
         <para>
          詳細な情報は、<link linkend="mongo.readpreferences">優先読み込み</link>のドキュメントを参照ください。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"replicaSet"</literal>
         </para>
         <para>
          接続先のレプリカセットの名前。指定した場合は、プライマリが自動的に決まります。
          つまり、ドライバは、リストに上がっていないサーバーに接続することになるかもしれません。
          詳細は、以下のレプリカセットの例を参照ください。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"secondaryAcceptableLatencyMS"</literal>
         </para>
         <para>
          セカンダリから (優先読み込みを使って) 読み込むときに、
          <literal>secondaryAcceptableLatencyMS</literal> 以上はなれているセカンダリからは読み込みません。
          デフォルトは <literal>15</literal> です。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"socketTimeoutMS"</literal>
         </para>
         <para>
          ソケットの操作 (読み書き) がタイムアウトになるまでの時間の長さ。
          ミリ秒単位で、デフォルトは <literal>30000</literal> (30 秒) です。
         </para>
         <para>
          <literal>-1</literal> を設定すると、ソケットの操作を永遠にブロックします。
          このオプションは、操作単位以外でも設定できます。
          クエリごとに設定するには <methodname>MongoCursor::timeout</methodname>、
          書き込みメソッドごとに設定するには <literal>"socketTimeoutMS"</literal> オプションを使います。
         </para>
         <note>
          <simpara>
           これはクライアント側のタイムアウトです。書き込み操作がタイムアウトに達してしまうと、
           サーバーが実際に書き込みを受信したかどうかを知るすべがなくなります。そして、
           書き込みの結果を返す代わりに
           <classname>MongoCursorTimeoutException</classname> をスローします。
          </simpara>
         </note>
        </listitem>
        <listitem>
         <para>
          <literal>"ssl"</literal>
         </para>
         <para>
          boolean です。MongoDB への接続で SSL を有効にするかどうかを指定します。
          証明書のような追加オプションは <xref linkend="context.ssl" /> で設定します。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"username"</literal>
         </para>
         <para>
          ホスト名に含めるかわりに、ユーザー名をここで指定することができます。
          ユーザー名に ":" を含む場合などに特に便利です。
          ホスト名で設定したユーザー名を上書きします。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"w"</literal>
         </para>
         <para>
          <literal>w</literal> オプションは、ドライバの
          <link linkend="mongo.writeconcerns">Write Concern</link>、
          つまりドライバがレプリカセットへの書き込みをどれくらいブロックするかを制御します。
         </para>
         <para>
          正の整数は、レプリカセット内の<emphasis>いくつの</emphasis>
          ノードが書き込み指示を受け取ったらドライバが処理を続行するのかを指定します。
          値を <literal>3</literal> にすると、
          書き込みがレプリカセット内であと 2 台に適用されてからプライマリにも適用します。
         </para>
         <para>
          文字列を指定すると、どのタグセットを書き込み時に考慮するのかを指定したことになります。
          <literal>"majority"</literal> は特別な値で、
          参加しているノードの過半数に書き込み操作が適用された時点でプライマリにも適用します。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"wTimeoutMS"</literal>
         </para>
         <para>
          このオプションは、
          <link linkend="mongo.writeconcerns">書き込み確認</link>
          を待つ制限時間をミリ秒単位で指定します。
          これが書き込み操作に適用されるのは、
          <literal>"w"</literal> が <literal>1</literal> より大きい場合のみです。
          というのも、タイムアウトはレプリケーションに関する機能だからです。
          この時間内に書き込み確認ができなかった場合は
          <classname>MongoCursorException</classname> をスローします。
          <literal>0</literal> を指定すると、永遠にブロックし続けます。
          デフォルト値は <literal>10000</literal>
          (10 秒) です。
         </para>
        </listitem>
       </itemizedlist>
      </para>
      <para>
       以下のオプションは廃止予定です。使ってはいけません。
       <itemizedlist>
        <listitem>
         <para>
          <literal>"slaveOkay"</literal>
         </para>
         <para>
          非推奨です。<link linkend="mongo.readpreferences">優先読み込み</link> のオプションを使いましょう。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"timeout"</literal>
         </para>
         <para>
          <literal>"connectTimeoutMS"</literal> へのエイリアス。非推奨です。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"wTimeout"</literal>
         </para>
         <para>
          <literal>"wTimeoutMS"</literal> へのエイリアス。非推奨です。
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <parameter>driver_options</parameter>
     </term>
     <listitem>
      <para>
       MongoDB ドライバーへのオプションの配列。<link linkend="mongo.connecting.context.ssl">SSL 用の接続コンテキストのオプション</link>や、
       <link linkend="context.mongodb">ログ出力用のコールバック</link>も含みます。
       <itemizedlist>
        <listitem>
         <para>
          <literal>"context"</literal>
         </para>
         <para>
          新しい接続をアタッチするストリームコンテキスト。このオプションで、SSL 証明書の設定などができます。
          詳細は <link linkend="context.ssl">SSL コンテキストオプション</link> を参照ください。
          詳しい使いかたは <link linkend="mongo.connecting.context.ssl">SSL 接続</link>のチュートリアルを参照ください。
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   新しいデータベース接続オブジェクトを返します。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   指定したすべてのホスト名へのデータベースへの接続に失敗した場合に
   <classname>MongoConnectionException</classname> をスローします。
   指定したユーザー名やパスワードが間違っている場合にも
   <classname>MongoConnnectionException</classname> をスローします。
   一般的な例外とその原因については
   <classname>MongoConnectionException</classname>
   のドキュメントを参照ください。
  </para>
 </refsect1>

 <refsect1 role="examples" xml:id="mongo.mongoclient.construct.examples">
  &reftitle.examples;
  <example>
   <title><function>MongoClient::__construct</function> でのレプリカセットの例</title>
   <para>
    この例は、レプリカセットに接続する方法を示します。
    このでは、次の三つのサーバー sf1.example.com、sf2.example.com および
    ny1.example.com があるものと仮定します。
    プライマリは、これらのうちのいずれかひとつとなります。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// カンマ区切りのサーバー名をコンストラクタに渡します
// レプリカセットの全メンバーを渡す必要はないことに注意しましょう。
// ドライバが完全なリストを取得します
$m1 = new MongoClient("mongodb://sf2.example.com,ny1.example.com", array("replicaSet" => "myReplSet"));

?>
]]>
   </programlisting>
   <para>
    現在のプライマリで処理に失敗した場合、
    セカンダリサーバーのうちのどれを新しいプライマリにするかをドライバが判断し、
    自動的にその接続を開始させます。この自動フェイルオーバー機能は、
    <literal>replicaSet</literal> を指定しなければ正しく動作しません。
   </para>
   <para>
    シードリストの中の少なくともひとつのシードに接続できなければ、
    ドライバからレプリカセットに接続することはできません。
   </para>
   <para>
    二つの別のレプリカセットからのシードを指定した場合の挙動は未定義です。
   </para>
   <para>
    レプリカセットに関する詳細な情報は
    <link xlink:href="&url.mongodb.dochub.rs;">コアドキュメント</link>
    を参照ください。
   </para>
  </example>
  <example>
   <title>ドメインソケットへの接続</title>
   <para>
    バージョン 1.0.9 以降では、ローカルで実行している MongoDB への接続に
    UNIX ドメインソケットを使えるようになりました。これは、
    ネットワーク経由で接続するよりもわずかに高速です。
   </para>
   <para>
    バージョン 1.5.0 では、MongoDB サーバーは自動的に
    /tmp/mongodb-&lt;port&gt;.sock でソケットをオープンします。
    ここに接続するには、接続文字列でこのパスを指定します。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// MongoDB サーバーが、ローカルのポート 20000 で起動しています
$m = new MongoClient("mongodb:///tmp/mongodb-20000.sock");

?>
]]>
   </programlisting>
   <para>
    これは、その他の接続とも組み合わせることができます。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// まずドメインソケットに接続し、失敗したときにはローカルホストへの接続を使います
$m = new MongoClient("mongodb:///tmp/mongodb-27017.sock,localhost:27017");

?>
]]>
   </programlisting>
  </example>
  <example>
   <title><function>MongoClient::__construct</function> での認証の例</title>
   <para>
    認証を使うには、admin データベースにユーザーが存在しなければなりません。
    Mongo シェルでユーザーを作るには、次のようにします。
   </para>
   <programlisting role="shell">
<![CDATA[
> use admin
switched to db admin
> db.addUser("testUser", "testPass");
{
        "_id" : ObjectId("4b21272fd9ab21611d19095c"),
        "user" : "testUser",
        "pwd" : "03b9b27e0abf1865e2f6fcbd9845dd59"
}
>
]]>
   </programlisting>
   <para>
    ユーザーを作ったら、このユーザー名 "testUser" とパスワード
    "testPass" で次のようにして認証させることができます。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$m = new MongoClient("mongodb://testUser:testPass@localhost");

?>
]]>
   </programlisting>
  </example>
  <example>
   <title><function>MongoClient::__construct</function> での優先読み込みの例</title>
   <programlisting role="php">
<![CDATA[
<?php

// "east" データセンターにある最も近いサーバーを優先します
$uri  = 'mongodb://rs1.example.com,rs2.example.com/';
$uri .= '?readPreference=nearest';
$uri .= '&readPreferenceTags=dc:east';
$m = new MongoClient($uri, array('replicaSet' => 'rs'));
?>
]]>
   </programlisting>
   <para>
    詳細な情報は、このマニュアルの <link linkend="mongo.readpreferences">優先読み込み</link>
    のページを参照ください。
   </para>
  </example>

  <example>
   <title><function>MongoClient::__construct</function> でのオプションの例</title>
   <para>
    オプションは、接続文字列のクエリ文字列で渡すだけでなく、
    コンストラクタの二番目の引数で渡すこともできます。
   </para>
   <para>
    この例では、journal オプションを true、そして readPreference を secondary
    にする設定を、すべての書き込み操作のデフォルトとします。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$m = new MongoClient("mongodb://localhost/?journal=true&readPreference=secondary");
?>
]]>
   </programlisting>
   <para>
    同じ設定を、このようにすることもできます。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$options = array(
    'journal' => true,
    'readPreference' => 'secondary',
);
$m = new MongoClient("mongodb://localhost/", $options);
?>
]]>
   </programlisting>
  </example>

  <example>
   <title><function>MongoClient::__construct</function> での優先読み込みの例</title>
   <programlisting role="php">
<![CDATA[
<?php

// "east" データセンターにある最も近いサーバーを優先します
$uri  = 'mongodb://rs1.example.com,rs2.example.com/';
$uri .= '?readPreference=nearest';
$uri .= '&readPreferenceTags=dc:east';
$m = new MongoClient($uri, array('replicaSet' => 'rs'));
?>
]]>
   </programlisting>
   <para>
    詳細な情報は、このマニュアルの <link linkend="mongo.readpreferences">優先読み込み</link>
    のページを参照ください。
   </para>
  </example>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.5.0</entry>
       <entry>
        <para>
         <literal>"authMechanism"</literal>、<literal>"gssapiServiceName"</literal> および <literal>"secondaryAcceptableLatencyMS"</literal>
         が追加されました。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.4.0</entry>
       <entry>
        <para>
         <literal>"ssl"</literal> オプションが追加されました。これは
         <link linkend="mongo.connecting.ssl">SSL 接続</link> をサポートするものです。
        </para>
        <para>
         <literal>"wTimeoutMS"</literal> オプションが追加されました。これは
         <literal>"wTimeout"</literal> の代替です。
        </para>
        <para>
         <literal>"slaveOkay"</literal> や <literal>"timeout"</literal> を使うと
         <constant>E_DEPRECATED</constant> が発生します。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.5.0</entry>
       <entry>
        <para>
         <literal>"authSource"</literal> が追加されました。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.3.4</entry>
       <entry>
        <para>
         <literal>"connectTimeoutMS"</literal> および
         <literal>"socketTimeoutMS"</literal> オプションが追加されました。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.3.0</entry>
       <entry>
        <para>
         <literal>"readPreference"</literal>、
         <literal>"readPreferenceTags"</literal>、<literal>"w"</literal> および
         <literal>"wTimeout"</literal> オプションが追加されました。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>
        <para>
         <literal>"username"</literal> および <literal>"password"</literal>
         オプションが追加されました。
        </para>
        <para>
         <literal>"persist"</literal> オプションが削除されました。すべての接続は持続的な接続となります。
         今でも使うことはできますが、何の影響も及ぼしません。
        </para>
        <variablelist>
         <varlistentry>
          <term>
           <parameter>"persist"</parameter>
          </term>
          <listitem>
           <para>
            持続的な接続を行うかどうか。これを設定すると、接続が持続的なものとなります。
            文字列の値を接続 ID として使うので、
            <literal>array("persist" => "foobar")</literal> で初期化した
            <classname>Mongo</classname> のインスタンスがふたつあれば、
            それは同じデータベース接続をあらわします。一方、
            <literal>array("persist" => "barbaz")</literal>
            で初期化したインスタンスは別のデータベース接続を使います。
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
        <para>
         <literal>"replicaSet"</literal> オプションは、boolean ではなく文字列を受け取るようになりました。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry><literal>"replicaSet"</literal> オプションが追加されました。</entry>
      </row>
      <row>
       <entry>1.0.2</entry>
       <entry>
        <para>
         コンストラクタがオプションの配列を受け取るようになりました。
         以前のバージョンでは、コンストラクタは以下のパラメータを受け取っていました。
        </para>
        <variablelist>
         <varlistentry>
          <term>
           <parameter>server</parameter>
          </term>
          <listitem>
           <para>
            サーバー名。
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>
           <parameter>connect</parameter>
          </term>
          <listitem>
           <para>
            オプションの boolean パラメータで、
            コンストラクタがデータベースに接続するかどうかを示します。
            デフォルトは &true; です。
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>
           <parameter>persistent</parameter>
          </term>
          <listitem>
           <para>
            持続的な接続を行うかどうか。
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>
           <parameter>paired</parameter>
          </term>
          <listitem>
           <para>
            ペア接続を行うかどうか。
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
