<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 335764 Maintainer: takagi Status: ready -->

<refentry xml:id="mongocollection.ensureindex" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::ensureIndex</refname>
  <refpurpose>
   指定したフィールドが存在しない場合にインデックスを作成する
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>MongoCollection::ensureIndex</methodname>
   <methodparam><type>string|array</type><parameter>key|keys</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <warning>
   <para>
    このメソッドは、バージョン 1.5.0 以降は非推奨となりました。かわりに
    <methodname>MongoCollection::createIndex</methodname> を使いましょう。
   </para>
  </warning>
  <para>
   コレクション上の指定されたフィールドが存在しない場合に、インデックスを作成します。
   フィールドのインデックスは、方向 (昇順あるいは降順) で指定するか、
   あるいは特定の型 (text, geospatial, hashed) で指定できます。
  </para>
  <note>
   <para>
    このメソッドは、MongoDB 2.6 以降との通信の際には、データベースコマンド
    <link xlink:href="&url.mongodb.dochub.createindexes;">createIndexes</link>
    を使います。それ以前のバージョンのデータベースでは、特別なコレクション
    <literal>system.indexes</literal> 上での insert 操作を実行します。
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>keys</parameter>
     </term>
     <listitem>
      <para>
       インデックスをソートするフィールドの配列。配列の各要素のキーがフィールド名、
       値には、方向あるいは <link xlink:href="&url.mongodb.dochub.indexes.types;">index type</link>.
       を指定します。方向を指定する場合は、昇順なら <literal>1</literal>、降順なら
       <literal>-1</literal> と指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       インデックス作成操作についてのオプションの配列。
       現在利用可能なオプションは、以下のとおりです。
       <itemizedlist>
        &mongo.index.parameters.unique;
        &mongo.index.parameters.sparse;
        &mongo.index.parameters.expireafterseconds;
        &mongo.index.parameters.name;
        &mongo.index.parameters.background;
        &mongo.writes.parameters.sockettimeoutms;
       </itemizedlist>
      </para>
      <para>
       以下のオプションは、MongoDB 2.6 以降で使えます。
       <itemizedlist>
        &mongo.command.parameters.maxtimems;
       </itemizedlist>
      </para>
      <para>
       以下のオプションは、MongoDB 2.8 より前のバージョンで使えます。
       <itemizedlist>
        &mongo.index.parameters.dropdups;
       </itemizedlist>
      </para>
      <para>
       以下のオプションは、MongoDB 2.6 より前のバージョンで使えます。
       <itemizedlist>
        &mongo.writes.parameters.writeconcern;
        &mongo.writes.parameters.writeconcerntimeoutms;
       </itemizedlist>
      </para>
      <para>
       以下のオプションは廃止予定です。使ってはいけません。
       <itemizedlist>
        &mongo.writes.parameters.safe;
        &mongo.writes.parameters.timeout;
        &mongo.writes.parameters.writeconcerntimeout;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   インデックスの作成状況を含む配列を返します。
   作成に成功したかどうか (<literal>"ok"</literal>)、
   作成前と作成後のインデックス数
   (<literal>"numIndexesBefore"</literal> および
   <literal>"numIndexesAfter"</literal>)、
   そのインデックスが属するコレクションを作成したかどうか
   (<literal>"createdCollectionAutomatically"</literal>)
   が含まれます。
   インデックスが既に存在していて作成の必要がない場合は、
   <literal>"numIndexesAfter"</literal> に代わって
   <literal>"note"</literal> フィールドが含まれます。
  </para>
  <para>
   MongoDB 2.4 以前のバージョンでは、
   <link linkend="mongo.writeconcerns">書き込み確認</link> が少なくとも
   <literal>1</literal> 以上である場合は、ステータスを表すドキュメントを返します。
   それ以外の場合は &true; を返します。
   ステータスを表すドキュメントのフィールドは場合によって異なりますが、
   <literal>"ok"</literal> フィールドは常に存在し、インデックスの作成に成功したかどうかを示します。
   その他のフィールドについては
   <function>MongoCollection::insert</function> のドキュメントを参照ください。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.5.0</entry>
       <entry>
        <para>
         <literal>"wTimeoutMS"</literal> オプションが追加されました。これは
         <literal>"wtimeout"</literal> を置き換えるものです。
         <literal>"wtimeout"</literal> を使うと
         <constant>E_DEPRECATED</constant> が発生します。
        </para>
        <para>
         <literal>"socketTimeoutMS"</literal> オプションが追加されました。これは
         <literal>"timeout"</literal> を置き換えるものです。
         <literal>"timeout"</literal> を使うと
         <constant>E_DEPRECATED</constant> が発生します。
        </para>
        <para>
         <literal>"safe"</literal> を使うと
         <constant>E_DEPRECATED</constant> が発生します。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.3.4</entry>
       <entry><literal>"wtimeout"</literal> オプションが追加されました。</entry>
      </row>
      <row>
       <entry>1.3.0</entry>
       <entry>
        <para><literal>"w"</literal> オプションが追加されました。</para>
        <para>
         <parameter>options</parameter> パラメータで、boolean
         だけを渡してユニークインデックスを指定することができなくなりました。
         同じことをするには <literal>array('unique' => true)</literal>
         としなければなりません。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.2.11</entry>
       <entry>
        <parameter>options</parameter> が <type>scalar</type> のときに <constant>E_DEPRECATED</constant> を発行するようになりました。
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry><literal>"timeout"</literal> オプションが追加されました。</entry>
      </row>
      <row>
       <entry>1.0.11</entry>
       <entry>
        <para>
         <literal>"safe"</literal> は必要に応じてプライマリのフェイルオーバーを行うようになりました。
        </para>
        <para>
         インデックス名 (自動生成されたものあるいは設定したもののどちらでも)
         の長さが 128 バイトを超えた場合に
         <classname>MongoException</classname> をスローするようになりました。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.0.5</entry>
       <entry>
        <literal>"name"</literal> オプションで、インデックス名の作成を上書きできるようになりました。
       </entry>
      </row>
      <row>
       <entry>1.0.2</entry>
       <entry>
        <parameter>options</parameter> パラメータが boolean から配列に変わりました。
        1.0.2 より前のバージョンでは二番目のパラメータはオプションの boolean
        値で、一意なインデックスを指定するものでした。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   インデックス名が 128 バイトより長い場合、あるいはインデックスを配列以外で指定した場合に
   <classname>MongoException</classname> をスローします。
  </para>
  <para>
   ドキュメントの衝突のせいでサーバーが一意なインデックスを作成できない場合に
   <classname>MongoDuplicateKeyException</classname> をスローします。
  </para>
  <para>
   エラーが発生してサーバーがインデックスを作成できない場合に
   <classname>MongoResultException</classname> をスローします。
  </para>
  &mongo.errors.exceptions.writeconcern;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCollection::ensureIndex</function> の例</title>
   <programlisting role="php">
<![CDATA[
<?php

$c = new MongoCollection($db, 'foo');

// 'x' の昇順にインデックスを作成します
$c->ensureIndex(array('x' => 1));

// 'y' に一意なインデックスを作成します
$c->ensureIndex(array('y' => 1), array('unique' => true));

// 'za' の昇順、'zb' の降順に複合インデックスを作成します
$c->ensureIndex(array('za' => 1, 'zb' => -1));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>地理空間のインデックス</title>
   <para>
    Mongo は地理空間のインデックスをサポートしています。
    これを使うと、指定した場所のそば、あるいは図形の範囲内にあるドキュメントを探すことができます。
    たとえば、<literal>"loc"</literal> フィールドに地理空間のインデックスを作るには次のようにします。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$collection->ensureIndex(array('loc' => '2dsphere'));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>重複を削除する例</title>
   <programlisting role="php">
<![CDATA[
<?php

$collection->insert(array('username' => 'joeschmoe'));
$collection->insert(array('username' => 'joeschmoe'));

/*
 * インデックスの作成に失敗します。重複する値があるキーに
 * 一意なインデックスを作ることはできません。
 */
$collection->ensureIndex(array('username' => 1), array('unique' => 1));

/*
 * インデックスの作成に成功します。ドキュメントのひとつがコレクションから削除されます。
 */
$collection->ensureIndex(array('username' => 1), array('unique' => 1, 'dropDups' => 1));

/*
 * 一意なインデックスができたあとは、同じユーザー名を
 * このように追加しようとしても失敗します。
 */
$collection->insert(array('username' => 'joeschmoe'));

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoCollection::createIndex</methodname></member>
   <member><methodname>MongoCollection::deleteIndex</methodname></member>
   <member><methodname>MongoCollection::deleteIndexes</methodname></member>
   <member>
    MongoDB コアドキュメントの
    <link xlink:href="&url.mongodb.dochub.indexes;">index</link> および
    <link xlink:href="&url.mongodb.dochub.indexes.types;">index type</link>
   </member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
