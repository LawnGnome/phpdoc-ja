<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333037 Maintainer: takagi Status: ready -->

<refentry xml:id="mongocollection.ensureindex" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::ensureIndex</refname>
  <refpurpose>
   指定したフィールドにインデックスを作成する (すでに存在する場合は何もしない)
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>MongoCollection::ensureIndex</methodname>
   <methodparam><type>string|array</type><parameter>key|keys</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <warning>
   <para>
    このメソッドは、バージョン 1.5.0 以降は非推奨となりました。かわりに
    <methodname>MongoCollection::createIndex</methodname> を使いましょう。
   </para>
  </warning>
  <para>
   このメソッドは、コレクション上の指定されたフィールドにインデックスを作成します。
   キーの指定方法は、単一のフィールド名を文字列で指定するか
   あるいはフィールド名とソート方向を対応させた配列でも指定できます。
  </para>
 </refsect1>

 <refsect1 role="parameters"> 
  &reftitle.parameters; 
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>keys</parameter>
     </term>
     <listitem>
      <para>
       インデックスをソートするフィールドの配列。配列の各要素のキーがフィールド名、
       そして昇順の場合は <literal>1</literal>、降順の場合は <literal>-1</literal>
       を値に指定します。
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       このパラメータは
       <literal>array("optionname" => &lt;boolean&gt;, ...)</literal>
       形式の連想配列で、現在サポートしているオプションは次の通りです。
       <itemizedlist>
        &mongo.writes.parameters.writeconcern;
        <listitem>
         <para>
          <literal>"unique"</literal>
         </para>
         <para>
          一意なインデックスを作ります。
         </para>
         <warning>
          <para>
           そのフィールドを持たないドキュメントが複数ある場合は、
           そこに一意なインデックスを作成することはできません。
           フィールドが存在しないときは事実上そのフィールドは
           &null; ということになり、それが複数存在すると既に一意ではなくなっているからです。
           スパースなインデキシングを使えばこれを回避できるかもしれません。
           そのフィールドを持たないドキュメントをインデックスしないようになるからです。
          </para>
         </warning>
        </listitem>
        <listitem>
         <para>
          <literal>"dropDups"</literal>
         </para>
         <para>
          一意なインデックスを作ったときに重複する値が存在すれば、
          ひとつを除いてその他すべてを削除します。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"sparse"</literal>
         </para>
         <para>
          スパースなインデックスを作り、そのフィールドを含むドキュメントだけを含めるようにします。
          このオプションは、単一フィールドインデックスでしか使えません。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"expireAfterSeconds"</literal>
         </para>
         <para>
          このオプションの値には、ドキュメントが期限切れになって自動的にコレクションから削除されるようになるまでの秒数を指定します。
          このオプションは、単一フィールドインデックスかつそのフィールドに
          <classname>MongoDate</classname> の値を含む場合しか使えません。
         </para>
         <para>
          この機能が使えるのは MongoDB 2.2 以降です。詳細は
          <link xlink:href="&url.mongodb.docs.expire_data;">Expire Data from Collections by Setting TTL</link>
          を参照ください。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"background"</literal>
         </para>
         <para>
          デフォルトではインデックスの作成はブロック操作になり、
          処理が完了するまではデータベース上で他の操作を進めることができません。
          このオプションを &true; にすると、
          インデックスの作成をバックグラウンドで行うようになり、
          作成中にも他の操作ができるようになります。
         </para>
         <warning>
          <para>
           MongoDB 2.1.0 より前のバージョンでのインデックス作成は、
           セカンダリへのレプリケートのときには
           このオプションの値にかかわらずバックグラウンド処理になりませんでした。
           詳細は
           <link xlink:href="&url.mongodb.dochub.indexes.rs;">Building Indexes with Replica Sets</link>
           を参照ください。
          </para>
         </warning>
        </listitem>
        <listitem>
         <para>
          <literal>"name"</literal>
         </para>
         <para>
          このオプションを指定すると、ドライバーがインデックス名を作るときのアルゴリズムを上書きし、
          好きな名前を指定できます。
          これは、多くのキーにインデックスをつけるときに「インデックス名が長すぎる」
          と Mongo に言われた場合などに有用です。
         </para>
        </listitem>
        &mongo.writes.parameters.timeout;
        &mongo.writes.parameters.safe;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <literal>"w"</literal> オプションが設定されている場合は、
   インデックスの作成の状態を含む配列を返します。それ以外の場合は
   &true; を返します。
  </para>
  <para>
   配列のフィールドについての説明は
   <function>MongoCollection::insert</function> を参照ください。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.3.0</entry>
       <entry>
        <parameter>options</parameter> パラメータで、boolean
        だけを渡してユニークインデックスを指定することができなくなりました。
        同じことをするには <literal>array('unique' => true)</literal>
        としなければなりません。
       </entry>
      </row>
      <row>
       <entry>1.2.11</entry>
       <entry>
        <parameter>options</parameter> が <type>scalar</type> のときに <constant>E_DEPRECATED</constant> を発行するようになりました。
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry><literal>"timeout"</literal> オプションが追加されました。</entry>
      </row>
      <row>
       <entry>1.0.11</entry>
       <entry>
        <para>
         <literal>"safe"</literal> は必要に応じてプライマリのフェイルオーバーを行うようになりました。
        </para>
        <para>
         インデックス名 (自動生成されたものあるいは設定したもののどちらでも)
         の長さが 128 バイトを超えた場合に
         <classname>MongoException</classname> をスローするようになりました。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.0.5</entry>
       <entry>
        <literal>"name"</literal> オプションで、インデックス名の作成を上書きできるようになりました。
        creation.
       </entry>
      </row>
      <row>
       <entry>1.0.2</entry>
       <entry>
        <parameter>options</parameter> パラメータが boolean から配列に変わりました。
        1.0.2 より前のバージョンでは二番目のパラメータはオプションの boolean
        値で、一意なインデックスを指定するものでした。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   インデックス名 (自動生成されたものあるいは設定したもののどちらでも)
   の長さが 128 バイトを超えた場合に
   <classname>MongoException</classname> をスローします
   (バージョン 1.0.11 以降)。
  </para>
  &mongo.errors.exceptions.writeconcern;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCollection::ensureIndex</function> の例</title>
   <programlisting role="php">
<![CDATA[
<?php

$c = new MongoCollection($db, 'foo');

// 'x' の昇順にインデックスを作成します
$c->ensureIndex('x');

// 'y' の昇順にインデックスを作成します
$c->ensureIndex(array('y' => 1));

// 'z' の昇順、'zz' の降順にインデックスを作成します
$c->ensureIndex(array('z' => 1, 'zz' => -1));

// 'x' に一意なインデックスを作成します
$c->ensureIndex(array('x' => 1), array("unique" => true));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>重複を削除する例</title>
   <programlisting role="php">
<![CDATA[
<?php

$collection->insert(array("username" => "joeschmoe"));
$collection->insert(array("username" => "joeschmoe"));

/*
 * インデックスの作成に失敗します。重複する値があるキーに
 * 一意なインデックスを作ることはできません。
 */
$collection->ensureIndex(array("username" => 1), array("unique" => 1));

/*
 * インデックスの作成に成功します。ドキュメントのひとつがコレクションから削除されます。
 */
$collection->ensureIndex(array("username" => 1), array("unique" => 1, "dropDups" => 1));

/* 
 * 一意なインデックスができたあとは、同じユーザー名を
 * このように追加しようとしても失敗します。
 */
$collection->insert(array("username" => "joeschmoe"));

?>
]]>
   </programlisting>
  </example>

  <example>
   <title>地理空間のインデックス</title>
   <para>
    Mongo は地理空間のインデックスをサポートしています。
    これを使うと、指定した場所のそば、あるいは図形の範囲内にあるドキュメントを探すことができます。
    たとえば、"loc" フィールドに地理空間のインデックスを作るには次のようにします。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$collection->ensureIndex(array("loc" => "2d"));

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoCollection::createIndex</methodname></member>
  </simplelist>
  <para>
   MongoDB コアドキュメントの
   <link xlink:href="&url.mongodb.dochub.indexes;">vanilla indexes</link> および
   <link xlink:href="&url.mongodb.dochub.geo;">geospatial indexes</link>
   を参照ください。
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
