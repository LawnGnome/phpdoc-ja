<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 308234 Maintainer: takagi Status: ready -->

<refentry xml:id="mongocollection.ensureindex" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::ensureIndex</refname>
  <refpurpose>
   指定したフィールドにインデックスを作成する (すでに存在する場合は何もしない)
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>MongoCollection::ensureIndex</methodname>
   <methodparam><type>array</type><parameter>keys</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>
  <para>
   そのフィールドを持たないドキュメントが複数ある場合は、
   そこに一意なインデックスを作成することはできません。
   フィールドが存在しないときは事実上そのフィールドは
   &null; ということになり、それが複数存在すると既に一意ではなくなっているからです。
  </para>
 </refsect1>

 <refsect1 role="parameters"> 
  &reftitle.parameters; 
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>keys</parameter>
     </term>
     <listitem>
      <para>
       インデックスとして使用するフィールド。
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       このパラメータは
       <literal>array("optionname" => &lt;boolean&gt;, ...)</literal>
       形式の連想配列で、現在サポートしているオプションは次の通りです。
       <itemizedlist>
        <listitem>
         <para>
          <literal>"unique"</literal>
         </para>
         <para>
          一意なインデックスを作ります。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"dropDups"</literal>
         </para>
         <para>
          一意なインデックスを作ったときに重複する値が存在すれば、
          ひとつを除いてその他すべてを削除します。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"background"</literal>
         </para>
         <para>
          MongoDB バージョン 1.3.2 以降を使っている場合は、
          他の操作をしながらバックグラウンドでインデックスを作ることができます。
          デフォルトでは、インデックスの作成を同期処理で行います。
          このオプションを &true; にすると、インデックスの作成が非同期で行われます。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"safe"</literal>
         </para>
         <para>
          ドライバのバージョン 1.0.4 以降では、
          インデックスの作成に成功したかどうかを確認できるようになりました。
          このオプションを指定すると、インデックスの作成に失敗したときに
          MongoCursorException をスローします。
         </para>
         <para>
          レプリケーションを使っていてマスタを変更している場合、もし "safe"
          を使っていればドライバはマスタとの接続を切断して例外をスローし、
          次の操作時に新しいマスタを探そうとします
          (新しいマスタに対して操作を再試行するかどうかは
          アプリケーション側で判断しなければなりません)。
         </para>
         <para>
          レプリカセットで "safe" を <emphasis>使わずに</emphasis>
          マスタを変更する場合は、ドライバがその変更について知るすべがありません。
          そのため、何もエラーを出さずに書き込みに失敗し続けます。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"name"</literal>
         </para>
         <para>
          ドライバの 1.0.4 より後のバージョン (1.0.4 は含みません)
          では、インデックスの名前を指定できます。
          これは、多くのキーを作ろうとして Mongo
          にインデックス名が長くなりすぎると言われた場合などに有用です。
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"timeout"</literal>
         </para>
         <para>
          整数値。デフォルトは <literal>MongoCursor::$timeout</literal> です。
          "safe" が設定されている場合に、クライアントがデータベースからの応答をどれだけ待つかを
          (ミリ秒単位で) 指定します。ここで指定した時間内にデータベースからの応答がない場合は
          <classname>MongoCursorTimeoutException</classname>
          がスローされます。
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &true; を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.0.2</entry>
       <entry>
        "options" パラメータが boolean から配列に変わりました。
        1.0.2 より前のバージョンでは二番目のパラメータはオプションの boolean
        値で、一意なインデックスを指定するものでした。
       </entry>
       <entry>1.0.11</entry>
       <entry>
        "safe" は必要に応じてマスタのフェイルオーバーを行うようになりました。
       </entry>
       <entry>
        インデックス名 (自動生成されたものあるいは設定したもののどちらでも)
        の長さが 128 バイトを超えた場合に
        <classname>MongoException</classname> をスローするようになりました。
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>
        timeout オプションが追加されました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   インデックス名 (自動生成されたものあるいは設定したもののどちらでも)
   の長さが 128 バイトを超えた場合に
   <classname>MongoException</classname> をスローします
   (バージョン 1.0.11 以降)。
  </para>
  <para>
   "safe" オプションを設定しているときにインデックスの作成に失敗すると
   <classname>MongoCursorException</classname> をスローします。
  </para>
  <para>
   "safe" オプションを設定しているときに
   <literal>MongoCollection::$wtimeout</literal>
   ミリ秒でデータベース操作をレプリケーションできなければ
   <classname>MongoCursorTimeoutException</classname> をスローします。
   これはサーバ上の操作を終了させるわけではなく、あくまでもクライアント側のタイムアウトです。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCollection::ensureIndex</function> の例</title>
   <programlisting role="php">
<![CDATA[
<?php

$c = new MongoCollection($db, 'foo');

// 'x' の昇順にインデックスを作成します
$c->ensureIndex(array('x' => 1));

// 'z' の昇順、'zz' の降順にインデックスを作成します
$c->ensureIndex(array('z' => 1, 'zz' => -1));

// 'x' に一意なインデックスを作成します
$c->ensureIndex(array('x' => 1), array("unique" => true));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>重複を削除する例</title>
   <programlisting role="php">
<![CDATA[
<?php

$collection->insert(array("username" => "joeschmoe"));
$collection->insert(array("username" => "joeschmoe"));

/*
 * インデックスの作成に失敗します。重複する値があるキーに
 * 一意なインデックスを作ることはできません。
 */
$collection->ensureIndex(array("username" => 1), array("unique" => 1));

/*
 * インデックスの作成に成功します。ドキュメントのひとつがコレクションから削除されます。
 */
$collection->ensureIndex(array("username" => 1), array("unique" => 1, "dropDups" => 1));

/* 
 * 一意なインデックスができたあとは、同じユーザ名を
 * このように追加しようとしても失敗します。
 */
$collection->insert(array("username" => "joeschmoe"));

?>
]]>
   </programlisting>
  </example>

  <example>
   <title>地理空間のインデックス</title>
   <para>
    Mongo は地理空間のインデックスをサポートしています。
    これを使うと、指定した場所のそば、あるいは図形の範囲内にあるドキュメントを探すことができます。
    たとえば、"loc" フィールドに地理空間のインデックスを作るには次のようにします。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$collection->ensureIndex(array("loc" => "2d"));

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   MongoDB コアドキュメントの
   <link xlink:href="&url.mongodb.dochub.indexes;">vanilla indexes</link> および
   <link xlink:href="&url.mongodb.dochub.geo;">geospatial indexes</link>
   を参照ください。
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
