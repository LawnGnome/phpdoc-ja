<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328543 Maintainer: takagi Status: ready -->

<refentry xml:id="mongodb.command" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB::command</refname>
  <refpurpose>データベースコマンドを実行する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>MongoDB::command</methodname>
   <methodparam><type>array</type><parameter>command</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   CRUD 操作以外のほとんどすべての操作は、データベースコマンドで行います。
   データベースのバージョンを知りたい? それ用のコマンドがあります。
   集約が必要ですって? そのためのコマンドがあります。
   ログを記録したい? もちろん可能です。
  </para>
  <para>
   このメソッドは、次のような関数と同じ働きをします。
   <programlisting role="php">
<![CDATA[
<?php

public function command($data) {
    return $this->selectCollection('$cmd')->findOne($data);
}

?>
]]>
   </programlisting>
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>command</parameter>
     </term>
     <listitem>
      <para>
       送信したいクエリ。
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       <literal>array("オプション名" => &lt;boolean&gt;, ...)</literal>
       形式の連想配列です。現在サポートするオプションは次のとおりです。
       <itemizedlist>
        &mongo.writes.parameters.timeout;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.2.0</entry>
       <entry>
        <literal>options</literal> パラメータと、そのオプション
        <literal>"timeout"</literal> が追加されました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   データベースの応答を返します。
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoDB::command</function> による "distinct" の例</title>
   <para>
    あるキーの、すべての異なる値を探します。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$people = $db->people;

$people->insert(array("name" => "Joe", "age" => 4));
$people->insert(array("name" => "Sally", "age" => 22));
$people->insert(array("name" => "Dave", "age" => 22));
$people->insert(array("name" => "Molly", "age" => 87));

$ages = $db->command(array("distinct" => "people", "key" => "age"));

foreach ($ages['values'] as $age) {
    echo "$age\n";
}

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
4
22
87
   </screen>
  </example>
  <example>
   <title><function>MongoDB::command</function> での "distinct" の例</title>
   <para>
    重複を排除したすべての値をキーから取得します。条件は、値が 18 以上であることです。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$people = $db->people;

$people->insert(array("name" => "Joe", "age" => 4));
$people->insert(array("name" => "Sally", "age" => 22));
$people->insert(array("name" => "Dave", "age" => 22));
$people->insert(array("name" => "Molly", "age" => 87));

$ages = $db->command(
    array(
        "distinct" => "people",
        "key" => "age", 
        "query" => array("age" => array('$gte' => 18))
    )
);  

foreach ($ages['values'] as $age) {
    echo "$age\n";
}

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
22
87
   </screen>
  </example>
  <example>
   <title><function>MongoDB::command</function> での MapReduce の例</title>
   <para>
    "sale" イベント上のすべてのユーザーと、各ユーザーが何回販売したかを取得します。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// サンプルイベントドキュメント
$events->insert(array("user_id" => $id, 
    "type" => $type, 
    "time" => new MongoDate(), 
    "desc" => $description));

// map 関数と reduce 関数を作ります
$map = new MongoCode("function() { emit(this.user_id,1); }");
$reduce = new MongoCode("function(k, vals) { ".
    "var sum = 0;".
    "for (var i in vals) {".
        "sum += vals[i];". 
    "}".
    "return sum; }");

$sales = $db->command(array(
    "mapreduce" => "events", 
    "map" => $map,
    "reduce" => $reduce,
    "query" => array("type" => "sale"),
    "out" => array("merge" => "eventCounts")));

$users = $db->selectCollection($sales['result'])->find();

foreach ($users as $user) {
    echo "{$user['_id']} had {$user['value']} sale(s).\n";
}

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
User 47cc67093475061e3d9536d2 had 3 sale(s).
User 49902cde5162504500b45c2c had 14 sale(s).
User 4af467e4fd543cce7b0ea8e2 had 1 sale(s).
   </screen>
   <note>
    <title><classname>MongoCode</classname> の使用</title>
    <para>
     この例で使っている <classname>MongoCode</classname>
     には、引数でスコープを渡すこともできます。しかし現時点では、
     MongoDB は MapReduce におけるスコープの使用に対応していません。
     クライアントサイドの変数を MapReduce 関数で使いたい場合は、
     データベースコマンドでオプションの scope フィールドを使って
     グローバルスコープに追加してください。詳細な情報は
     <link xlink:href="&url.mongodb.dochub.mapreduce;">MapReduce のドキュメント</link>
     を参照ください。
    </para>
   </note>
   <note>
    <title><literal>out</literal> 引数</title>
    <para>
     1.8.0 より前は <literal>out</literal> 引数がオプションでした。指定しなければ、
     MapReduce の結果はテンポラリコレクションに書き出されます。これは、
     接続が閉じるときに削除されます。1.8.0 以降では <literal>out</literal>
     引数が必須となります。詳細な情報は
     <link xlink:href="&url.mongodb.dochub.mapreduce;">MapReduce のドキュメント</link>
     を参照ください。
    </para>
   </note>
   <para>
    MapReduce を使いたい人たちのために、Prajwal Tuladhar が Mongo PHP
    ユーザー用の API を作成しました。これは、生のコマンドよりもよいインターフェイスを提供します。
    <link xlink:href="&url.mongodb.mapreduceapi;">Github</link> からダウンロードしましょう。
    使いかたは
    <link xlink:href="&url.mongodb.mapreduceapi.blog;">blog の記事</link>
    を参照ください。
   </para>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   MongoDB コアドキュメントの <link xlink:href="&url.mongodb.dochub.commands;">database commands</link>
   そして各コマンドのドキュメント
   <link xlink:href="&url.mongodb.dochub.findandmodify;">findAndModify</link>、
   <link xlink:href="&url.mongodb.dochub.getlasterror;">getLastError</link> および
   <link xlink:href="&url.mongodb.dochub.repair;">repair</link>
   (他にもたくさんあります。これは単なる例です)
   を参照ください。
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
