<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 299265 Maintainer: takagi Status: ready -->

<phpdoc:classref xml:id="class.mongocursor" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>MongoCursor クラス</title>
 <titleabbrev>MongoCursor</titleabbrev>

 <partintro>

  <!-- {{{ Mongocursor intro -->
  <section xml:id="mongocursor.intro">
   &reftitle.intro;
   <para>
    データベースクエリの結果を表すオブジェクトです。
   </para>
   <para>
    <classname>MongoCursor</classname> には二段階の「ライフステージ」があります。
    クエリ前とクエリ後です。カーソルを作成するにはコンストラクタをコールすることもできますが、
    たいていは <function>MongoCollection::find</function> をコールすることになります。
    カーソルを作った時点ではまだデータベースに接続していません。
    つまり、クエリ前の段階です。この段階では、クエリに何をしてほしいのかをさらに指定することができます。
    取得数の制限や読み飛ばし、ソートなどのオプションを指定できるのです。
   </para>
   <para>
    クライアントが結果を取得しようとする (直接的あるいは間接的に
    <function>MongoCursor::next</function> をコールする) と、
    そのカーソルはクエリ後の段階に進みます。この時点では
    すでにデータベースでクエリが実行されており、クエリを変更することはできません。
    使える関数は、<classname>Iterator</classname> の関数や
    <function>MongoCursor::hasNext</function>、および
    <function>MongoCursor::getNext</function> だけとなります。
   </para>
   <para>
    <programlisting role="php">
<![CDATA[
<?php

$cursor = $collection->find()->limit(10);

// まだデータベースへの問い合わせは行われていないので、検索オプションをさらに追加することができます
$cursor = $cursor->sort(array("a" => 1));

var_dump($cursor->getNext());
// ここでデータベースへの問い合わせが行われるので、これ以降はオプションを追加することはできません

// つまり、これは例外をスローします
$cursor->skip(4);
?>
]]>
    </programlisting>
   </para>
  </section>
  <!-- }}} -->

  <section xml:id="mongocursor.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoCursor</classname></ooclass>

    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <modifier>implements</modifier>
      <classname>Iterator</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    
    <classsynopsisinfo role="comment">静的フィールド</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>static</modifier>
     <type>boolean</type>
     <varname>slaveOkay</varname>
     <initializer>&false;</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>static</modifier>
     <type>integer</type>
     <varname>timeout</varname>
     <initializer>20000</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongocursor')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->

  </section>

  <section>
   <title>静的変数</title>

   <variablelist>
    <varlistentry>
     <term><property>MongoCursor::slaveOkay</property></term>
     <listitem>
      <para>
       クエリに "slaveOkay" フラグが設定されていると、スレーブ側での読み込みを許可します
       (スレーブは、デフォルトでは単なるバックアップ用であり読み込みはできません)。
       <function>MongoCursor::slaveOkay</function> で上書きすることができます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><property>MongoCursor::timeout</property></term>
     <listitem>
      <para>
       データベースからのすべての応答に対するタイムアウトをミリ秒単位で設定します。
       ずっと待ち続ける場合は -1 を指定します。
       <function>MongoCursor::timeout</function> で上書きすることができます。
       これは MongoDB サーバに対する操作をキャンセルするわけではなく、
       単にドライバ側で応答を待つのをやめて
       MongoCursorTimeoutException をスローするだけです。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>

  <section>
   &reftitle.seealso;
   <para>
    MongoDB コアドキュメントの <link xlink:href="&url.mongodb.dochub.cursors;">カーソル</link>
    を参照ください。
   </para>
  </section>

 </partintro>

 &reference.mongo.entities.mongocursor;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
