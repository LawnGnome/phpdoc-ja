<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<section id="errorfunc.constants">
 &reftitle.constants;
 &extension.constants.core;
 <note>
  <simpara>
   以下の定数を&php.ini;で使用することができますが、
   <filename>httpd.conf</filename>のようなPHPの外部では、
   代わりにビットマスク値を使用する必要があります。
  </simpara>
 </note>
 <table>
  <title>エラーとロギング</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>値</entry>
     <entry>定数</entry>
     <entry>説明</entry>
     <entry>注記</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>1</entry>
     <entry>
      <constant>E_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      重大な実行時エラー。これは、メモリ確保に関する問題のように復帰で
      きないエラーを示します。スクリプトの実行は中断されます。
     </entry>
     <entry>
     </entry>
    </row>
    
    <row>
     <entry>2</entry>
     <entry>
      <constant>E_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      実行時の警告 (致命的なエラーではない)。スクリプトの実行は中断さ
      れません。
     </entry>
     <entry></entry>
    </row>

    <row>
     <entry>4</entry>
     <entry>
      <constant>E_PARSE</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      コンパイル時のパースエラー。パースエラーはパーサでのみ生成されま
      す。
     </entry>
     <entry></entry>
    </row>

    <row>
     <entry>8</entry>
     <entry>
      <constant>E_NOTICE</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Run-time notices. Indicate that the script encountered something that
      could indicate an error, but could also happen in the normal course of
      running a script.
     </entry>
     <entry></entry>
    </row>

    <row>
     <entry>16</entry>
     <entry>
      <constant>E_CORE_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Fatal errors that occur during PHP's initial startup. This is like an
      <constant>E_ERROR</constant>, except it is generated by the core of PHP.
     </entry>
     <entry>PHP 4 only</entry>
    </row>

    <row>
     <entry>32</entry>
     <entry>
      <constant>E_CORE_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Warnings (non-fatal errors) that occur during PHP's initial startup.
      This is like an <constant>E_WARNING</constant>, except it is generated
      by the core of PHP.
     </entry>
     <entry>PHP 4 only</entry>
    </row>

    <row>
     <entry>64</entry>
     <entry>
      <constant>E_COMPILE_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Fatal compile-time errors. This is like an <constant>E_ERROR</constant>,
      except it is generated by the Zend Scripting Engine.
     </entry>
     <entry>PHP 4 only</entry>
    </row>

    <row>
     <entry>128</entry>
     <entry>
      <constant>E_COMPILE_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Compile-time warnings (non-fatal errors). This is like an
      <constant>E_WARNING</constant>, except it is generated by the Zend
      Scripting Engine.
     </entry>
     <entry>PHP 4 only</entry>
    </row>

    <row>
     <entry>256</entry>
     <entry>
      <constant>E_USER_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      User-generated error message. This is like an
      <constant>E_ERROR</constant>, except it is generated in PHP code by
      using the PHP function <function>trigger_error</function>.
     </entry>
     <entry>PHP 4 only</entry>
    </row>

    <row>
     <entry>512</entry>
     <entry>
      <constant>E_USER_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      User-generated warning message. This is like an
      <constant>E_WARNING</constant>, except it is generated in PHP code by
      using the PHP function <function>trigger_error</function>.
     </entry>
     <entry>PHP 4 only</entry>
    </row>

    <row>
     <entry>1024</entry>
     <entry>
      <constant>E_USER_NOTICE</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      User-generated notice message. This is like an
      <constant>E_NOTICE</constant>, except it is generated in PHP code by
      using the PHP function <function>trigger_error</function>.
     </entry>
     <entry>PHP 4 only</entry>
    </row>

    <row>
     <entry>2047</entry>
     <entry>
      <constant>E_ALL</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      All errors and warnings, as supported.
     </entry>
    </row>

   </tbody>
  </tgroup>
 </table>

 <para>
  The above values (either numerical or symbolic) are used to build
  up a bitmask that specifies which errors to report. You can use the
  <link linkend="language.operators.bitwise">bitwise operators</link>
  to combine these values or mask out certain types of errors. Note
  that only '|', '~', '!', and '&amp;' will be understood within
  &php.ini;, however, and that no bitwise
  operators will be understood within <filename>php3.ini</filename>.
 </para>
</section> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

