<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/errorfunc.xml, last change in rev 1.1 -->
<!-- last change to 'error-reporting' in en/ tree in rev 1.1 -->
  <refentry id="function.error-reporting">
   <refnamediv>
    <refname>error_reporting</refname>
    <refpurpose>出力するPHPエラーの種類を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>error_reporting</methodname>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>level</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     PHP のエラー出力レベルを設定し、元のレベルを返します。
     エラー出力レベルは以下の値のビットマスクです（リンクをたどって
     もらうと、それらの意味を知るための内部値がわかります）。
     エラー報告レベル(error_reporting)はビットマスクまたは定数名のどち
     らかです。将来のバージョンとの互換性を保証するために定数名を使用
     することが強く推奨されます。エラーレベルが追加された場合、整数の
     範囲は増加するため、以前の整数を使用するエラーレベルは常に期待通
     りに動作するとは限りません。
     <example role="php">
      <title>エラー整数の変更</title>
      <programlisting role="php">
<![CDATA[
error_reporting(55);   // PHP 3 では E_ALL ^ E_NOTICE と等価

/* 一方、PHP 4 では、'55' は(E_ERROR | E_WARNING | E_PARSE |
E_CORE_ERROR | E_CORE_WARNING) を意味します */

error_reporting(2039); // PHP 4 では E_ALL ^ E_NOTICE と等価

error_reporting(E_ALL ^ E_NOTICE); // PHP 3 と 4 の両方で共通
]]>
      </programlisting>
     </example>
     これらの意味を得るために内部の値を以下に示します。
     <table>
      <title><function>error_reporting</function> ビット値</title>
      <tgroup cols="2">
       <thead>
	<row>
	 <entry>値</entry>
	 <entry>内部名</entry>
	</row>
       </thead>
       <tbody>
	<row>
	 <entry>1</entry>
	 <entry>
	  <link linkend="internal.e-error">E_ERROR</link>
	 </entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>
	  <link linkend="internal.e-warning">E_WARNING</link>
	 </entry>
	</row>
	<row>
	 <entry>4</entry>
	 <entry>
	  <link linkend="internal.e-parse">E_PARSE</link>
	 </entry>
	</row>
	<row>
	 <entry>8</entry>
	 <entry>
	  <link linkend="internal.e-notice">E_NOTICE</link>
	 </entry>
	</row>
	<row>
	 <entry>16</entry>
	 <entry>
	  <link linkend="internal.e-core-error">E_CORE_ERROR</link>
	 </entry>
	</row>
	<row>
	 <entry>32</entry>
	 <entry>
	  <link
	  linkend="internal.e-core-warning">E_CORE_WARNING</link>
	 </entry>
	</row>
	<row>
	 <entry>64</entry>
	 <entry>
	  <link linkend="internal.e-compile-error">E_COMPILE_ERROR</link>
	 </entry>
	</row>
	<row>
	 <entry>128</entry>
	 <entry>
	  <link linkend="internal.e-compile-warning">E_COMPILE_WARNING</link>
	 </entry>
	</row>
        <row>
         <entry>256</entry>
         <entry>
          <link linkend="internal.e-user-error">E_USER_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>512</entry>
         <entry>
          <link linkend="internal.e-user-warning">E_USER_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>1024</entry>
         <entry>
          <link linkend="internal.e-user-error">E_USER_NOTICE</link>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <example role="php">
      <title><function>error_reporting</function> の例</title>
      <programlisting role="php">
<![CDATA[
error_reporting (0);
// 全てのレポートをオフにする

error_reporting (7); // 古い構文、 PHP 2/3
error_reporting (E_ERROR | E_WARNING | E_PARSE); // PHP 3/4の新しい構文
/* 簡単な実行エラーに適する  */

error_reporting (15); // 古い構文、 PHP 2/3
error_reporting (E_ERROR | E_WARNING | E_PARSE | E_NOTICE); // PHP 3/4の新しい構文
/* 初期化されたいない(または恐らくスペルミスの)変数を通知するコードを
   作成するのに適する */

error_reporting (63); // 古い構文、 PHP 2/3
error_reporting (E_ALL); // PHP 3/4の新しい構文
/* 全てのPHPエラーをリポート */
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
