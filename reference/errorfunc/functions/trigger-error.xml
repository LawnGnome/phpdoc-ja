<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/errorfunc.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.1 Maintainer: hirokawa Status: ready -->
  <refentry id="function.trigger-error">
   <refnamediv>
    <refname>trigger_error</refname>
    <refpurpose>
     ユーザレベルのエラー/警告/通知メッセージを生成する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>void</type><methodname>trigger_error</methodname>
      <methodparam><type>string</type><parameter>error_msg</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>error_type</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     ユーザエラーを発生するために使用され、組込のエラーハンドラまたは
     新しいエラーハンドラ(<function>set_error_handler</function>)とし
     て設定済のユーザ定義関数と組み合わせて使用されます。エラー型には
     E_USER 関連の定数のみが使用可能で、デフォルトは
     <constant>E_USER_NOTICE</constant>となっています。
    </para>
    <para>
     この関数は、実行時の例外に特定の応答を生成する必要がある場合に有
     用です。以下に例を示します。
     <informalexample>
      <programlisting>
<![CDATA[
if (assert ($divisor == 0))
   trigger_error ("Cannot divide by zero", E_USER_ERROR);
]]>
      </programlisting>
     </informalexample>
     <note>
      <para>
       より、詳細な例については、
       <function>set_error_handler</function> を参照下さい。
     </para>
     </note>
    </para>
    <para>
     <function>error_reporting</function>,
     <function>set_error_handler</function>,
     <function>restore_error_handler</function>, 
     <function>user_error</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
