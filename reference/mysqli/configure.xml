<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.14 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<section xml:id="mysqli.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

&reftitle.install;

 <para xml:id="mysqli.configure">
  PHP 5.0 以降、標準の配布パッケージでは MySQL サポートがデフォルトで有効にはなっていません。
  つまり、MySQL 拡張モジュールを使いたければ PHP を明示的に configure する必要があるということです。
 </para>

 <para>
  一般的な Unix ディストリビューションには、バイナリ版の PHP がインストールされています。
  これらのバイナリ版は、通常は MySQL 拡張モジュールに対応したものになっています。
  しかし、拡張モジュールライブラリ自身を別パッケージでインストールする必要があります。
  使用しているディストリビューションのパッケージマネージャで確認してみましょう。
 </para>

 <para>
  もしご利用の Unix ディストリビューションの提供するバイナリパッケージに
  <literal>mysqli</literal> 拡張モジュールが含まれていない場合は、
  PHP をソースコードからビルドしなければなりません。
  PHP をソースからビルドすれば、使いたい MySQL 拡張モジュールを指定したり
  各拡張モジュールが使用するクライアントライブラリを選択したりすることができます。
 </para>

 <para>
  <literal>mysqli</literal> 拡張モジュールを PHP で有効にするには、
  PHP のソースコードを configure する際に
  <literal>mysqli</literal> を使うよう指定する必要があります。そのためには
  <command>configure</command> スクリプトにオプション
  <option role="configure">--with-mysqli=mysql_config_path/mysql_config</option>
  を指定して実行してから PHP をビルドします。これで
  <literal>mysqli</literal> が有効となり、
  MySQL Client Library (libmysql) を用いて
  MySQL Server と通信できるようになります。
 </para>

 <note>
  <para>
   <literal>mysql_config_path</literal> は、MySQL Server
   バージョン 4.1 以降に含まれる
   <literal>mysql_config</literal> プログラムの場所を表します。
  </para>
 </note>

 <para>
  PHP 5.3 以降のバージョンでは、新しい
  MySQL Native Driver を <literal>mysqli</literal> で使うことができます。
  これは libmysql を使うよりも多くの点で有利です。
 </para>

 <para>
  MySQL Native Driver を <literal>mysqli</literal> で使用するには、
  PHP ソースコードの configure の際に
  <option role="configure">--with-mysqli=mysqlnd</option>
  オプションを指定して PHP をビルドします。
 </para>

 <para>
  このオプションを指定することを推奨します。MySQL Native Driver
  を使うとパフォーマンスが向上し、MySQL Client Library
  を使用した場合には使えない機能も使用することができます。
  <link linkend="mysqli.overview.mysqlnd">PHP の MySQL Native
  Driver とは?</link>
  に、MySQL Native Driver の利点が簡単にまとめられています。
 </para>

 <para>
  MySQL 拡張モジュールとクライアントライブラリの組み合わせは自由であることに注意しましょう。
  たとえば、MySQL 拡張モジュールは MySQL Client Library (libmysql) を使うようにして有効にし、
  一方 <literal>mysqli</literal> 拡張モジュールは MySQL Native Driver
  を使うようにするということも可能です。
  しかし、それ以外にも拡張モジュールとクライアントライブラリのすべての組み合わせが使用可能です。
 </para>

 <para>
  次の例は、MySQL 拡張モジュールを MySQL
  Client Library を使うようにビルドし、一方 <literal>mysqli</literal> と PDO MYSQL
  拡張モジュールでは MySQL Native Driver を使うようにするものです。
 </para>

<programlisting role="shell">
./configure --with-mysql=/usr/bin/mysql_config  \
--with-mysqli=mysqlnd \
--with-pdo-mysql=mysqlnd
[other options]
</programlisting>

 <section xml:id="mysqli.installation.windows">

  <title>Windows システムでのインストール</title>

  <para>
   Windows の場合、PHP のインストールにはたいていバイナリインストーラを使用します。
   PHP をインストールしたら、<literal>mysqli</literal>
   を有効にしてクライアントライブラリを指定するためにいくつかの設定が必要です。
  </para>

  <para>
   先ほど説明したように <literal>mysqli</literal>
   拡張モジュールはデフォルトでは有効になりません。そこで、
   <filename>php_mysqli.dll</filename> DLL を
   &php.ini; の中で有効化しなければなりません。有効化するには、まず
   &php.ini; を探し (通常は <filename>c:\php</filename> にあります)、
   そして <literal>extension=php_mysqli.dll</literal> という行の最初にあるコメント
   (セミコロン) を削除します。この行は
   [PHP_MYSQLI] というセクションにあります。
  </para>

  <para>
   また、MySQL Client Library を <literal>mysqli</literal>
   で使いたい場合は、PHP からクライアントライブラリのファイルにアクセスできるようにしなければなりません。
   MySQL Client Library は <filename>libmysql.dll</filename>
   という名前のファイルで、これは Windows 版の PHP に含まれています。
   このファイルを Windows の環境変数
   <envar>PATH</envar> で指定された場所に置けば読み込めるようになります。
   FAQ の
   "<link linkend="faq.installation.addtopath">Windows で PHP のディレクトリを
   PATH に追加するにはどうすればいいのですか?</link>"
   に、その方法が説明されています。
   <filename>libmysql.dll</filename> を Windows のシステムディレクトリ
   (通常は <filename>c:\Windows\system</filename>) にコピーしても動作します。
   システムディレクトリは、デフォルトでシステムの
   <envar>PATH</envar> に含まれているからです。
   しかし、これはできるだけ避けるようにしましょう。
  </para>

  <para>
   Windows の PHP バージョン 5.3 以降では、
   <literal>mysqli</literal> 拡張モジュールはデフォルトで
   MySQL Native Driver を使用します。つまり、
   <filename>libmysql.dll</filename> にアクセスできるようにする必要はなく、
   単に &php.ini; ファイルで拡張モジュールを有効にするだけでよくなります。
  </para>

  <para>
   その他の PHP 拡張モジュール (<filename>php_mysqli.dll</filename> など)
   を有効にするときと同様、PHP のディレクティブ
   <link linkend="ini.extension-dir">extension_dir</link>
   を設定して PHP 拡張モジュールのある場所を指定する必要があります。
   <link linkend="install.windows.manual">Windows
   での手動インストールの手順</link> も参照ください。PHP 5 の <literal>extension_dir</literal>
   の値は、たとえば <filename>c:\php\ext</filename> のようになります。
  </para>

  <note>
   <para>
    ウェブサーバの起動時に
    <literal>"Unable to load dynamic library
    './php_mysqli.dll'"</literal>
    のようなエラーが出たら、それは
    <filename>php_mysqli.dll</filename> や
    <filename>libmysql.dll</filename> をシステムが見つけられないことが原因です。
   </para>
  </note>

 </section>

</section>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
