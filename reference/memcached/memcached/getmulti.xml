<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.5 Maintainer: takagi Status: ready -->

<refentry xml:id="memcached.getmulti" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Memcached::getMulti</refname>
  <refpurpose>複数のアイテムを取得する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>Memcached::getMulti</methodname>
   <methodparam><type>array</type><parameter>keys</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">cas_tokens</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Memcached::getMulti</function> は
   <methodname>Memcached::get</methodname> と似ていますが、ひとつのキーのアイテムを取得するのではなく
   <parameter>keys</parameter> 配列で指定したキー群から複数のアイテムを取得します。
   <parameter>cas_tokens</parameter> 変数を指定した場合は、取得したアイテムの
   CAS トークンの値をそこに格納します。
   <note>
    <para>
     <methodname>Memcached::get</methodname> とは異なり、
     <function>Memcached::getMulti</function> では
     read-through キャッシュコールバックを指定することができません。
     memcache プロトコルでは、複数キーのリクエストでどのキーが見つからなかったのかを知る手段がないからです。
    </para>
   </note>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>keys</parameter></term>
     <listitem>
      <para>
       取得したいキーの配列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cas_tokens</parameter></term>
     <listitem>
      <para>
       見つかったアイテムの CAS トークンを格納する変数。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   見つかったアイテムの配列、あるいは失敗した場合に &false; を返します。
   &memcached.result.getresultcode;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>Memcached::getMulti</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$m = new Memcached();
$m->addServer('localhost', 11211);

$items = array(
    'key1' => 'value1',
    'key2' => 'value2',
    'key3' => 'value3'
);
$m->setMulti($items);
$result = $m->getMulti(array('key1', 'key3', 'badkey'), $cas);
var_dump($result, $cas);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(2) {
  ["key1"]=>
  string(6) "value1"
  ["key3"]=>
  string(6) "value3"
}
array(2) {
  ["key1"]=>
  float(2360)
  ["key3"]=>
  float(2362)
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Memcached::getMultiByKey</methodname></member>
    <member><methodname>Memcached::get</methodname></member>
    <member><methodname>Memcached::getDelayed</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
