<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./ja/functions/math.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.9 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
  <refentry id="function.round">
   <refnamediv>
    <refname>round</refname>
    <refpurpose>浮動点整数を丸める</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>float</type><methodname>round</methodname>
      <methodparam><type>float</type><parameter>val</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>precision</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>val</parameter> を、指定した
     <parameter>precision</parameter>(小数点以下の桁数)に丸めた値を
     返します。<parameter>precision</parameter> を負またはゼロ(デフォルト)
     とすることも可能です。
    </para>
    <para>
     <example>
      <title><function>round</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php
echo round(3.4);         // 3
echo round(3.5);         // 4
echo round(3.6);         // 4
echo round(3.6, 0);      // 4
echo round(1.95583, 2);  // 1.96
echo round(1241757, -3); // 1242000
echo round(5.045, 2);    // 5.05
echo round(5.055, 2);    // 5.06
?>
]]>
      </programlisting>
     </example>
    </para>
    <!-- It's not true
    <para>
     <caution>
      <simpara>
       When rounding on exact halves <function>round</function> rounds down on
       evens and up on odds.  If you want to always force it in one direction
       on a .5 (or .05 in your case) add or substract a tiny fuzz factor.  The
       reason behind rounding half the values down and the other half up is to
       avoid the classical banking problem where if you always rounded down
       you would be stealing money from your customers, or if you always
       rounded up you would end up over time losing money.  By averaging it
       out through evens and odds you statistically break even.
      </simpara>
     </caution>
    </para>
    -->
    <para>
     <note>
      <simpara>
       PHP は、デフォルトでは <literal>"12,300.2"</literal> のような
       文字列を正しく処理しません。<link
       linkend="language.types.string.conversion">文字列からの変換
       </link>を参照ください。
      </simpara>
     </note>
    </para>
    <para>
     <note>
      <simpara>
       パラメータ <parameter>precision</parameter> は、PHP 4 以降でのみ
       利用可能です。
       (訳注：内部的な 2 進数表現と 10 進数表現の差により生じる丸め誤差の影響により
       必ずしも小数点以下を四捨五入した結果を返さないことに注意してください。)
      </simpara>
     </note>
    </para>
    <simpara>
     <function>ceil</function>、
     <function>floor</function> および
     <function>number_format</function> も参照ください。
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
