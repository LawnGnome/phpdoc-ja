<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/math.xml, last change in rev 1.1 -->
<!-- sync: 1.2 -->
  <refentry id="function.number-format">
   <refnamediv>
    <refname>number_format</refname>
    <refpurpose>1,000 単位で数字をフォーマットする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>number_format</methodname>
      <methodparam><type>float</type><parameter>number</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>decimals</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>dec_point</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>thousands_sep</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>number_format</function>は<parameter>number</parameter>
     をフォーマットしたものを返します。この関数は、以下に示すような
     1個,2個または 4個の引数を取ります(3個というのはありません):
     </para>
     <para>
     引数が1つだけ与えられた場合は、<parameter>number</parameter>が
     各々1000の位ごとにカンマ(",")区切りでフォーマットされますが、
     小数部は出力されません。
    </para>
    <para>
     引数が2つ与えられた場合は、<parameter>number</parameter>が各々
     1000の位ごとにカンマ(",")区切りででフォーマットされ、さらにドッ
     ト(".")1つを置いて、その後に小数部が<parameter>decimals
     </parameter>桁数分出力されます。
    </para>
    <para>
     4つの引数すべてが与えられた場合は、<parameter>number</parameter>
     が<parameter>decimals</parameter>桁数分の小数部を含んだ形でフォ
     ーマットされます。その際、各々1000の位ごとの区切り文字として、
     カンマ(",")の代わりに<parameter>thousands_sep</parameter>で与
     えられた文字列を使い、小数部の前のドット(".")の代わりに
     <parameter>dec_point</parameter>で与えられた文字列を使います。
    </para>
    <note>
     <para>
      <parameter>thousands_sep</parameter>の最初の文字のみが使用され
      ます。例えば、数値<literal>1000</literal>について
      <literal>foo</literal> を<parameter>thousands_sep</parameter>
      に使用した場合、<function>number_format</function> は、
      <literal>1f000</literal>を返します。
     </para>
    </note>
    <para>
    <example>
     <title><function>number_format</function> の例</title>
      <para>
       例えば、フランス語表記では通常小数点以下は2桁とし、カンマ
       (',')を小数部の区切り文字、スペース(' ')を1000の位毎の区切り
       文字として使用します。これは、次のように行います。
      </para>
      <programlisting role="php">
<![CDATA[
<?php

    $nombre = 1234.56;

    // 英語表記 (デフォルト)
    $english_format_number = number_format($nombre);
    // 1,234.56

    // フランス語表記
    $nombre_format_francais = number_format($nombre, 2, ',', ' ');
    // 1 234,56

    $number = 1234.5678;

    // 千単位の区切りがない英語表記
    $english_format_number = number_format($number, 2, '.', '');
    // 1234.56

?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      <function>sprintf</function>,
      <function>printf</function> , <function>sscanf</function>も
      参照下さい。
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
