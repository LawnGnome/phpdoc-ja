<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/pcntl.xml, last change in rev 1.1 -->
<!-- last change to 'pcntl-waitpid' in en/ tree in rev 1.1 -->
  <refentry id="function.pcntl-waitpid">
   <refnamediv>
    <refname>pcntl_waitpid</refname>
    <refpurpose>待つかフォークした子プロセスのステータスを返す</refpurpose>
   </refnamediv>
   <refsect1>
   <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>pcntl_waitpid</methodname>
      <methodparam><type>int</type><parameter>pid</parameter></methodparam>
      <methodparam><type>int</type><parameter>status</parameter></methodparam>
     <methodparam><type>int</type><parameter>options</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pcntl_waitpid</function>関数は、
     引数<parameter>pid</parameter>で指定した子プロセスが終了するか、
     カレントのプロセスを終了するかシグナル処理関数をコールするシグナ
     ルが送信されるまでカレントのプロセスの実行を中断します。
     <parameter>pid</parameter>でリクエストされた子プロセスが、 コール
     時に既に終了している場合("ゾンビ"プロセスと呼ばれます)、この関数
     は直ちに処理を返します。子プロセスにより使用される全てのシステム
     リソースは、解放されます。waitpidがシステムでの動作に関する詳細に
     ついては、システムのwaitpid(2)マニュアルページを参照下さい。
    </para>
    <para>
     <function>pcntl_waitpid</function>は、終了した子プロセスのプロセ
     スIDを返します。エラーの場合は-1、WNOHANGが使用され、子プロセスが
     利用できない場合に0を返します。
    </para>
    <para>
     <parameter>pid</parameter>の値は次のどれかとなります。
     <table>
      <title><parameter>pid</parameter>の値</title>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry><literal>&lt; -1</literal></entry>
	 <entry>
          <parameter>pid</parameter>の絶対値に等しいプロセスグループID
          が等しい子プロセスを待ちます。
	 </entry>
	</row>
	<row>
	 <entry><literal>-1</literal></entry>
	 <entry>
          全ての子プロセスを待つ。これは、wait関数の動作と同じです。
	 </entry>
	</row>
       <row>
	 <entry><literal>0</literal></entry>
	 <entry>
          プロセスグループIDがコール側のプロセスと等しい子プロセスを待
	  ちます。
	 </entry>
	</row>
	<row>
	 <entry><literal>&gt; 0</literal></entry>
	 <entry>
          プロセスIDが<parameter>pid</parameter>の値に等しい子プロセス
	  を待ちます。
	 </entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <function>pcntl_waitpid</function>は、パラメータ
     <parameter>status</parameter>の中にステータス情報を保存します。こ
     のステータスは、次の関数を用いて評価可能です。
     <function>pcntl_wifexited</function>,
     <function>pcntl_wifstopped</function>,
     <function>pcntl_wifsignaled</function>,
     <function>pcntl_wexitstatus</function>,
     <function>pcntl_wtermsig</function> and
     <function>pcntl_wstopsig</function>.
    </para>
    <para>
     <parameter>options</parameter>の値は、次の2つのグローバル定数のゼ
     ロまたはそれ以上の論理和です。
     <table>
      <title><parameter>options</parameter>の値</title>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry><literal>WNOHANG</literal></entry>
	 <entry>
          子プロセスが終了していない場合に直ちに処理を返します。
	 </entry>
	</row>
	<row>
	 <entry><literal>WUNTRACED</literal></entry>
	 <entry>
          停止した子プロセスの場合に処理を返します。そして、ステータス
	  はリポートされません。
	 </entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <function>pcntl_fork</function>,
     <function>pcntl_signal</function>,
     <function>pcntl_wifexited</function>,
     <function>pcntl_wifstopped</function>,
     <function>pcntl_wifsignaled</function>,
     <function>pcntl_wexitstatus</function>,
     <function>pcntl_wtermsig</function>,
     <function>pcntl_wstopsig</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
