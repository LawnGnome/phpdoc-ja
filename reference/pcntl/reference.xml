<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
 <reference id="ref.pcntl">
  <title>プロセス制御関数</title>
  <titleabbrev>PCNTL</titleabbrev>
  <partintro>
   <para>
    PHPがサポートするプロセス制御関数は、UNIX形式のプロセス生成、プロ
    セス実行、シグナル処理、プロセス終了機能を実装しています。
    プロセス制御は、Webサーバ環境で有効にするべきではなく、プロセス制
    御関数のどれかがWebサーバ環境で使用された場合には、予期しない結果
    を生じる可能性があります。
   </para>
   <para>
    この文書は、プロセス制御関数の一般的な使用法を説明しようとするもの
    です。UNIXのプロセス制御に関する詳細な情報については、fork(2),
    waitpid(2) and signal(2)のようなシステムのドキュメントや、
    <citation>Advanced Programming in the UNIX Environment by
    W. Richard Stevens (Addison-Wesley)</citation>のような優れた参考書
    を読まれることを推奨します。
   </para>
   <para>
    PHPがサポートするプロセス制御機能は、デフォルトでは有効となってい
    ません。プロセス制御機能を有効にするには、PHPをコンパイルする際に
    configure のオプションに <link
    linkend="install.configure.enable-pcntl">--enable-pcntl</link>
    を付ける必要があります。
   </para>
   <note>
    <para>
     現在、このモジュールは非UNIX環境(Windows)では動作しません。
    </para>
   </note>
   <para>
    以下のシグナルのリストは、プロセス制御関数でサポートされているもの
    です。これらのシグナルのデフォルト動作の詳細については、 signal(7)
    のマニュアルを参照下さい。
   <table>
    <title>サポートされるシグナル</title>
    <tgroup cols="2">
     <tbody>
      <row>
       <entry><literal>SIGFPE</literal></entry>
       <entry><literal>SIGCONT</literal></entry>
       <entry><literal>SIGKILL</literal></entry>
      </row>
      <row>
       <entry><literal>SIGSTOP</literal></entry>
       <entry><literal>SIGUSR1</literal></entry>
       <entry><literal>SIGTSTP</literal></entry>
      </row>
      <row>
       <entry><literal>SIGHUP</literal></entry>
       <entry><literal>SIGUSR2</literal></entry>
       <entry><literal>SIGTTIN</literal></entry>
      </row>
      <row>
       <entry><literal>SIGINT</literal></entry>
       <entry><literal>SIGSEGV</literal></entry>
       <entry><literal>SIGTTOU</literal></entry>
      </row>
      <row>
       <entry><literal>SIGQUIT</literal></entry>
       <entry><literal>SIGPIPE</literal></entry>
       <entry><literal>SIGURG</literal></entry>
      </row>
      <row>
       <entry><literal>SIGILL</literal></entry>
       <entry><literal>SIGALRM</literal></entry>
       <entry><literal>SIGXCPU</literal></entry>
      </row>
      <row>
       <entry><literal>SIGTRAP</literal></entry>
       <entry><literal>SIGTERM</literal></entry>
       <entry><literal>SIGXFSZ</literal></entry>
      </row>
      <row>
       <entry><literal>SIGABRT</literal></entry>
       <entry><literal>SIGSTKFLT</literal></entry>
       <entry><literal>SIGVTALRM</literal></entry>
      </row>
      <row>
       <entry><literal>SIGIOT</literal></entry>
       <entry><literal>SIGCHLD</literal></entry>
       <entry><literal>SIGPROF</literal></entry>
      </row>
      <row>
       <entry><literal>SIGBUS</literal></entry>
       <entry><literal>SIGCLD</literal></entry>
       <entry><literal>SIGWINCH</literal></entry>
      </row>
      <row>
       <entry><literal>SIGPOLL</literal></entry>
       <entry><literal>SIGIO</literal></entry>
       <entry><literal>SIGPWR</literal></entry>
      </row>
      <row>
       <entry><literal>SIGSYS</literal></entry>
       <entry><literal></literal></entry>
       <entry><literal></literal></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   </para>

   <section id="pcntl-example">
    <title>プロセス制御の例</title>
    <para>
     この例は、シグナルハンドラを有するデーモンプロセスをフォークオフ
     します。
    </para>
    <example>
     <title>プロセス制御の例</title>
     <programlisting role="php">
<![CDATA[
<?php

$pid = pcntl_fork();
if ($pid == -1) {
     die("could not fork"); 
} else if ($pid) {
     exit(); // 親プロセスの場合
} else {
     // 子プロセスの場合
}

// 制御側の端末からデタッチ
if (!posix_setsid()) {
    die("could not detach from terminal");
}

// シグナルハンドラを設定
pcntl_signal(SIGTERM, "sig_handler");
pcntl_signal(SIGHUP, "sig_handler");

// 無限ループでタスク実行
while(1) {

    // 何か面白いことをここで行う

}

function sig_handler($signo) {

     switch($signo) {
         case SIGTERM:
             // 終了タスクを処理
             exit;
             break;
         case SIGHUP:
             // 再起動タスクを処理
             break;
         default:
             // その他の全てのシグナルを処理
     }

}

?>
]]>
     </programlisting>
    </example>
   </section>
  </partintro>

&reference.pcntl.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

