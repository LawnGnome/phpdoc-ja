<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.11 Maintainer: takagi Status: ready -->
<refentry id='function.dom-domimplementation-createdocumenttype'>
 <refnamediv>
  <refname>DOMImplementation->createDocumentType()</refname>
  <refpurpose>
   空の DOMDocumentType オブジェクトを作成する
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>DOMImplementation</classname></ooclass>
   <methodsynopsis>
    <type>DOMDocumentType</type><methodname>createDocumentType</methodname>
    <methodparam choice="opt"><type>string</type><parameter>qualifiedName</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>publicId</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>systemId</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   空の <classname>DOMDocumentType</classname> オブジェクトを作成します。
   エンティティ宣言および記法は使用可能にはなりません。エンティティ参照の
   展開やデフォルト属性の追加は発生しません。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>qualifiedName</parameter></term>
     <listitem>
      <para>
       作成されるドキュメント型の修飾名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>publicId</parameter></term>
     <listitem>
      <para>
       外部サブセットの公開 ID。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>systemId</parameter></term>
     <listitem>
      <para>
       外部サブセットのシステム ID。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <literal>ownerDocument</literal> を &null; に設定した
   新しい <classname>DOMDocumentType</classname> ノードを返します。
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>DTD を添付してドキュメントを作成する</title>
    <programlisting role="php">
 <![CDATA[
<?php

// DOMImplementation クラスのインスタンスを作成します。
$imp = new DOMImplementation;

// DOMDocumentType のインスタンスを作成します。
$dtd = $imp->createDocumentType('graph', '', 'graph.dtd');

// DOMDocument のインスタンスを作成します。
$dom = $imp->createDocument("", "", $dtd);

// その他のプロパティを設定します。
$dom->encoding = 'UTF-8';
$dom->standalone = false;

// 空の要素を作成します。
$element = $dom->createElement('graph');

// 要素を追加します。
$dom->appendChild($element);

// ドキュメントの内容を出力します。
echo $dom->saveXML();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="xml">
<![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE graph SYSTEM "graph.dtd">
<graph/>
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="exceptions">
  &reftitle.exceptions;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NAMESPACE_ERR</constant></term>
     <listitem>
      <para>
       <parameter>qualifiedName</parameter> で指定した名前空間に
       間違いがある場合に発生します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.dom-domimplementation-createdocument" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
