<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.5 Maintainer: takagi Status: ready -->
<refentry xml:id="function.dom-domdocument-registernodeclass" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMDocument->registerNodeClass()</refname>
  <refpurpose>基底ノード型を作成する際に使用する拡張クラスを登録する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>DOMDocument</classname></ooclass>
   <methodsynopsis>
    <type>bool</type><methodname>registerNodeClass</methodname>
    <methodparam><type>string</type><parameter>baseclass</parameter></methodparam>
    <methodparam><type>string</type><parameter>extendedclass</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>

  <para>
   このメソッドにより、独自に拡張した DOM クラスを登録することができます。
   これを、後で PHP DOM 拡張モジュールで使用します。
  </para>
  <para>
   このメソッドは、DOM の標準にはないものです。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>baseclass</parameter></term>
     <listitem>
      <para>
       拡張したい DOM クラス。クラス名の一覧は、この章の導入部にあります。
      </para>
      <para>
       もちろん、DOMDocument を拡張したクラスを登録することはできません。
       しかし、拡張したクラスのインスタンスを作成することで、常にドキュメントを開始できます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>extendedclass</parameter></term>
     <listitem>
      <para>
       拡張したクラスの名前。&null; を渡した場合は、
       それまでに <parameter>baseclass</parameter>
       を拡張して作成したすべてのクラスが削除されます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PHP 5.2.2</entry>
       <entry>
        5.2.2 より前のバージョンでは、同一の <parameter>baseclass</parameter>
        を継承した新しいクラスを登録する際には、以前に登録されていた
        <parameter>extendedclass</parameter> の登録を解除する必要がありました。
       </entry>
      </row>
<!--
      <row>
       <entry>...</entry>
       <entry>
        ...
       </entry>
      </row>
-->
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>新しいメソッドを DOMElement に追加し、コードを書きやすくする</title>
    <programlisting role="php">
<![CDATA[
<?php

class myElement extends DOMElement {
   function appendElement($name) { 
      return $this->appendChild(new myElement($name));
   }
}

class myDocument extends DOMDocument {
   function setRoot($name) { 
      return $this->appendChild(new myElement($name));
   }
}

$doc = new myDocument();
$doc->registerNodeClass('DOMElement', 'myElement');

// これ以降、他の要素への要素の追加が一回のメソッドコールでできるようになります!
$root = $doc->setRoot('root');
$child = $root->appendElement('child');
$child->setAttribute('foo', 'bar');

echo $doc->saveXML();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="xml">
<![CDATA[
<?xml version="1.0"?>
<root><child foo="bar"/></root>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
