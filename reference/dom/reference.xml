<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.30 Maintainer: takagi Status: ready -->
<!-- Purpose: xml -->
<!-- Membership: bundled, external -->

 <reference xml:id="ref.dom" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>DOM 関数</title>
  <titleabbrev>DOM</titleabbrev>

  <partintro>
   <section xml:id="dom.intro">
    &reftitle.intro;
    <para>
     DOM 拡張モジュールを使用すると、DOM API
     を使用した XML ドキュメントの操作を PHP 5 で行えます。
    </para>
    <para>
     PHP 4 では <link linkend="ref.domxml">DOM XML</link> を使用します。
    </para>
   </section>

   <section xml:id="dom.installation">
    &reftitle.install;
    &no.install;
   </section>

   <section xml:id='dom.classes'>
    &reftitle.classes;
    <para>
     このモジュールの API は、<link
     xlink:href="&url.dom3.spec;">DOM Level 3</link> の標準規格と可能な限り
     一致させています。そのため、API は完全にオブジェクト指向となっています。
     このモジュールを使用する際は、DOM 標準規格を意識することが大切です。
    </para>
    <para>
     このモジュールで定義されている多くのクラスについて以下の表で説明します。
     DOM 標準規格に相当するクラスについては DOMxxx という名前がつけられています。
    </para>

    <section xml:id='dom.class.domattr'>
     <title><classname>DOMAttr</classname></title>
     <para>
      <classname>DOMNode</classname> を継承します。<classname>DOMAttr</classname>
      インターフェースは、<classname>DOMElement</classname> オブジェクトの
      属性を表します。
     </para>
     <section xml:id='dom.class.domattr.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domattr-construct' /> -
         新しい DOMAttr オブジェクトを作成する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domattr.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domattr-isid' /> -
         属性が定義済みの ID であるかどうかを調べる</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domattr.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>name</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>属性の名前</entry>
         </row>
         <row>
          <entry>ownerElement</entry>
          <entry>DOMElement</entry>
          <entry>yes</entry>
          <entry>属性を保持する要素</entry>
         </row>
         <row>
          <entry>schemaTypeInfo</entry>
          <entry>bool</entry>
          <entry>yes</entry>
          <entry>未実装です。常に &null; を返します。</entry>
         </row>
         <row>
          <entry>specified</entry>
          <entry>bool</entry>
          <entry>yes</entry>
          <entry>未実装です。常に &null; を返します。</entry>
         </row>
         <row>
          <entry>value</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry>属性の値</entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </section>
    </section>
    
    <section xml:id='dom.class.domcharacterdata'>
     <title><classname>DOMCharacterData</classname></title>
     <para>
      <classname>DOMNode</classname> を継承します。
     </para>
     <section xml:id='dom.class.domcharacterdata.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domcharacterdata-appenddata' /> -
         ノードの文字データの最後に文字列を追加する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domcharacterdata-deletedata' /> -
         指定した範囲の文字列をノードから削除する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domcharacterdata-insertdata' /> -
         指定した 16 ビット単位のオフセットに、文字列を挿入する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domcharacterdata-replacedata' /> -
         DOMCharacterData ノードの文字列の一部を置換する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domcharacterdata-substringdata' /> -
         ノードから指定した範囲のデータを抽出する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domcharacterdata.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>data</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry>ノードの内容</entry>
         </row>
         <row>
          <entry>length</entry>
          <entry>int</entry>
          <entry>yes</entry>
          <entry>内容の長さ</entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </section>
    </section>

    <section xml:id='dom.class.domcomment'>
     <title><classname>DOMComment</classname></title>
     <para>
      <classname>DOMCharacterData</classname> を継承します。
     </para>
     <section xml:id='dom.class.domcomment.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domcomment-construct' /> - 新しい DOMComment オブジェクトを作成する</para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id='dom.class.domdocument'>
     <title><classname>DOMDocument</classname></title>
     <para>
      <classname>DOMNode</classname> を継承します。
     </para>
     <section xml:id='dom.class.domdocument.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domdocument-construct' /> - 新しい DOMDocument オブジェクトを作成する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domdocument.methods'>
      &reftitle.methods;
      <itemizedlist>
      <listitem>
       <para><xref linkend='function.dom-domdocument-createattribute' /> - 新しい属性を作成する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-createattributens' /> - 関連付けられた名前空間に新しい属性を作成する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-createcdatasection' /> - 新しい cdata ノードを作成する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-createcomment' /> - 新しい comment ノードを作成する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-createdocumentfragment' /> - 新しい文書片を作成する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-createelement' /> - 新しい要素ノードを作成する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-createelementns' /> - 関連付けられた名前空間に新しい要素ノードを作成する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-createentityreference' /> - 新しいエンティティ参照ノードを作成する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-createprocessinginstruction' /> - 新しい PI ノードを作成する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-createtextnode' /> - 新しいテキストノードを作成する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-getelementbyid' /> - id に対応する要素を検索する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-getelementsbytagname' /> - 指定したタグ名に対応するすべての要素を検索する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-getelementsbytagnamens' /> - 指定した名前空間で、タグ名に対応するすべての要素を検索する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-importnode' /> - 現在のドキュメントにノードをインポートする</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-load' /> - ファイルから XML を読み込む</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-loadhtml' /> - 文字列から HTML を読み込む</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-loadhtmlfile' /> - ファイルから HTML を読み込む</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-loadxml' /> - 文字列から XML を読み込む</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-normalizedocument' /> - ドキュメントを正規化する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-relaxngvalidate' /> - ドキュメントを relaxNG で検証する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-relaxngvalidatesource' /> - ドキュメントを relaxNG で検証する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-registernodeclass' /> - 基底ノード型の作成に使用する拡張クラスを登録する (DOM 標準ではありません)</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-save' /> - 内部の XML ツリーをファイルに出力する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-savehtml' /> - 内部のドキュメントを HTML 形式の文字列として出力する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-savehtmlfile' /> - 内部のドキュメントを HTML 形式でファイルに出力する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-savexml' /> - 内部の XML ツリーを文字列として出力する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-schemavalidate' /> - スキーマに基づいてドキュメントを検証する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-schemavalidatesource' /> - スキーマに基づいてドキュメントを検証する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-validate' /> - DTD に基づいてドキュメントを検証する</para>
      </listitem>
      <listitem>
       <para><xref linkend='function.dom-domdocument-xinclude' /> - DOMDocument オブジェクト内の XIncludes を置換する</para>
      </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domdocument.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>actualEncoding</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry></entry>
         </row>
         <row>
          <entry>config</entry>
          <entry>DOMConfiguration</entry>
          <entry>yes</entry>
          <entry></entry>
         </row>
         <row>
          <entry>doctype</entry>
          <entry>DOMDocumentType</entry>
          <entry>yes</entry>
          <entry>
           このドキュメントに関連付けられた文書型宣言
          </entry>
         </row>
         <row>
          <entry>documentElement</entry>
          <entry>DOMElement</entry>
          <entry>yes</entry>
          <entry>
           ドキュメントの子ノードであるドキュメント要素に対し、
           直接アクセスするために便利な属性
          </entry>
         </row>
         <row>
          <entry>documentURI</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry>
           ドキュメントの位置。未定義の場合は &null;
          </entry>
         </row>
         <row>
          <entry>encoding</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry></entry>
         </row>
         <row>
          <entry>formatOutput</entry>
          <entry>bool</entry>
          <entry>no</entry>
          <entry></entry>
         </row>
         <row>
          <entry>implementation</entry>
          <entry>DOMImplementation</entry>
          <entry>yes</entry>
          <entry>
           このドキュメントを処理する
           <classname>DOMImplementation</classname> オブジェクト
          </entry>
         </row>
         <row>
          <entry>preserveWhiteSpace</entry>
          <entry>bool</entry>
          <entry>no</entry>
          <entry>余分な空白を取り除かない。デフォルトは &true;</entry>
         </row>
         <row>
          <entry>recover</entry>
          <entry>bool</entry>
          <entry>no</entry>
          <entry></entry>
         </row>
         <row>
          <entry>resolveExternals</entry>
          <entry>bool</entry>
          <entry>no</entry>
          <entry>
           文書型宣言で外部エンティティを読み込む際に &true; を設定する。
           XML ドキュメントに文字エンティティを含める際に便利です。
          </entry>
         </row>
         <row>
          <entry>standalone</entry>
          <entry>bool</entry>
          <entry>no</entry>
          <entry></entry>
         </row>
         <row>
          <entry>strictErrorChecking</entry>
          <entry>bool</entry>
          <entry>no</entry>
          <entry>エラー時に DOMException をスローする。デフォルトは &true;</entry>
         </row>
         <row>
          <entry>substituteEntities</entry>
          <entry>bool</entry>
          <entry>no</entry>
          <entry></entry>
         </row>
         <row>
          <entry>validateOnParse</entry>
          <entry>bool</entry>
          <entry>no</entry>
          <entry>DTD を読み込んで検証する。デフォルトは &false;</entry>
         </row>
         <row>
          <entry>version</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry></entry>
         </row>
         <row>
          <entry>xmlEncoding</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           XML 宣言の一部として、このドキュメントのエンコーディングを
           指定する属性。指定されていない場合や不明な場合 (たとえば
           ドキュメントがメモリ上に存在する場合など) は &null;
          </entry>
         </row>
         <row>
          <entry>xmlStandalone</entry>
          <entry>bool</entry>
          <entry>no</entry>
          <entry>
           XML 宣言の一部として、このドキュメントがスタンドアローンか
           どうかを指定する。指定されていない場合は  &false;
          </entry>
         </row>
         <row>
          <entry>xmlVersion</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry>
           XML 宣言の一部として、このドキュメントのバージョン番号を指定する。
           バージョン番号が定義されておらず、ドキュメントが "XML" の機能を
           サポートしている場合は、値は "1.0"
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </section>
    </section>

    <section xml:id='dom.class.domdocumentfragment'>
     <title><classname>DOMDocumentFragment</classname></title>
     <para>
      <classname>DOMNode</classname> を継承します。
     </para>
     <section xml:id='dom.class.domdocumentfragment.methods'>
      &reftitle.methods;
      <itemizedlist>
      <listitem>
       <para><xref linkend='function.dom-domdocumentfragment-appendxml' /> - 生の XML データを追加する (DOM 標準ではありません)</para>
      </listitem>
      </itemizedlist>
     </section>
    </section>

     <section xml:id='dom.class.domdocumenttype'>
     <title><classname>DOMDocumentType</classname></title>
     <para>
      <classname>DOMNode</classname> を継承します。
     </para>
     <para>
      各 <classname>DOMDocument</classname> は
      <literal>doctype</literal> 属性を保持しており、その値は &null; あるいは
     <classname>DOMDocumentType</classname> オブジェクトです。
    </para>
     <section xml:id='dom.class.domdocumenttype.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>publicId</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>外部サブセットの公開 ID</entry>
         </row>
         <row>
          <entry>systemId</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           外部サブセットのシステム ID。完全 URI である場合とそうでない場合がある。
          </entry>
         </row>
         <row>
          <entry>name</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           DTD の名前。すなわち、<literal>DOCTYPE</literal> キーワードに続く値
          </entry>
         </row>
         <row>
          <entry>entities</entry>
          <entry>DOMNamedNodeMap</entry>
          <entry>yes</entry>
          <entry>
           DTD で宣言されている一般エンティティ (外部・内部とも) を含む
           <classname>DOMNamedNodeMap</classname>
          </entry>
         </row>
         <row>
          <entry>notations</entry>
          <entry>DOMNamedNodeMap</entry>
          <entry>yes</entry>
          <entry>
           DTD で宣言されている記法を含む
           <classname>DOMNamedNodeMap</classname>
          </entry>
         </row>
         <row>
          <entry>internalSubset</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           内部サブセットを文字列として取得する。存在しない場合は null
           となる。区切りの角括弧は含まない。
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
     </section>
    </section>
    
    <section xml:id='dom.class.domelement'>
     <title><classname>DOMElement</classname></title>
     <para>
      <classname>DOMNode</classname> を継承します。
     </para>
     <section xml:id='dom.class.domelement.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domelement-construct' /> - 新しい DOMElement オブジェクトを作成する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domelement.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domelement-getattribute' /> - 属性の値を返す</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-getattributenode' /> - 属性ノードを返す</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-getattributenodens' /> - 属性ノードを返す</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-getattributens' /> - 属性の値を返す</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-getelementsbytagname' /> - タグ名から要素を取得する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-getelementsbytagnamens' /> - 名前空間 URI とローカル名から要素を取得する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-hasattribute' /> - 属性が存在するかどうかを調べる</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-hasattributens' /> - 属性が存在するかどうかを調べる</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-removeattribute' /> - 属性を削除する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-removeattributenode' /> - 属性を削除する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-removeattributens' /> - 属性を削除する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-setattribute' /> - 新しい属性を追加する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-setattributenode' /> - 新しい属性ノードを要素に追加する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-setattributenodens' /> - 新しい属性ノードを要素に追加する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-setattributens' /> - 新しい属性を追加する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-setidattribute' /> - ID 属性を宣言する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-setidattributenode' /> - ID 属性を宣言する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domelement-setidattributens' /> - ID 属性を宣言する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domelement.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>schemaTypeInfo</entry>
          <entry>bool</entry>
          <entry>yes</entry>
          <entry>未実装。常に &null; を返す。</entry>
         </row>
         <row>
          <entry>tagName</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>要素名</entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
     </section>
    </section>    

    <section xml:id='dom.class.domentity'>
     <title><classname>DOMEntity</classname></title>
     <para>
      <classname>DOMNode</classname> を継承します。
     </para>
     <para>
      このインターフェースは、XML ドキュメント内の既知のエンティティを表します。
      パース済みかどうかは関係ありません。
     </para>
     <section xml:id='dom.class.domentity.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>publicId</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           エンティティに関連付けられているパブリック ID が存在すればその値、
           それ以外の場合は &null;
          </entry>
         </row>
         <row>
          <entry>systemId</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           エンティティに関連付けられているシステム ID が存在すればその値、
           それ以外の場合は &null;。これは完全な URI かもしれないし、
           そうでないかもしれない。
          </entry>
         </row>
         <row>
          <entry>notationName</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           パースされていないエンティティの場合はそのエンティティの名前、
           パース済みのエンティティの場合は &null;
          </entry>
         </row>
         <row>
          <entry>actualEncoding</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry>
           外部でパースされたエンティティの場合は、このエンティティの
           パース時に使用されたエンコーディングを指定する属性。内部
           サブセットからのエンティティであったり未知のエンティティで
           あった場合は &null;
          </entry>
         </row>
         <row>
          <entry>encoding</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           外部でパースされたエンティティの場合は、テキスト宣言の一部として
           このエンティティのエンコーディングを指定する属性。それ以外の
           場合は &null;
          </entry>
         </row>
         <row>
          <entry>version</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           外部でパースされたエンティティの場合は、テキスト宣言の一部として
           このエンティティのバージョン番号を指定する属性。それ以外の場合は
           &null;
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
     </section>
    </section>
    
    <section xml:id='dom.class.domentityreference'>
     <title><classname>DOMEntityReference</classname></title>
     <para>
      <classname>DOMNode</classname> を継承します。
     </para>
     <section xml:id='dom.class.domentityreference.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domentityreference-construct' /> - 新しい DOMEntityReference オブジェクトを作成する</para>
       </listitem>
      </itemizedlist>
     </section>
    </section>
    
    <section xml:id='dom.class.domexception'>
     <title><classname>DOMException</classname></title>
     <para>
      しかるべき状況、すなわち論理的に不可能な操作を行った際などの場合に
      DOM 操作は例外を発生させます。
     </para>
     <para>
      <xref linkend="language.exceptions"/> も参照ください。
     </para>
     <section xml:id='dom.class.domexception.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>code</entry>
          <entry>int</entry>
          <entry>yes</entry>
          <entry>発生したエラーの型を示す整数値</entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
     </section>
    </section>

    <section xml:id='dom.class.domimplementation'>
     <title><classname>DOMImplementation</classname></title>
     <para>
      <classname>DOMImplementation</classname> インターフェースは、個々の
      ドキュメントオブジェクトモデルのインスタンス独自の操作を行うための
      メソッド群を提供します。
     </para>
     <section xml:id='dom.class.domimplementation.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domimplementation-construct' /> - 新しい DOMImplementation オブジェクトを作成する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domimplementation.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domimplementation-createdocument' /> - 指定した型とドキュメント要素の DOMDocument オブジェクトを作成する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domimplementation-createdocumenttype' /> - 空の DOMDocumentType オブジェクトを作成する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domimplementation-hasfeature' /> - DOM 実装が、特定の機能を実装しているかどうかを調べる</para>
       </listitem>
      </itemizedlist>
     </section>
    </section>
    
    <section xml:id='dom.class.domnamednodemap'>
     <title><classname>DOMNamedNodeMap</classname></title>
     <section xml:id='dom.class.domnamednodemap.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domnamednodemap-getnameditem' /> - 名前からノードを取得する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnamednodemap-getnameditemns' /> - ローカル名と名前空間 URI からノードを取得する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnamednodemap-item' /> - インデックスからノードを取得する</para>
       </listitem>
      </itemizedlist>
     </section>
    </section>
    
<!--    <section xml:id='dom.class.domnamelist'>
     <title><classname>DOMNameList</classname></title>
     <para>
      
     </para>
     <section xml:id='dom.class.domnamelist.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domnamelist-getname' /> - </para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnamelist-getnamespaceuri' /> - </para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domnamelist.properties'>
      &reftitle.properties;
      <table>
      <title/>
      <tgroup cols="4">
        <thead>
         <row>
          <entry>Name</entry>
          <entry>Type</entry>
          <entry>Read-only</entry>
          <entry>Description</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>length</entry>
          <entry>int</entry>
          <entry>yes</entry>
          <entry>
           The number of pairs (name and namespaceURI) in the list. The range
           of valid child node indices is 0 to <literal>length - 1</literal> 
           inclusive.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
     </section>
    </section>-->

    <section xml:id='dom.class.domnode'>
     <title><classname>DOMNode</classname></title>
     <section xml:id='dom.class.domnode.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domnode-appendchild' /> - 子要素群の最後に新しい子要素を追加する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-clonenode' /> - ノードを複製する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-hasattributes' /> - ノードが属性を保持しているかどうかを確かめる</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-haschildnodes' /> - ノードが子を保持しているかどうかを調べる</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-insertbefore' /> - 参照しているノードの前に
        新しい子を追加する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-isdefaultnamespace' /> - 指定した名前空間 URI
        がデフォルトの名前空間かどうかを調べる</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-issamenode' /> - 2 つのノードが等しいかどうかを調べる</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-issupported' /> - 指定したバージョンで機能がサポートされているかどうかを調べる</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-lookupnamespaceuri' /> - プレフィックスに基づいて、ノードの名前空間 URI を返す</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-lookupprefix' /> - 名前空間 URI に基づいて、ノードの名前空間プレフィックスを返す</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-normalize' /> - ノードを正規化する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-removechild' /> - 子要素群から子を削除する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domnode-replacechild' /> - 子を置き換える</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domnode.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>nodeName</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>現在のノード型の正確な名前を返す</entry>
         </row>
         <row>
          <entry>nodeValue</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry>その型に応じてノードの値を返す</entry>
         </row>
         <row>
          <entry>nodeType</entry>
          <entry>int</entry>
          <entry>yes</entry>
          <entry>ノードの型を、定義済みの定数 XML_xxx_NODE のいずれかで返す</entry>
         </row>
         <row>
          <entry>parentNode</entry>
          <entry>DOMNode</entry>
          <entry>yes</entry>
          <entry>このノードの親を返す</entry>
         </row>
         <row>
          <entry>childNodes</entry>
          <entry>DOMNodeList</entry>
          <entry>yes</entry>
          <entry>
           このノードのすべての子を含む <classname>DOMNodeList</classname>。
           子が存在しない場合は、空の <classname>DOMNodeList</classname>
          </entry>
         </row>
         <row>
          <entry>firstChild</entry>
          <entry>DOMNode</entry>
          <entry>yes</entry>
          <entry>
           このノードの最初の子。存在しない場合は &null; を返す
          </entry>
         </row>
         <row>
          <entry>lastChild</entry>
          <entry>DOMNode</entry>
          <entry>yes</entry>
          <entry>
           このノードの最後の子。存在しない場合は &null; を返す
          </entry>
         </row>
         <row>
          <entry>previousSibling</entry>
          <entry>DOMNode</entry>
          <entry>yes</entry>
          <entry>
           このノードの直前のノード。存在しない場合は &null; を返す
          </entry>
         </row>
         <row>
          <entry>nextSibling</entry>
          <entry>DOMNode</entry>
          <entry>yes</entry>
          <entry>
           このノードの直後のノード。存在しない場合は &null; を返す
          </entry>
         </row>
         <row>
          <entry>attributes</entry>
          <entry>DOMNamedNodeMap</entry>
          <entry>yes</entry>
          <entry>
           このノードが <classname>DOMElement</classname> の場合は
           ノードの属性を含む <classname>DOMNamedNodeMap</classname>、
           それ以外の場合は &null;
          </entry>
         </row>
         <row>
          <entry>ownerDocument</entry>
          <entry>DOMDocument</entry>
          <entry>yes</entry>
          <entry>
           このノードに関連付けられている <classname>DOMDocument</classname>
           オブジェクト
          </entry>
         </row>
         <row>
          <entry>namespaceURI</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           このノードの名前空間 URI。指定されていない場合は &null;
          </entry>
         </row>
         <row>
          <entry>prefix</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry>
           このノードの名前空間プレフィックス。指定されていない場合は &null;
          </entry>
         </row>
         <row>
          <entry>localName</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           このノードの名前のローカル部分を返す
          </entry>
         </row>
         <row>
          <entry>baseURI</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry>
           このノードの完全なベース URI。もし実装が完全な URL を
           できなかった場合は &null;
          </entry>
         </row>
         <row>
          <entry>textContent</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry>
           このノードとその子孫ノードのテキストを返す
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </section>
    </section>

    <section xml:id='dom.class.domnodelist'>
     <title><classname>DOMNodeList</classname></title>
     <para>
      
     </para>
     <section xml:id='dom.class.domnodelist.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domnodelist-item' /> - インデックスで指定したノードを取得する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domnodelist.properties'>
      &reftitle.properties;
      <table>
      <title/>
      <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>length</entry>
          <entry>int</entry>
          <entry>yes</entry>
          <entry>
           リスト内のノードの数。有効な子ノードのインデックスの範囲は
           0 以上 <literal>length - 1</literal> 以下
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
     </section>
    </section>
    
    <section xml:id='dom.class.domnotation'>
     <title><classname>DOMNotation</classname></title>
     <para>
      <classname>DOMNode</classname> を継承します。
     </para>
     <section xml:id='dom.class.domnotation.properties'>
      &reftitle.properties;
      <table>
      <title/>
      <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>publicId</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry></entry>
         </row>
         <row>
          <entry>systemId</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry></entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
     </section>
    </section>
    
    <section xml:id='dom.class.domprocessinginstruction'>
     <title><classname>DOMProcessingInstruction</classname></title>
     <para>
      <classname>DOMNode</classname> を継承します。
     </para>
     <section xml:id='dom.class.domprocessinginstruction.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domprocessinginstruction-construct' /> - 新しい DOMProcessingInstruction オブジェクトを作成する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domprocessinginstruction.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>target</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry></entry>
         </row>
         <row>
          <entry>data</entry>
          <entry>string</entry>
          <entry>no</entry>
          <entry></entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
     </section>
    </section>
   
    <section xml:id='dom.class.domtext'>
     <title><classname>DOMText</classname></title>
     <para>
      <classname>DOMCharacterData</classname> を継承します。
     </para>
     <section xml:id='dom.class.domtext.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domtext-construct' /> - 新しい DOMText オブジェクトを作成する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domtext.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domtext-iswhitespaceinelementcontent' /> - このテキストノードが空白を含むかどうかを示す</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domtext-splittext' /> - 指定したオフセットでノードを 2 つに分割する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domtext.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>wholeText</entry>
          <entry>string</entry>
          <entry>yes</entry>
          <entry></entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
     </section>
    </section>
    
    <section xml:id='dom.class.domxpath'>
     <title><classname>DOMXPath</classname></title>
     <para>
     </para>
     <section xml:id='dom.class.domxpath.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domxpath-construct' /> - 新しい DOMXPath オブジェクトを作成する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domxpath.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><xref linkend='function.dom-domxpath-registernamespace' /> - DOMXpath オブジェクトの名前空間を登録する</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domxpath-evaluate' /> - XPath 式を評価し、結果を返す</para>
       </listitem>
       <listitem>
        <para><xref linkend='function.dom-domxpath-query' /> - XPath 式を評価する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='dom.class.domxpath.properties'>
      &reftitle.properties;
      <table>
       <title/>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>名前</entry>
          <entry>型</entry>
          <entry>読み込み専用</entry>
          <entry>説明</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>document</entry>
          <entry>DOMDocument</entry>
          <entry></entry>
          <entry></entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
     </section>
    </section>
    
   </section>
   
   <section xml:id="dom.examples">
    &reftitle.examples;
    <para>
     このリファレンスの多くの例では XML ファイルを使用します。その際には、
     以下のような形式の <filename>book.xml</filename> を使用します。
    </para>
    <para>
     <example>
      <title>book.xml</title>
      <programlisting role="xml">
<![CDATA[
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
 "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
]>
<book id="listing">
 <title>My lists</title>
 <chapter id="books">
  <title>My books</title>
  <para>
   <informaltable>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>Title</entry>
       <entry>Author</entry>
       <entry>Language</entry>
       <entry>ISBN</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>The Grapes of Wrath</entry>
       <entry>John Steinbeck</entry>
       <entry>en</entry>
       <entry>0140186409</entry>
      </row>
      <row>
       <entry>The Pearl</entry>
       <entry>John Steinbeck</entry>
       <entry>en</entry>
       <entry>014017737X</entry>
      </row>
      <row>
       <entry>Samarcande</entry>
       <entry>Amine Maalouf</entry>
       <entry>fr</entry>
       <entry>2253051209</entry>
      </row>
      <!-- TODO: I have a lot of remaining books to add.. -->
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </chapter>
</book>
]]>
      </programlisting>
     </example>
    </para>
   </section>
   
   
  &reference.dom.constants;
   
  </partintro>

&reference.dom.functions;
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
