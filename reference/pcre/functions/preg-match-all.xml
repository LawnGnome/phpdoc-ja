<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/pcre.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.2 Maintainer: hirokawa Status: ready -->
<refentry id="function.preg-match-all">
 <refnamediv>
  <refname>preg_match_all</refname>
  <refpurpose>グローバル正規表現検索を行う</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>int</type><methodname>preg_match_all</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>subject</parameter></methodparam>
   <methodparam><type>array</type><parameter>matches</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>subject</parameter>において
   <parameter>pattern</parameter>で指定した正規表現にマッチする
   かどうかを検索し、<parameter>flags</parameter>で指定した
   順番で <parameter>matches</parameter>に結果を代入します。
  </para>
  <para>
   最初にマッチするものが見つかった後、最後にマッチしたパターンの後から
   検索が続行されます。
  </para>
  <para>
   <parameter>flags</parameter>は、以下のフラグの組み合わせとなります。
   (<constant>PREG_PATTERN_ORDER</constant>を
   <constant>PREG_SET_ORDER</constant>と組み合わせて使用することは無意
   味であることに注意して下さい。)
   <variablelist>
    <varlistentry>
     <term>PREG_PATTERN_ORDER</term>
     <listitem>
      <para>
       $matches[0] がパターン全体にマッチする配列であり、
       $matches[1] が最初の括弧で括られたサブパターンにマッチする
       文字列の配列であり、といった順番となります。
       <informalexample>
        <programlisting role="php">
<![CDATA[
preg_match_all ("|<[^>]+>(.*)</[^>]+>|U", 
    "<b>example: </b><div align=left>this a test</div>", 
    $out, PREG_PATTERN_ORDER);
print $out[0][0].", ".$out[0][1]."\n";
print $out[1][0].", ".$out[1][1]."\n";
]]>
        </programlisting>
        <para>
         この例の出力は以下のようになります。
         <screen>
<![CDATA[
<b>example: </b>, <div align=left>this is a test</div>
example: , this is a test
]]>
	  </screen>
	 $out[0]は、パターン全体にマッチする文字列の配列を有しており、
	 $out[1]は、タグで囲まれた文字列の配列を有しています。
	</para>
       </informalexample>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>PREG_SET_ORDER</term>
     <listitem>
      <para>
       $matches[0]は最初にマッチした組の配列であり、
       $matches[1]は二番目にマッチした組の配列であり、
       といった順序となります。
       <informalexample>
        <programlisting role="php">
<![CDATA[
preg_match_all ("|<[^>]+>(.*)</[^>]+>|U",
    "<b>example: </b><div align=left>this a test</div>", 
    $out, PREG_SET_ORDER);
print $out[0][0].", ".$out[0][1]."\n";
print $out[1][0].", ".$out[1][1]."\n";
]]>
        </programlisting>
       </informalexample>
       この例の出力は以下のようになります。
       <informalexample>
        <programlisting role="php">
<![CDATA[
<b>example: </b>, example: 
<div align=left>this is a test</div>, this is a test
]]>
        </programlisting>
       </informalexample>
       この場合、$matches[0] は最初にマッチした組であり、
       $matches[0][0] はパターン全体にマッチしたテキスト、
       $matches[0][1] は最初のサブパターンにマッチしたテキスト、
       といったようになります。同様に、$matches[1]は二番目にマッチした
       組といったようになります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>PREG_OFFSET_CAPTURE</term>
     <listitem>
      <para>
       このフラグが設定された場合、マッチする度に付随する文字列のオフ
       セットも返されます。これにより、返り値は配列となり、その各要素
       はマッチした文字列を要素<literal>0</literal>、
       <parameter>subject</parameter>の中でのその文字列オフセットを要
       素<literal>1</literal>とする配列となることに注意して下さい。
       このフラグは、<literal>PHP</literal> 4.3.0 以降で利用可能です。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   <parameter>flags</parameter>が指定されない場合、
   <constant>PREG_PATTERN_ORDER</constant>が指定されたことを仮定します。
  </para>
  <para>
   パターンがマッチした総数(ゼロとなる可能性もあります)を返します。ま
   たは、マッチしなかったか、エラーが発生した場合に&false;を返します。
  </para>
  <para>
   <example>
    <title>テキストから全ての電話番号を得る</title>
    <programlisting role="php">
<![CDATA[
preg_match_all ("/\(?  (\d{3})?  \)?  (?(1)  [\-\s] ) \d{3}-\d{4}/x",
               "Call 555-1212 or 1-800-555-1212", $phones);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>HTMLタグにマッチするものを見付ける(greedy)</title>
      <programlisting role="php">
<![CDATA[
// \\2 は後方参照の例です。これは、pcre に正規表現自体の括弧の2番目の
// 組、つまりこの場合は([\w]+)、にマッチします。文字列が二重引用符で括
// られているため、バックスラッシュの追加が必要です。
$html = "<b>bold text</b><a href=howdy.html>click me</a>";

preg_match_all ("/(<([\w]+)[^>]*>)(.*)(<\/\\2>)/", $html, $matches);

for ($i=0; $i< count($matches[0]); $i++) {
  echo "matched: ".$matches[0][$i]."\n";
  echo "part 1: ".$matches[1][$i]."\n";
  echo "part 2: ".$matches[3][$i]."\n";
  echo "part 3: ".$matches[4][$i]."\n\n";
}
]]>
      </programlisting>
     </example>
     この例の出力は以下となります。
     <programlisting>
<![CDATA[
matched: <b>bold text</b>
part 1: <b>
part 2: bold text
part 3: </b>

matched: <a href=howdy.html>click me</a>
part 1: <a href=howdy.html>
part 2: click me
part 3: </a>
]]>
     </programlisting>
    </para>
    <simpara>
     <function>preg_match</function>,
     <function>preg_replace</function>,
     <function>preg_split</function>も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
