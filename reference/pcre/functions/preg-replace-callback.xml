<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- splitted from ./ja/functions/pcre.xml, last change in rev 1.20 -->
<!-- EN-Revision: 1.13 Maintainer: hirokawa Status: ready -->
<!-- Credits: haruki -->
<refentry id="function.preg-replace-callback">
 <refnamediv>
  <refname>preg_replace_callback</refname>
  <refpurpose>
   正規表現検索を行い、コールバック関数を使用して置換を行う
  </refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>mixed</type><methodname>preg_replace_callback</methodname>
   <methodparam><type>mixed</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>callback</type><parameter>callback</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter></methodparam>
  </methodsynopsis>
  <para>
   この関数の動作は、ほぼ <function>preg_replace</function> と同じですが、
   <parameter>replacement</parameter> の代わりに
   <parameter>callback</parameter> を指定するところが異なります。
   このコールバック関数は、検索対象文字列でマッチした要素の配列が指定されて
   コールされます。このコールバック関数は、置換後の文字列を返す必要があります。
   その他のパラメータについては <function>preg_replace</function>
   を参照ください。
  </para>
  <example>
   <title><function>preg_replace_callback</function> の例</title>
   <programlisting role='php'>
<![CDATA[
<?php
  // このテキストは 2002 に使われていたものなのですが、
  // これを 2003 年対応の日付に変更したいのです
  $text = "エイプリルフールの日付は 04/01/2002 です\n";  
  $text.= "この前のクリスマスの日付は 12/24/2001 でした\n";  
  
  // コールバック関数
  function next_year($matches) {
    // 通常は、$matches[0] がマッチした全体を表します。
    // $matches[1] は、マッチした中で、パターン内の最初の '(...)'
    // にあてはまる部分を表します。それ以降も同様です。
    return $matches[1].($matches[2]+1);
  }

  echo preg_replace_callback(
              "|(\d{2}/\d{2}/)(\d{4})|", 
              "next_year",
              $text);

  // 結果はこうなります。
  // エイプリルフールの日付は 04/01/2003 です
  // この前のクリスマスの日付は 12/24/2002 でした
?>
]]>
   </programlisting>
  </example>
  <para>
   しばしば、1カ所だけで
   <function>preg_replace_callback</function>用の
   <parameter>callback</parameter>関数が必要となることがあります。
   この場合、<function>create_function</function>を使用して、
   <function>preg_replace_callback</function> をコールする際
   に使用するコールバック関数として匿名の関数を宣言することができます。
   このようにすることにより、コールに関するすべての情報を 1 ヶ所に集め、
   他の場所で使用されないコールバック関数名で関数の名前空間を
   汚染しないようにすることができます。
  </para>
  <example>
   <title>
    <function>preg_replace_callback</function> と
    <function>create_function</function>
   </title>
   <programlisting role='php'>
<![CDATA[
<?php
/* Unix 方式のコマンドラインフィルタです。
 * 段落の冒頭の大文字を、小文字に変換します。*/
$fp = fopen("php://stdin", "r") or die("標準入力から読み込めません");
while (!feof($fp)) {
    $line = fgets($fp);
    $line = preg_replace_callback(
        '|<p>\s*\w|',
        create_function(
            // ここでは単一引用符の使用が不可欠です。
            // そうでない場合は、$ をすべて \$ とエスケープします。
            '$matches',
            'return strtolower($matches[0]);'
        ),
        $line
    );
    echo $line;
}
fclose($fp);
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>
    カプセル化された BB code を処理するための、
    <function>preg_replace_callback</function> での再帰構造の使用
   </title>
   <programlisting role='php'>
<![CDATA[
<?php
$input = "通常の位置 [indent] 字下げ [indent] もっと字下げ [/indent] 字下げ [/indent] 通常の位置"; 

function parseTagsRecursive($input) 
{
    
    $regex = '#\[indent]((?:[^[]|\[(?!/?indent])|(?R))+)\[/indent]#';

    if (is_array($input)) {
        $input = '<div style="margin-left: 10px">'.$input[1].'</div>';
    }

    return preg_replace_callback($regex, 'parseTagsRecursive', $input);
}

$output = parseTagsRecursive($input);

echo $output;
?>
]]>
   </programlisting>
  </example>
  <note>
   <para>
    <parameter>count</parameter> 引数は PHP 5.1.0 以降で使用可能です。
   </para>
  </note>
  <para>
   <function>preg_replace</function>,
   <function>create_function</function>,
   &listendand; &seealso.callback; も参照してください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
