<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/pcre.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.2 Maintainer: hirokawa Status: ready -->
<refentry id="function.preg-split">
 <refnamediv>
  <refname>preg_split</refname>
  <refpurpose>正規表現で文字列を分割する</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>array</type><methodname>preg_split</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>pattern</parameter>にマッチした境界で分割した
   <parameter>subject</parameter>の部分文字列を有する配列を返します。
  </para>
  <para>
   <parameter>limit</parameter>が指定された場合、最大
   <parameter>limit</parameter>個の部分文字列のみが返されます。そして、
   <parameter>limit</parameter>が-1の場合は"制限がない"ことを意味しま
   す。これは、<parameter>flags</parameter>を指定する場合に便利です。
  </para>
  <para>
   <parameter>flags</parameter> は次のフラグを組み合わせたものとする
   ことが可能です。(ビット和演算子｜で組み合わせる):
   <variablelist>
    <varlistentry>
     <term>PREG_SPLIT_NO_EMPTY</term>
     <listitem>
      <simpara>
       このフラグが設定されている場合、空でないもののみが、
       <function>preg_split</function>により返されます。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>PREG_SPLIT_DELIM_CAPTURE</term>
     <listitem>
      <simpara>
       このフラグが設定されている場合、デリミタパターンの括弧で括ら
       れた式の値が取得され、同時に返されます。このフラグは4.0.5で追
       加されました。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>PREG_SPLIT_OFFSET_CAPTURE</constant></term>
     <listitem>
      <para>
       このフラグが設定された場合、マッチする度に付随する文字列のオフ
       セットも返されます。これにより、返り値は配列となり、その各要素
       はマッチした文字列を要素<literal>0</literal>、
       <parameter>subject</parameter>の中でのその文字列オフセットを要
       素<literal>1</literal>とする配列となることに注意してください。
       このフラグは、PHP 4.3.0 以降で利用可能です。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   <example>
    <title><function>preg_split</function> の例: 検索文字列の部分を取得</title>
    <programlisting role="php">
<![CDATA[
// " ", \r, \t, \n , \f を含むカンマまたは空白文字で句を分割します。
$keywords = preg_split ("/[\s,]+/", "hypertext language, programming");
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>文字列を文字要素に分割</title>
    <programlisting role="php">
<![CDATA[
$str = 'string';
$chars = preg_split('//', $str, -1, PREG_SPLIT_NO_EMPTY);
print_r($chars);
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>文字列をマッチするものとそのオフセットに分割</title>
    <programlisting role="php">
<![CDATA[
$str = 'hypertext language programming';
$chars = preg_split('/ /', $str, -1, PREG_SPLIT_OFFSET_CAPTURE);
print_r($chars);
]]>
    </programlisting>
    <para>
     この出力は以下のようになります。
    </para>
    <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => hypertext
            [1] => 0
        )

    [1] => Array
        (
            [0] => language
            [1] => 10
        )

    [2] => Array
        (
            [0] => programming
            [1] => 19
        )

)
]]>
    </screen>
   </example>
  </para>
  <note>
   <para>
    パラメータ <parameter>flags</parameter> は、PHP 4 Beta 3で追加さ
    れました。
   </para>
  </note>
  <para>
   <function>spliti</function>,
   <function>split</function>,
   <function>implode</function>,
   <function>preg_match</function>,
   <function>preg_match_all</function>,
   <function>preg_replace</function>も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
