<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 321707 Maintainer: takagi Status: ready -->

<phpdoc:classref xml:id="class.cairooperator" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>CairoOperator クラス</title>
 <titleabbrev>CairoOperator</titleabbrev>

 <partintro>

<!-- {{{ CairoOperator intro -->
  <section xml:id="cairooperator.intro">
   &reftitle.intro;
   <para>
    すべての描画操作に使う合成演算子を設定します。
   </para>
   <para>
       デフォルトの演算子は <constant>CairoOperator::OVER</constant> です。
   </para>
   <para>
       unbounded (境界なし) とマークされた演算子は、マスクレイヤーの外部であっても変更します
       (つまり、その影響はマスクレイヤー内だけにはおさまらないということです)。
       しかし、その影響はクリッピング領域の中に限定されます。
   </para>
   <para>
       ドキュメントをシンプルにするために、ここでの演算子の説明は
       演算前と演算後の画像がどひらも完全に透明あるいは完全に不透明であるときの振る舞いだけになっています。
       実際の実装は、半透明なレイヤーでも動作するようになっています。
       各演算子の挙動についてより詳しい説明 (数学的な定義など) が必要な場合は、
       http://cairographics.org/operators/ を参照ください。
   </para>
  </section>
<!-- }}} -->

  <section xml:id="cairooperator.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>CairoOperator</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>CairoOperator</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.clear">CairoOperator::CLEAR</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.source">CairoOperator::SOURCE</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.over">CairoOperator::OVER</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.in">CairoOperator::IN</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.out">CairoOperator::OUT</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.atop">CairoOperator::ATOP</varname>
     <initializer>5</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.dest">CairoOperator::DEST</varname>
     <initializer>6</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.dest-over">CairoOperator::DEST_OVER</varname>
     <initializer>7</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.dest-in">CairoOperator::DEST_IN</varname>
     <initializer>8</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.dest-out">CairoOperator::DEST_OUT</varname>
     <initializer>9</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.dest-atop">CairoOperator::DEST_ATOP</varname>
     <initializer>10</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.xor">CairoOperator::XOR</varname>
     <initializer>11</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.add">CairoOperator::ADD</varname>
     <initializer>12</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="cairooperator.constants.saturate">CairoOperator::SATURATE</varname>
     <initializer>13</initializer>
    </fieldsynopsis>
    
   </classsynopsis>
<!-- }}} -->

  </section>
  
<!-- {{{ CairoOperator constants -->
  <section xml:id="cairooperator.constants">
   &reftitle.constants;
   <variablelist>

    <varlistentry xml:id="cairooperator.constants.clear">
     <term><constant>CairoOperator::CLEAR</constant></term>
     <listitem>
      <para>対象レイヤーをクリアする (bounded)</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.source">
     <term><constant>CairoOperator::SOURCE</constant></term>
     <listitem>
      <para>対象レイヤーを置き換える (bounded) </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.over">
     <term><constant>CairoOperator::OVER</constant></term>
     <listitem>
      <para>元レイヤーを対象レイヤーの上に描画する (bounded) </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.in">
     <term><constant>CairoOperator::IN</constant></term>
     <listitem>
      <para>元画像を対象があったところに描画する (unbounded) </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.out">
     <term><constant>CairoOperator::OUT</constant></term>
     <listitem>
      <para>元画像を対象がなかったところに描画する (unbounded) </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.atop">
     <term><constant>CairoOperator::ATOP</constant></term>
     <listitem>
      <para>元画像を対象の上だけに描画する</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.dest">
     <term><constant>CairoOperator::DEST</constant></term>
     <listitem>
      <para>元画像を無視する</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.dest-over">
     <term><constant>CairoOperator::DEST_OVER</constant></term>
     <listitem>
      <para>対象画像を元画像の上に描画する</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.dest-in">
     <term><constant>CairoOperator::DEST_IN</constant></term>
     <listitem>
      <para>元画像があったところだけ、対象画像を残す (unbounded) </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.dest-out">
     <term><constant>CairoOperator::DEST_OUT</constant></term>
     <listitem>
      <para>元画像がなかったところだけ、対象画像を残す</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.dest-atop">
     <term><constant>CairoOperator::DEST_ATOP</constant></term>
     <listitem>
      <para>元画像の上にあったところだけ、対象画像を残す (unbounded) </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.xor">
     <term><constant>CairoOperator::XOR</constant></term>
     <listitem>
      <para>元画像と対象画像のどちらか一方だけがあった部分を表示する</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.add">
     <term><constant>CairoOperator::ADD</constant></term>
     <listitem>
      <para>元画像と対象画像を足し合わせる</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="cairooperator.constants.saturate">
     <term><constant>CairoOperator::SATURATE</constant></term>
     <listitem>
      <para><constant>CairoOperator::OVER</constant> と同様だが、元画像と対象画像の形が違うことを前提とする</para>
     </listitem>
    </varlistentry>

   </variablelist>
  </section>
<!-- }}} -->


 </partintro>

 

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
