<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.17 Maintainer: hirokawa Status: ready -->
  <refentry id="function.imagettftext">
   <refnamediv>
    <refname>imagettftext</refname>
    <refpurpose>TrueType フォントを使用したテキストの出力</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <methodsynopsis>
     <type>array</type><methodname>imagettftext</methodname>
     <methodparam><type>resource</type><parameter>image</parameter></methodparam>
     <methodparam><type>float</type><parameter>size</parameter></methodparam>
     <methodparam><type>float</type><parameter>angle</parameter></methodparam>
     <methodparam><type>int</type><parameter>x</parameter></methodparam>
     <methodparam><type>int</type><parameter>y</parameter></methodparam>
     <methodparam><type>int</type><parameter>color</parameter></methodparam>
     <methodparam><type>string</type><parameter>fontfile</parameter></methodparam>
     <methodparam><type>string</type><parameter>text</parameter></methodparam>
    </methodsynopsis>
    <para>
     <variablelist>
      <varlistentry>
       <term><parameter>image</parameter></term>
       <listitem>
        <simpara>
         イメージリソース。<function>imagecreatetruecolor</function>
         を参照ください。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>size</parameter></term>
       <listitem>
        <simpara>
         フォントサイズ。GD のバージョンに依存し、ピクセルサイズ
         (GD1) もしくはポイントサイズ (GD2) で指定する必要があります。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>angle</parameter></term>
       <listitem>
        <simpara>
         度で表される角度。0 度は左から右にテキストを読む方向になります。
         0 より大きな値は、時計廻りの回転を表現します。例えば、
         90 という値は下から上にテキストを読む方向になります。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>x</parameter></term>
       <listitem>
        <simpara>
         <parameter>x</parameter> と <parameter>y</parameter>
         で与えられた座標は、最初の文字のベースポイント
         (ほぼ文字の左下角) を定義します。
         この仕様は、<parameter>x</parameter> と <parameter>y</parameter>
         で最初の文字の右上角を定義する
         <function>imagestring</function> と異なっています。
         例えば、左上は 0, 0 となります。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>y</parameter></term>
       <listitem>
        <simpara>
         y 座標。これは文字の最下位置ではなく、
         フォントペースラインの位置を指定します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>color</parameter></term>
       <listitem>
        <simpara>
         カラーインデックス。負の数を使用した場合、アンチエイリアス機能が
         オフになります。
         <function>imagecolorallocate</function> を参照ください。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>fontfile</parameter></term>
       <listitem>
        <simpara>
         使用する TrueType フォントのパス。
        </simpara>
        <simpara>
         PHP が使用している GD ライブラリのバージョンに依存しており、<emphasis>
         <parameter>fontfile</parameter> が <literal>/</literal>
         で始まらない場合、ファイル名に <literal>.ttf</literal> が追加され、
         </emphasis>
         ライブラリはライブラリが定義したフォントパスから
         ファイル名を検索しようとします。
        </simpara>
        <simpara>
         2.0.18 以前のバージョンの GD ライブラリを使用している場合、
         異なるフォントファイルに対する 'パスの区切り文字' として
         セミコロンよりも <literal>space</literal> 文字が使用されます。
         この特徴が意図せずに使用されることで
         <literal>Warning: Could not find/open font</literal>
         という結果になります。
         これらの影響があるバージョンに対する唯一の解決方法は、
         スペースを含まないパスにフォントを移動させることです。
        </simpara>
        <para>
         フォントがスクリプトと同一ディレクトリに存在している場合のほとんどで、
         以下のトリックが問題の軽減に繋がります。
         <programlisting role="php">
<![CDATA[
<?php
// GD の環境変数を設定する
putenv('GDFONTPATH=' . realpath('.'));

// 使用するフォント名 (拡張子 .ttf がないことに注意)
$font = 'SomeFont';
?>
]]>
         </programlisting>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>text</parameter></term>
       <listitem>
        <simpara>
         テキスト文字列
        </simpara>
        <simpara>
         フォント内で 127 文字目以降の文字にアクセスするために
         10 進数文字参照を含めることができます。
         UTF-8 エンコーディングされた文字列を直接渡すことができます。
        </simpara>
        <simpara>
         フォントでサポートされていない文字が文字列で使用されている場合、
         その文字は白抜きの矩形に置き換えられます。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <function>imagettftext</function> は、テキストの境界を
     構成する 4 点を表す 8 個の要素を有する配列を返します。
     返される点は左上、右上、右下、左下の順番となります。
     点の座標は、角度によらず text に関する相対座標として表されます。
     つまり、"左上"は、text を水平に見た場合の左上の隅を表します。
    </para>
    <para>
     <example>
      <title><function>imagettftext</function> の例</title>
      <para>
       この例題スクリプトは、400x30 ピクセルの白地に Arial
       フォントを用いて、黒字 (グレーの影付き) で "Testing..."
       と書かれた PNG を作成します。
      </para>
      <programlisting role="php">
<![CDATA[
<?php
// コンテントタイプを設定する
header("Content-type: image/png");

// 画像を生成する
$im = imagecreatetruecolor(400, 30);

// いくつかの色を生成する
$white = imagecolorallocate($im, 255, 255, 255);
$grey = imagecolorallocate($im, 128, 128, 128);
$black = imagecolorallocate($im, 0, 0, 0);

// 描画する文字列
$text = 'Testing...';
// フォント自身のパスでパスを置き換える
$font = 'arial.ttf';

// テキストに影を付ける
imagettftext($im, 20, 0, 11, 21, $grey, $font, $text);

// テキストを追加する
imagettftext($im, 20, 0, 10, 20, $black, $font, $text);

// imagepng() を使用して imagejpeg() よりもクリアなテキストにする
imagepng($im);
imagedestroy($im);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     この関数は GD ライブラリと <ulink
     url="&url.freetype;">FreeType</ulink>
     ライブラリの両方が必要です。
    </para>
    <para>
     <function>imagettfbbox</function>
     も参照ください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
