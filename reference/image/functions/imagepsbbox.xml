<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337348 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xml:id="function.imagepsbbox" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagepsbbox</refname>
  <refpurpose>
   PostScript Type1 フォントを用いてテキスト矩形のバウンディングボックスを指定する
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>imagepsbbox</methodname>
   <methodparam><type>string</type><parameter>text</parameter></methodparam>
   <methodparam><type>resource</type><parameter>font</parameter></methodparam>
   <methodparam><type>int</type><parameter>size</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>array</type><methodname>imagepsbbox</methodname>
   <methodparam><type>string</type><parameter>text</parameter></methodparam>
   <methodparam><type>resource</type><parameter>font</parameter></methodparam>
   <methodparam><type>int</type><parameter>size</parameter></methodparam>
   <methodparam><type>int</type><parameter>space</parameter></methodparam>
   <methodparam><type>int</type><parameter>tightness</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle</parameter></methodparam>
  </methodsynopsis>
  <para>
   PostScript Type1 フォントを用いてテキスト矩形のバウンディングボックスを指定します。
  </para>
  <para>
   バウンディングボックスは文字メトリックスから得られる情報を用いて計算されますが、
   残念なことに実際に描画される文字列の描画結果とはわずかに異なる傾向があります。
   角度が 0 度の場合、全ての方向に 1 ピクセル分多く必要であると予想することができます。
  </para>
  &warn.removed.function-7-0-0;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>text</parameter></term>
     <listitem>
      <para>
       書き込みたいテキスト。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>font_index</parameter></term>
     <listitem>
      <para>
       <function>imagepsloadfont</function> が返すフォントリソース。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>
       <parameter>size</parameter> はピクセルで表します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>space</parameter></term>
     <listitem>
      <para>
       フォントが占める空間のデフォルト値を変更することが可能です。
       この値が元の値に付加されます。また、負の値とすることも可能です。
       文字間隔の単位で表されます。 1 単位は文字の矩形の 1/1000 です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>tightness</parameter></term>
     <listitem>
      <para>
       <parameter>tightness</parameter> により文字間の空白の量を制御できます。
       この量は元の文字幅に追加され、負の値とすることも可能です。
       文字間隔の単位で表されます。 1 単位は文字の矩形の 1/1000 です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle</parameter></term>
     <listitem>
      <para>
       <parameter>angle</parameter> は、度で指定します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   以下の要素を持つ配列を返します。
   <informaltable>
    <tgroup cols="2">
     <tbody>
      <row>
       <entry>0</entry>
       <entry>左側の x 座標</entry>
      </row>
      <row>
       <entry>1</entry>
       <entry>上側の y 座標</entry>
      </row>
      <row>
       <entry>2</entry>
       <entry>右側の x 座標</entry>
      </row>
      <row>
       <entry>3</entry>
       <entry>下側の y 座標</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>imagepsbbox</function> の使用</title>
   <programlisting role="php">
<![CDATA[
<?php
// 画像ハンドルを作成します
$im = imagecreatetruecolor(200, 200);

// 色を割り当てます
$black = imagecolorallocate($im, 0, 0, 0);
$white = imagecolorallocate($im, 255, 255, 255);

// PostScript フォントを読み込みます
$font = imagepsloadfont('font.pfm');

// フォント用のバウンディングボックスを作成します
$bbox = imagepsbbox('Sample text is simple', $font, 12);

// X 座標と Y 座標を定義します
$x = ($bbox[2] / 2) - 10;
$y = ($bbox[3] / 2) - 10;

// フォントを画像に書き込みます
imagepstext($im, 'Sample text is simple', $font, 12, $black, $white, $x, $y);

// 出力し、メモリを開放します
header('Content-type: image/png');

imagepng($im);
imagedestroy($im);
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.0.0</entry>
       <entry>
        PHP が T1Lib をサポートしなくなったので、この関数からも削除されました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &note.config.t1lib;
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imagepstext</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
