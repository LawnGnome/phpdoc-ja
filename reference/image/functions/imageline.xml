<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.8 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
  <refentry id="function.imageline">
   <refnamediv>
    <refname>imageline</refname>
    <refpurpose>直線の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>bool</type><methodname>imageline</methodname>
      <methodparam><type>resource</type><parameter>image</parameter></methodparam>
      <methodparam><type>int</type><parameter>x1</parameter></methodparam>
      <methodparam><type>int</type><parameter>y1</parameter></methodparam>
      <methodparam><type>int</type><parameter>x2</parameter></methodparam>
      <methodparam><type>int</type><parameter>y2</parameter></methodparam>
      <methodparam><type>int</type><parameter>color</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>imageline</function> は、色 <parameter>color</parameter>
     の画像 <parameter>image</parameter> 上に
     <parameter>color</parameter> 色で
     (<parameter>x1</parameter>, <parameter>y1</parameter>) から
     (<parameter>x2</parameter>, <parameter>y2</parameter>) に
     直線を描画します(左上が(0, 0)です)。
    </para>
    <example>
     <title>太い線を描画する</title>
     <programlisting role="php">
<![CDATA[
<?php

function imagelinethick($image, $x1, $y1, $x2, $y2, $color, $thick = 1)
{
    /* この方法は直行する線の場合のみうまく動作します
    imagesetthickness($image, $thick);
    return imageline($image, $x1, $y1, $x2, $y2, $color);
    */
    if ($thick == 1) {
        return imageline($image, $x1, $y1, $x2, $y2, $color);
    }
    $t = $thick / 2 - 0.5;
    if ($x1 == $x2 || $y1 == $y2) {
        return imagefilledrectangle($image, round(min($x1, $x2) - $t), round(min($y1, $y2) - $t), round(max($x1, $x2) + $t), round(max($y1, $y2) + $t), $color);
    }
    $k = ($y2 - $y1) / ($x2 - $x1); //y = kx + q
    $a = $t / sqrt(1 + pow($k, 2));
    $points = array(
        round($x1 - (1+$k)*$a), round($y1 + (1-$k)*$a),
        round($x1 - (1-$k)*$a), round($y1 - (1+$k)*$a),
        round($x2 + (1+$k)*$a), round($y2 - (1-$k)*$a),
        round($x2 + (1-$k)*$a), round($y2 + (1+$k)*$a),
    );
    imagefilledpolygon($image, $points, 4, $color);
    return imagepolygon($image, $points, 4, $color);
}

?>
]]>
     </programlisting>
    </example>
    <para>
     <function>imagecreatetruecolor</function> および
     <function>imagecolorallocate</function> も参照ください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
