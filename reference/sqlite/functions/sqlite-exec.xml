<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.9 Maintainer: shimooka Status: ready -->
<refentry id="function.sqlite-exec">
 <refnamediv>
  <refname>sqlite_exec</refname>
  <refname>SQLiteDatabase->exec</refname>
  <refpurpose>
   与えられたデータベースに対して結果を伴わないクエリを実行する
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>sqlite_exec</methodname>
   <methodparam><type>resource</type><parameter>dbhandle</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>sqlite_exec</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam><type>resource</type><parameter>dbhandle</parameter></methodparam>
  </methodsynopsis>
  <para>オブジェクト指向言語型スタイル (メソッド):</para>
  <classsynopsis>
   <ooclass><classname>SQLiteDatabase</classname></ooclass>
   <methodsynopsis>
    <type>bool</type><methodname>queryExec</methodname>
    <methodparam><type>string</type><parameter>query</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   与えられたデータベースハンドル (<parameter>dbhandle</parameter>
   パラメータで指定される) に対して
   <parameter>query</parameter> によって指定される SQL
   ステートメントを実行します。
  </para>
  <warning>
   <simpara>
    SQLiteは、セミコロンで区切られた複数のクエリを実行します。
    これにより、ファイルからロードするかスクリプトに埋め込んだ SQL
    をバッチ実行することができます。
   </simpara>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       実行するクエリを指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dbhandle</parameter></term>
     <listitem>
      <para>
       SQLite データベースリソース。手続きに従って、
       <function>sqlite_open</function> から返されます。
       このパラメータは、
       オブジェクト指向言語型メソッドを使用する場合は不要です。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  &sqlite.param-compat;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   この関数はブール型の結果を返します。
   成功時は &true;、失敗時は &false; を返します。
   もしレコードを返すクエリを実行する必要がある場合は
   <function>sqlite_query</function> を参照ください。
  </para>
  &sqlite.case-fold;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>手続き型言語スタイルでの例</title>
    <programlisting role="php">
<![CDATA[
<?php
$dbhandle = sqlite_open('mysqlitedb');
$query = sqlite_exec($dbhandle, "UPDATE users SET email='jDoe@example.com' WHERE username='jDoe'");
if (!$query) {
    exit('Error in query.');
} else {
    echo 'Number of rows modified: ', sqlite_changes($dbhandle);
}
?>]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>オブジェクト指向言語型スタイルでの例</title>
    <programlisting role="php">
<![CDATA[
<?php
$dbhandle = new SQLiteDatabase('mysqlitedb');
$query = $dbhandle->queryExec("UPDATE users SET email='jDoe@example.com' WHERE username='jDoe'");
if (!$query) {
    exit('Error in query.');
} else {
    echo 'Number of rows modified: ', $dbhandle->changes();
}
?>]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlite_query</function></member>
    <member><function>sqlite_unbuffered_query</function></member>
    <member><function>sqlite_array_query</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
