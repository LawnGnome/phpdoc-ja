<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.18 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xml:id="function.sqlite-create-function" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sqlite_create_function</refname>
  <refname>SQLiteDatabase->createFunction</refname>
  <refpurpose>
   SQLステートメントで使用するために"通常の"ユーザ定義関数を登録する
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>sqlite_create_function</methodname>
   <methodparam><type>resource</type><parameter>dbhandle</parameter></methodparam>
   <methodparam><type>string</type><parameter>function_name</parameter></methodparam>
   <methodparam><type>callback</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>num_args</parameter></methodparam>
  </methodsynopsis>
  <para>オブジェクト指向言語型スタイル (メソッド):</para>
  <classsynopsis>
   <ooclass><classname>SQLiteDatabase</classname></ooclass>
   <methodsynopsis>
    <type>void</type><methodname>createFunction</methodname>
    <methodparam><type>string</type><parameter>function_name</parameter></methodparam>
    <methodparam><type>callback</type><parameter>callback</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>num_args</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   <function>sqlite_create_function</function> により、SQLiteにPHP関数
   を<acronym>UDF</acronym> (ユーザ定義関数)として登録することが可能で
   す。この関数は、SQLステートメントの中からコールできます。
  </para>
  <para>
   UDFは、SELECTおよびUPDATEステートメント、そして、トリガーの中のよう
   に関数をコールできる全てのSQLステートメントで使用可能です。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dbhandle</parameter></term>
     <listitem>
      <para>
       SQLite データベースリソース。手続きに従って、
       <function>sqlite_open</function> から返されます。
       このパラメータは、
       オブジェクト指向言語型メソッドを使用する場合は不要です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>function_name</parameter></term>
     <listitem>
      <para>
       SQL ステートメントで使用する関数名
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       定義された SQL 関数を処理するためのコールバック関数
      </para>
      <note>
       <simpara>
        コールバック関数は SQLite で有効な型
        (例えば <link linkend="language.types.intro">スカラー型</link>)
        を返す必要があります
       </simpara>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>num_args</parameter></term>
     <listitem>
      <para>
       コールバック関数が規定の引数の数を受け入れるかどうかを決定するため
       SQLite パーサに渡すヒント
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  &sqlite.param-compat;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>sqlite_create_function</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
function md5_and_reverse($string)
{
    return strrev(md5($string));
}

if ($dbhandle = sqlite_open('mysqlitedb', 0666, $sqliteerror)) {

    sqlite_create_function($dbhandle, 'md5rev', 'md5_and_reverse', 1);

    $sql  = 'SELECT md5rev(filename) FROM files';
    $rows = sqlite_array_query($dbhandle, $sql);
} else {
    echo 'Error opening sqlite db: ' . $sqliteerror;
    exit;
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   この例では、文字列のMD5サムを計算し、順番を反転する関数が記述されています。
   このSQLステートメントが実行された場合、
   関数により変換されたファイル名の値を返します。
   <parameter>$rows</parameter> により返されるデータには、
   処理結果が含まれています。
  </para>
  <para>
   この技術の美しいところは、データのクエリーを実行した後で
   foreach() ループにより結果を処理する必要がないことです。
  </para>
  <para>
   PHP は、データベースが最初にオープンされる際に
   <literal>php</literal> という名前の特別な関数を登録します。
   このphp関数は、事前に登録することなしにあらゆるPHP関数をコールする
   ために使用可能です。
  </para>
  <para>
   <example>
    <title>PHP 関数の使用例</title>
    <programlisting role="php">
<![CDATA[
<?php
$rows = sqlite_array_query($dbhandle, "SELECT php('md5', filename) from files");
?>
]]>
    </programlisting>
    <para>
     この例は、データベースの各 <literal>filename</literal> カラムにつ
     いて <function>md5</function> をコールし、その結果を
     <parameter>$rows</parameter>に返します。
    </para>
   </example>
  </para>
  <note>
   <para>
    性能上の理由から、PHPはUDFとの間で送受信されるバイナリデータを自動
    的にエンコード/デコードしません。この方法でバイナリデータを処理す
    る必要がある場合、パラメータを手動でエンコード/デコードし、
    値を返すようにする必要があります。
    詳細については、<function>sqlite_udf_encode_binary</function>
    および<function>sqlite_udf_decode_binary</function>を参照して下さ
    い。
   </para>
  </note>
  <tip>
   <para>
    適用するアプリケーションの主要な要求が高い性能でない限り、バイナリ
    データの処理を行うためにUDFを使用することは推奨されません。
   </para>
  </tip>
  <tip>
   <para>
    SQLiteのネーティブSQL関数をオーバーライドするために
    <function>sqlite_create_function</function>および
    <function>sqlite_create_aggregate</function>も使用可能です。
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlite_create_aggregate</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
