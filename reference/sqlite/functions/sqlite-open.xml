<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.6 Maintainer: hirokawa Status: ready -->
<refentry id="function.sqlite-open">
 <refnamediv>
  <refname>sqlite_open</refname>
  <refpurpose>
   SQLiteデータベースをオープンする。データベースが存在しない場合は作
   成する
  </refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>resource</type><methodname>sqlite_open</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>&amp;errmessage</parameter></methodparam>
  </methodsynopsis>
  <para>
   成功した場合はリソース、エラーの場合は &false; を返します。
  </para>
  <para>
   <parameter>filename</parameter> パラメータは、データベースの名前です。
   この名前は、sqliteがデータを保存するファイルへの相対または絶対パス
   となります。このファイルが存在しない場合、sqliteはこれを作成します。
   データべーススキーマでデータを挿入または挿入したい場合はこのファイ
   ルへの書き込み権限が必要です。
  </para>
  <para>
   <parameter>mode</parameter> パラメータはファイルのモードを指定し、
   読み込みのみ可のモードでデータベースをオープンするために使用されます。
   現在、このパラメータはsqliteライブラリにより無視されます。
   modeのデフォルト値は、8進数<literal>0666</literal>で、
   <parameter>errmessage</parameter> パラメータにアクセスする必要があ
   る場合に推奨されます。
  </para>
  <para>
   <parameter>errmessage</parameter>は、参照渡しされ、エラーの場合に
   データベースがオープンできなかった理由を知るためのエラーメッセージ
   を保持するために設定されます。
  </para>
  <para>
   <example>
    <title><function>sqlite_open</function>の例</title>
    <programlisting role="php">
<![CDATA[
<?php
if ($db = sqlite_open('mysqlitedb', 0666, $sqliteerror)) { 
  sqlite_query($db,'CREATE TABLE foo (bar varchar(10))');
  sqlite_query($db,"INSERT INTO foo VALUES ('fnord')");
  $result = sqlite_query($db,'select bar from foo');
  var_dump(sqlite_fetch_array($result)); 
} else {
  die ($sqliteerror);
}
?>]]>
    </programlisting>
   </example>
  </para>
  <tip>
   <simpara>
    Unix環境では、SQLiteはシステムコールfork()を使用するスクリプトの影
    響を受け易いです。このようなスクリプトがある場合、
    子プロセスを生成する前にハンドルを閉じ、子プロセスまたは親プロセス
    から再度オープンすることが推奨されます。
    この問題に関する詳細な情報については、
    <literal>マルチスレッドおよびSQLite</literal>という名前のセクショ
    ンにある <ulink
     url="&url.sqlite.interface.c;">SQLiteライブラリへのC言語インターフェイス
    </ulink> を参照してください。
   </simpara>
  </tip>
  <tip>
   <simpara>
    NFSパーティションにマウントされたSQLiteデータベースを処理すること
    は推奨されません。ロックに関してNFSは著しい問題があるので、
    データベースを全くオープンすることさえできない可能性があります。ま
    た、成功した場合でも、ロックに関する動作は予測できない結果を生む可
    能性があります。
   </simpara>
  </tip>
  <note>
   <simpara>
    SQLiteライブラリ バージョン2.8.2以降、
    コンピュータのメモリ上にのみ存在するデータベースを作成するために
    <parameter>filename</parameter>に<literal>:memory:</literal>を指定
    することができます。
    これは、メモリ上のデータベースは処理完了時に破棄されるため、
    テンポラリな処理を行う場合には有用です。他のデータベースをロードし、
    データを相互に移動したりクエリを実行したりするために  
    <literal>ATTACH DATABASE</literal> SQLステートメントと組み合わせる
    場合にも有用です。
   </simpara>
  </note>
  <note>
   <simpara>
    SQLite は &safemode; および open_basedir に対応しています。
   </simpara>
  </note>

  <para>
   <function>sqlite_popen</function>,
   <function>sqlite_close</function>,
   <function>sqlite_query</function>も参照してください。
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
