<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka,hirokawa -->

<chapter xml:id="sqlite.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.setup;

 <!-- {{{ Requirements -->
 <section xml:id="sqlite.requirements">
  &reftitle.required;
  <para>
   SQLite 拡張モジュールは PHP 5 以降デフォルトで有効となります。
   それより前のバージョンでは SQLite ライブラリが必要でした。
  </para>
 </section>
 <!-- }}} -->

 <!-- {{{ Installation -->
 <section xml:id="sqlite.installation">
  &reftitle.install;
  <para>
   PHP 5 以降、この拡張モジュールはデフォルトで有効となりました。
   無効にしない限り、そのままで使用可能です。
  </para>
  <caution>
   <para>
    PECL 版の拡張モジュールは使ってはいけません。
    これは保守されていないからです。
    たとえ共有モジュールとしてコンパイルされていたとしても、
    PHP のソースに付属する SQLite 拡張モジュールを使いましょう。
    ソースは <literal>php-src-dir/ext/sqlite</literal>
    にあり、<link linkend="install.pecl.phpize">phpize</link>
    方式でビルドすることができます。
   </para>
  </caution>
  <para>
   Windows ユーザがこれらの関数を使用するには、<filename>php_sqlite.dll</filename>
   を &php.ini; で有効にしなければなりません。
   &pecl.windows.download;
  </para>
  <para>
   Windows 版では PDO も有効にする必要があります。PHP 5.1.0 以降、
   PDO に依存するようになったからです。つまり、最終的に
   &php.ini; ファイルはこのようになります。
   <informalexample>
    <programlisting role="ini">
<![CDATA[
extension=php_pdo.dll
extension=php_sqlite.dll
]]>
    </programlisting>
   </informalexample>
   Linux あるいは Unix オペレーティングシステムでは、
   もし PDO を共有モジュールとしてビルドしたのなら
   SQLite も共有モジュールとしてビルドする必要があります。
   そのためには、設定オプション
   <command>--with-sqlite=shared</command> を指定します。
  </para>
  <para>
   Windows 版の PHP 5.0.x ではこの拡張モジュールがデフォルトで有効となっており、
   <acronym>DLL</acronym> ファイルは不要です。
  </para>
  <para>
   SQLite 3 は、<link
   linkend="ref.pdo-sqlite">PDO SQLite</link> でサポートされます。
  </para>
  <note>
   <title>権限を持たないアカウントに対する Windows 版のインストール</title>
   <para>
    Windows オペレーティングシステムでは、権限のないアカウントは
    デフォルトで設定される <varname>TMP</varname> 環境変数を利用できません。
    これにより SQLite は Windows
    ディレクトリにテンポラリファイルを作成しますが、
    望まれるものではありません。
    そのため Web サーバもしくは Web
    サーバが動作しているユーザーアカウントに対して <varname>TMP</varname>
    環境変数を設定すべきです。
    もし、Apache を使用しているなら、&httpd.conf; ファイル内で
    <command>SetEnv</command> ディレクティブを使用することで実現可能です。
    例えば、次のような感じです。
    <informalexample>
     <programlisting role="apache-conf">
<![CDATA[
SetEnv TMP c:/temp
]]>
     </programlisting>
    </informalexample>
    もしサーバレベルでこの設定を行うことができないのであれば、
    スクリプト内で設定することができます。
    <informalexample>
     <programlisting role="php">
<![CDATA[
putenv('TMP=C:/temp');
]]>
     </programlisting>
    </informalexample>
    この設定は Web サーバがファイルを生成した後で書き込んだり削除したりする
    権限を持たせるディレクトリを指定する必要があります。
    そうでない場合、次のようなエラーメッセージを受け取るでしょう。
    <computeroutput>
     malformed database schema -
     unable to open a temporary database file for storing temporary tables
    </computeroutput>
   </para>
  </note>
 </section>
 <!-- }}} -->

 <!-- {{{ Configuration -->
 &reference.sqlite.ini;
 <!-- }}} -->

 <!-- {{{ Resources -->
 <section xml:id="sqlite.resources">
  &reftitle.resources;
  <para>
   SQLiteインターフェイスでは2種類のリソースが使用されています。
   最初のリソースはデータベース接続で、2番目は結果セットです。
  </para>
 </section>
 <!-- }}} -->

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

