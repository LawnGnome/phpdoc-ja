<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.2 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka,hirokawa -->

<chapter xml:id="sqlite.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.setup;

 <!-- {{{ Requirements -->
 <section xml:id="sqlite.requirements">
  &reftitle.required;
  <para>
   以下の関数を利用可能とするには、SQLiteサポートを有効にしてPHP
   をコンパイルするか、&php.ini; で動的に
   SQLite拡張モジュールをロードする必要があります。
  </para>
 </section>
 <!-- }}} -->

 <!-- {{{ Installation -->
 <section xml:id="sqlite.installation">
  &reftitle.install;
  <para>
   このパッケージに付属する INSTALL ファイルを読んでください。
   または、単に PEAR インストーラで <command>pecl install sqlite</command>
   を実行してください。SQLite 自体も既に含まれており、
   他のソフトウエアをインストールする必要は全くありません。
  </para>
  <para>
   Windowsユーザは、DLL版のSQLite拡張モジュールを次の場所から入手可能です。
   (<link xlink:href="&url.pecl.get.win;php_sqlite.dll">php_sqlite.dll</link>)
  </para>
  <para>
   PHP 5 では、SQLite 拡張モジュールとエンジンは PHP
   自身にバンドルされ、デフォルトでコンパイルされます。
   しかし、PHP 5.1.0 以降では
   手動で有効にする必要があります
   （共有モジュールとしてバンドルされるからです）。
   さらに、PHP 5.1.0 以降では SQLite は <link
   linkend="ref.pdo">PDO</link> に依存するようになりました。そのため、
   &php.ini; に以下の行を (この順に) 追加して PDO も
   有効にしておく必要があります。
   <informalexample>
    <programlisting role="ini">
<![CDATA[
extension=php_pdo.dll
extension=php_sqlite.dll
]]>
    </programlisting>
   </informalexample>
   Linux あるいは Unix オペレーティングシステムでは、
   もし PDO を共有モジュールとしてビルドしたのなら
   SQLite も共有モジュールとしてビルドする必要があります。
   そのためには、設定オプション
   <command>--with-sqlite=shared</command> を指定します。
  </para>
  <para>
   SQLite 3 は、<link
   linkend="ref.pdo-sqlite">PDO SQLite</link> でサポートされます。
  </para>
  <note>
   <title>権限を持たないアカウントに対する Windows 版のインストール</title>
   <para>
    Windows オペレーティングシステムでは、権限のないアカウントは
    デフォルトで設定される <varname>TMP</varname> 環境変数を利用できません。
    これにより SQLite は Windows
    ディレクトリにテンポラリファイルを作成しますが、
    望まれるものではありません。
    そのため Web サーバもしくは Web
    サーバが動作しているユーザーアカウントに対して <varname>TMP</varname>
    環境変数を設定すべきです。
    もし、Apache を使用しているなら、&httpd.conf; ファイル内で
    <command>SetEnv</command> ディレクティブを使用することで実現可能です。
    例えば、次のような感じです。
    <informalexample>
     <programlisting role="apache-conf">
<![CDATA[
SetEnv TMP c:/temp
]]>
     </programlisting>
    </informalexample>
    もしサーバレベルでこの設定を行うことができないのであれば、
    スクリプト内で設定することができます。
    <informalexample>
     <programlisting role="php">
<![CDATA[
putenv('TMP=C:/temp');
]]>
     </programlisting>
    </informalexample>
    この設定は Web サーバがファイルを生成した後で書き込んだり削除したりする
    権限を持たせるディレクトリを指定する必要があります。
    そうでない場合、次のようなエラーメッセージを受け取るでしょう。
    <computeroutput>
     malformed database schema -
     unable to open a temporary database file for storing temporary tables
    </computeroutput>
   </para>
  </note>
 </section>
 <!-- }}} -->

 <!-- {{{ Configuration -->
 &reference.sqlite.ini;
 <!-- }}} -->

 <!-- {{{ Resources -->
 <section xml:id="sqlite.resources">
  &reftitle.resources;
  <para>
   SQLiteインターフェイスでは2種類のリソースが使用されています。
   最初のリソースはデータベース接続で、2番目は結果セットです。
  </para>
 </section>
 <!-- }}} -->

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

