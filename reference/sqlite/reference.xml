<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->

 <reference xml:id="ref.sqlite" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>SQLite &Functions;</title>

  <partintro>
   <!-- FIXME: Remove this section -->
   <section xml:id="sqlite.classes">
    &reftitle.classes;

    <section xml:id="sqlite.class.sqlitedatabase">
     <title><classname>SQLiteDatabase</classname></title>
     <simpara>
      オープンされている SQLite データベースを表す
     </simpara>
     <section xml:id="sqlite.class.sqlitedatabase.constructor">
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <simpara><link linkend="function.sqlite-open">__construct</link> - 新規 SQLiteDatabase オブジェクトを生成する</simpara>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id="sqlite.class.sqlitedatabase.methods">
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <simpara><link linkend="function.sqlite-query">query</link> - クエリを実行する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-exec">queryExec</link> - 結果を返さないクエリを実行する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-array-query">arrayQuery</link> - クエリを実行し、結果を配列として返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-single-query">singleQuery</link> - クエリを実行し、単一カラムに対する配列もしくは先頭行の値を返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-unbuffered-query">unbufferedQuery</link> - バッファされていないクエリを実行する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-last-insert-rowid">lastInsertRowid</link> - 直近に挿入された行の行 ID を返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-changes">changes</link> - 直近のステートメントにより更新された行数を返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-create-aggregate">createAggregate</link> - SQL ステートメントで使用する集約 UDF を登録する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-create-function">createFunction</link> - SQL ステートメントで使用する UDF を登録する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-busy-timeout">busyTimeout</link> - ビジータイムアウト時間を設定または無効にする</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-last-error">lastError</link> - 直近に発生したエラーのエラーコードを返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-fetch-column-types">fetchColumnTypes</link> - 特定のテーブルからカラム型の配列を返す</simpara>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="sqlite.class.sqliteresult">
     <title><classname>SQLiteResult</classname></title>
     <simpara>
      バッファされた SQLite の結果セットを表す
     </simpara>
     <section xml:id="sqlite.class.sqliteresult.methods">
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <simpara><link linkend="function.sqlite-fetch-array">fetch</link> - 結果セットから次行を配列として取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-fetch-object">fetchObject</link> - 結果セットから次行をオブジェクトとして取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-fetch-single">fetchSingle</link> - 結果セットから先頭カラムを文字列として取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-fetch-all">fetchAll</link> - 結果セットから全行を配列の配列として取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-column">column</link> - 結果セットの現在行からカラムを取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-num-fields">numFields</link> - 結果セット内のフィールド数を返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-field-name">fieldName</link> - 結果セット内の特定フィールドの名前を返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-current">current</link> - 結果セットから現在行を配列として取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-key">key</link> - 現在行のインデックスを返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-next">next</link> - 次の行番号へシークする</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-valid">valid</link> - まだ行が残っているかどうかを返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-rewind">rewind</link> - 結果セットの先頭の行番号へシークする</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-prev">prev</link> - 結果セットの前の行番号へシークする</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-has-prev">hasPrev</link> - 前の行が利用可能かどうかを返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-num-rows">numRows</link> - 結果セットの行数を返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-seek">seek</link> - 特定の行番号へシークする</simpara>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="sqlite.class.sqliteunbuffered">
     <title><classname>SQLiteUnbuffered</classname></title>
     <simpara>
      バッファされていない SQLite 結果セットを表します。
      バッファされていない結果セットはシーケンシャルで、前方シークのみ可能です。
     </simpara>
     <section xml:id="sqlite.class.sqliteunbuffered.methods">
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <simpara><link linkend="function.sqlite-fetch-array">fetch</link> - 結果セットから次行を配列として取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-fetch-object">fetchObject</link> - 結果セットから次行をオブジェクトとして取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-fetch-single">fetchSingle</link> - 結果セットから先頭カラムを文字列として取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-fetch-all">fetchAll</link> - 結果セットから全行を配列の配列として取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-column">column</link> - 結果セットの現在行からカラムを取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-num-fields">numFields</link> - 結果セット内のフィールド数を返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-field-name">fieldName</link> - 結果セット内の特定フィールドの名前を返す</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-current">current</link> - 結果セットから現在行を配列として取得する</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-next">next</link> - 次の行番号へシークする</simpara>
       </listitem>
       <listitem>
        <simpara><link linkend="function.sqlite-valid">valid</link> - まだ行が残っているかどうかを返す</simpara>
       </listitem>
      </itemizedlist>
     </section>
    </section>

   </section>

  </partintro>

  &reference.sqlite.entities.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
