<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.16 $ -->
<!-- EN-Revision: 1.25 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<!-- Purpose: database.vendors -->
<!-- Membership: bundled -->

 <reference xml:id="ref.sqlite" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>SQLite 関数</title>
  <titleabbrev>SQLite</titleabbrev>

  <partintro>
   <section xml:id="sqlite.intro">
    &reftitle.intro;
    <para>
     この拡張モジュールは、SQLLite Embeddable SQL Database Engine 用の
     拡張モジュールです。SQLiteは、組込み可能なSQLデータベースエンジン
     を実装するCライブラリです。SQLiteライブラリをリンクするプログラム
     は、別のRDBMSプロセスを実行することなくSQLデータベースにアクセス
     することができます。
    </para>
    <para>
     SQLiteは、巨大なデータベースサーバーに接続するために使用されるク
     ライアントライブラリではありません。
     SQLiteがそのサーバーなのです。
     SQLiteライブラリは、ディスク上のデータベースを直接読み書きします。
    </para>
    <note>
     <para>
      より詳細な情報については、SQLiteのWebサイト
      (<link xlink:href="&url.sqlite;">&url.sqlite;</link>)
      を参照してください。
     </para>
    </note>
   </section>

   <section xml:id="sqlite.install">
    <title>インストール</title>
    <para>
     このパッケージに付属する INSTALL ファイルを読んでください。
     または、単に PEAR インストーラで <command>pecl install sqlite</command>
     を実行してください。SQLite 自体も既に含まれており、
     他のソフトウエアをインストールする必要は全くありません。
    </para>
    <para>
     Windowsユーザは、DLL版のSQLite拡張モジュールを次の場所から入手可
     能です。
     (<link xlink:href="&url.pecl.get.win;php_sqlite.dll">php_sqlite.dll</link>)
    </para>
    <para>
     PHP 5 では、SQLite 拡張モジュールとエンジンは PHP
     自身にバンドルされ、デフォルトでコンパイルされます。
     しかし、PHP 5.1.0 以降では
     手動で有効にする必要があります
     （共有モジュールとしてバンドルされるからです）。
     さらに、PHP 5.1.0 以降では SQLite は <link
     linkend="ref.pdo">PDO</link> に依存するようになりました。そのため、
     &php.ini; に以下の行を (この順に) 追加して PDO も
     有効にしておく必要があります。
     <informalexample>
      <programlisting role="ini">
<![CDATA[
extension=php_pdo.dll
extension=php_sqlite.dll
]]>
      </programlisting>
     </informalexample>
     Linux あるいは Unix オペレーティングシステムでは、
     もし PDO を共有モジュールとしてビルドしたのなら
     SQLite も共有モジュールとしてビルドする必要があります。
     そのためには、設定オプション
     <command>--with-sqlite=shared</command> を指定します。
    </para>
    <para>
     SQLite 3 は、<link
     linkend="ref.pdo-sqlite">PDO SQLite</link> でサポートされます。
    </para>
    <note>
     <title>権限を持たないアカウントに対する Windows 版のインストール</title>
     <para>
      Windows オペレーティングシステムでは、権限のないアカウントは
      デフォルトで設定される <varname>TMP</varname> 環境変数を利用できません。
      これにより SQLite は Windows
      ディレクトリにテンポラリファイルを作成しますが、
      望まれるものではありません。
      そのため Web サーバもしくは Web
      サーバが動作しているユーザーアカウントに対して <varname>TMP</varname>
      環境変数を設定すべきです。
      もし、Apache を使用しているなら、&httpd.conf; ファイル内で
      <command>SetEnv</command> ディレクティブを使用することで実現可能です。
      例えば、次のような感じです。
      <informalexample>
       <programlisting role="apache-conf">
<![CDATA[
SetEnv TMP c:/temp
]]>
       </programlisting>
      </informalexample>
      もしサーバレベルでこの設定を行うことができないのであれば、
      スクリプト内で設定することができます。
      <informalexample>
       <programlisting role="php">
<![CDATA[
putenv('TMP=C:/temp');
]]>
       </programlisting>
      </informalexample>
      この設定は Web サーバがファイルを生成した後で書き込んだり削除したりする
      権限を持たせるディレクトリを指定する必要があります。
      そうでない場合、次のようなエラーメッセージを受け取るでしょう。
      <computeroutput>
       malformed database schema -
       unable to open a temporary database file for storing temporary tables
      </computeroutput>
     </para>
    </note>
   </section>
   <section xml:id="sqlite.requirements">
    &reftitle.required;
    <para>
     以下の関数を利用可能とするには、SQLiteサポートを有効にしてPHPをコ
     ンパイルするか、php.iniで動的にSQLite拡張モジュールをロードする必
     要があります。
    </para>
   </section>

   <section xml:id="sqlite.resources">
    &reftitle.resources;
    <para>
     SQLiteインターフェイスでは2種類のリソースが使用されています。最初
     のリソースはデータベース接続で、2番目は結果セットです。
    </para>
   </section>

   &reference.sqlite.constants;

   <section xml:id="sqlite.classes">
    &reftitle.classes;

    <section xml:id="sqlite.class.sqlitedatabase">
     <title><classname>SQLiteDatabase</classname></title>
     <para>
      オープンされている SQLite データベースを表す
     </para>
     <section xml:id='sqlite.class.sqlitedatabase.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><link linkend='function.sqlite-open'>__construct</link> -
        新規 SQLiteDatabase オブジェクトを生成する</para>
       </listitem>
      </itemizedlist>
     </section>
     <section xml:id='sqlite.class.sqlitedatabase.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><link linkend='function.sqlite-query'>query</link> -
        クエリを実行する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-exec'>queryExec</link> -
        結果を返さないクエリを実行する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-array-query'>arrayQuery</link> -
        クエリを実行し、結果を配列として返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-single-query'>singleQuery</link> -
        クエリを実行し、単一カラムに対する配列もしくは先頭行の値を返す
        </para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-unbuffered-query'>unbufferedQuery</link> -
        バッファされていないクエリを実行する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-last-insert-rowid'>lastInsertRowid</link> -
        直近に挿入された行の行 ID を返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-changes'>changes</link> -
        直近のステートメントにより更新された行数を返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-create-aggregate'>createAggregate</link> -
        SQL ステートメントで使用する集約 UDF を登録する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-create-function'>createFunction</link> - SQL ステートメントで使用する UDF を登録する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-busy-timeout'>busyTimeout</link> -
        ビジータイムアウト時間を設定または無効にする</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-last-error'>lastError</link> -
        直近に発生したエラーのエラーコードを返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-fetch-column-types'>fetchColumnTypes</link> -
        特定のテーブルからカラム型の配列を返す</para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="sqlite.class.sqliteresult">
     <title><classname>SQLiteResult</classname></title>
     <para>
      バッファされた SQLite の結果セットを表す
     </para>
     <section xml:id='sqlite.class.sqliteresult.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><link linkend='function.sqlite-fetch-array'>fetch</link> -
        結果セットから次行を配列として取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-fetch-object'>fetchObject</link> -
        結果セットから次行をオブジェクトとして取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-fetch-single'>fetchSingle</link> -
        結果セットから先頭カラムを文字列として取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-fetch-all'>fetchAll</link> -
        結果セットから全行を配列の配列として取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-column'>column</link> -
        結果セットの現在行からカラムを取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-num-fields'>numFields</link> -
        結果セット内のフィールド数を返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-field-name'>fieldName</link> -
        結果セット内の特定フィールドの名前を返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-current'>current</link> -
        結果セットから現在行を配列として取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-key'>key</link> -
        現在行のインデックスを返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-next'>next</link> -
        次の行番号へシークする</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-valid'>valid</link> -
        まだ行が残っているかどうかを返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-rewind'>rewind</link> -
        結果セットの先頭の行番号へシークする</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-prev'>prev</link> -
        結果セットの前の行番号へシークする</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-has-prev'>hasPrev</link> -
        前の行が利用可能かどうかを返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-num-rows'>numRows</link> -
        結果セットの行数を返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-seek'>seek</link> -
        特定の行番号へシークする</para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="sqlite.class.sqliteunbuffered">
     <title><classname>SQLiteUnbuffered</classname></title>
     <para>
      バッファされていない SQLite 結果セットを表します。
      欠課されていない結果セットはシーケンシャルで、前方シークのみ可能です。
     </para>
     <section xml:id='sqlite.class.sqliteunbuffered.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><link linkend='function.sqlite-fetch-array'>fetch</link> -
        結果セットから次行を配列として取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-fetch-object'>fetchObject</link> -
        結果セットから次行をオブジェクトとして取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-fetch-single'>fetchSingle</link> -
        結果セットから先頭カラムを文字列として取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-fetch-all'>fetchAll</link> -
        結果セットから全行を配列の配列として取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-column'>column</link> -
        結果セットの現在行からカラムを取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-num-fields'>numFields</link> -
        結果セット内のフィールド数を返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-field-name'>fieldName</link> -
        結果セット内の特定フィールドの名前を返す</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-current'>current</link> -
        結果セットから現在行を配列として取得する</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-next'>next</link> -
        次の行番号へシークする</para>
       </listitem>
       <listitem>
        <para><link linkend='function.sqlite-valid'>valid</link> -
        まだ行が残っているかどうかを返す</para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

   </section>

   &reference.sqlite.ini;
  </partintro>

  &reference.sqlite.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
