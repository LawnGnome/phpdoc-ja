<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.5 Maintainer: hirokawa Status: ready -->
<refentry id="function.escapeshellcmd">
 <refnamediv>
  <refname>escapeshellcmd</refname>
  <refpurpose>シェルのメタ文字をエスケープする</refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>escapeshellcmd</methodname>
   <methodparam><type>string</type><parameter>command</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>escapeshellcmd</function>は、文字列中においてシェルコマ
   ンドをだまして勝手なコマンドを実行する可能性がある文字をエスケー
   プします。この関数は、ユーザに入力されたデータを関数
   <function>exec</function>または<function>system</function>または、
   <link linkend="language.operators.execution">backtick 演算子</link>
   に渡す前に全てエスケープを行う場合に使用するべきです。
   標準的な使い方は以下のようになるでしょう。
  </para>
  <para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$e = escapeshellcmd($userinput);
 
// ここでは、$eにスペースがあるかは考慮していません
system("echo $e");
$f = escapeshellcmd($filename);
 
// ここでは配慮し、クオートします
system("touch \"/tmp/$f\"; ls -l \"/tmp/$f\"");
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   <function>escapeshellarg</function>,
   <function>exec</function>, <function>popen</function>,
   <function>system</function>, <link
    linkend="language.operators.execution">バックティック演算子</link>
   も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
