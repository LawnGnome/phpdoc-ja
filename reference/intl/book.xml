<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.2 Maintainer: takagi Status: ready -->

<book xml:id="book.intl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>国際化関数</title>
 <titleabbrev>intl</titleabbrev>

 <!-- {{{ Preface -->
 <preface xml:id="intro.intl">
  &reftitle.intro;
  <para>
   国際化用拡張モジュール (これ以降では Intl と略します)
   は <link xlink:href="&url.icu.home;">ICU</link> ライブラリのラッパーです。
   PHP プログラマが、UCS 準拠の照合順序 (collation)
   や日付/時刻/数値/通貨のフォーマットを扱えるようにします。
  </para>

  <para>
   ICU の API に従って作成されているので、
   C/C++ や Java で ICU を使ったことがあるかたは簡単に PHP の API
   も使えることでしょう。
   また、ICU のドキュメントを参考にすればさまざまな
   ICU の関数について知ることができます。
  </para>

  <para>
   Intl はいくつかのモジュールで構成されており、
   各モジュールが対応する ICU API を公開しています。
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     Collator: ロケールに応じた適切な並び順を考慮して、文字列の比較を行います。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Number Formatter: 各地域固有の書式、あるいは指定した規則に基づいて数値を表示したり、
     文字列を数値として解釈したりします。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Normalizer: テキストに対して Unicode の正規化を行ったり、
     指定した文字列が正規化済みかどうかを調べたりします。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Locale: ロケール識別子を扱うための機能を提供します。
     たとえばロケール識別子のパースや作成、検索などを行います。
    </simpara>
   </listitem>
  </itemizedlist>

  <!-- {{{ Links -->
  <section xml:id="intl.links">
   <title>リンク</title>
   <itemizedlist>
    <listitem>
     <para><link xlink:href="&url.icu.docs;">ICU のドキュメント</link></para>
    </listitem>
    <listitem>
     <para><link xlink:href="&url.icu.userguide;">ICU ユーザガイド</link></para>
    </listitem>
    <listitem>
     <para><link xlink:href="&url.icu.uca;">Unicode Collation Algorithm</link></para>
    </listitem>
   </itemizedlist>
  </section>
  <!-- }}} -->

 </preface>
 <!-- }}} -->

 <!-- {{{ Setup -->
 <chapter xml:id="intl.setup" xmlns="http://docbook.org/ns/docbook"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>インストール/設定</title>

  <!-- {{{ Requirements -->
  <section xml:id="intl.requirements">
   &reftitle.required;
   <para>
    この拡張モジュールをビルドするには
    <link xlink:href="&url.icu.home;">ICU</link>
    ライブラリのバージョン 3.6 以降をインストールする必要があります。
   </para>
   <para>
    また、最新の PHP も必要です。Collator は
    PHP 5.1.3 以降および 5.2.0 以降で動作します。
   </para>
  </section>
  <!-- }}} -->

  <!-- {{{ Installation -->
  <section xml:id="intl.installation">
   &reftitle.install;
   <para>
    次のコマンドを実行します。
    <screen>
<![CDATA[
$ make install
]]>
    </screen>
   </para>

   <para>
    そして、&php.ini; の [PHP]
    セクションに次の行を追加して拡張モジュールを有効にします。
    <screen>
<![CDATA[
extension=intl.so
]]>
    </screen>
   </para>
  </section>
  <!-- }}} -->

  <!-- {{{ Testing -->
  <section xml:id="intl.testing">
   <title>テスト</title>
   <para>
    次のコマンドを実行します。
    <screen>
<![CDATA[
$ make test
]]>
    </screen>
   </para>
   <para>
    テストが失敗する原因としては、次のようなものが考えられます。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Collator 拡張モジュールが既に
      &php.ini; で有効になっている。
     </para>
    </listitem>
    <listitem>
     <para>
      ICU ライブラリをロードする際に LD_LIBRARY_PATH を使用しており、
      php.ini の設定 'variables_order' に 'E' が含まれていない
      ('E' がないということは "環境変数は使用しない" ということを意味します)。
     </para>
    </listitem>
   </itemizedlist>
  </section>
  <!-- }}} -->

  &reference.intl.configure;

  <!-- {{{ Resources -->
  <section xml:id="intl.resources">
   &reftitle.resources;
   &no.resource;
  </section>
  <!-- }}} -->

 </chapter>
 <!-- }}} -->

 &reference.intl.constants;

 <!-- {{{ Examples -->
 <appendix xml:id="intl.examples" xmlns="http://docbook.org/ns/docbook"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  &reftitle.examples;
  <section xml:id="intl.examples.basic">
   <title>基本的な使用法</title>
   <para>
    各モジュールには、
    手続き型とオブジェクト指向型の二種類の API が存在します。
    それぞれの API について、対応するドキュメントで説明します。
   </para>
   <note>
    <para>
     入力文字列は、すべて UTF-8 でエンコードされていなければなりません。
     出力文字列も、すべて UTF-8 となります。
    </para>
   </note>
   <example>
    <title>手続き型 API の使用例</title>
    <programlisting role="php">
<![CDATA[
<?php
$coll  = collator_create('en_US');
$result = collator_compare($coll, "string#1", "string#2");
?>
]]>
    </programlisting>
   </example>

   <example>
    <title>オブジェクト指向型 API の使用例</title>
    <programlisting role="php">
<![CDATA[
<?php
$coll = new Collator('en_US');
$al   = $coll->getLocaleByType(Locale::ACTUAL_LOCALE);
echo "実際のロケール: $al\n";

$formatter = new NumberFormatter('en_US', NumberFormatter::DECIMAL);
echo $formatter->format(1234567);
?>
]]>
    </programlisting>
   </example>
  </section>
 </appendix>
 <!-- }}} -->

 &reference.intl.reference;

 &reference.intl.collator;
 &reference.intl.numberformatter;
 &reference.intl.locale;
 &reference.intl.normalizer;
 &reference.intl.messageformatter;

</book>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
-->
