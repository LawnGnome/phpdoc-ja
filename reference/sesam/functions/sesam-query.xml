<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./ja/functions/sesam.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.6 Maintainer: hirokawa Status: ready -->
  <refentry id="function.sesam-query">
   <refnamediv>
    <refname>sesam_query</refname>
    <refpurpose>SESAM SQL クエリを実行し、結果を準備する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>sesam_query</methodname>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>scrollable</parameter></methodparam>
     </methodsynopsis>
    <para>
     返り値: 成功時にSESAM "結果ID" またはエラー時に
     &false;。
    </para>
    <para>
     "result_id" リソースは、クエリ結果を取得する際に他の関数で
     使用されます。
    </para>
    <para>
     <function>sesam_query</function> は、クエリをサーバ上の現在
     アクティブなデータベースに送信します。この関数は、"即時" SQL 命令
     および "select型" クエリの両方を実行可能です。"即時型" 命令を
     実行した場合はカーソルは確保されず、この後に
     <function>sesam_fetch_row</function> または
     <function>sesam_fetch_result</function> をコールしても空の結果
     (結果の終端を示すカラム数 0) が返されます。"select型" 命令の場合、
     結果記述子および (オプションのパラメータ
     <parameter>scrollable</parameter> の設定によりスクロール型または
     連続型の) カーソルが確保されます。<parameter>scrollable</parameter>
     が省略された場合、カーソルは連続型となります。
    </para>
    <para>
     "スクロール型"カーソルを使用している場合、カーソルは結果集合上を
     自由に移動可能です。各"スクロール型"クエリに関して、スクロール型の
     グローバルデフォルト値 (<literal>SESAM_SEEK_NEXT</literal> に
     初期化されています) と <function>sesam_seek_row</function> により
     一度設定するか、<function>sesam_fetch_row</function> を使用して
     レコードを取得する度に設定するスクロールオフセットがあります。
    </para>
    <para>
     "即時型"命令の場合、作用されたレコードの数が保存されます。この数は、
     <function>sesam_affected_rows</function> 関数で取得可能です。
    </para>
    <para>
     <function>sesam_fetch_row</function> および
     <function>sesam_fetch_result</function> も参照ください。
     <example>
      <title>
       "phone" テーブルの全てのレコードを HTML テーブルとして表示する
      </title>
      <programlisting role="php">
<![CDATA[
<?php
if (!sesam_connect("phonedb", "demo", "otto"))
    die("接続できません");
$result = sesam_query("select * from phone");
if (!$result) {
    $err = sesam_diagnostic();
    die ($err["errmsg"]);
}
echo "<table border>\n";
// 結果の上にカラム名をヘッダとして表示します
if ($cols = sesam_field_array($result)) {
    echo "<tr><th colspan=" . $cols["count"] . ">Result:</th></tr>\n";
    echo "<tr>\n";
    for ($col = 0; $col < $cols["count"]; ++$col) {
        $colattr = $cols[$col];
        /* SESAM の "Multiple Fields" について、列を連結します */
        if ($colattr["count"] > 1) {
            echo "<th colspan=\"" . $colattr["count"] . "\">" . $colattr["name"] .
                "(1.." . $colattr["count"] . ")</th>\n";
            $col += $colattr["count"] - 1;
        } else
            echo "<th>" . $colattr["name"] . "</th>\n";
    }
    echo "</tr>\n";
}

do {
    // 最大 100 行までに分割して結果を取得します
    $ok = sesam_fetch_result($result, 100);
    for ($row=0; $row < $ok["rows"]; ++$row) {
        echo " <tr>\n";
        for ($col = 0; $col < $ok["cols"]; ++$col) {
            if (isset($ok[$col][$row])) {
                echo "<td>" . $ok[$col][$row] . "</td>\n";
            } else {
                echo "<td>-empty-</td>\n";
            }
        }
        echo "</tr>\n";
    }
} while ($ok["truncated"]); // データがなくなるまで続けます

echo "</table>\n";
// 結果 id を開放します
sesam_free_result($result);
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
