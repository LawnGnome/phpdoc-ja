<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/sesam.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.1 Maintainer: hirokawa Status: ready -->
  <refentry id="function.sesam-field-array">
   <refnamediv>
    <refname>sesam_field_array</refname>
    <refpurpose>
     結果の個々のカラムに関するメタ情報を返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>sesam_field_array</methodname>
      <methodparam><type>string</type><parameter>result_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>result_id</parameter> は、
     <function>sesam_query</function> により返された有効な結果IDです。
    </para>
    <para>
     <parameter>result_id</parameter>に関連したクエリの後で、結果の個々
     のカラムに関するメタ情報(カラム名、型、精度、...)を有する連想/添
     字配列を返します。
    </para>
    <para>
     <table>
      <title>
       <function>sesam_field_array</function> で返された結果集合
      </title>
      <tgroup cols="2">
       <thead>
        <row>
 	<entry>配列要素</entry>
 	<entry>定数</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	<entry>int $arr["count"]</entry>
 	<entry>
	  結果集合におけるカラム数の合計 (または"即時型"クエリの場合に
	  0)。  SESAM "複数フィールド"はインライン化されており、対応す
	  るカラム番号と同様に処理されます。
	</entry>
        </row>
        <row>
 	<entry>string $arr[col]["name"]</entry>
 	<entry>
	  カラム(<literal>col</literal>)のカラム名、ただし、
	  <literal>col</literal> は、0 から
	  <literal>$arr["count"]-1</literal>の間です。返される値は、
	  (動的に計算されるカラムの場合、)空の文字列となる可能性があり
	  ます。SESAM "複数フィールド" は"インライン化"されており、カ
	  ラム番号と同様に同じカラム名で処理されます。
        </entry>
        </row>
        <row>
 	<entry>string $arr[col]["count"]</entry>
 	<entry>
	  属性 "count" は、カラムが"複数フィールド"として宣言された場
	  合の繰り返し数を記述します。通常、"count"属性は1です。しかし、
	  "複数フィールド"カラムの最初のカラムは繰返し数を有します。
	  ("複数フィールド"の2番目以降のカラムは1という"count"属性を有
	  します)この属性は、結果集合の中で"複数フィールド"を検出する
	  ために使用可能です。"count"属性の使用例については、
	  <function>sesam_query</function> の説明に示されている例を参
	  照ください。
	 </entry>
        </row>
        <row>
 	<entry>string $arr[col]["type"]</entry>
 	<entry>
	  カラム(<literal>col</literal>)に関するデータのPHP 変数型、た
	  だし、<literal>col</literal> は 0 と
	  <literal>$arr["count"]-1</literal> の間です。値は、結果のSQL
	  型に基づき以下のどれかとなります。
	  <itemizedlist>
	   <listitem>
	    <simpara>"integer"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"double"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"string"</simpara>
	   </listitem>
	  </itemizedlist>
	  SESAM "複数フィールド"は"インライン化"されており、同じカラム
	  数を有し、同じPHP型の場合と同様に処理されます。
	 </entry>
        </row>
        <row>
	 <entry>string $arr[col]["sqltype"]</entry>
	 <entry>
	  SQL variable type of the column data for
	  カラム(<literal>col</literal>)に関するカラムデータのSQL変数
	  型。ただし、<literal>col</literal> は 0 から
	  and <literal>$arr["count"]-1</literal>の間になります。返され
	  る値は、結果のSQL型を記述する次のどれかとなります。
	  <itemizedlist>
	   <listitem>
	    <simpara>"CHARACTER"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"VARCHAR"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"NUMERIC"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"DECIMAL"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"INTEGER"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"SMALLINT"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"FLOAT"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"REAL"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"DOUBLE"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"DATE"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"TIME"</simpara>
	   </listitem>
	   <listitem>
	    <simpara>"TIMESTAMP"</simpara>
	   </listitem>
	  </itemizedlist>
	  SESAM "複数フィールド"は"インライン化"されており、同じカラム
	  数、同じPHP型の場合と同様に処理されます。
        </entry>
        </row>
        <row>
 	<entry>string $arr[col]["length"]</entry>
	 <entry>
	  カラム(<literal>col</literal>)のSQL変数のSQL "length" 属性。
	  ただし、<literal>col</literal> は、0 から
	  <literal>$arr["count"]-1</literal>の間です。"length"属性は、
	  文字列変数の(最大)長さを指定するために"CHARACTER" および
	  "VARCHAR" SQL型を指定して使用されます。
	  SESAM "複数フィールド"は"インライン化"されており、同じカラム
	  数、同じPHP型の場合と同様に処理されます。
	 </entry>
        </row>
        <row>
 	<entry>string $arr[col]["precision"]</entry>
 	<entry>
	  カラム(<literal>col</literal>にあるSQL変数,の
	  "precision" 属性。ただし、<literal>col</literal> は、0から
	  <literal>$arr["count"]-1</literal>の間です。"precision"属性
	  は、数値および時間データ型で使用されます。
	  SESAM "複数フィールド"は"インライン化"されており、同じカラム
	  数、同じPHP型の場合と同様に処理されます。
	 </entry>
        </row>
        <row>
 	<entry>string $arr[col]["scale"]</entry>
 	<entry>
	  カラム(<literal>col</literal>)にあるSQL変数の"scale" 属性。
	  ただし、<literal>col</literal> は、0 から
	  <literal>$arr["count"]-1</literal>の間です。"scale"属性は、
	  数値データ型で使用されます。
	  SESAM "複数フィールド"は"インライン化"されており、同じカラム
	  数、同じPHP型の場合と同様に処理されます。
	 </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <function>sesam_field_array</function> の使用例については、
     <function>sesam_query</function> 関数を参照ください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
