<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.8 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<refentry xml:id="function.msql-fetch-object" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>msql_fetch_object</refname>
  <refpurpose>結果の行をオブジェクトとして取得する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>msql_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <!-- Undocumented confusing feature: <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam> -->
  </methodsynopsis>
  <para>
   <function>msql_fetch_object</function> は、
   <function>msql_fetch_array</function> に似ていますが、配列の代わりに
   オブジェクトを返すところだけが異なっています。遠まわしに言うと、
   オフセット値によってではなくフィールド名によってのみデータを
   アクセスすることができることを意味しています
   （数字は、プロパティ名として使用できません）。
  </para>  
  <para>
   速度面でこの関数は <function>msql_fetch_array</function> 
   と同等です。そして、ほぼ <function>msql_fetch_row</function> 
   と同等の速度を有しています（その差は無視できるほどです）。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &msql.result.description;
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   得た行に対応するプロパティを有するオブジェクトを返します。
   もう行がない場合には &false; を返します。
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>msql_fetch_object</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$con = msql_connect();
if (!$con) {
    die('Server connection problem: ' . msql_error());
}

if (!msql_select_db('test', $con)) {
    die('Database connection problem: ' . msql_error());
}

$result = msql_query('SELECT id, name FROM people', $con);
if (!$result) {
    die('Query execution problem: ' . msql_error());
}

while ($row = msql_fetch_object($result, MSQL_ASSOC)) {
    echo $row->id . ': ' . $row->name . "\n";
}

msql_free_result($result);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.11 および 5.0.4 </entry>
       <entry>
        &null; 値を含むカラムからデータを取得する際のバグが修正されました。
        そのようなカラムは結果の配列に含まれていませんでした。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>msql_fetch_array</function></member>
    <member><function>msql_fetch_row</function></member>
    <member><function>msql_data_seek</function></member>
    <member><function>msql_result</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
