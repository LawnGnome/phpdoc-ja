<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: hirokawa Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.str-replace">
 <refnamediv>
  <refname>str_replace</refname>
  <refpurpose>検索文字列に一致したすべての文字列を置換する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>str_replace</methodname>
   <methodparam><type>mixed</type><parameter>search</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>replace</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter></methodparam>
  </methodsynopsis>
  <para>
   この関数は、<parameter>subject</parameter> の中の
   <parameter>search</parameter> を全て
   <parameter>replace</parameter> に置換します。
  </para>
  <para>
   (正規表現のような) 技巧的な置換ルールを必要としない場合、
   <function>ereg_replace</function> または
   <function>preg_replace</function> の代わりにこの関数を常用するべきです。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <parameter>search</parameter> と <parameter>replace</parameter>
   が配列の場合、<function>str_replace</function> は各配列から値をひとつ取り出し、
   <parameter>subject</parameter> 上で検索と置換を行うために使用します。
   <parameter>replace</parameter> の値が
   <parameter>search</parameter> よりも少ない場合、
   置換される値の残りの部分には空の文字列が使用されます。
   <parameter>search</parameter> が配列で
   <parameter>replace</parameter> が文字列の場合、この置換文字列が
   <parameter>search</parameter> の各値について使用されます。しかし、
   逆は意味がありません。
  </para>
  <para>
   <parameter>search</parameter> あるいは <parameter>replace</parameter>
   が配列の場合は、配列の最初の要素から順に処理されます。
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>search</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       <parameter>subject</parameter> が配列の場合、
       <parameter>subject</parameter> の各エントリについて検索と置換が行われ、
       返り値は同様に配列となります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <note>
       <simpara>
        指定した場合は、マッチして置換が行われた箇所の個数がここに格納されます。
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   この関数は、置換後の文字列あるいは配列を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0</entry>
       <entry>
        <parameter>count</parameter> パラメータが追加されました。
       </entry>
      </row>
      <row>
       <entry>4.3.3</entry>
       <entry>
        この関数の挙動がかわりました。以前のバージョンにはバグがあり、
        <parameter>search</parameter> と <parameter>replace</parameter>
        の両方に配列を指定した場合に、
        空の <parameter>search</parameter> 添字をスキップしても
        <parameter>replace</parameter> 配列上の内部ポインタが進みませんでした。
        このバグは PHP 4.3.3 で修正されたので、このバグを前提としたスクリプトは、
        この関数をコールする前に空の検索値を削除しておく必要があります。
       </entry>
      </row>
      <row>
       <entry>4.0.5</entry>
       <entry>
        ほとんどのパラメータに配列を渡せるようになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>str_replace</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
// <body text='black'> となります
$bodytag = str_replace("%body%", "black", "<body text='%body%'>");

// Hll Wrld f PHP となります
$vowels = array("a", "e", "i", "o", "u", "A", "E", "I", "O", "U");
$onlyconsonants = str_replace($vowels, "", "Hello World of PHP");

// You should eat pizza, beer, and ice cream every day となります
$phrase  = "You should eat fruits, vegetables, and fiber every day.";
$healthy = array("fruits", "vegetables", "fiber");
$yummy   = array("pizza", "beer", "ice cream");

$newphrase = str_replace($healthy, $yummy, $phrase);

// パラメータ count は PHP 5.0.0 で使用可能になりました
$str = str_replace("ll", "", "good golly miss molly!", $count);
echo $count; // 2

// 置換の順番を指定します
$str     = "Line 1\nLine 2\rLine 3\r\nLine 4\n";
$order   = array("\r\n", "\n", "\r");
$replace = '<br />';
// まず \r\n を最初に置換するので、二重に変換されることはありません
$newstr = str_replace($order, $replace, $str);

// 出力は apearpearle pear となります
$letters = array('a', 'p');
$fruit   = array('apple', 'pear');
$text    = 'a p';
$output  = str_replace($letters, $fruit, $text);
echo $output;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  <note>
   <para>
    この関数は大文字小文字を区別します。区別せずに置換するには
    <function>str_ireplace</function> を使用します。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_ireplace</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>strtr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
