<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331017 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.addslashes">
 <refnamediv>
  <refname>addslashes</refname>
  <refpurpose>文字列をスラッシュでクォートする</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>addslashes</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  </methodsynopsis>
  <para>
   クォートされるべき文字の前にバックスラッシュを付けて返します。
   クォートされるべき文字とは、シングルクォート(<literal>'</literal>),
   ダブルクォート(<literal>"</literal>),バックスラッシュ
   (<literal>\</literal>) ,NUL (&null; バイト) です。
  </para>
  <para>
   <function>addslashes</function> 関数 を使う例として、PHPが評価する文字列データを入力する場合が挙げられます。たとえば、<literal>O'reilly</literal> というデータを $str に格納して評価する場合、$str をエスケープする(つまり eval("echo '".addslashes($str)."';"); する) 必要があります。
  </para>
  <para>
   セキュリティ上の理由で、データベースパラメータをエスケープするには DBMS 固有のエスケープ関数
   (たとえば MySQL 用の <function>mysqli_real_escape_string</function> や、
   PostgreSQL 用の <function>pg_escape_literal</function>、<function>pg_escape_string</function>) を使うべきです。
   識別子(例: テーブル名やフィールド名)をエスケープするときは、データベースパラメータとは別の仕様をDBMSは使います。 
   PostgreSQL の <function>pg_escape_indentifier</function> のように、DBMS によっては識別子用のエスケープ関数を提供しているものもありますが、全ての DBMS が提供しているわけではありません。
   提供されていない場合は、お使いのデータベースシステムのマニュアルを参照し、適切なエスケープ方法を調べるようにしてください。
  </para>
  <para>
   お使いの DBMS がエスケープ関数を提供しておらず、 DBMS が 
   特別な文字をエスケープするのに <literal>\</literal> を使っている場合、
   その DBMS に適切なエスケープ方法である場合に限って、
   <function>addslashes</function> 関数を使うことができます。
   ほとんどのデータベース上では、 <function>addslashes</function>関数を
   パラメータのエスケープに使うと、セキュリティ問題が起きる原因となりうることに注意してください。
  </para>
  <para>
   PHP 5.4 より前のバージョンでは、<link linkend="ini.magic-quotes-gpc">
   magic_quotes_gpc</link> が デフォルトで <literal>on</literal> だったため、
   原則として <function>addslashes</function> 関数がすべての GET, POST, COOKIE のデータに対して実行されていました。
   <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> によって既にエスケープされた文字列に対して <function>addslashes</function>関数 を絶対に実行してはいけません。2重エスケープになるからです。
   <function>get_magic_quotes_gpc</function>関数 で既にエスケープが行われているかを簡単にチェックできます。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       エスケープしたい文字列。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   エスケープされた文字列を返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>addslashes</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = "Is your name O'reilly?";

// 出力: Is your name O\'reilly?
echo addslashes($str);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>stripcslashes</function></member>
    <member><function>stripslashes</function></member>
    <member><function>addcslashes</function></member>
    <member><function>htmlspecialchars</function></member>
    <member><function>quotemeta</function></member>
    <member><function>get_magic_quotes_gpc</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
