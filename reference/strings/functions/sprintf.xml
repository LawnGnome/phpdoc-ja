<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/strings.xml, last change in rev 1.1 -->
<!-- sync: 1.2 -->
  <refentry id="function.sprintf">
   <refnamediv>
    <refname>sprintf</refname>
    <refpurpose>フォーマットされた文字列を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>sprintf</methodname>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>args</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     フォーマット文字列<parameter>format</parameter>に基づき生成された
     文字列を返します。
    </simpara>
    <simpara>
     フォーマット文字列は0個以上のディレクティブ（指示子）により
     構成されます。ディレクティブには、そのまま結果にコピーされる
     (<literal>%</literal>を除く)通常の文字と<emphasis>変換指定子
      (conversion specifications)</emphasis>があり、取り出される際は
     どちらもそれ自身がパラメータとなります。このことは<function>
      sprintf</function>の場合だけでなく<function>printf</function>
     の場合も同様です。
    </simpara>
    <para>
     各変換指定子はパーセント記号(<literal>%</literal>)の後に、これら
     の要素が一つ以上続いたものになります。
     <orderedlist>
      <listitem>
       <simpara>
	オプションの<emphasis>パディング指定子</emphasis>。これは、
	文字列が正しい長さになるまでどんな文字で埋めるかということを
	指定します。これは空白かまたは<literal>0</literal>(文字'0')
	のいずれかです。デフォルトでは空白で埋められます。
	これ以外のパディング文字を指定するには、その文字の前に単一
	引用符(<literal>'</literal>)を置きます。後述の例を参照して
	ください。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	オプションの<emphasis>アラインメント指定子</emphasis>。これは
	結果を左寄せまたは右寄せにしたい場合に指定します。デフォルトは
	右寄せです。ここで<literal>-</literal>文字を指定すると左寄せ
	となります。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	オプションの数字。これは<emphasis>表示幅指定子</emphasis>です。
	結果を（最低）何桁にするかを指定します。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	オプションの<emphasis>精度指定子</emphasis>。これは、浮動小数点
	数に対して何個の数字を表示するか??定します。このオプションは、
	double（倍精度）型以外には何の効果もありません。
	(数字をフォーマットする際に便利な関数として他に
 	<function>number_format</function> があります。)
       </simpara>
      </listitem>
      <listitem>
       <para>
	<emphasis>型指定子</emphasis>。引数を何の型として扱うかを指定
	します。指定できる型を以下に示します。
	<simplelist>
	 <member>
	  <literal>%</literal> - パーセント文字。引数は不要です。
	 </member>
	 <member>
	  <literal>b</literal> - 引数を整数として扱い、バイナリの数値
	  として表現します。
	 </member>
	 <member>
	  <literal>c</literal> - 引数を整数として扱い、その ASCII 値
	  の文字として表現します。
	 </member>
	 <member>
	  <literal>d</literal> - 引数を整数として扱い、10 進数として
	  表現します。
	 </member>
         <member>
          <literal>u</literal> - 引数を整数として扱い、符号無しの10進
          数として表現します。
         </member>
	 <member>
	  <literal>f</literal> - 引数を double として扱い、浮動小数点数
	  として表現します。
	 </member>
	 <member>
	  <literal>o</literal> - 引数を整数として扱い、8 進数として
	  表現します。
	 </member>
	 <member>
	  <literal>s</literal> - 引数を文字列として扱い、表現します。
	 </member>
	 <member>
	  <literal>x</literal> - 引数を整数として扱い、16 進数として
	  (小文字で)表現します。
	 </member>
	 <member>
	  <literal>X</literal> - 引数を整数として扱い、16 進数として
	  (大文字で)表現します。
	 </member>
	</simplelist>
       </para>
      </listitem>
     </orderedlist>
    </para>
    <para>
     PHP バージョン 4.0.6 でフォーマット文字列で引数の番号付け/交換が
     サポートされました。以下に例を示します。
     <example>
      <title>引数の交換</title>
      <programlisting role="php">
<![CDATA[
$format = "There are %d monkeys in the %s";
printf($format,$num,$location);
]]>
      </programlisting>
     </example>
     この出力は、"There are 5 monkeys in the tree" のようになります。
     ここで、フォーマット文字列が別のファイルにある場合を考えてみましょ
     う。これは、出力を国際化したりする場合に行われる可能性があります。
     この場合、次の書き変えられます。
     <example>
      <title>引数の交換</title>
      <programlisting role="php">
<![CDATA[
$format = "The %s contains %d monkeys";
printf($format,$num,$location);
]]>
      </programlisting>
     </example>
     ここで、問題が発生します。フォーマット文字列における置換指示子の
     順番は、コードにおける引数の順番と一致していません。コードは変更
     せず、置換指示子が参照するフォーマット文字列で指示を行う方が望ま
     しいと言えます。フォーマット文字列を次のように書き換えてみましょ
     う。
     <example>
      <title>引数の交換</title>
      <programlisting role="php">
<![CDATA[
$format = "The %2\$s contains %1\$d monkeys";
printf($format,$num,$location);
]]>
      </programlisting>
     </example>
     加えて、これによりコードに引数を追加せずに置換指示子を複数回使用
     することも可能になります。例えば、次のようになります。
     <example>
      <title>引数の交換</title>
      <programlisting role="php">
<![CDATA[
$format = "The %2\$s contains %1\$d monkeys.  
           That's a nice %2\$s full of %1\$d monkeys.";
printf($format,$num,$location);
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     <function>printf</function>, <function>sscanf</function>,
     <function>fscanf</function>, <function>number_format</function>
     も参照下さい。
    </simpara>
   </refsect1>
   
   <refsect1>
    <title>例</title>
    <para>
     <example>
      <title>sprintf: 整数を0でパディング</title>
      <programlisting role="php">
<![CDATA[
$isodate = sprintf("%04d-%02d-%02d", $year, $month, $day);
]]>
      </programlisting>
     </example>
     <example>
      <title>sprintf: 通貨をフォーマットする例</title>
      <programlisting role="php">
<![CDATA[
$money1 = 68.75;
$money2 = 54.35;
$money = $money1 + $money2;
// echo $money は "123.1" を出力します。
$formatted = sprintf ("%01.2f", $money);
// echo $formatted は "123.10"を出力します
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
