<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 326796 Maintainer: takagi Status: working -->
<!-- CREDITS: hirokawa,shimooka -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.crc32">
 <refnamediv>
  <refname>crc32</refname>
  <refpurpose>文字列の crc32 多項式計算を行う</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>crc32</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>str</parameter> の 32 ビット長の CRC (cyclic redundancy
   checksum) チェックサムを生成します。
   これは通常、送信したデータの整合性を検証するために使用します。
  </para>
  <warning>
   <simpara>
    PHP の整数型は符号付きで、多くの crc32
    チェックサムは 32 ビットシステム上では負の整数になります。
    しかし、64 ビット環境では <function>crc32</function>
    の結果はすべて正の整数となります。
   </simpara>
   <simpara>
    つまり、符号なしの <function>crc32</function> チェックサムの文字列表記を
    十進形式で取得するには、
    <function>sprintf</function> もしくは <function>printf</function> の
    "%u" フォーマッタを使う必要があります。
   </simpara>
   <simpara>
    For a hexadecimal representation of the checksum you can either use the 
    "%x" formatter of <function>sprintf</function> or <function>printf</function> 
    or the <function>dechex</function> conversion functions, both of these
    also take care of converting the <function>crc32</function> result to
    an unsigned integer.
   </simpara>
   <simpara>
    Having 64bit installations also return negative integers for higher
    result values was considered but would break the hexadecimal conversion
    as negatives would get an extra 0xFFFFFFFF######## offset then. As 
    hexadecimal representation seems to be the most common use case we
    decided to not break this even if it breaks direct decimal comparisons
    in about 50% of the cases when moving from 32 to 64bits.
   </simpara>
   <simpara>
    In retrospect having the function return an integer maybe wasn't the 
    best idea and returning a hex string representation right away (as 
    e.g. <function>md5</function> does) might have been a better plan to
    begin with.
   </simpara>
   <simpara>
    For a more portable solution you may also consider the generic 
    <function>hash</function>. <code>hash("crc32b", $str)</code> will 
    return the same string as <code>dechex(crc32($str))</code>.
   </simpara>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       データ。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>str</parameter> の crc32 チェックサムを整数値で返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>crc32 チェックサムの表示</title>
    <para>
     この例は <function>printf</function>
     関数を用いた変換後のチェックサムの表示方法を示しています。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$checksum = crc32("The quick brown fox jumped over the lazy dog.");
printf("%u\n", $checksum);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>hash</function></member>
    <member><function>md5</function></member>
    <member><function>sha1</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
