<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 299488 Maintainer: masakielastic Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.hash-pbkdf2" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>hash_pbkdf2</refname>
  <refpurpose>PBKDF2 を使ってパスワードからキーを生成する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="procedural">
   <type>string</type><methodname>hash_pbkdf2</methodname>
   <methodparam><type>string</type><parameter>algo</parameter></methodparam>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type>string</type><parameter>salt</parameter></methodparam>
   <methodparam><type>int</type><parameter>iterations</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>raw_output</parameter><initializer>false</initializer></methodparam>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>algo</parameter></term>
     <listitem>
      <para>
       ハッシュアルゴリズムの名前 (たとえば <literal>md5</literal>,
       <literal>sha256</literal>, <literal>haval160,4</literal> など)。サポートされるアルゴリズムの一覧は
       <function>hash_algos</function> をご参照ください。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       派生に使うパスワード
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>salt</parameter></term>
     <listitem>
      <para>
       派生に使うソルト
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iterations</parameter></term>
     <listitem>
      <para>
       派生の実行の際の内部の反復回数
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       出力する派生キーの長さ。<literal>0</literal> の場合、渡されたアルゴリズムの長さが使われます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>raw_output</parameter></term>
     <listitem>
      <para>
       &true; にセットされている場合、名前のバイナリデータが出力されます。&false; の場合、小文字の16進数が出力されます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues"><!-- {{{ -->
  &reftitle.returnvalues;
  <para>
   小文字の16進数を含む文字列が返されます。<parameter>raw_output</parameter> が true の場合、派生キーの生のバイナリ表現が返されます。
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="errors"><!-- {{{ -->
  &reftitle.errors;
  <para>
    <constant>E_WARNING</constant> が発生するのはアルゴリズムが未知である場合、<parameter>iterations</parameter> パラメータが <literal>0</literal> 以下である場合、<parameter>length</parameter> が <literal>0</literal> 以下である場合、<parameter>salt</parameter> が長すぎる場合
   (<constant>INT_MAX</constant><literal> - 4</literal> よりも大きい) です。
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>hash_pbkdf2</function> の基本的な使い方の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$password = "password";
$salt = "salt";
$hash = hash_pbkdf2("sha256", $password, $salt, 1, 20);
echo $hash;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
120fb6cffcf8b32c43e7
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    PBKDF2 による方法はパスワードのハッシュを保存するために使うことができます (NIST が認めた利用方法です)。
    しかしながら、<constant>CRYPT_BLOWFISH</constant> のほうがパスワードの保存に適しており、<function>crypt</function> を通じて利用できることを記しておきます。
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>crypt</function></member>
    <member><function>hash</function></member>
    <member><function>hash_algos</function></member>
    <member><function>hash_init</function></member>
    <member><function>hash_hmac</function></member>
    <member><function>hash_hmac_file</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
