<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.18 Maintainer: hirokawa Status: ready -->
<!-- Purpose: utilspec.nontext -->
<!-- Membership: pecl, external -->

 <reference id="ref.pdf">
  <title>PDF関数</title>
  <titleabbrev>PDF</titleabbrev>
  
  <partintro>
   <section id="pdf.intro">
    &reftitle.intro;
    <simpara>
     PHPのPDF関数は、<ulink url="&url.pdflib.merz;">Thomas
      Merz</ulink>により作成されたPDFlibライブラリを使用してPDFファイル
     を作成することが可能です。
    </simpara>
    <simpara>
     本節のドキュメントは、PDFlibライブラリで利用可能な関数の概要のみ
     を説明することを意図しています。ここで扱う各関すの完全で詳細な説
     明については、PDFlibのソース配布ファイルと共に配布されているドキュ
     メントを参照ください。このドキュメントは、PDFlib の機能に関
     する概要を非常に良くまとめており、全ての関数に関する最新のドキュ
     メントが含まれています。
    </simpara>
    <simpara>
     PDFlibのほとんどの関数とPHPモジュール内の関数の名前とパラメータは
     共通になっています。このモジュールを効率的に使用するには、PDFまた
     はPostScriptに関する基本的な考え方も理解しておく必要があります。
     全ての長さと座標は、Postscriptのポイント数で計られます。通常、1イ
     ンチ当たり72 Postscript ポイントですが、これは、出力解像度に依存
     します。使用する座表系に関するより詳細な説明については、PDFlibの
     ソース配布に含まれるPDFlibドキュメントを参照ください。
    </simpara>
    <simpara> 
     ほとんど全てのPDF関数は、最初の引数パラメータとして
     <parameter>pdfdoc</parameter> を必要とすることに注意して下さ
     い。より詳細な情報については以下の<link linkend="pdf.examples">例</link>
     を参照ください。
    </simpara>
    <note>
     <simpara>
      外部 PDF ライブラリを使用しない、他のフリーな PDF ジェネレータに
      関心がある場合には、
      <link linkend="faq.using.freepdf">関連する FAQ</link> を参照してください。
     </simpara>
    </note>
    <note>
     <simpara>
      この拡張モジュールは、PHP 4.3.9 以降 <ulink url="&url.pecl;">PECL</ulink>
      に移動しました。
     </simpara>
    </note>
   </section>

   <section id="pdf.requirements">
    &reftitle.required;
    <para>
     PDFlibは、<ulink url="&url.pdf;">&url.pdf;</ulink> でダウンロード
     可能ですが、商用で使用する場合はライセンスを購入する必要がありま
     す。この拡張モジュールをコンパイルするには、<ulink
     url="&url.jpeg;">JPEG</ulink>および<ulink
     url="&url.tiff;">TIFF</ulink> が必要です。
    </para>
   
   <section id="pdf.oldlibs.hints">
    <title>古いバージョンのPDFlibに関する問題</title>
    <simpara>
     2000年3月9日以降のバージョンのPHPでは、3.0より古いバージョンの
     PDFlibをサポートしていません。
    </simpara>
    <simpara>
     PDFlib 3.0以降が、PHP 3.0.19以降でサポートされています。
    </simpara>
   </section>
  </section>
   
   &reference.pdf.configure;

   <section id="pdf.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="pdf.oldlibs.confusion">
    <title>古いバージョンのPDFlibとの混乱</title>
    <simpara>  
     PHP v4.0.5以降、PHPlib用のPHP拡張モジュールは、PDFlib GmbH から正
     式にサポートされています。これにより、PDFlibマニュアル(バージョン
     3.00以降)に記述された全ての関数がPHP4で全く同じ意味、同じパラメー
     タでサポートされています。返り値のみは、エラーの場合に
     &false;を返すというPHPの流儀に合わせるために
     PDFlibマニュアルと異なっていることがあります。互換性を保つために
     PDFlibサポート関数ではまだ古い関数もサポートしていますが、上記の
     ように新しいバージョンに置換される予定です。PDFlib GmbH は、これら
     の古い関数を使用した場合に生じた際に生じた問題に関してはサポートを
     行いません。
    </simpara>
    <para>
     <table>
      <title>古い関数と代替関数</title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>古い関数</entry>
         <entry>代替関数</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><function>pdf_put_image</function></entry>
         <entry>もう不要です。</entry>
        </row> 
        <row>
         <entry><function>pdf_execute_image</function></entry>
         <entry>もう不要です。</entry>
        </row> 
        <row>
         <entry><function>pdf_get_annotation</function></entry>
         <entry>
	  同じパラメータで<function>pdf_get_bookmark</function>を使用。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_font</function></entry>
         <entry>
	  <function>pdf_get_value</function> に2番目のパラメータとして
	  <literal>"font"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_fontsize</function></entry>
         <entry>
	  <function>pdf_get_value</function> に2番目のパラメータとして
	  <literal>"fontsize"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_fontname</function></entry>
         <entry>
	  <function>pdf_get_parameter</function>に2番目のパラメータとして
	  <literal>"fontname"</literal> を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_creator</function></entry>
         <entry>
	  <function>pdf_set_info</function>に2番目のパラメータとして
	  <literal>"Creator"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_title</function></entry>
         <entry>
	  <function>pdf_set_info</function>に2番目のパラメータとして
	  <literal>"Title"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_subject</function></entry>
         <entry>
	  <function>pdf_set_info</function>に2番目のパラメータとして
	  <literal>"Subject"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_author</function></entry>
         <entry>
	  <function>pdf_set_info</function>に2番目のパラメータとして
	  <literal>"Author"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_keywords</function></entry>
         <entry>
	  <function>pdf_set_info</function>に2番目のパラメータとして
	  <literal>"Keywords"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_leading</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"leading"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_text_rendering</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"textrendering"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_text_rise</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"textrise"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_horiz_scaling</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"horizscaling"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_text_matrix</function></entry>
         <entry>もう使用できません。</entry>
        </row>
        <row>
         <entry><function>pdf_set_char_spacing</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"charspacing"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_word_spacing</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"wordspacing"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_transition</function></entry>
         <entry>
	  <function>pdf_set_parameter</function>に2番目のパラメータとして
	  <literal>"transition"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open</function></entry>
         <entry>
	  <function>pdf_new</function>の後に
	  <function>pdf_open_file</function>をコールする。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_font</function></entry>
         <entry>
	  <function>pdf_findfont</function>の後に
	  <function>pdf_setfont</function>をコールする。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_duration</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"duration"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_gif</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>に2番目のパラメータとして
	  <literal>"gif"</literal> を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_jpeg</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>に2番目のパラメータとして
	  <literal>"jpeg"</literal> を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_tiff</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>に2番目のパラメータとして
	  <literal>"tiff"</literal> を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_png</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>に2番目のパラメータとして
	  <literal>"png"</literal> を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_image_width</function></entry>
         <entry>
	  <function>pdf_get_value</function>に2番目のパラメータとして
	  <literal>"imagewidth"</literal>、3番目のパラメータとして
	  imageを渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_image_height</function></entry>
         <entry>
	  <function>pdf_get_value</function>に2番目のパラメータとして
	  <literal>"imageheight"</literal>、3番目のパラメータとして
	  imageを渡す。
	 </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </section>

   <section id="pdf.examples">
    &reftitle.examples;
    <simpara>
     多くの関数の使用法は簡単です。最も困難なのは、非常に簡単なpdfドキュ
     メントを作成する場合でしょう。次の例は、入門の際の助けとなるはず
     です。この例では、1ページを有するファイル
     <filename>test.pdf</filename>が作成されます。このページには、30ポ
     イントのアウトラインフォントでテキスト"Times-Roman outlined"が描
     かれます。このテキストには、下線も引かれます。
    </simpara>
    <para>
     <example>
      <title>PDFlibでPDFドキュメントを作成する</title>
      <programlisting role="php">
<![CDATA[
<?php
$pdf = pdf_new();
pdf_open_file($pdf, "test.pdf");
pdf_set_info($pdf, "Author", "Uwe Steinmann");
pdf_set_info($pdf, "Title", "Test for PHP wrapper of PDFlib 2.0");
pdf_set_info($pdf, "Creator", "See Author");
pdf_set_info($pdf, "Subject", "Testing");
pdf_begin_page($pdf, 595, 842);
pdf_add_outline($pdf, "Page 1");
$font = pdf_findfont($pdf, "Times New Roman", "winansi", 1);
pdf_setfont($pdf, $font, 10);
pdf_set_value($pdf, "textrendering", 1);
pdf_show_xy($pdf, "Times Roman outlined", 50, 750);
pdf_moveto($pdf, 50, 740);
pdf_lineto($pdf, 330, 740);
pdf_stroke($pdf);
pdf_end_page($pdf);
pdf_close($pdf);
pdf_delete($pdf);
echo "<A HREF=getpdf.php>finished</A>";
?>
]]>
      </programlisting>
     </example>
     以下のスクリプト<filename>getpdf.php</filename>は、PDFドキュメ
     ントを返すだけのものです。
     <example>
      <title>計算を行ってからPDFを出力する</title>
      <programlisting role="php">
<![CDATA[
<?php
$len = filesize($filename);
header("Content-type: application/pdf");
header("Content-Length: $len");
header("Content-Disposition: inline; filename=foo.pdf");
readfile($filename);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     PDFlibの配布ファイルには、アナログクロックで本格的なページを作成す
     るより複雑な例が含まれています。ここでは、PDFlibのメモリ内作成機
     能を使用しており、このため、テンポラリファイルは不要です。この例
     をPHPからPDFlibを使用するように変換すると以下のようになります。
     (<link linkend="ref.cpdf">CLibPDFモジュール)</link>のドキュメント
     にも同じ例があります。)
    </para>
    <para>
     <example>
      <title>PDFlib配布ファイル中の pdfclockの例</title>
      <programlisting>
<![CDATA[
<?php
$radius = 200;
$margin = 20;
$pagecount = 10;

$pdf = pdf_new();

if (!pdf_open_file($pdf, "")) {
    print error;
    exit;
};

pdf_set_parameter($pdf, "warning", "true");

pdf_set_info($pdf, "Creator", "pdf_clock.php");
pdf_set_info($pdf, "Author", "Uwe Steinmann");
pdf_set_info($pdf, "Title", "Analog Clock");

while($pagecount-- > 0) {
    pdf_begin_page($pdf, 2 * ($radius + $margin), 2 * ($radius + $margin));

    pdf_set_parameter($pdf, "transition", "wipe");
    pdf_set_value($pdf, "duration", 0.5);
  
    pdf_translate($pdf, $radius + $margin, $radius + $margin);
    pdf_save($pdf);
    pdf_setrgbcolor($pdf, 0.0, 0.0, 1.0);

    /* 1分刻みの目盛 */
    pdf_setlinewidth($pdf, 2.0);
    for ($alpha = 0; $alpha < 360; $alpha += 6) {
        pdf_rotate($pdf, 6.0);
        pdf_moveto($pdf, $radius, 0.0);
        pdf_lineto($pdf, $radius-$margin/3, 0.0);
        pdf_stroke($pdf);
    }

    pdf_restore($pdf);
    pdf_save($pdf);

    /* 5分刻みの目盛 */
    pdf_setlinewidth($pdf, 3.0);
    for ($alpha = 0; $alpha < 360; $alpha += 30) { 
        pdf_rotate($pdf, 30.0);
        pdf_moveto($pdf, $radius, 0.0);
        pdf_lineto($pdf, $radius-$margin, 0.0);
        pdf_stroke($pdf);
    }

    $ltime = getdate();

    /* 時針を描画 */
    pdf_save($pdf);
    pdf_rotate($pdf,-(($ltime['minutes']/60.0)+$ltime['hours']-3.0)*30.0);
    pdf_moveto($pdf, -$radius/10, -$radius/20);
    pdf_lineto($pdf, $radius/2, 0.0);
    pdf_lineto($pdf, -$radius/10, $radius/20);
    pdf_closepath($pdf);
    pdf_fill($pdf);
    pdf_restore($pdf);

    /* 分針を描画 */
    pdf_save($pdf);
    pdf_rotate($pdf,-(($ltime['seconds']/60.0)+$ltime['minutes']-15.0)*6.0);
    pdf_moveto($pdf, -$radius/10, -$radius/20);
    pdf_lineto($pdf, $radius * 0.8, 0.0);
    pdf_lineto($pdf, -$radius/10, $radius/20);
    pdf_closepath($pdf);
    pdf_fill($pdf);
    pdf_restore($pdf);

    /* 秒針を描画 */
    pdf_setrgbcolor($pdf, 1.0, 0.0, 0.0);
    pdf_setlinewidth($pdf, 2);
    pdf_save($pdf);
    pdf_rotate($pdf, -(($ltime['seconds'] - 15.0) * 6.0));
    pdf_moveto($pdf, -$radius/5, 0.0);
    pdf_lineto($pdf, $radius, 0.0);
    pdf_stroke($pdf);
    pdf_restore($pdf);

    /* 中心に小さな円を描画 */
    pdf_circle($pdf, 0, 0, $radius/30);
    pdf_fill($pdf);

    pdf_restore($pdf);

    pdf_end_page($pdf);

    /* 変化を見るために待つ */
    sleep(1);
}

pdf_close($pdf);

$buf = pdf_get_buffer($pdf);
$len = strlen($buf);

header("Content-type: application/pdf");
header("Content-Length: $len");
header("Content-Disposition: inline; filename=foo.pdf");
echo $buf;

pdf_delete($pdf);
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>

   <section id="pdf.seealso">
    &reftitle.seealso;
    <note>
     <para>
      PDFドキュメントを作成するための別のPHPモジュールとして
      <ulink url="&url.cpdf;">FastIO's</ulink> ClibPDFが利用可能です。
      詳細については、<link linkend="ref.cpdf">ClibPDF</link>の節を参
      照ください。<link linkend="ref.cpdf">ClibPDF</link> はPDFlibとはや
      や異なるAPIを使用していることに注意してください。
     </para>
    </note>
   </section>

  </partintro>

&reference.pdf.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

