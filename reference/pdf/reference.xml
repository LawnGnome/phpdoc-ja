<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.23 Maintainer: hirokawa Status: ready -->
<!-- Purpose: utilspec.nontext -->
<!-- Membership: pecl, external -->

 <reference id="ref.pdf">
  <title>PDF &Functions;</title>
  <titleabbrev>PDF</titleabbrev>
  
  <partintro>
   <section id="pdf.intro">
    &reftitle.intro;
    <para>
     PHP の PDF 関数を使用すると、
     Thomas Merz が作成して現在は <ulink url="&url.pdf;">PDFlib GmbH</ulink>
     がメンテナンスしている PDFlib ライブラリを使用した PDF
     ファイルが作成できるようになります。
    </para>
    <para>
     本節のドキュメントは、PDFlib ライブラリで利用可能な関数の概要のみを
     説明することを意図しており、完全なリファレンスではありません。
     ここで扱う各関数の完全で詳細な説明については、PDFlib GmbH が配布する
     すべての PDFlib パッケージに含まれている PDFlib リファレンスマニュアルを
     参照ください。このドキュメントは、PDFlib の機能に関する
     概要を非常に良くまとめており、全ての関数に関する最新のドキュメントが
     含まれています。
    </para>
    <para>
     はじめの一歩としては、
     PDFlib 配布パッケージに含まれるサンプルプログラムを眺めることをお勧めします。
     このサンプルでは、基本的なテキスト、ベクター、グラフィックスの出力だけではなく、
     PDF インポート機能 (PDI) のような高度な関数も扱っています。
    </para>
    <para>
     PDFlib のほとんどの関数と PHP モジュール内の関数の名前とパラメータは共通になっています。
     別途設定されていない限り、
     全ての長さと座標は、Postscript のポイント数で計られます。通常、1
     インチあたり 72 Postscript ポイントですが、これは出力解像度に依存します。
     使用する座表系に関するより詳細な説明については、PDFlib
     の配布物に含まれる PDFlib リファレンスマニュアルを参照ください。
    </para>
	<para>
     PDFlib のバージョン 6 では、PHP 4 用の関数指向の API に加えて
     PHP 5 用のオブジェクト指向の API も提供しています。
     主な違いは以下のとおりです。
	</para>
    <para>
     PHP 4 では、まず最初に以下のような関数コールによって
     PDF リソースを取得しなければなりませんでした。
    </para>   
    <para>
     $p = PDF_new().
    </para>   
    <para>
     この PDF リソースは、それ以降のすべての関数コールの
     第一パラメータとして次のように使用されます。
    </para>   
    <para>
     PDF_begin_document($p, "", "").
    </para>   
    <para>
     しかし、PHP 5 では PDFlib オブジェクトは次のように作成します。
    </para>   
    <para>
     $p = new PDFlib().
    </para>   
    <para>
     このオブジェクトは、PDFlib API のすべての関数をメソッドとして
     提供しています。たとえば次のようになります。
    </para>   
    <para>
     $p->begin_document("", "").
    </para>   
    <para>
     さらに、PHP 5 の新機能である例外についても
     PDFlib 6 以降でサポートしています。
    </para>   
    <para> 
     詳細な情報は、以下の<link linkend="pdf.examples">例</link>を参照ください。
    </para>
    <note>
     <para>
      外部 PDF ライブラリを使用しない、他のフリーな PDF ジェネレータに
      関心がある場合には、
      <link linkend="faq.using.freepdf">関連する FAQ</link> を参照してください。
     </para>
    </note>
   </section>

   <section id="pdf.requirements">
    &reftitle.required;
    <para>
     PDFlib Lite はオープンソースで公開されていますが、
     フリーで使用するためにはいくつかの条件があります。
     PDFlib Lite は、PDFlib の機能の一部をサポートしています。詳細は
     PDFlib のウェブサイトを参照ください。
     PDFlib の完全版は <ulink url="&url.pdf;">&url.pdf;</ulink> でダウンロード可能ですが、
     商用する場合はライセンスを購入する必要があります。
    </para>
   </section>
   
   <section id="pdf.oldlibs.hints">
    <title>古いバージョンの PDFlib に関する問題</title>
    <para>
     2000 年 3 月 9 日以降のバージョンの PHP 4 では、3.0 より古いバージョンの
     PDFlib をサポートしていません。
    </para>
    <para>
     PDFlib 4.0 以降は、PHP 4.3 以降でサポートされています。
    </para>
   </section>

   &reference.pdf.configure;

   <section id="pdf.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section id="pdf.oldlibs">
    <title>廃止された PDFlib 関数についての注意</title> 
   <para>
     PHP 4.0.5 以降、PHPlib 用の PHP 拡張モジュールは、PDFlib GmbH から
     正式にサポートされています。これにより、PDFlib
     リファレンスマニュアルに記述された全ての関数が PHP4 で全く同じ意味、
     同じパラメータでサポートされています。しかし、PDFlib バージョン 5.0.4
     以降ではすべてのパラメータを指定する必要があります。互換性を保つために
     PDFlib サポート関数ではまだ古い関数もサポートしていますが、上記の
     ように新しいバージョンに置換される予定です。PDFlib GmbH は、これらの
     古い関数を使用した場合に生じた際に生じた問題に関してはサポートを
     行いません。このドキュメントではそれらの関数については「古い関数」と
     明記しており、かわりに使用する関数について説明しています。
   </para>
   </section>

   <section id="pdf.examples">
    &reftitle.examples;
    <para>
     多くの関数の使用法は簡単です。最も困難なのは、最初に pdf
     ドキュメントを作成する場合でしょう。次の例は、入門の際の
     助けとなるはずです。この例は PHP 4 を対象に開発されており、
     1 ページを有するファイル <filename>test.pdf</filename> が作成されます。
     ドキュメントにはフィールドの内容についての情報が定義されており、
     Helvetica-Bold フォントを読み込んで "Hello world! (says PHP)"
     というテキストを出力します。
    </para>
    <para>
     <example>
      <title>PHP 4 用の PDFlib での Hello World の例</title>
      <programlisting role="php">
<![CDATA[
<?php
$p = PDF_new();

/*  新しい PDF ファイルをオープンし、ディスク上に PDF を作成するためにファイル名を挿入します */
if (PDF_begin_document($p, "", "") == 0) {
    die("Error: " . PDF_get_errmsg($p));
}

PDF_set_info($p, "Creator", "hello.php");
PDF_set_info($p, "Author", "Rainer Schaaf");
PDF_set_info($p, "Title", "Hello world (PHP)!");

PDF_begin_page_ext($p, 595, 842, "");

$font = PDF_load_font($p, "Helvetica-Bold", "winansi", "");

PDF_setfont($p, $font, 24.0);
PDF_set_text_pos($p, 50, 700);
PDF_show($p, "Hello world!");
PDF_continue_text($p, "(says PHP)");
PDF_end_page_ext($p, "");

PDF_end_document($p, "");

$buf = PDF_get_buffer($p);
$len = strlen($buf);

header("Content-type: application/pdf");
header("Content-Length: $len");
header("Content-Disposition: inline; filename=hello.pdf");
print $buf;

PDF_delete($p);
?>
]]>
      </programlisting>
     </example>
    </para>

    <para>
     以下の例は PHP 5 用の PDFlib 配布物で使用するためのものです。PHP 5 の
     新機能である例外処理やオブジェクトのカプセル化機能を使用しています。
     この例では <filename>hello.pdf</filename> という名前の 1 ページの
     ファイルを作成します。
     ドキュメントにはフィールドの内容についての情報が定義されており、
     Helvetica-Bold フォントを読み込んで "Hello world! (says PHP)"
     というテキストを出力します。
    </para>
    <para>
     <example>
      <title>PHP 5 用の PDFlib での Hello World の例</title>
      <programlisting>
<![CDATA[
<?php

try {
    $p = new PDFlib();

    /*  新しい PDF ファイルをオープンし、ディスク上に PDF を作成するためにファイル名を挿入します */
    if ($p->begin_document("", "") == 0) {
        die("Error: " . $p->get_errmsg());
    }

    $p->set_info("Creator", "hello.php");
    $p->set_info("Author", "Rainer Schaaf");
    $p->set_info("Title", "Hello world (PHP)!");

    $p->begin_page_ext(595, 842, "");

    $font = $p->load_font("Helvetica-Bold", "winansi", "");

    $p->setfont($font, 24.0);
    $p->set_text_pos(50, 700);
    $p->show("Hello world!");
    $p->continue_text("(says PHP)");
    $p->end_page_ext("");

    $p->end_document("");

    $buf = $p->get_buffer();
    $len = strlen($buf);

    header("Content-type: application/pdf");
    header("Content-Length: $len");
    header("Content-Disposition: inline; filename=hello.pdf");
    print $buf;
}
catch (PDFlibException $e) {
    die("PDFlib exception occurred in hello sample:\n" .
       "[" . $e->get_errnum() . "] " . $e->get_apiname() . ": " .
       $e->get_errmsg() . "\n");
}
catch (Exception $e) {
    die($e);
}
$p = 0;
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>

  &reference.pdf.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
