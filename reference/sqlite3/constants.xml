<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 323624 Maintainer: takagi Status: ready -->

<appendix xml:id="sqlite3.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants;
 <para>
  <variablelist>
   <varlistentry xml:id="constant.sqlite3-assoc">
    <term>
     <constant>SQLITE3_ASSOC</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <methodname>SQLite3_result::fetchArray</methodname> が返す結果セットが、
      カラム名をインデックスとする配列であることを指定します。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.sqlite3-num">
    <term>
     <constant>SQLITE3_NUM</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <methodname>SQLite3_result::fetchArray</methodname> が返す結果セットが、
      カラム番号をインデックスとする配列であることを指定します。
      カラム番号は 0 からはじまります。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.sqlite3-both">
    <term>
     <constant>SQLITE3_BOTH</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <methodname>SQLite3_result::fetchArray</methodname> が返す結果セットが、
      カラム名とカラム番号の両方をインデックスとする配列であることを指定します。
      カラム番号は 0 からはじまります。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.sqlite3-integer">
    <term>
     <constant>SQLITE3_INTEGER</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      SQLite3 INTEGER 型を表します。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.sqlite3-float">
    <term>
     <constant>SQLITE3_FLOAT</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      SQLite3 REAL (FLOAT) 型を表します。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.sqlite3-text">
    <term>
     <constant>SQLITE3_TEXT</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      SQLite3 TEXT 型を表します。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.sqlite3-blob">
    <term>
     <constant>SQLITE3_BLOB</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      SQLite3 BLOB 型を表します。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.sqlite3-null">
    <term>
     <constant>SQLITE3_NULL</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      SQLite3 NULL 型を表します。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.sqlite3-open-readonly">
    <term>
     <constant>SQLITE3_OPEN_READONLY</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      SQLite3 データベースを読み込み専用でオープンすることを指定します。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.sqlite3-open-readwrite">
    <term>
     <constant>SQLITE3_OPEN_READWRITE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      SQLite3 データベースを読み書き両用でオープンすることを指定します。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.sqlite3-open-create">
    <term>
     <constant>SQLITE3_OPEN_CREATE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      データベースが存在しない場合に SQLite3 データベースを新規作成することを指定します。
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

