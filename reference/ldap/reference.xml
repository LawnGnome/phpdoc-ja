<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.11 -->
<!-- sync 1.11 -->
 <reference id="ref.ldap">
  <title>LDAP 関数</title>
  <titleabbrev>LDAP</titleabbrev>
  
  <partintro>
   <section id="ldap.intro">
    &reftitle.intro;
    <para>
     LDAP とは Lightweight Directory Access Protocol を意味し、
     "ディレクトリサーバ" にアクセスするために使用されるプロトコルです。
     ディレクトリとは、
     ツリー構造に情報を保持している特殊なデータベースのことです。
    </para>
    <para> 
     この概念は、ハードディスクのディレクトリ構造に似ています。
     ただし、その内容は異なっており、ルートディレクトリは "世界" であり、
     最初のレベルのサブディレクトリは "国" となります。ディレクトリ構造
     の下位には、会社や機関、場所のエントリがあります。さらに下位には、
     人やおそらく道具や文書に関するディレクトリエントリもあります。
    </para>
    <para>
     ハードディスクにあるサブディレクトリにあるファイルを参照するには、
     次のようにします。
    </para>
    <literallayout>
/usr/local/myapp/docs
    </literallayout>
    <para>
     スラッシュは、リファレンスの各部分を区分し、解釈は左から右に行われます。
    </para>
    <para>
     LDAP においてこの完全に正しいファイル参照に等価なものは
    "区分された名前(distinguished name)"であり、単に"dn"と表されます。
     例として dn が次のようになっているとしましょう。
    </para>
    <literallayout>
     cn=John Smith,ou=Accounts,o=My Company,c=US
    </literallayout>
    <para>
     カンマは各部分を区分し、右から左に解釈されます。この dn は次のよう
     に解釈されます。
    </para>
    <literallayout>
    country = US
    organization = My Company
    organizationalUnit = Accounts
    commonName = John Smith
    </literallayout>
    <para>
     ハードディスクのディレクトリ構造を管理する手法について明確な規約が
     ないのと同様に、ディレクトリサーバーマネージャーは、目的に適したあ
     らゆる構造を設定することが可能です。しかし、実用的にはいくつかの慣
     習があります。
     利用可能なものに関する情報を持たずにデータベースを使用する
     ことができないのと同様にディレクトリの構造に関する情報なくして
     ディレクトリサーバーにアクセスするコードを書くことはできない
     ということが言えます。
    </para>
    <para>
     LDAPに関する多くの情報が以下の場所にあります。
    </para>

    <itemizedlist>
     <listitem>
      <para>
       <ulink url="&url.ldap.netscape;">Netscape</ulink>
      </para>
     </listitem>
     <listitem>
      <para>
       <ulink url="&url.ldap.openldap;">OpenLDAP Project</ulink>
      </para>
     </listitem>
     <listitem>
      <para>
       <ulink url="&url.ldap.ldapworld;">LDAP World</ulink>
      </para>
     </listitem>
    </itemizedlist>

    <para>    
     Netscape SDKには、有用なHTML形式の<ulink
      url="&url.ldap.netscape.sdk.docs;">プログラマーズガイド</ulink>があります。
    </para>
   </section>

   <section id="ldap.requirements">
    &reftitle.required;
    <para>
     LDAP サポートを有効にして PHP をコンパイルするには、
     ミシガン大学の <ulink url="&url.ldap.mt;">
     ldap-3.3 package</ulink>, <ulink url="&url.ldap.netscape.sdk;"> Netscape
     Directory SDK 3.0</ulink> か <ulink url="&url.ldap.openldap.source;">
     OpenLDAP</ulink> のいずれかを入手し、コンパイルしておく必要があります。
    </para>
   </section>
   
   &reference.ldap.configure;
   
   &reference.ldap.ini;

   <section id="ldap.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   &reference.ldap.constants;

   <section id="ldap.examples">
    &reftitle.examples;
    <para>
     あるディレクトリサーバーから姓が "S" から始まる全てのエントリに
     関する情報を検索し、名前と電子メールアドレスで検索結果を表示します。
    </para>

    <example>
     <title>LDAP検索の例</title>
     <programlisting role="php">
<![CDATA[
<?php
// LDAP の基本シーケンスは、接続、バインド、検索、検索結果の解釈、
// 接続のクローズです。
 
echo "<h3>LDAP query test</h3>";
echo "Connecting ...";
$ds=ldap_connect("localhost");  // 有効な LDAP サーバーに違いない!
echo "connect result is " . $ds . "<br />";
 
if ($ds) { 
    echo "Binding ...";
    $r=ldap_bind($ds);     // これは "匿名" バインドで、通常は
                           // 読みこみのみのアクセスとなります。
    echo "Bind result is " . $r . "<br />";
 
    echo "Searching for (sn=S*) ...";
    // 名前(surname)エントリを検索
    $sr=ldap_search($ds, "o=My Company, c=US", "sn=S*");
    echo "Search result is " . $sr . "<br />";
    echo "Number of entires returned is " . ldap_count_entries($ds, $sr) . "<br />";

    echo "Getting entries ...<p>";
    $info = ldap_get_entries($ds, $sr);
    echo "Data for " . $info["count"] . " items returned:<p>";
 
    for ($i=0; $i<$info["count"]; $i++) {
        echo "dn is: " . $info[$i]["dn"] . "<br />";
        echo "first cn entry is: " . $info[$i]["cn"][0] . "<br />";
        echo "first email entry is: " . $info[$i]["mail"][0] . "<br /><hr />";
    }
 
    echo "Closing connection";
    ldap_close($ds);
 
} else {
     echo "<h4>Unable to connect to LDAP server</h4>";
}
?>
]]>
     </programlisting>
    </example>
   </section>    
   
   <section id="ldap.using">
    <title>PHP LDAP コールの使用法</title>
    <para>
     LDAP コールを使用する前に、以下のことを知っておいてください。
     
     <itemizedlist>
      <listitem>
       <para>
        使用するディレクトリサーバーの名前またはアドレス
       </para>
      </listitem>
      <listitem>
       <para>
        サーバーの "base dn" (このサーバーがあるワールドディレクトリ
        の部分で、"o=My Company,c=US" のようにすることができます)
	</para>
      </listitem>
      <listitem>
       <para>
        サーバーへのアクセスにパスワードを必要とするかどうか。
        (多くのサーバーは "匿名バインド" に関して読みこみを
        許可するが、他の処理についてはパスワードを要求します)
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     アプリケーションとして作成する LDAP コールのシーケンスは、
     通常、次のようなパターンに沿っています。
     <literallayout>
   ldap_connect()    // サーバーへの接続を確立
      |
   ldap_bind()       // 匿名または認証された "ログイン"
      |
   ディレクトリの検索または更新等を行い、結果を表示する
      |
   ldap_close()      // "ログアウト"
     </literallayout>
    </para>
   </section>
  </partintro>
  
  &reference.ldap.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

