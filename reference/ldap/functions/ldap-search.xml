<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./ja/functions/ldap.xml, last change in rev 1.13 -->
<!-- EN-Revision: 1.7 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
  <refentry id="function.ldap-search">
   <refnamediv>
    <refname>ldap_search</refname>
    <refpurpose>LDAP ツリーを探索する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>resource</type><methodname>ldap_search</methodname>
      <methodparam><type>resource</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>string</type><parameter>base_dn</parameter></methodparam>
      <methodparam><type>string</type><parameter>filter</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>attributes</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>attrsonly</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>sizelimit</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>timelimit</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>deref</parameter></methodparam>
     </methodsynopsis>
    <para>
     サーチ結果 ID を返します。エラーの場合に &false; を返します。
    </para>
    <para>  
     <function>ldap_search</function> は、
     LDAP_SCOPE_SUBTREE のスコープを有するディレクトリに関して、
     指定されたフィルタにより検索を行います。
     これは、ディレクトリ全体を探索することと等価です。
     <parameter>base_dn</parameter> はディレクトリのベース DN
     を指定します。
    </para>
    <para>
     サーバーから返される属性と値を必要なものだけに制限するために
     オプションの 4 番目のバラメータを指定することができます。
     これは、（全ての属性と関連する値を返す）デフォルトの動作よりも
     かなり効率的です。
     このため、4 番目のパラメータを使用することが望ましいです。
    </para>
    <para>
     4番目のパラメータは、array("mail","sn","cn") のような
     必要な属性を保持する通常の PHP 文字列配列です。
     "dn" は要求された属性の型によらず常に返されることに注意してください。
    </para>
    <para>
     いくつかのディレクトリサーバホストは、事前に設定されたエントリ数
     以上のものを返します。この場合、サーバは部分的な結果集合を返した
     だけであることをサーバは示します。この場合、取得するエントリ数を
     制限するために 6 番目のパラメータ <parameter>sizelimit</parameter>
     も使用します。
    </para> 
    <para>
     属性型のみを取得したい場合、5 番目のパラメータ
     <parameter>attrsonly</parameter> を1とする必要があります。0 に設定
     した場合、属性型と属性値がデフォルトの動作として取得されます。
    </para> 
    <para>
     6 番目のパラメータ <parameter>sizelimit</parameter> が指定された場合
     取得するエントリ数を制限することが可能です。これに 0 を指定すると
     制限を設けないこととなります。
     注意: このパラメータはサーバ側で事前に設定された sizelimit を
     上書きすることはできません。
    </para> 
    <para>
     7 番目のパラメータ <parameter>timelimit</parameter> は、検索に要する
     最大時間を設定します。これを 0 にすると制限を設けないこととなります。
     注意: このパラメータはサーバ側で事前に設定された timelimit を上書き
     することはできません。これより小さい値を設定することも可能です。
    </para> 
    <para>
     8 番目のパラメータ <parameter>deref</parameter> は、検索時にエイリアスを
     どのように処理するかを指定します。以下のいずれかを指定します。
     <itemizedlist>
     <listitem>
      <simpara>
       LDAP_DEREF_NEVER -（デフォルト）エイリアスは被参照されません。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LDAP_DEREF_SEARCHING - エイリアスは検索時に被参照されますが、
       検索のベースオブジェクトにある場合には参照されません。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LDAP_DEREF_FINDING - エイリアスは、ベースオブジェクトがあるが
       検索中ではない時に被参照されます。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LDAP_DEREF_ALWAYS - エイリアスは常に被参照されます。
      </simpara>
     </listitem>
     </itemizedlist>
    </para>  
    <note>
     <para>
      これらのオプションのパラメータは 4.0.2 で追加されました。
      <parameter>attrsonly</parameter>、
      <parameter>sizelimit</parameter>、
      <parameter>timelimit</parameter>、
      <parameter>deref</parameter>。
     </para>
    </note>
    <para>
     検索フィルタは、LDAP ドキュメントに記述されたフォーマットの論理
     演算子を用いて、簡単なものまたは高度なものとすることができます
     （フィルタに関する詳細な情報については、
     <ulink url="&url.ldap.filters;">Netscape Directory SDK</ulink>
     を参照ください）。
    </para>
    <para>
     以下の例は、"My Company" の全員について姓または名の一部に文字列
     $person を含む人の組織単位、姓、名、電子メールアドレスを取得します。
     この例は、複数の属性に関する情報についてサーバに検索をかける論理
     フィルタを使用します。
     <example>
      <title>LDAP 検索</title>
      <programlisting role="php">
<![CDATA[
<?php
// $ds は、ディレクトリサーバの有効なリンク ID

// $person は、人名またはその一部。例 "Jo"

$dn = "o=My Company, c=US";
$filter="(|(sn=$person*)(givenname=$person*))";
$justthese = array("ou", "sn", "givenname", "mail");

$sr=ldap_search($ds, $dn, $filter, $justthese);

$info = ldap_get_entries($ds, $sr);

echo $info["count"]." 個のエントリが返されました\n";
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     4.0.5 以降、並行検索も可能となっています。並行検索を行うには、単一の
     ID を使うのではなく、リンク ID の配列を使用します。
     同じベース DN を使用したくない場合や全ての検索について同じフィルタを
     使用したくない場合、ベース DN の配列またはフィルタの配列を使用する
     ことが可能です。これらの配列は、リンク ID の配列と同じ大きさである
     必要があります。これは、その配列の最初が一回の検索で使用され、2 番目の
     エントリが他の検索で使用されるといったようになるからです。並行検索を
     実行する際、エラーの場合を除き、検索結果 ID の配列が返されます。
     エラーの場合は対応する検索のエントリは &false; となります。これは
     通常返される値とよく似ていますが、検索が行われた際に結果 ID が常に
     返されます。まれに、並行検索は ID を返すにもかかわらず通常の検索は
     &false; を返すということがあります。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
