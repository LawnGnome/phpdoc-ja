<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.6 Maintainer: takagi Status: ready -->
 <refentry id="function.aggregate-info">
   <refnamediv>
    <refname>aggregate_info</refname>
    <refpurpose>
     オブジェクトに集約された各クラスのメソッドとプロパティを
     連想配列で返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>aggregate_info</methodname>
      <methodparam><type>object</type><parameter>object</parameter></methodparam>
     </methodsynopsis>
    <para>
     指定したオブジェクトに関する集約の情報を返します。返される値は、
     メソッドとプロパティの配列を要素とする連想配列形式となります。
     連想配列のキーは、集約されたクラス名となります。
    </para>
    <para>
     以下に例を示します。
     <example>
      <title><function>aggregate_info</function> の使用例</title>
      <programlisting role="php">
<![CDATA[
<?php

class Slicer {
    var $vegetable;

    function Slicer($vegetable) 
    {
        $this->vegetable = $vegetable;
    }

    function slice_it($num_cuts) 
    {
        echo "単純にスライスします\n";
        for ($i=0; $i < $num_cuts; $i++) {
            // 何らかのスライス処理
        }
    }
}

class Dicer {
    var $vegetable;
    var $rotation_angle = 90;   // 角度

    function Dicer($vegetable) 
    {
        $this->vegetable = $vegetable;
    }

    function dice_it($num_cuts) 
    {
        echo "最初のカットを行います\n";
        for ($i=0; $i < $num_cuts; $i++) {
            // 何らかのカット処理
        }
        $this->rotate($this->rotation_angle);
        echo "2 番目のカットを行います\n";
        for ($i=0; $i < $num_cuts; $i++) {
            // さらに何らかのカット処理
        }
    }

    function rotate($deg) 
    {
        echo "{$this->vegetable} を {$deg} 度回転します\n";
    }

    function _secret_super_dicing($num_cuts) 
    {
        // 秘密の処理なので、見せられません ;-)
    }
}

$obj = new Slicer('タマネギ');
aggregate($obj, 'Dicer');
print_r(aggregate_info($obj));
?>
]]>
      </programlisting>
      <para>
       出力は以下のようになります。
      </para>
      <screen>
<![CDATA[
Array
(
    [dicer] => Array
        (
            [methods] => Array
                (
                    [0] => dice_it
                    [1] => rotate
                )

            [properties] => Array
                (
                    [0] => rotation_angle
                )

        )

)
]]>
      </screen>
     </example>
     ごらんのとおり、<classname>Dicer</classname> クラスのすべての
     プロパティとメソッドが新しいオブジェクトに集約されました。
     ただし、例外としてクラスのコンストラクタと
     <methodname>_secret_super_dicing</methodname> メソッドは
     集約されていません。
    </para>
    <simpara>
     <function>aggregate</function>、
     <function>aggregate_methods</function>、
     <function>aggregate_methods_by_list</function>、
     <function>aggregate_methods_by_regexp</function>、
     <function>aggregate_properties</function>、
     <function>aggregate_properties_by_list</function>、
     <function>aggregate_properties_by_regexp</function>、
     <function>deaggregate</function> も参照ください。

    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
