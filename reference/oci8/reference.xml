<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
 <reference id="ref.oci8">
  <title>Oracle 8 関数</title>
  <titleabbrev>OCI8</titleabbrev>
  <partintro>
   <para>
    以下の関数により Oracle8 および Oracle7 データベースへのアクセスが
    可能となります。この関数は、Oracle8 Call-Interface (OCI8) を使用し
    ます。この拡張機能を使用するには、Oracle8 クライアントライブラリが
    必要です。
   </para>
   <para>
    この拡張モジュールは、通常のOracle拡張機能より柔軟性があります。
    この拡張モジュールは、グローバルおよびローカルの PHP 変数の Ocacle 
    プレースホルダーへのバインドをサポートします。また、LOB,FILE,ROWID
    を完全にサポートしており、ユーザー定義の変数が使用可能です。
   </para>
   <para>
    この拡張モジュールを使用する前に WebデーモンのユーザでもあるOracle
    ユーザのOracle用環境変数が正しく設定されていることを確認して下さい。
    設定されている必要がある変数を以下に示します。
    <itemizedlist>
     <listitem>
      <simpara>
       ORACLE_HOME
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ORACLE_SID
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LD_PRELOAD
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LD_LIBRARY_PATH
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       NLS_LANG
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ORA_NLS33
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Webサーバーのユーザ用に環境変数を設定した後、Webサーバーのユーザ
    (nobody, www)をグループoracleに追加して下さい。
   </para>
   <note>
    <title>Webサーバが起動しないか、起動時にクラッシュする場合</title>
    <para>
     Apacheがpthreadライブラリにリンクされているかどうか次のように確認
     して下さい。
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
# ldd /www/apache/bin/httpd 
    libpthread.so.0 => /lib/libpthread.so.0 (0x4001c000)
    libm.so.6 => /lib/libm.so.6 (0x4002f000)
    libcrypt.so.1 => /lib/libcrypt.so.1 (0x4004c000)
    libdl.so.2 => /lib/libdl.so.2 (0x4007a000)
    libc.so.6 => /lib/libc.so.6 (0x4007e000)
    /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)
]]>
      </screen>
     </informalexample>
    </para>
    <para>
     libpthread がこの一覧にない場合、Apacheを再インストールする必要が
     あります。
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
# cd /usr/src/apache_1.3.xx
# make clean
# LIBS=-lpthread ./config.status
# make
# make install
]]>
      </screen>
     </informalexample>
    </para>
   </note>
   <para>
    <example>
     <title>OCIに関するヒント</title>
      <programlisting role="php">
<![CDATA[
<?php
// by sergo@bacup.ru

// コマンドの実行を遅延させるには、オプション OCI_DEFAULT を使用して
// 下さい
OCIExecute($stmt, OCI_DEFAULT);

// (クエリ結果取得後に)使用するデータを取得

$result = OCIResult($stmt, $n);
if (is_object ($result)) $result = $result->load();

// INSERT または UPDATE 命令の場合に使用

$sql = "insert into table (field1, field2) values (field1 = 'value',
 field2 = empty_clob()) returning field2 into :field2";
OCIParse($conn, $sql);
$clob = OCINewDescriptor($conn, OCI_D_LOB);
OCIBindByName ($stmt, ":field2", &$clob, -1, OCI_B_CLOB);
OCIExecute($stmt, OCI_DEFAULT);
$clob->save ("some text");
OCICommit($conn);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    コマンドラインで実行するのと同様な手法により、ストアドプロシージャ
    に簡単にアクセス可能です。
    <example>
     <title>ストアドプロシージャの使用法</title>
      <programlisting role="php">
<![CDATA[
<?php
// by webmaster@remoterealty.com
$sth = OCIParse ( $dbh, "begin sp_newaddress( :address_id, '$firstname',
 '$lastname', '$company', '$address1', '$address2', '$city', '$state',
 '$postalcode', '$country', :error_code );end;" );

// この命令は、:address_id を入出力変数、:error_code を出力変数として
// ストアドプロシージャ sp_newaddress をコールします。
// 続いて、以下のようにバインドを実行します。

   OCIBindByName ( $sth, ":address_id", $addr_id, 10 );
   OCIBindByName ( $sth, ":error_code", $errorcode, 10 );
   OCIExecute ( $sth );

?>
]]>
     </programlisting>
    </example>
   </para>
  </partintro>

&reference.oci8.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

