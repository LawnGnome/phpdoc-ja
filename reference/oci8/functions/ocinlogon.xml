<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/oci8.xml, last change in rev 1.4 -->
<!-- last change to 'ocinlogon' in en/ tree in rev 1.15 -->
  <refentry id="function.ocinlogon">
   <refnamediv>
    <refname>OCINLogon</refname>
    <refpurpose>Oracle データベースに接続し、新規接続にログオン、
    新規セッションを返す
</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCINLogon</methodname>
      <methodparam><type>string</type><parameter>username</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam><type>string</type><parameter>
	<replaceable><optional>db</optional></replaceable>
       </parameter></methodparam>    
     </methodsynopsis>
    <para>
     <function>OCINLogon</function>は、Oracle 8 データベースへの新規接続を
     作成し、ログオンします。
     オプションの3番目のパラメータには、ローカルOracleインスタンスの名前か
     tnsnames.ora における接続先のエントリ名を指定することができます。
     オプションの3番目のパラメータが指定されない場合、
     PHP は接続先のデータベースを定義するために環境変数 ORACLE_SID (Oracle 
     インスタンス)または TWO_TASK (tnsnames.ora) を使用します。
    </para>
    <para>
     <function>OCINLogon</function> は強制的に新規接続を作成します。
     一連のトランザクションを独立して実行する必要がある場合にこの関数を
     使用する必要があります。デフォルトでは、接続は、     
     <function>OCILogon</function> を使用した場合はページレベルで共有され、
     <function>OCIPLogon</function> を使用した場合は Web サーバープロセス
     レベルで共有されます。
     <function>OCINLogon</function> を使用して複数の接続をオープンした場合、
     コミットおよびロールバックは指定した接続のみに適用されます。
    </para>
    <para>
    以下の例は、接続がどのように分割されるかを示すものです。
     <example>
      <title>OCINLogon</title>
      <programlisting>
<![CDATA[
<?php
print "<HTML><PRE>";
$db = "";

$c1 = ocilogon("scott","tiger",$db);
$c2 = ocinlogon("scott","tiger",$db);

function create_table($conn)
{ $stmt = ociparse($conn,"create table scott.hallo (test
varchar2(64))");
  ociexecute($stmt);
  echo $conn." created table\n\n";
}

function drop_table($conn)
{ $stmt = ociparse($conn,"drop table scott.hallo");
  ociexecute($stmt);
  echo $conn." dropped table\n\n";
}

function insert_data($conn)
{ $stmt = ociparse($conn,"insert into scott.hallo 
            values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  ociexecute($stmt,OCI_DEFAULT);
  echo $conn." inserted hallo\n\n";
}

function delete_data($conn)
{ $stmt = ociparse($conn,"delete from scott.hallo");
  ociexecute($stmt,OCI_DEFAULT);
  echo $conn." deleted hallo\n\n";
}

function commit($conn)
{ ocicommit($conn);
  echo $conn." committed\n\n";
}

function rollback($conn)
{ ocirollback($conn);
  echo $conn." rollback\n\n";
}

function select_data($conn)
{ $stmt = ociparse($conn,"select * from scott.hallo");
  ociexecute($stmt,OCI_DEFAULT);
  echo $conn."----selecting\n\n";
  while (ocifetch($stmt))
    echo $conn." <".ociresult($stmt,"TEST").">\n\n";
  echo $conn."----done\n\n";
}

create_table($c1);
insert_data($c1);

select_data($c1);   
select_data($c2);   

rollback($c1);      

select_data($c1);   
select_data($c2);   

insert_data($c2);   
commit($c2);        

select_data($c1);   

delete_data($c1);   
select_data($c1);   
select_data($c2);   
commit($c1);        

select_data($c1);
select_data($c2);

drop_table($c1);
print "</PRE></HTML>";
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     <function>OCILogon</function> および
     <function>OCIPLogon</function> も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
