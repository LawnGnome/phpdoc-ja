<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: takagi Status: ready -->
  <refentry id="function.oci-bind-array-by-name">
   <refnamediv>
    <refname>oci_bind_array_by_name</refname>
    <refpurpose>
     PHP の配列を Oracle PL/SQL の配列に名前でバインドする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>bool</type><methodname>oci_bind_array_by_name</methodname>
      <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>name</parameter></methodparam>
      <methodparam><type>array</type><parameter role="reference">var_array</parameter></methodparam>
      <methodparam><type>int</type><parameter>max_table_length</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>max_item_length</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <note>
     <para>
      この関数は、OCI8 のリリース 1.2 および PHP のリリース 5.1.2
      以降で使用可能です。
     </para>
    </note>
    <para>
     <function>oci_bind_array_by_name</function> は、PHP の配列
     <parameter>var_array</parameter> を Oracle のプレースホルダ
     <parameter>name</parameter> にバインドします。
     このプレースホルダは Oracle PL/SQL の配列を指しています。
     入力変数あるいは出力変数のどちらとして使用されるのかは、
     実行時に決められます。<parameter>max_table_length</parameter>
     は入力配列および結果の配列の両方の最大長を設定します。
     <parameter>max_item_length</parameter> は配列の項目の最大長を設定します。
     もし <parameter>max_item_length</parameter> が指定されなかった場合、
     あるいは -1 が指定された場合は、
     <function>oci_bind_array_by_name</function> 
     は入力の配列の中で最も長い要素を探し、その長さを項目の最大長とします。
     <parameter>type</parameter> では、PL/SQL 配列の項目の型を指定します。
     指定可能な型については以下を参照ください。
    </para>
    <para>
     <itemizedlist>
      <listitem>
       <para>
        <constant>SQLT_NUM</constant> - NUMBER の配列を表します。
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_INT</constant> - INTEGER の配列を表します
        (注意: INTEGER は、実際には NUMBER(38) のシノニムですが、
        <constant>SQLT_NUM</constant> ではこの場合うまく動作しません)。
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_FLT</constant> - FLOAT の配列を表します。
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_AFC</constant> - CHAR の配列を表します。
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_CHR</constant> - VARCHAR2 の配列を表します。
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_VCS</constant> - VARCHAR の配列を表します。
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_AVC</constant> - CHARZ の配列を表します。
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_STR</constant> - STRING の配列を表します。
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_LVC</constant> - LONG VARCHAR の配列を表します。
       </para>
      </listitem>
     <listitem>
       <para>
        <constant>SQLT_ODT</constant> - DATE の配列を表します。
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title><function>oci_bind_array_by_name</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php

$c = oci_connect("scott", "tiger");

$create = "CREATE TABLE bind_example(name VARCHAR(20))";
$statement = oci_parse($c, $create);
oci_execute($statement);

$create_pkg = "
CREATE OR REPLACE PACKAGE ARRAYBINDPKG1 AS
  TYPE ARRTYPE IS TABLE OF VARCHAR(20) INDEX BY BINARY_INTEGER;
  PROCEDURE iobind(c1 IN OUT ARRTYPE);
END ARRAYBINDPKG1;";
$statement = oci_parse($c, $create_pkg);
oci_execute($statement);

$create_pkg_body = "
CREATE OR REPLACE PACKAGE BODY ARRAYBINDPKG1 AS
  CURSOR CUR IS SELECT name FROM bind_example;
  PROCEDURE iobind(c1 IN OUT ARRTYPE) IS
    BEGIN
    FOR i IN 1..5 LOOP
      INSERT INTO bind_example VALUES (c1(i));
    END LOOP;
    IF NOT CUR%ISOPEN THEN
      OPEN CUR;
    END IF;
    FOR i IN REVERSE 1..5 LOOP
      FETCH CUR INTO c1(i);
      IF CUR%NOTFOUND THEN
        CLOSE CUR;
        EXIT;
      END IF;
    END LOOP;
  END iobind;
END ARRAYBINDPKG1;";
$statement = oci_parse($c, $create_pkg_body);
oci_execute($statement);

$statement = oci_parse($c, "BEGIN ARRAYBINDPKG1.iobind(:c1); END;");

$array = array("one", "two", "three", "four", "five");

oci_bind_array_by_name($statement, ":c1", $array, 5, -1, SQLT_CHR);

oci_execute($statement);

var_dump($array);

 ?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

