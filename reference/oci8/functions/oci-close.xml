<?xml version="1.0" encoding="utf-8" ?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: satoruyoshida Status: working -->
<refentry xml:id="function.oci-close" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_close</refname>
  <refpurpose>Oracleとの接続を閉じる</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>oci_close</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
  </methodsynopsis>
  <para>
   接続 <parameter>connection</parameter> を閉じます。
   他のいかなるリソースも利用しない、なおかつ <function>oci_connect</function>
   または <function>oci_new_connect</function> で作成された場合、
   基礎となるデータベース接続が閉じられます。
  </para>
  <para>
   もはや不要となった接続を閉じることを推奨します。
   なぜなら、これにより他のユーザーがデータベースリソースを利用できるようになるからです。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       <function>oci_connect</function>、<function>oci_pconnect</function>
       あるいは <function>oci_new_connect</function> が返す Oracle 接続 ID。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>接続を閉じる</title>
   <para>
    基礎となるデータベース接続がきちんと終了され、データベースリソースが解放されることを確実にするために、
    接続に関連したリソースは閉じられるべきです。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT * FROM departments');
$r = oci_execute($stid);
oci_fetch_all($stid, $res);
var_dump($res);

// 接続を閉じるときにステートメント識別子を解放します
oci_free_statement($stid);
oci_close($conn);

?>
]]>
   </programlisting>
  </example>

  <example>
   <title>参照の全てが閉じられるまでデータベース接続は閉じられません</title>
   <para>
    基礎となるデータベースへの接続が閉じられる前に
    接続の内部的な参照回数識別子はゼロで無ければいけません
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT * FROM departments');  // this increases the refcount on $conn
oci_execute($stid);
oci_fetch_all($stid, $res);
var_dump($res);

oci_close($conn);

// $conn is no long usable in the script but the underlying database
// connection is still held open until $stid is freed.
var_dump($conn);  // prints NULL  

// While PHP sleeps, querying the Oracle V$SESSION view in a
// terminal window will show that the database user is still connected.
sleep(10);

// When $stid is freed, the database connection is physically closed
oci_free_statement($stid);  

// While PHP sleeps, querying the Oracle V$SESSION view in a
// terminal window will show that the database user has disconnected.
sleep(10);

?>
]]>
   </programlisting>
  </example>

  <example>
   <title>一回以上開かれた接続を閉じる</title>
   <para>
     When database credentials are reused, both connections must be closed
     before the underlying database connection is closed.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$conn1 = oci_connect('hr', 'welcome', 'localhost/XE');

// Using the same credentials reuses the same underlying database connection
// Any uncommitted changes done on $conn1 will be visible in $conn2
$conn2 = oci_connect('hr', 'welcome', 'localhost/XE');

// While PHP sleeps, querying the Oracle V$SESSION view in a
// terminal window will show that only one database user is connected.
sleep(10);

oci_close($conn1); // doesn't close the underlying database connection
var_dump($conn1);  // prints NULL because the variable $conn1 is no longer usable
var_dump($conn2);  // displays that $conn2 is still a valid connection resource

?>
]]>
   </programlisting>
  </example>

  <example>
   <title>変数がスコープから外れると接続が閉じられます</title>
   <para>
    接続を参照する変数の全てがスコープを外れてPHPにより解放されると、
    （必要に応じて）ロールバックが発生します。
    そしてデータベースへの基礎となる接続が閉じられます。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

function myfunc() {
    $conn = oci_connect('hr', 'hrpwd', 'localhost/XE');
    if (!$conn) {
        $e = oci_error();
        trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
    }

    $stid = oci_parse($conn, 'UPDATE mytab SET id = 100');
    oci_execute($stid, OCI_NO_AUTO_COMMIT);
    return "Finished";
}

$r = myfunc();
// この時点でロールバックが発生し、基礎となるデータベース接続が閉じられます。

print $r;  // displays the function return value "Finished"

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    接続識別子に依存する変数、たとえば <function>oci_parse</function> により返される
    ステートメント識別子のような変数は、基礎となるデータベース接続が閉じられる前に
    解放されなければいけません。
   </para>
  </note>
  <note>
   <para>
    PHP 5.1.2 (PECL OCI8 1.1) より前のバージョンでは、<function>oci_close</function>
    は実際には何もしませんでした。最近のバージョンでは、きちんと Oracle 接続を閉じます。
    この関数の古い動作をさせる場合は <link
    linkend="ini.oci8.old-oci-close-semantics">oci8.old_oci_close_semantics</link>
    オプションを使用してください。
   </para>
  </note>
  <note>
   <para>
    <function>oci_close</function> 関数は
    <function>oci_pconnect</function> で作成された基礎となるデータベース接続を
    閉じません。
   </para>
  </note>
  <note>
   <para>
    5.0.0 より前の PHP バージョンでは、代わりに <function>ocilogoff</function>
    を使用しなければいけません。 &oci.name.compat.note;
   </para>
  </note>

 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>oci_connect</function></member>
    <member><function>oci_free_statement</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
