<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334621 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.file-get-contents">
 <refnamediv>
  <refname>file_get_contents</refname> 
  <refpurpose>ファイルの内容を全て文字列に読み込む</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>file_get_contents</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>use_include_path</parameter><initializer>false</initializer></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>maxlen</parameter></methodparam>
  </methodsynopsis>
  <para> 
   この関数は <function>file</function> と似ていますが、
   <parameter>offset</parameter> で指定した場所から開始し
   <parameter>maxlen</parameter> バイト分だけ
   ファイルの内容を文字列に読み込むという点が異なります。
   失敗した場合、<function>file_get_contents</function> は &false; を返します。
  </para>
  <para>
   <function>file_get_contents</function>はファイルの内容を文字列に読み込む
   方法として好ましいものです。もしOSがサポートしていれば
   パフォーマンス向上のためにメモリマッピング技術が使用されます。
  </para>
  <note>
   <para>
    空白のような特殊な文字を有する URI をオープンする場合には、
    <function>urlencode</function> でその URI をエンコードする必要があります。
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       データを読み込みたいファイルの名前。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>use_include_path</parameter></term>
     <listitem>
      <note>
       <para>
        PHP 5 以降では、定数 <constant>FILE_USE_INCLUDE_PATH</constant>
        を使用して <link linkend="ini.include-path">インクルードパス</link>
        から探すことができます。
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       <function>stream_context_create</function> で作成したコンテキストリソース。
       独自のコンテキストを使用する必要がない場合は、このパラメータに
       &null; を指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       元のストリーム上で、読み込みを開始するオフセット位置。
      </para>
      <para>
       リモートファイルに対するシーク (<parameter>offset</parameter> 指定) はサポートしていません。
       オフセットが小さい場合はリモートファイルでのシークがうまくいくこともありますが、
       これはバッファリングされたストリーム上で動作しているだけのことです。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>maxlen</parameter></term>
     <listitem>
      <para>
       読み込むデータの最大バイト数。
       デフォルトは、ファイル終端に達するまで読み込みます。
       このパラメータは、フィルタが処理した後のストリームに適用されることに注意しましょう。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   読み込んだデータを返します。&return.falseforfailure;。
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <parameter>filename</parameter> が見つからない場合、<parameter>maxlength</parameter>
   がゼロより小さい場合、あるいはストリーム内での指定した <parameter>offset</parameter> へのシークが失敗した場合に
   <constant>E_WARNING</constant> レベルのエラーが発生します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>とあるウェブサイトのホームページのソースの取得と出力</title>
    <programlisting role="php">
<![CDATA[
<?php
$homepage = file_get_contents('http://www.example.com/');
echo $homepage;
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>include_path の検索</title>
    <programlisting role="php">
<![CDATA[
<?php
// <= PHP 5
$file = file_get_contents('./people.txt', true);
// > PHP 5
$file = file_get_contents('./people.txt', FILE_USE_INCLUDE_PATH);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>ファイルの一部の読み込み</title>
    <programlisting role="php">
<![CDATA[
<?php
// 21 文字目から 14 文字ぶん読み込みます
$section = file_get_contents('./people.txt', NULL, NULL, 20, 14);
var_dump($section);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
string(14) "lle Bjori Ro" 
]]>
    </screen>
   </example>
   <example>
    <title>ストリームコンテキストの使用</title>
    <programlisting role="php">
<![CDATA[
<?php
// ストリームを作成します
$opts = array(
  'http'=>array(
    'method'=>"GET",
    'header'=>"Accept-language: en\r\n" .
              "Cookie: foo=bar\r\n"
  )
);

$context = stream_context_create($opts);

// 上で設定した HTTP ヘッダを使用してファイルをオープンします
$file = file_get_contents('http://www.example.com/', false, $context);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        <parameter>offset</parameter> と
        <parameter>maxlen</parameter> パラメータが追加されました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  &tip.fopen-wrapper;
  &warn.ssl-non-standard;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>file</function></member>
    <member><function>fgets</function></member>
    <member><function>fread</function></member>
    <member><function>readfile</function></member>
    <member><function>file_put_contents</function></member>
    <member><function>stream_get_contents</function></member>
    <member><function>stream_context_create</function></member>
    <member><link linkend="reserved.variables.httpresponseheader">$http_response_header</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
