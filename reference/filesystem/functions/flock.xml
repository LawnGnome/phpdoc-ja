<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- splitted from ./ja/functions/filesystem.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.12 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xml:id="function.flock" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>flock</refname>
  <refpurpose>汎用のファイルロックを行う</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>bool</type><methodname>flock</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
   <methodparam><type>int</type><parameter>operation</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">wouldblock</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   PHP は、恣意的にファイルをロックする汎用の手段を提供します。
   (これは、アクセスする全プログラムが同一のロックの方法を使用する
   必要があり、そうでない場合は動作しないことを意味します)
  </simpara>
  <note>
   <para>
    <function>flock</function> は、Windows 環境下では必須です。
   </para>
  </note>
  <simpara>
   <function>flock</function> は、<parameter>handle</parameter> を用いて
   操作を行います。これは、オープンされたファイルポインタである必要があります。
   <parameter>operation</parameter>は、次の値のどれかとなります。
  </simpara>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
       共有ロック(読み手)とするには、<parameter>operation</parameter> に
       <constant>LOCK_SH</constant> (PHP 4.0.1 より前の場合は 1)
       をセットします。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
       排他的ロック(書き手)とするには、<parameter>operation</parameter> に
       <constant>LOCK_EX</constant> (PHP 4.0.1 より前の場合は 2)
       をセットします。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
       (共有または排他的)ロックを開放するには、
       <parameter>operation</parameter> に <constant>LOCK_UN</constant>
       (PHP 4.0.1 より前の場合は 3) をセットします。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
       ロック中に <function>flock</function> でブロックを行いたくない場合は、
       <parameter>operation</parameter> に <constant>LOCK_NB</constant>
       (PHP 4.0.1 より前の場合は 4) を加えます。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <simpara>
   <function>flock</function>により、(ほとんどのUNIXやWindowsさえ含む)
   ほとんど全てのプラットフォームで使用可能な簡易な読み手/書き手モデ
   ルが実現されます。ロックをブロックモードとする場合(EWOULDBLOCK
   errno 条件)にオプションの3番目の引数に&true;を設定します。
   ロックは <function>fclose</function> でも解放されます
   (スクリプトが終了した場合も自動的にコールされます) 。
  </simpara>
  <simpara>
    &return.success;
  </simpara>
  <para>
   <example>
    <title><function>flock</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php

$fp = fopen("/tmp/lock.txt", "w+");

if (flock($fp, LOCK_EX)) { // 排他ロックを行います
    fwrite($fp, "Write something here\n");
    flock($fp, LOCK_UN); // ロックを解放します
} else {
    echo "ファイルをロックできません!";
}

fclose($fp);

?>
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <para>
    <function>flock</function>は、ファイルポインタを必要とするため、
    (<function>fopen</function>へ引数"w"または"w+"を指定して)書き込
    みモードでオープンすることにより丸めるファイルにアクセス保護する
    特別なロックファイルを使用する必要があるかもしれません。
   </para>
  </note>
  <warning>
   <para>
    <function>flock</function> は NFS
    及び他の多くのネットワークファイルシステムでは動作しません。
    詳細についてはオペレーティングシステムのドキュメントを確認ください。
   </para>
   <para>
    いくつかのオーペレーティングシステムで<function>flock</function>
    はプロセスレベルで実装されています。ISAPIのようなマルチスレッド
    型のサーバーAPIを使用している場合、同じサーバーインスタンスの並
    列スレッドで実行されている他のPHPスクリプトに対してファイルを保
    護する際に <function>flock</function>を使用することはできません!
   </para>
   <para>
    <function>flock</function>は<literal>FAT</literal>のような
    旧式のファイルシステムではサポートされていないため、
    そのような環境の場合は常に&false;を返すことになります。
   （これは特にWindows98ユーザーにとって常に真です）
   </para>
  </warning>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
