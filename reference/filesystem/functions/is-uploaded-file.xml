<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.10 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.is-uploaded-file">
 <refnamediv>
  <refname>is_uploaded_file</refname>
  <refpurpose>HTTP POST でアップロードされたファイルかどうかを調べる</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>bool</type><methodname>is_uploaded_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   <varname>filename</varname> という名前のファイルが HTTP POST
   によりアップロードされたものである場合に &true; を返します。
   悪意のあるユーザがスクリプトをだまして、
   本来見られてはいけないはずのファイル
   (<filename>/etc/passwd</filename> など)
   にアクセスすることを防止したい場合に、この関数は有用です。
  </para>
  <para>
   この種の確認は、アップロードされたファイルに関して何でもできる場合には、
   その内容をユーザ、または同じシステム上の他のユーザにさえ
   暴かれる可能性があるため、特に重要です。
  </para>
  <para>
   適切に動作させるため、関数 <function>is_uploaded_file</function>
   は $_FILES['userfile']['tmp_name'] のような引数を必要とします。
   アップロードされたファイルのクライアントマシン上での名前
   $_FILES['userfile']['name'] では動作しません。
  </para>
  <example>
   <title><function>is_uploaded_file</function> の例</title>
   <programlisting role="php">
<![CDATA[
<?php

if (is_uploaded_file($_FILES['userfile']['tmp_name'])) {
   echo "ファイル ". $_FILES['userfile']['name'] ." のアップロードに成功しました。\n";
   echo "その中身を表示します\n";
   readfile($_FILES['userfile']['tmp_name']);
} else {
   echo "おそらく何らかの攻撃を受けました。";
   echo "ファイル名 '". $_FILES['userfile']['tmp_name'] . "'.";
}

?>]]>
   </programlisting>
  </example>
  <para>
   <function>is_uploaded_file</function>は、
   PHP 3.0.16 より後のバージョンの PHP 3 および 4.0.2
   以降のバージョンの PHP 4 でのみ利用可能です。
   古いバージョンを使っていてつまづいている場合は、
   自分自身を守るために後述の関数を使用することができます。
   <note>
    <para>
     以下のサンプルは PHP 4.0.2 以降の PHP 4 では<emphasis>動きません</emphasis>。
     これはこのバージョン以降で PHP の内部処理が変更されたためです。
    </para>
   </note>
  </para>
  <example>
   <title>PHP 4 &lt; 4.0.3 用の <function>is_uploaded_file</function> の例</title>
   <programlisting role="php">
<![CDATA[
<?php
/* アップロードされたファイルのテスト */
function is_uploaded_file_4_0_2($filename)
{
    if (!$tmp_file = get_cfg_var('upload_tmp_dir')) {
        $tmp_file = dirname(tempnam('', ''));
    }
    $tmp_file .= '/' . basename($filename);
    /* ユーザは php.ini で最後にスラッシュを付けているかも知れない... */
    return (ereg_replace('/+', '/', $tmp_file) == $filename);
}

/* 以下はこの関数の使用方法。これら古いバージョンには
 * move_uploaded_file() もない。 */
if (is_uploaded_file_4_0_2($HTTP_POST_FILES['userfile'])) {
    copy($HTTP_POST_FILES['userfile'], "/place/to/put/uploaded/file");
} else {
    echo "ファイルアップロード攻撃を受けた可能性あり: ファイル名 '$HTTP_POST_FILES[userfile]'";
}
?>
]]>
   </programlisting>
  </example>
  <para>
   簡単な使用例に関しては、<function>move_uploaded_file</function> および
   <link linkend="features.file-upload">ファイルアップロードの処理</link>
   の節も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
