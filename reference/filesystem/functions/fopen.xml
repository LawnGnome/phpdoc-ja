<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.24 Maintainer: hirokawa Status: ready -->
<refentry id="function.fopen">
 <refnamediv>
  <refname>fopen</refname>
  <refpurpose>ファイルまたはURLをオープンする</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>resource</type><methodname>fopen</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>zcontext</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>fopen</function>は<parameter>filename</parameter>で指定された
   リソースをストリームに結び付けます。
   <parameter>filename</parameter>が "スキーム://..." の形式である場合、
   それはURLとみなされ、PHPはそのプロトコルのハンドラ
   （ラッパとしても知られる）を探します。
   もしもそのプロトコルに対するラッパが登録されていない場合、
   PHPはスクリプトに潜在的な問題があることを示すNOTICEを発行したうえで、
   <parameter>filename</parameter>を通常のファイルとみなして
   オープンすることを試みます。
  </simpara>
  <simpara>
   PHPは、<parameter>filename</parameter>がローカルのファイルを示していると
   みなすと、そのファイルへのストリームをオープンします。
   そのファイルはPHPからアクセスできるものでなければなりません。
   ファイルのパーミッションが（パラメータで指定された）アクセスを
   許可されているかどうか確認する必要があります。
   &safemode; または<link linkend="ini.open-basedir">open_basedir</link>を
   有効にしている場合は更なるアクセス制限が加えられることがあります。
  </simpara>
  <simpara>
   <parameter>filename</parameter>が登録されているプロトコルを
   示しているとPHPが判断し、かつそのプロトコルがネットワークURLとして
   登録されていれば、PHPは<link linkend="ini.allow-url-fopen">allow_url_fopen</link>
   が有効となっているかどうかチェックします。
   もしこれがオフになっていると、PHPはwarningを発行しfopenは失敗します。
  </simpara>
  <note>
   <simpara>
    サポートされているプロトコルのリストは<xref linkend="wrappers"/>にあります。
    いくつかのプロトコル（<literal>wrappers</literal>にも関連する）は
    <literal>context</literal> かつ/または &php.ini; のオプションをサポートします。
   使用するプロトコルについてセットされるオプションのリストについては
   それぞれのページを見てください。（例えば、 &php.ini; 上の
   <literal>user_agent</literal>の値は<literal>http</literal>ラッパが使用します）
   <literal>contexts</literal>と<parameter>zcontext</parameter>引数についての
   詳細は<xref linkend="ref.stream"/>をご覧ください。
  </simpara>
  </note>
  &note.context-support;
  <para>
   パラメータ<parameter>mode</parameter> は、そのストリームに要する
   アクセス形式を指定します。この指定は、下表のうちのどれかとなります。
   <table>
    <title>
     <function>fopen</function>で使用可能な
     <parameter>mode</parameter>のリスト
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry><parameter>mode</parameter></entry>
       <entry>説明</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>'r'</literal></entry>
       <entry>
        読み込みのみでオープンします。ファイルポインタをファイルの
        先頭に置きます。
       </entry>
      </row>
      <row>
       <entry><literal>'r+'</literal></entry>
       <entry>
        読み込み／書き出し用にオープンします。ファイルポインタを
        ファイルの先頭に置きます。
         </entry>
      </row>
      <row>
       <entry><literal>'w'</literal></entry>
       <entry>
        書き出しのみでオープンします。ファイルポインタをファイルの
        先頭に置き、ファイルサイズをゼロにします。ファイルが存在しない
        場合には、作成を試みます。
       </entry>
      </row>
      <row>
       <entry><literal>'w+'</literal></entry>
       <entry>
        読み込み／書き出し用でオープンします。ファイルポインタを
        ファイルの先頭に置き、ファイルサイズをゼロにします。
        ファイルが存在しない場合には、作成を試みます。
       </entry>
      </row>
      <row>
       <entry><literal>'a'</literal></entry>
       <entry>
        書き出し用のみでオープンします。ファイルポインタをファイルの
        終端に置きます。ファイルが存在しない場合には、作成を試みます。
       </entry>
      </row>
      <row>
       <entry><literal>'a+'</literal></entry>
       <entry>
        読み込み／書き出し用でオープンします。ファイルポインタを
        ファイルの終端に置きます。ファイルが存在しない場合には、作成を
        試みます。
       </entry>
      </row>
      <row>
       <entry><literal>'x'</literal></entry>
       <entry>
        書き込みのみでオープンします。ファイルポインタをファイルの先頭に置きます。
        ファイルが既に存在する場合には<function>fopen</function>は失敗し、
        <constant>E_WARNING</constant>レベルのエラーを発行します。
        ファイルが存在しない場合には新規作成を試みます。
        これは<literal>open(2)</literal>システムコールにおける
        <literal>O_EXCL|O_CREAT</literal>フラグの指定と等価です。
        このオプションはPHP4.3.2以降でサポートされ、また、
        ローカルファイルに対してのみ有効です。
       </entry>
      </row>
      <row>
       <entry><literal>'x+'</literal></entry>
       <entry>
        読み込み／書き出し用でオープンします。ファイルポインタをファイルの先頭に置きます。
        ファイルが既に存在する場合には<function>fopen</function>は失敗し、
        <constant>E_WARNING</constant>レベルのエラーを発行します。
        これは<literal>open(2)</literal>システムコールにおける
        <literal>O_EXCL|O_CREAT</literal>フラグの指定と等価です。
        このオプションはPHP4.3.2以降でサポートされ、また、
        ローカルファイルに対してのみ有効です。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <note>
   <para>
    オペレーティングシステムファミリが異なると行末も異なります。
    テキストファイルに書き出し、そこに改行を加えたいとき、
    オペレーティングシステムにあわせた正しい改行コードを使用する必要があります。
    UNIXベースのシステムでは改行に<literal>\n</literal>キャラクタを使用します。
    Windowsベースのシステムでは<literal>\r\n</literal>を使用します。
    マッキントッシュベースのシステムでは<literal>\r</literal>を使用します。
   </para>
   <para>
    間違った改行コードでファイルに書き込むと、他のアプリケーション上でそのファイルを
    開いた際に変な風に見えてしまいます。
   </para>
   <para>
    Windows上では、<literal>\n</literal>を<literal>\r\n</literal>に透過的に変換する
    text-mode変換フラグ(<literal>'t'</literal>)が提供されます。
    それに対し、<literal>'b'</literal>を使って強制的にバイナリモードにすることもできます。
    その場合データの変換はされません。
    このフラグを使用するには、<literal>'b'</literal> または <literal>'t'</literal>を
    <parameter>mode</parameter>引数の最後に追加してください。
   </para>
   <para>
    デフォルトの変換モードはSAPIと使用しているPHPのバージョンによって異なります。
    したがって、互換性の意味から、常に適切なフラグを指定することが推奨されます。
    plain-textファイルを使用する場合には<literal>'t'</literal>モードを指定すべきであり、
    改行に<literal>\n</literal>を使用すると、
    メモ帳のようなアプリケーションで読めることを期待できます。
    それ以外のケースでは<literal>'b'</literal>を使うべきです。
   </para>
   <para>
    バイナリファイルを扱っているのに<literal>'b'</literal>フラグを指定しなかった場合、
    画像ファイルが壊れたり、<literal>\r\n</literal>キャラクタがおかしくなる等の
    問題を抱えてしまうでしょう。
   </para>
   <para>
    <emphasis>
     互換性維持のために、<function>fopen</function>でファイルをオープンする際は
     常に<literal>'b'</literal>フラグを指定することが強く推奨されます。
    </emphasis>
   </para>
   <para>
    <emphasis>
     互換性維持のために、<literal>'t'</literal>モードを使用または依存している
     コードを書き直し、正しい改行コードと<literal>'b'</literal>モードを代わりに
     使用することが、強く推奨されます。
    </emphasis>
   </para>
   <para>
    <emphasis>
     PHP4.3.2以降では、バイナリモードとテキストモードを区別する全ての
     プラットフォームにおいて、デフォルトのモードはバイナリにセットされます。
     アップグレード後にスクリプトに問題が起きた場合は、
     以上に述べたスクリプトの互換性を確保するまでの次善策として、
     <literal>'t'</literal>フラグを試してみてください。
    </emphasis>
   </para>
  </note>
  <para>
   オプションの３番目の引数<parameter>use_include_path</parameter>に'1'又は
   &true; を設定することにより、<link linkend="ini.include-path">include_path</link>
   のファイルの検索も行うこともできます。
  </para>
  <simpara>
   If the open fails, the function returns &false; and an error of 
   level <constant>E_WARNING</constant> is generated.  You may use
   <link linkend="language.operators.errorcontrol">@</link> to 
   suppress this warning.
   オープンが失敗すると、関数は &false; を返し、<constant>E_WARNING</constant>
   レベルのエラーを発行します。<link linkend="language.operators.errorcontrol">@</link>
   を使ってこのwarningを抑制することもできます。
  </simpara>
  <para>
   <example>
    <title><function>fopen</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$handle = fopen ("/home/rasmus/file.txt", "r");
$handle = fopen ("/home/rasmus/file.gif", "wb");
$handle = fopen ("http://www.example.com/", "r");
$handle = fopen ("ftp://user:password@example.com/somefile.txt", "w");
?>
]]>
    </programlisting>
   </example>
  </para>
  <simpara>
   ファイルの読みこみ・書きこみ時に問題が発生し、
   サーバーモジュール版のPHPを使用している場合、
   使用するファイル・ディレクトリがサーバープロセスからアクセス可能
   かどうかを確認してみてください。
  </simpara>
  <para>
   Windows 環境では、ファイルパスで用いる全てのバックスラッシュを
     エスケープするかフォワードスラッシュを使用することに注意して下さい。
   <informalexample>
    <programlisting role="php"> 
<![CDATA[
<?php
$handle = fopen ("c:\\data\\info.txt", "r");
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <simpara>
   <xref linkend="wrappers"/>,
   <function>fclose</function>,
   <function>fgets</function>, 
   <function>fread</function>,
   <function>fwrite</function>,
   <function>fsockopen</function>,
   <function>file</function>,
   <function>file_exists</function>,
   <function>is_readable</function>,
   <function>stream_set_timeout</function>,
   <function>popen</function>
   も参照下さい。
  </simpara>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
