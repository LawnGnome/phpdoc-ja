<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- splitted from ./ja/functions/filesystem.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.21 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry id="function.fgetcsv">
 <refnamediv>
  <refname>fgetcsv</refname>
  <refpurpose>ファイルポインタから行を取得し、CSVフィールドを処理する</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>array</type><methodname>fgetcsv</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter></methodparam>
  </methodsynopsis>

  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>handle</parameter></term>
     <listitem>
      <simpara>
       ファイルポインタは有効なものでなければならず、また
       <function>fopen</function>,
       <function>popen</function>, もしくは <function>fsockopen</function>
       で正常にオープンされたファイルを指している必要があります。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter> (オプション)</term>
     <listitem>
      <simpara>
       (行末文字を考慮して) CSVファイルにある最も長い行よりも大きい
       必要があります。
       PHP 5 でオプションになりました。このパラメータを省略
       (もしくは PHP 5.0.4 かそれ以降で 0 を設定) すると、
       最大行長は制限されません。この場合、若干動作が遅くなります。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>delimiter</parameter> (オプション)</term>
     <listitem>
      <simpara>
       フィールドのデリミタ (1 文字のみ) を設定します。
       デフォルトはカンマです。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enclosure</parameter> (オプション)</term>
     <listitem>
      <simpara>
       フィールド囲い子文字 (1 文字のみ) を設定します。
       デフォルトはダブルクォーテーションマークです。
       PHP 4.3.0 で追加されました。
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <simpara>
   <function>fgets</function>に動作は似ていますが、
   <function>fgetcsv</function>は行を<acronym>CSV</acronym>フォーマッ
   トのフィールドとして読込み処理を行い、読み込んだフィールドを含む
   配列を返すという違いがあります。
  </simpara>
  <simpara>
   <function>fgetcsv</function>はファイルの終端に達した場合を含み、
   エラー時に&false;を返します。
  </simpara>
  <note>
   <simpara>
    CSVファイルの空行はヌルフィールドを一つだけ含む配列として返され、
    エラーにはなりません。
   </simpara>
  </note>
  <para>
   <example>
    <title>CSV ファイルの全てのコンテンツを読み込み、表示する</title>
    <programlisting role="php">
<![CDATA[
<?php
$row = 1;
$handle = fopen("test.csv", "r");
while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
    $num = count($data);
    echo "<p> $num fields in line $row: <br /></p>\n";
    $row++;
    for ($c=0; $c < $num; $c++) {
        echo $data[$c] . "<br />\n";
    }
}
fclose($handle);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <function>fgetcsv</function> は PHP 4.3.5 以降バイナリセーフになりました。
  </para>
  <note>
   <simpara>
    この関数はロケール設定を考慮します。もし <varname>LANG</varname>
    が例えば <literal>en_US.UTF-8</literal> の場合、
    ファイル中の 1 バイトエンコーディングは間違って読み込まれます。
   </simpara>
  </note>
  &note.line-endings;
  <para>
   <function>explode</function>、<function>file</function>、
   <function>pack</function> および <function>fputcsv</function>
   も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
