<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
 <reference id="ref.openssl">
  <title>OpenSSL 関数</title>
  <titleabbrev>OpenSSL</titleabbrev>
  <partintro>
   &warn.experimental;
   <section id="openssl.intro">
    <title>導入</title>
    <para>
     このモジュールは、署名の生成および認証、そして、データのシール
     (暗号化)およびオープン(復号化)を行うために、
     <ulink url="&url.openssl;">OpenSSL</ulink> の関数を使用します。こ
     のモジュールでは、PHP 4.0.4pl1 は、OpenSSL &gt;= 0.9.6 を必要としま
     すが、PHP-4.0.5以降では、OpenSSL &gt;= 0.9.5 でも動作します。
    </para>
    <note>
     <para>
      この拡張モジュールはまだ実験的なものであることに注意して下さい!
     </para>
    </note>
    <para>
     OpenSSL は多くの機能を提供しますが、これらはまだこのモジュールでは
     サポートされていません。
    </para>
   </section>
   <section id="openssl.certparams">
    <title>キー/証明書パラメータ</title>
    <para>
     OpenSSL関数のうちごく小数のみがキーまたは証明書パラメータを必要と
     します。PHP 4.0.5 より以前では、openssl_get_xxx 関数のどれかによ
     り返されたキーまたは証明書リソースを使用する必要がありました。こ
     れより後のバージョンでは、次の方法のどれかを使用することが可能と
     なる予定です。
     <itemizedlist>
      <listitem>
       <para>
	証明書
	<orderedlist>
	 <listitem>
	  <simpara>
	   openssl_x509_read から返された X.509リソース
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   <filename>file://path/to/cert.pem</filename> 形式の文字列。
	   このファイルは、PEMエンコードの証明書である必要があります。
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   PEMエンコードされた証明書の内容を含む文字列。
	  </simpara>
	 </listitem>
	</orderedlist>
       </para>
      </listitem>
      <listitem>
       <para>
	公開/秘密キー
	<orderedlist>
	 <listitem>
	  <simpara>
	   <function>openssl_get_publickey</function> または
	   <function>openssl_get_privatekey</function> から返されたキー
	   リソース
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   公開キーのみ: X.509リソース
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   <filename>file://path/to/file.pem</filename> フォーマットを
	   有する文字列。このファイルには、PEMエンコードされた証明書/
	   秘密キーが含まれている必要があります。(両方を含むことも可能
	   です。)
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   PEMエンコードされた証明書/キーの内容を含む文字列
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   秘密キーについては、<emphasis>array($key,
	   $passphrase)</emphasis> という構文を使用することも可能です。
	   ただし、$key は、file:// または上記のテキスト表現形式を使用
	   して指定したキー、$passphrase はその秘密キーに関するパスワー
	   ドを有する文字列を表します。
	  </simpara>
	 </listitem>
	</orderedlist>
       </para> 
      </listitem>
     </itemizedlist>
    </para>
   </section>

   <section id="openssl.cert.verification">
    <title>証明書の認証</title>
    <para>
     サイン/証明書を認証する関数をコールする際、
     <emphasis>cainfo</emphasis> パラメータは、ファイルと認証済みのCA
     ファイルの場所を指定するファイルディレクトリ名を含む配列です。
     ディレクトリが指定された場合、<command>openssl</command>コマンド
     が使用できるような正しい形式にハッシュされたディレクトリである必
     要があります。
    </para>
   </section> 
   <section id="openssl.pkcs7.flags">
    <title>PKCS7 フラグ/定数</title>
    <para>
     S/MIME 関数はビットフィールドを使用して指定したフラグを使用します。
     このビットフィールドには、以下の値を一つ以上含むことが可能です。

     <table>
     <title>PKCS7 定数</title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>定数</entry>
         <entry>説明</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>PKCS7_TEXT</entry>
         <entry>
	  text/plain content type ヘッダを暗号化/サインを行うメッセー
	  ジに追加します。復号化または認証を行う際には、このヘッダは出
	  力から取り除かれます。復号化または認証されたメッセージがMIME
	  型 text/plain でない場合、エラーとなります。
	 </entry>
        </row>
        <row>
         <entry>PKCS7_BINARY</entry>
         <entry>
	  通常、入力されたメッセージは、CRおよびLFを行端として使用した
	  「正規化」された形式に変換されます。この形式は、S/MIME規格に
	  基づくものです。このオプションが指定された場合、変換が行われ
	  ます。この機能は、MIME形式でないバイナリデータを処理する際に
	  便利です。
	 </entry>
        </row>
        <row>
         <entry>PKCS7_NOINTERN</entry>
         <entry>
	  メッセージを認証する際に、通常、メッセージに含まれる証明書が
	  証明書にサインする際に検索されます。
	  このオプションでは、
	  <function>openssl_pkcs7_verify</function> の
	  <parameter>extracerts</parameter> パラメータで指定した証明書
	  のみが使用されます。しかし、指定された証明書を信頼されていな
	  いCAとして使用することも可能です。
         </entry>
        </row>
        <row>
         <entry>PKCS7_NOVERIFY</entry>
         <entry>
	  サイン済みのメッセージにサインした人の証明書を認証しません。
	 </entry>
        </row>
        <row>
         <entry>PKCS7_NOCHAIN</entry>
         <entry>
	  サインを行った側の証明書の認証の連鎖を行いません。
	  この場合、サイン付きのメッセージにある証明書を未認証のCAとし
	  て使用しません。
         </entry>
        </row>
        <row>
         <entry>PKCS7_NOCERTS</entry>
         <entry>
	  メッセージにサインする際、通常サインをする人の証明書が挿入さ
	  れます。このオプションを指定した場合はそうなりません。これに
	  より、サイン付きのメッセージのサイズは小さくなりますが、認証
	  側が、(例えば、<function>openssl_pkcs7_verify</function>の
	  <parameter>extracerts</parameter>により渡すことにより)サイン
	  をした人の証明書のコピーをローカルに用意する必要があります。
         </entry>
        </row>
        <row>
         <entry>PKCS7_NOATTR</entry>
         <entry>
	  通常、メッセージがサインされる時、サインした時間やサポートさ
	  れる対象アルゴリズムを含む一連の属性が付加されます。このオプ
	  ションを指定した場合、それらの属性は付加されません。
         </entry>
        </row>
        <row>
         <entry>PKCS7_DETACHED</entry>
         <entry>
	  メッセージにサインをする際、MIME型 multipart/signed を指定し
	  てクリアテキストでサインを行います。これは、
	  <function>openssl_pkcs7_sign</function> において
	  フラグを指定しなかった場合の <parameter>flags</parameter> パ
	  ラメータのデフォルトです。このオプションをオフにした場合、メッ
	  セージは不透明なサインによりサインされます。これは、メールリ
	  レイによる変換に対してより耐性がありますが、S/MIMEをサポート
	  しないメールエージェントでは読むことはできません。
	 </entry>
        </row>
        <row>
         <entry>PKCS7_NOSIGS</entry>
         <entry>
	  メッセージにサインや認証を試みません。
	 </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <note>
     <para>
      これらの定数は、4.0.6 で追加されました。
     </para>
    </note>
   </section>
  </partintro>








  

  
  
  
  
  
  















&reference.openssl.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
<!-- Keep this comment for vi/vim/gvim
vi: et:ts=1:sw=1:textwidth=78
-->

