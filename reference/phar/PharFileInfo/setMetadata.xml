<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.4 Maintainer: takagi Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="pharfileinfo.setmetadata">
 <refnamediv>
  <refname>PharFileInfo::setMetaData</refname>
  <refpurpose>ファイルとともに保存する、ファイル固有のメタデータを設定する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>PharFileInfo::setMetaData</methodname>
   <methodparam><type>mixed</type><parameter>metadata</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>PharFileInfo::setMetaData</function> を使用するのは、
   既存のファイル情報としては表せない独自の情報を保存する場合のみに限るべきです。
   メタデータを使用すると、phar
   アーカイブの読み込み時のパフォーマンスが劇的に低下します。これは、
   メタデータのサイズが大きい場合やメタデータを含むファイルが大量にある場合に顕著になります。
   ファイルのパーミッションについては phar 自体でネイティブにサポートしており、
   <function>PharFileInfo-&gt;chmod</function>
   で設定できることを覚えておきましょう。
   この関数は phar の内容を変更するので、<classname>Phar</classname>
   アーカイブ内のファイルを操作するには INI 設定
   <link linkend="ini.phar.readonly">phar.readonly</link> がオフでなければなりません。
   <classname>PharData</classname> アーカイブ内のファイルについては、この制約はありません。
  </para>
  <para>
   メタデータの使用例として考えられるのは、ユーザ/グループ
   を指定し、phar からディスクに展開する際にそれを設定することなどです。
   ほかには、MIME 型として返す値を明示的に指定することなどがあります。
   その他、ファイルについて説明するデータであるが
   ファイル自体に含むべきでないものを保存したりします。
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>metadata</parameter></term>
     <listitem>
      <para>
       ファイルとともに保存する情報を含む、PHP の変数。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>PharFileInfo::setMetaData</function> の例</title>
    <para>
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// 確実に消しておきます
@unlink('brandnewphar.phar');
try {
    $p = new Phar(dirname(__FILE__) . '/brandnewphar.phar', 0, 'brandnewphar.phar');
    $p['file.txt'] = 'hello';
    $p['file.txt']->setMetaData(array('user' => 'bill', 'mime-type' => 'text/plain'));
    var_dump($p['file.txt']->getMetaData());
} catch (Exception $e) {
    echo 'phar を作成/変更できません:', $e;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  ["user"]=>
  string(4) "bill"
  ["mime-type"]=>
  string(10) "text/plain"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PharFileInfo::hasMetadata</function></member>
    <member><function>PharFileInfo::getMetadata</function></member>
    <member><function>PharFileInfo::delMetadata</function></member>
    <member><function>Phar::setMetadata</function></member>
    <member><function>Phar::hasMetadata</function></member>
    <member><function>Phar::getMetadata</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
