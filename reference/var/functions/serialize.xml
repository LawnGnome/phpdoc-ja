<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- splitted from ./ja/functions/var.xml, last change in rev 1.27 -->
<!-- EN-Revision: 1.11 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
  <refentry xml:id="function.serialize" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>serialize</refname>
    <refpurpose>
     値の保存可能な表現を生成する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>serialize</methodname>
      <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>serialize</function> は、<parameter>value</parameter> の
     保存可能なバイトストリーム表現を含む文字列を返します。
    </simpara>
    <simpara>
     型や構造を失わずに PHP の値を保存または渡す際に有用です。
    </simpara>
   <simpara>
    シリアル化された文字列を PHP の値に戻すには、
    <function>unserialize</function> を使用してください。
    <function>serialize</function> は、<type>resource</type> 以外の
    全ての型を処理します。自分自身への参照を含む配列を
    <function>serialize</function> することも可能です。
    <function>serialize</function> している配列/オブジェクト内の
    循環参照も保存されます。その他の参照は失われます。
   </simpara>
   <simpara>
   PHP は、シリアル化の前にまずメンバ関数 <function>__sleep</function>
   のコールを試みます。ここで、シリアル化の前のオブジェクトの後始末処理
   などを行います。同様に、<function>unserialize</function> で
   オブジェクトを復元した際にはメンバ関数
   <function>__wakeup</function> がコールされます。
   </simpara>
   <note>
    <simpara>
     これは 4.0.7 より前のバージョンでは正しく動作しません。
    </simpara>
   </note>
   <note>
    <para>
     PHP 3 では、オブジェクトのプロパティはシリアル化されますが、
     メソッドは失われます。PHP 4 ではこの制限は取り除かれ、プロパティ
     とメソッドの両方を保存します。より詳細な情報については、
     <link linkend="language.oop">オブジェクトとクラス</link> の
     <link linkend="language.oop.serialization">オブジェクトのシリアル化
     </link>の節を参照ください。
    </para>
    <para>
     PHP の組み込みオブジェクトをシリアル化することはできません。
    </para>
   </note>
    <para>
     <example>
      <title><function>serialize</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php
// $session_data はカレントユーザーのセッション情報を含む多次元配列を
// 保持しています。リクエストの最後にこれをデータベースに保存するために
//  serialize() を使用します。

$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn,
      "UPDATE sessions SET data = ? WHERE id = ?");
$sqldata = array (serialize($session_data), $PHP_AUTH_USER);
if (!odbc_execute($stmt, &$sqldata)) {
    $stmt = odbc_prepare($conn,
     "INSERT INTO sessions (id, data) VALUES(?, ?)");
    if (!odbc_execute($stmt, &$sqldata)) {
        /* 何か問題があったようです.. */
    }
}
?>
]]>
      </programlisting>
     </example>
    </para>
   <para>
    <function>unserialize</function> も参照ください。
   </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
