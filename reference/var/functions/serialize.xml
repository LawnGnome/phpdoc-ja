<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283841 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<refentry xml:id="function.serialize" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>serialize</refname>
  <refpurpose>値の保存可能な表現を生成する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>string</type><methodname>serialize</methodname>
    <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   </methodsynopsis>
  <para>
   値の保存可能な表現を生成します。
  </para>
  <para>
   型や構造を失わずに PHP の値を保存または渡す際に有用です。
  </para>
  <para>
   シリアル化された文字列を PHP の値に戻すには、
   <function>unserialize</function> を使用してください。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       シリアル化する値。
       <function>serialize</function> は、<type>resource</type>
       以外の全ての型を処理します。自分自身への参照を含む配列を
       <function>serialize</function> することも可能です。
       シリアル化した配列/オブジェクト内の
       循環参照も保存されます。その他の参照は失われます。
      </para>
      <para>
       PHP は、シリアル化の前にまずメンバ関数 <link linkend="language.oop5.magic">__sleep</link>
       のコールを試みます。ここで、シリアル化の前のオブジェクトの後始末処理
       などを行います。同様に、<function>unserialize</function> で
       オブジェクトを復元した際にはメンバ関数
       <link linkend="language.oop5.magic">__wakeup</link> がコールされます。
      </para>
      <note>
       <para>
       オブジェクトの private メンバは、メンバ名の前にクラス名がつきます。
       また protected メンバはメンバ名の前に '*' がつきます。
       前に付加されるこれらの値の前後には null バイトがついています。
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>value</parameter>
   の保存可能なバイトストリーム表現を含む文字列を返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>serialize</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
// $session_data はカレントユーザーのセッション情報を含む多次元配列を
// 保持しています。リクエストの最後にこれをデータベースに保存するために
// serialize() を使用します。

$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn,
      "UPDATE sessions SET data = ? WHERE id = ?");
$sqldata = array (serialize($session_data), $_SERVER['PHP_AUTH_USER']);
if (!odbc_execute($stmt, $sqldata)) {
    $stmt = odbc_prepare($conn,
     "INSERT INTO sessions (id, data) VALUES(?, ?)");
    if (!odbc_execute($stmt, $sqldata)) {
        /* 何か問題があったようです.. */
    }
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.7</entry>
       <entry>
        オブジェクトのシリアル化処理の問題が修正されました。
       </entry>
      </row>
      <row>
       <entry>4.0.0</entry>
       <entry>
        オブジェクトをシリアル化しても、メソッドが失われなくなりました。
        詳細は
        <link linkend="language.oop.serialization">オブジェクトのシリアル化</link>
        を参照ください。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    PHP の組み込みオブジェクトをシリアル化することはできません。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>unserialize</function></member>
    <member><link linkend="language.oop.serialization">オブジェクトのシリアル化</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
