<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- splitted from ./ja/functions/var.xml, last change in rev 1.27 -->
<!-- EN-Revision: 1.19 Maintainer: hirokawa Status: ready -->
  <refentry xml:id="function.unserialize" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>unserialize</refname>
    <refpurpose>保存用表現から PHP の値を生成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>mixed</type><methodname>unserialize</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>unserialize</function> は、シリアル化された変数
     (<function>serialize</function> を参照) をとり、PHP 変数値に
     戻す変換を行います。変換された値が返されます。その値は、
     <type>boolean</type>, <type>integer</type>, <type>float</type>,
     <type>string</type>, <type>array</type>, <type>object</type>
     とすることが可能です。オブジェクトがシリアル化された場合、返り値
     にそのメソッドは保存されていません。
     <literal>E_NOTICE</literal> が発生した場合、&false; を返します。
    </simpara>
    <warning>
     <para>
      エラーやシリアライズされた &false; 値をアンシリアライズする場合、
      &false; が返されます。この特殊なケースは
      <parameter>str</parameter> を <literal>serialize(false)</literal>
      で比較する、もしくは <literal>E_NOTICE</literal>
      をキャッチすることで区別することができます。
     </para>
    </warning>
    <note>
     <title>unserialize_callback_func ディレクティブ</title>
     <para>
      コールバック関数を設定することが可能です。(不完全な
      <type>object</type> "__PHP_Incomplete_Class"を得ることを防ぐため)
      コールバック関数は、非シリアル化する際に未定義のクラスをインスタ
      ンス化する必要がある場合にコールされます。
      'unserialize_callback_func'を定義するためには、
      &php.ini;, <function>ini_set</function>, &htaccess; を使用し
      てください。未定義のクラスをインスタンス化する度に、コールバック関
      数がコールされます。この機能を無効とするには、
      単純にこの設定を空にしてください。また、ディレクティブ
      unserialize_callback_func は PHP 4.2.0
      で利用可能になったことに注意してください。
     </para>
    </note>
    <para>
     もしアンシリアライズサル変数がオブジェクトの場合、
     オブジェクトが無事再作成された後、PHP は自動的にメンバー関数
     <function>__wakeup</function> (存在していれば) をコールしようとします。
     <example>
      <title>unserialize_callback_funcの例</title>
      <programlisting role="php">
<![CDATA[
<?php
$serialized_object='O:1:"a":1:{s:5:"value";s:3:"100";}';

// unserialize_callback_func ディレクティブは PHP 4.2.0 以降で利用可能
ini_set('unserialize_callback_func', 'mycallback'); // 独自のコールバック関数を設定する

function mycallback($classname)
{
    // just include a file containing your classdefinition
    // you get $classname to figure out which classdefinition is required
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      PHP 3では、メソッドはシリアル化されたオブジェクトを非シリアル化
      する際に保存されません。PHP 4ではこの制限は取り除かれ、プロパティ
      とメソッドの両方を保存します。より詳細な情報については、
      <link linkend="language.oop">オブジェクトとクラス</link> の
      <link linkend="language.oop.serialization">オブジェクトのシリア
      ル化</link>の節を参照ください。
     </para>
    </note>
    <para>
     <example>
      <title><function>unserialize</function>の例</title>
      <programlisting role="php">
<![CDATA[
<?php
// ここで、データベースから $session_data にセッションデータをロード
// するために unserialize() を使用します。
// この例は、<function>serialize</function> で記述された例を補足するものです。

$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn, "SELECT data FROM sessions WHERE id = ?");
$sqldata = array ($PHP_AUTH_USER);
if (!odbc_execute($stmt, &$sqldata) || !odbc_fetch_into($stmt, &$tmp)) {
    // 実行または取得が失敗した場合、空の配列で初期化します
    $session_data = array();
} else {
    // tmp[0] にシリアル化されたデータを保持している必要があります。
    $session_data = unserialize($tmp[0]);
    if (!is_array($session_data)) {
        // 何か問題があったため、空の配列で初期化します。
        $session_data = array();
    }
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <function>serialize</function>も参照ください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
