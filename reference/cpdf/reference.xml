<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
 <reference id="ref.cpdf">
  <title>ClibPDF 関数</title>
  <titleabbrev>ClibPDF</titleabbrev>

  <partintro>
   <simpara>
    ClibPDF により、PDF ドキュメントを PHP により作成可能となります。
    これは、<ulink url="&url.fastio;">FastIO</ulink> にありますが、
    フリーソフトウエアではありません。
    ClibPDF を使用する前にライセンス規約を詳しく読む必要があります。
    ライセンス規約を満たせない場合は、同じく非常に強力なライブラリである
    Thomas Merz が作成した pdflib を使用することを考えてみてください。
    ClibPDF の機能と API は、Thomas Merz の pdflib に似ていますが、
    FastIO によれば、ClibPDF はより高速でより小さなドキュメントを
    生成します。
    この優劣は、新しいバージョン 2.0 の pdflib と比べた場合、
    変わる可能性があります。
    簡単なベンチマーク (pdflib 2.0 の例 pdfclock.c を php スクリプトに
    変換したもの)では、速度に違いは全くありません。ファイルサイズも
    圧縮をオフにした場合、同程度です。よって、両者を試してどちらが自分の業務
    に適しているかを判断してください。
   </simpara>
   <simpara>
    ClipPDF のマニュアルにはライブラリのより詳細な事項が記述されている
    ため、このドキュメントは ClipPDF のマニュアルを参照しつつ読む必要
    があります。
   </simpara>
   <simpara>
    pdflib と同様に、多くの関数は ClipPDF と PHP モジュールとで
    同じ名前となっています。
    <function>cpdf_open</function> を除く全ての関数は、
    最初の引数としてドキュメントのハンドルを取ります。
    現在のところ、ClipPDF は複数のPDFドキュメントの同時作成をサポートして
    いないため、このハンドルは内部的に使用されていません。
    実際、同時作成時の結果は予想できず、試みるべきではありません。
    マルチスレッド環境で、その結果を予想することはできません。
    ClipPDF の作者によれば、
    将来のリリースではこの点は変更されるとのことです。
    (このドキュメントを書いている現在でのバージョンは 1.10 です)
    この機能を必要な場合は、pdflib モジュールを使用してください。
   </simpara>
   <note>
    <simpara>
     関数 <function>cpdf_set_font</function> は、PHP 3 でアジア用フォント
     をサポートするために変更されました。
     パラメータ encoding は、整数ではなく文字列になりました。
    </simpara>
   </note>
   <simpara>
    ClipPDF が pdflib に対して大きく優れているのは、
    テンポラリファイルを使用せずに pdf ドキュメントを
    完全にメモリー上で作成することが可能であることです。
    あらかじめ定義された単位長さの座標を渡す機能も有しています。
    この機能は便利ですが、
    <function>pdf_translate</function> で模擬することが可能です。
   </simpara>
    <simpara>
    その他のClibPDFの機能で優れているのは、新規のページのオープン後で
    あっても任意のページをいつでも修正可能であるという点です。関数
    <function>cpdf_set_current_page</function> により、カレントのペー
    ジを離れて、他のページを修正できることを前提とすることが可能となり
    ます。
   </simpara>
   <simpara>
    多くの機能の使用法は非常に容易です。最も困難なのは、おそらく全く新
    規に PDF ドキュメントを作成する場合でしょう。次の例は、導入の手助
    けとなるはずです。この例では、ページを1つ有するドキュメントを作成
    します。このページは、30pt のアウトラインフォントでテキスト
    "Times-Roman" により書かれます。テキストには下線が引かれます。
   </simpara>
   <example>
    <title>簡単な ClibPDF の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$cpdf = cpdf_open(0);
cpdf_page_init($cpdf, 1, 0, 595, 842);
cpdf_add_outline($cpdf, 0, 0, 0, 1, "Page 1");
cpdf_begin_text($cpdf);
cpdf_set_font($cpdf, "Times-Roman", 30, "WinAnsiEncoding");
cpdf_set_text_rendering($cpdf, 1);
cpdf_text($cpdf, "Times Roman outlined", 50, 750);
cpdf_end_text($cpdf);
cpdf_moveto($cpdf, 50, 740);
cpdf_lineto($cpdf, 330, 740);
cpdf_stroke($cpdf);
cpdf_finalize($cpdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($cpdf);
cpdf_close($cpdf);
?>
]]>
    </programlisting>
   </example>
   <simpara>
    pdflib の配布ファイルには、アナログクロックを有する複数ページを作
    成するより複雑な例が含まれています。以下に ClipPDF 拡張を使用して
    この例を PHP に変換したものを示します。
   </simpara>
   <example>
    <title>pdflib 2.0 配布ファイルからの pdfclock の例</title>
    <programlisting>
<![CDATA[
<?php
$radius = 200;
$margin = 20;
$pagecount = 40;

$pdf = cpdf_open(0);
cpdf_set_creator($pdf, "pdf_clock.php3");
cpdf_set_title($pdf, "Analog Clock");
  
while($pagecount-- > 0) {
  cpdf_page_init($pdf, $pagecount+1, 0, 2 * ($radius + $margin), 2 * ($radius + $margin), 1.0);
  
  cpdf_set_page_animation($pdf, 4, 0.5, 0, 0, 0);  /* wipe */
  
  cpdf_translate($pdf, $radius + $margin, $radius + $margin);
  cpdf_save($pdf);
  cpdf_setrgbcolor($pdf, 0.0, 0.0, 1.0);
  
  /* minute strokes */
  cpdf_setlinewidth($pdf, 2.0);
  for ($alpha = 0; $alpha &lt; 360; $alpha += 6)
    {
    cpdf_rotate($pdf, 6.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin/3, 0.0);
    cpdf_stroke($pdf);
    }
  
  cpdf_restore($pdf);
  cpdf_save($pdf);
 
  /* 5 minute strokes */
  cpdf_setlinewidth($pdf, 3.0);
  for ($alpha = 0; $alpha &lt; 360; $alpha += 30)
  {
    cpdf_rotate($pdf, 30.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin, 0.0);
    cpdf_stroke($pdf);
  }

  $ltime = getdate();

  /* draw hour hand */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['minutes']/60.0) + $ltime['hours'] - 3.0) * 30.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius/2, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* draw minute hand */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['seconds']/60.0) + $ltime['minutes'] - 15.0) * 6.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius * 0.8, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* draw second hand */
  cpdf_setrgbcolor($pdf, 1.0, 0.0, 0.0);
  cpdf_setlinewidth($pdf, 2);
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['seconds'] - 15.0) * 6.0));
  cpdf_moveto($pdf, -$radius/5, 0.0);
  cpdf_lineto($pdf, $radius, 0.0);
  cpdf_stroke($pdf);
  cpdf_restore($pdf);

  /* draw little circle at center */
  cpdf_circle($pdf, 0, 0, $radius/30);
  cpdf_fill($pdf);

  cpdf_restore($pdf);

  cpdf_finalize_page($pdf, $pagecount+1);
}

cpdf_finalize($pdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($pdf);
cpdf_close($pdf);
?>
]]>
    </programlisting>
   </example>
  </partintro>


















  



  




























  

  






  
  
  









  
&reference.cpdf.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

