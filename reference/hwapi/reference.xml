<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.16 Maintainer: takagi Status: ready -->
<!-- Purpose: remote.other -->
<!-- Membership: pecl, external -->

 <reference id="ref.hwapi">
  <title>Hyperwave API 関数</title>
  <titleabbrev>Hyperwave API</titleabbrev>

  <partintro>

   <section id="hwapi.intro">
    &reftitle.intro;
    <para>
     <productname>Hyperwave</productname> は、グラーツにある
     <ulink url="&url.iicm;">IICM</ulink> で開発されています。
     当初は <acronym>Hyper-G</acronym> という名前でしたが、
     商用化の際に (1996 年に) Hyperwave という名前に変わりました。
    </para>
    <para>
     Hyperwave はフリーソフトウェアではありません。現在のバージョンである 5.5
     は <ulink url="&url.hyperwave;">&url.hyperwave;</ulink> で入手可能です。
     期間限定 (30 日) のフリー版も注文できます。
    </para>
    <para>
     <link linkend="ref.hw">Hyperwave</link> モジュールも参照ください。
    </para>
    <para>
     Hyperwave は、データベースに似た情報システム
     (<acronym>HIS</acronym>, Hyperwave Information Server) で、
     文書の保存や管理に重点をおいています。
     文書は、いくつかのデータに分割されてファイルに保存されます。
     個々の文書にはオブジェクトレコードが付属し、
     オブジェクトレコードには文書のメタデータが含まれます。
     メタデータは属性のリストで、これはユーザが拡張することができます。
     属性の中のいくつかは Hyperwave サーバが常に設定し、
     それ以外についてはユーザによって変更されます。
    </para>
    <note>
     <para>
      &pecl.moved-ver;5.2.0.
     </para>
    </note>
   </section>

   <section id="hwapi.requirements">
    &reftitle.required;
    <para>
     2001 年より、Hyperwave SDK が使用可能です。これは Java、
     JavaScript そして C++ をサポートしています。この PHP 拡張モジュールは
     C++ 版のインターフェイスをもとにしています。
     PHP で hwapi のサポートを有効にするには、まずはじめに
     Hyperwave SDK をインストールしなければなりません。
    </para>
   </section>

   &reference.hwapi.configure;

   <section id="hwapi.apache">
    <title>Apache との統合</title>
    <para>
     Apache やその他のサーバと統合するための情報は、すでに
     <link linkend="ref.hw">Hyperwave モジュール</link>で説明されています。
     これは、Hyperwave サーバに接続するための最初の拡張モジュールでした。
    </para>
   </section>

   &reference.hwapi.ini;

   <section id="hwapi.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section id="hwapi.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section id="hwapi.classes">
    <title>クラス</title>
    <para>
     HW_API 拡張モジュールが提供する API は、完全にオブジェクト指向です。
     Hyperwave SDK の C++ インターフェイスに非常によく似ています。
     この API は、以下のクラスからなります。
     <itemizedlist>
      <listitem>
       <simpara>
        <classname>HW_API</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Object</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Attribute</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Error</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Content</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Reason</classname>
          </simpara>
         </listitem>
     </itemizedlist>
     Hyperwave SDK に含まれているクラスのうち、
     <classname>HW_API_String</classname>、
     <classname>HW_API_String_Array</classname>
     のような基本的なクラスは実装されていません。
     PHP には、それらに代わる強力な機能があるからです。
    </para>
    <para>
     各クラスにはメソッドが含まれており、その名前は Hyperwave SDK
     の対応するメソッドと同じです。この関数に引数を渡す方法は
     PHP の他の拡張モジュールとは少し異なっており、HW SDK の C++ API
     に似ています。複数のパラメータを別々に渡すのではなく、
     それらをひとつの連想配列にまとめて単一のパラメータとして渡します。
     連想配列のキーの名前は、HW SDK に記述されている内容と同じです。
     一般的なパラメータについては以下で説明します。
     それ以外のパラメータが必要になる場合は、必要に応じて説明されます。
     <itemizedlist>
      <listitem>
       <simpara>
        <classname>objectIdentifier</classname> オブジェクトの名前あるいは ID。
        例 "rootcollection"、"0x873A8768 0x00000002"。
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>parentIdentifier</classname>
        親オブジェクトの名前あるいは ID。
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>object</classname> HW_API_Object クラスのインスタンス。
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>parameters</classname> HW_API_Object クラスのインスタンス。
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>version</classname> オブジェクトのバージョン。
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>mode</classname> 実行される操作を定義する整数値。
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>attributeSelector</classname>
        文字列の配列で、個々の要素は属性の名前となります。
        オブジェクトレコードを取得する際に特定の属性を含めたい場合に使用します。
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>objectQuery</classname>
        オブジェクトのリストの中から特定のオブジェクトを選択するためのクエリ。
        <function>hw_api->children</function> や <function>hw_api->find</function>
        のような関数から返されるオブジェクトの数を減らすために使用します。
          </simpara>
         </listitem>
     </itemizedlist>
    </para>
    <note>
     <para>
      <type>boolean</type> 型のメソッドは、
      &true;、&false; あるいは
      <classname>HW_API_Error</classname> オブジェクトを返します。
     </para>
    </note>
   </section>
  </partintro>

&reference.hwapi.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
