<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
 <reference id="ref.gmp">
  <title>GMP 関数</title>
  <titleabbrev>GMP</titleabbrev>
  <partintro>
   <simpara>
    以下の関数により、GNU <acronym>MP</acronym> ライブラリを使用して任
    意長の整数を使用することが可能になります。これらの関数を利用可能と
    するには、オプション <option role="configure">--with-gmp</option> 
    を使用することにより <acronym>GMP</acronym>サポートを有効にしてPHP
    をコンパイルする必要があります。
   </simpara>
   <simpara>
    <ulink url="&url.gmp;">&url.gmp;</ulink> から
    <acronym>GMP</acronym> ライブラリをダウンロード可能です。このサイ
    トでは、<acronym>GMP</acronym> のマニュアルも入手可能です。
   </simpara>
   <simpara>
    これらの関数を使用するには、GMP バージョン 2 以降が必要です。いく
   つかの関数はより新しいバージョンの GMP ライブラリを必要とする可能性
   があります。
   </simpara>
   <simpara>
    これらの関数は、PHP 4.0.4 で追加されました。
   </simpara>
   <note>
    <para>
     多くの GMP 関数は、<literal>resource</literal> で定義されたGMP 数
     を引数としてとります。しかし、これらの関数の多くは、数値と文字列
     の両方を引数として指定可能で、後者は数値に変換することが可能です。
     また、整数引数を使用して処理を行うより高速な関数がある場合には、
     指定された引数が整数である場合により低速となる関数の代わりに使用
     されます。これは透過的に行われるため、結果的にGMP数値を引数とする
     全ての関数について整数を使用することが可能です。関数
     <function>gmp_init</function> も参照下さい。
    </para>
   </note>
   <para>
    <example>
     <title>GMP を使用した階乗関数</title>
     <programlisting role="php">
<![CDATA[
<?php
function fact ($x) {
    if ($x <= 1) 
        return 1;
    else
        return gmp_mul ($x, fact ($x-1));
}

print gmp_strval (fact (1000)) . "\n";
?>
]]>
     </programlisting>
    </example>
    この例は、1000の階乗(非常に大きな数です)を非常に高速に計算します。 
   </para>
  </partintro>

&reference.gmp.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

