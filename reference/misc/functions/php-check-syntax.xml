<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 324522 Maintainer: takagi Status: ready -->
<refentry xml:id="function.php-check-syntax" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>php_check_syntax</refname>
  <refpurpose>
   指定したファイルの文法チェック（と実行）を行う
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>php_check_syntax</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">error_message</parameter></methodparam>
  </methodsynopsis>
  <para>
   指定したファイル <parameter>filename</parameter>
   に対して文法チェック (lint) を行い、スクリプトにエラーがないかどうかを調べます。
  </para>
  <para>
   これは <link linkend="features.commandline">コマンドライン</link>
   から <command>php -l</command> を利用するのと似ていますが、
   <function>php_check_syntax</function> は実際に <parameter>filename</parameter>
   を実行します (結果は出力しません)。
  </para>
  <para>
   たとえば、もし <parameter>filename</parameter> の中で関数が
   定義されていた場合に <function>php_check_syntax</function>
   はそれを実行しますが、<parameter>filename</parameter> の
   結果は表示されません。
  </para>
  <note>
   <!-- See PHP bug #27406 for details on this suppression -->
   <para>
    技術的な理由により、この関数は廃止され、PHP から削除されました。
    かわりに、<link linkend="features.commandline">コマンドライン</link>
    から <literal>php -l somefile.php</literal> を利用してください。
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
 &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       調べるファイルの名前。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error_message</parameter></term>
     <listitem>
      <para>
       <parameter>error_message</parameter> パラメータが指定された場合、
       文法チェックの際に生成されたエラーメッセージがここに格納されます。
       <parameter>error_message</parameter> は
       <link linkend="language.references">参照</link>で渡されます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   文法チェックが成功した場合に &true; 、チェックが失敗したり
   <parameter>file_name</parameter> がオープンできなかった場合に
   &false; を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.5</entry>
       <entry>
        この関数は PHP から削除されました。
       </entry>
      </row>
      <row>
       <entry>5.0.3</entry>
       <entry>
        <function>php_check_syntax</function> の後に
        <link linkend="function.exit"><literal>exit</literal></link> をコールするとセグメンテーションフォールトが発生します。
       </entry>
      </row>
      <row>
       <entry>5.0.1</entry>
       <entry>
        <parameter>error_message</parameter> が参照渡しになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <screen>
<![CDATA[
php -l somefile.php
]]>
   </screen>
  </para>
  &example.outputs.similar;
  <para>
   <screen>
<![CDATA[
PHP Parse error: unexpected T_STRING in /tmp/somefile.php on line 81
]]>
   </screen>
  </para>    
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="function.include"><literal>include</literal></link></member>
    <member><function>is_readable</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
