<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339347 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<refentry xml:id="function.unpack" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unpack</refname>
  <refpurpose>バイナリ文字列からデータを切り出す</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>unpack</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>format</parameter> に基づき、バイナリ文字列から配列に分解します。
  </para>
  <para>
   分解した結果は連想配列に格納されます。
   このようにするには、別のフォーマットコードを使用してそれらを
   スラッシュ / で区切る必要があります。
   引数にリピータが含まれる場合の配列の要素名は、
   指定した名前の後に順番に番号がついたものとなります。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       書式コードの説明は <function>pack</function> を参照ください。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       パックされたデータ。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   バイナリ文字列を切り出した要素を含む連想配列を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.5.0</entry>
       <entry>
        <para>
         Perl の関数に動きを近づけるための変更をしました。
        </para>
        <para>
         "a" は最後の NULL バイトを維持するようになりました。
        </para>
        <para>
         "A" は最後の ASCII 空白文字 (スペース、タブ、改行、キャリッジリターン、
         NULL バイト) をすべて取り除くようになりました。
        </para>
        <para>
         NULL 埋め文字列用に "Z" が追加されました。これは最後の NULL バイトを取り除きます。
         NULL bytes.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>unpack</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("cchars/nint", $binarydata);
print_r($array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [chars] => 4
    [int] => 160
)
]]>
    </screen>
   </example>
  </para>

  <para>
   <example>
    <title><function>unpack</function> でのリピータの例</title>
    <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("c2chars/nint", $binarydata);
print_r($array);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Array
(
    [chars1] => 4
    [chars2] => 0
    [int] => 40960
)
]]>
     </screen>
    </example>
   </para>
  </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    PHP は内部的に整数を符号付きで保持することに注意しましょう。
    大きな値の unsigned long を切り出した場合、PHP の内部で保持された値は、
    同じ大きさの符号付き整数となり、符号無しを指定して切出された場合でも
    結果は負の数となります。
   </para>
  </caution>
  <caution>
   <para>
    要素に名前をつけなければ、空文字列の要素となることに注意しましょう。
    つまり、名前をつけない要素が複数ある場合は、
    それらのキーが同じになるためデータが上書きされてしまうということです。
   </para>
   <para>
    <example>
     <title><function>unpack</function> で名前のないキーを扱う例</title>
     <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x32\x42\x00\xa0";
$array = unpack("c2/n", $binarydata);
var_dump($array);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
array(2) {
  [1]=>
  int(160)
  [2]=>
  int(66)
}
]]>
     </screen>
     <para>
      <literal>c</literal> で指定した最初の値が
      <literal>n</literal> で指定した値で上書きされることに注意しましょう。
     </para>
    </example>
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pack</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
