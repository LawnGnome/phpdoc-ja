<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/misc.xml, last change in rev 1.2 -->
<!-- EN-Revision: 1.4 Maintainer: hirokawa Status: ready -->
<refentry id="function.pack">
 <refnamediv>
  <refname>pack</refname>
  <refpurpose>データをバイナリ文字列にパックする</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>string</type><methodname>pack</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   指定された引数を <parameter>format</parameter> に基づいてバイナリ文
   字列にパックします。データを含むバイナリ文字列を返します。
  </para>
  <para>
   この関数のアイデアは、Perlからのものであり、フォーマット指定用のコー
   ドは、Perlと全く同様に動作します。フォーマット文字列は、フォーマッ
   トコードの後にオプションの反復指定用引数が続いている形式となってい
   ます。反復指定用引数は、整数値または入力データの最後まで反復を指定
   する * のどちらかを指定することができます。 a, A, h, H の場合、反復
   数はそのデータ引数が取得する文字の数を指定します。反復数が @ の場合、
   次のデータを置く場所の絶対位置を表します。その他の場合、反復数はデー
   タ引数が使われる数を指定し、結果のバイナリ文字列にパックされます。
   現在、実装されているものを以下に示します。
   <itemizedlist>
    <listitem>
     <simpara>
      a NUL で埋めた文字列
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      A 空白で埋めた文字列
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      h 16進文字列, 下位バイトが先
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      H 16進文字列, 上位バイトが先
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      c signed char
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      C unsigned char
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      s signed short (常に 16 ビット、マシンバイトオーダー)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      S unsigned short (常に 16 ビット、マシンバイトオーダー)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      n unsigned short (常に 16 ビット、ビッグインディアンバイトオーダー)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      v unsigned short (常に 16 ビット、リトルインディアンオーダー)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      i signed integer (サイズおよびバイトオーダーはマシンに依存)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      I unsigned integer (サイズおよびバイトオーダーはマシンに依存)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      l signed long (常に 32 ビット、マシンバイトオーダー)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      L unsigned long (常に 32 ビット、マシンバイトオーダー)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
	N unsigned long (常に 32 ビット、ビッグインディアンバイトオーダー)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      V unsigned long (常に 32 ビット、リトルインディアンバイトオーダー)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      f float (サイズおよび表現はマシン依存)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      d double (サイズおよび表現はマシン依存)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      x NUL バイト
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      X 1バイト戻る
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      @ 絶対位置まで NUL で埋める
     </simpara>
    </listitem>
   </itemizedlist>
   <example>
    <title><function>pack</function>で文字列をフォーマットする</title>
    <programlisting role="php">
<![CDATA[
$binarydata = pack ("nvc*", 0x1234, 0x5678, 65, 66);
]]>
    </programlisting>
    <para>
     この結果のバイナリ文字列の長さは6バイト長で、バイト列 0x12, 0x34,
     0x78, 0x56, 0x41, 0x42となります。
    </para>
   </example>
  </para>
  <para>
   符号付及び符号無しの区別は関数 <function>unpack</function>にのみ
   影響を与え、関数<function>pack</function>は符号付及び符号無しの
   フォーマットコードに関して同じ結果を与えるということに注意して下
   さい。
  </para>
  <para>
   PHP は内部的に値をマシン依存の大きさの符号付の
   <type>integer</type>値として保持することにも注意してください。
   このように保持するには大きすぎる符号無しの値を与えた場合、
   <type>float</type>に変換する際にしばしば期待外れの結果となります。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
