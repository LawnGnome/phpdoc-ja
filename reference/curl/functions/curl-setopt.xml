<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 332896 Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa -->
<refentry xml:id="function.curl-setopt" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_setopt</refname>
  <refpurpose>cURL 転送用オプションを設定する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>curl_setopt</methodname>
   <methodparam><type>resource</type><parameter>ch</parameter></methodparam>
   <methodparam><type>int</type><parameter>option</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   指定した cURL セッションハンドルのオプションを設定します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &curl.ch.description;
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <para>
       設定したい <literal>CURLOPT_XXX</literal> オプション。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       <parameter>option</parameter> に設定する値。
      </para>
      <para>
       <parameter>value</parameter> には、
       <parameter>option</parameter> の以下の値に関して
       bool 値を指定する必要があります。
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry valign="top">オプション</entry>
           <entry valign="top"><parameter>value</parameter> への設定値</entry>
           <entry valign="top">注記</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_AUTOREFERER</constant></entry>
           <entry valign="top">
            &true; を設定すると、<literal>Location:</literal> によるリダイレクトを
            たどる際には自動的に <literal>Referer:</literal> フィールドをリクエストに
            追加します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_BINARYTRANSFER</constant></entry>
           <entry valign="top">
            &true; を設定すると、<constant>CURLOPT_RETURNTRANSFER</constant>
            が使用された場合に出力結果を何も加工せずに返します。
           </entry>
           <entry valign="top">
            PHP 5.1.3 以降では、このオプションは何の効果もありません。
            <constant>CURLOPT_RETURNTRANSFER</constant> を使ったときには
            常に出力をそのまま返すようになりました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIESESSION</constant></entry>
           <entry valign="top">
            &true; を設定すると、クッキーの "セッション" を新しく開始します。
            以前のセッションで読み込まれていた "セッションクッキー" は無視するよう、
            libcurl に指示します。デフォルトでは、それがセッションクッキーであるか
            どうかにかかわらず libcurl はすべてのクッキーを読み込んで保存します。
            セッションクッキーとは、有効期限が指定されておらず "セッション" の間のみ
            有効であるクッキーのことです。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CERTINFO</constant></entry>
           <entry valign="top">
            &true; を設定すると、セキュアな転送時に SSL 証明書の情報を
            <literal>STDERR</literal> に出力します。
           </entry>
           <entry valign="top">
            cURL 7.19.1 で追加されました。
            PHP 5.3.2 以降で使用可能です。これを使うには、<constant>CURLOPT_VERBOSE</constant>
            を on にしておかなければなりません。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECT_ONLY</constant></entry>
           <entry valign="top">
            &true; を設定すると、プロキシの認証や接続の確立などをすべて行いますが、データは転送しません。
            このオプションは、HTTP や SMTP そして POP3 用に実装されています。
           </entry>
           <entry valign="top">
            7.15.2 で追加されました。
            PHP 5.5.0 以降で使用可能です。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CRLF</constant></entry>
           <entry valign="top">
            &true; を設定すると、転送時に Unix 形式の改行を CRLF 形式に変換します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant></entry>
           <entry valign="top">
            &true; を設定すると、グローバル DNS キャッシュを利用します。
            このオプションはスレッドセーフではありません。また、デフォルトで
            有効になっています。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FAILONERROR</constant></entry>
           <entry valign="top">
            &true; を設定すると、HTTP で 400 以上のコードが返ってきた際に
            処理失敗と判断します。デフォルトでは、コードの値を無視して
            ページの内容を取得します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FILETIME</constant></entry>
           <entry valign="top">
            &true; を設定すると、ドキュメントの更新日時を取得しようと試みます。
            この値を取得するには、<function>curl_getinfo</function> で
            <parameter>CURLINFO_FILETIME</parameter> オプションを用います。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FOLLOWLOCATION</constant></entry>
           <entry valign="top">
            &true; を設定すると、サーバーが HTTP ヘッダの一部として送ってくる
            <literal>"Location: "</literal> ヘッダの内容をたどります
           （これは再帰的に行われます。<constant>CURLOPT_MAXREDIRS</constant>
            が指定されていない限り、送ってくる <literal>"Location: "</literal>
            ヘッダの内容をずっとたどり続けることに注意しましょう）。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FORBID_REUSE</constant></entry>
           <entry valign="top">
            &true; を設定すると、処理が終了した際に明示的に接続を切断します。
            接続を再利用しません。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FRESH_CONNECT</constant></entry>
           <entry valign="top">
            &true; を設定すると、キャッシュされている接続を利用せずに
            新しい接続を確立します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPRT</constant></entry>
           <entry valign="top">
            &true; を設定すると、FTP のダウンロードに EPRT（および LPRT）
            を利用します。&false; の場合は EPRT・LPRT を無効にして PORT
            を利用します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPSV</constant></entry>
           <entry valign="top">
            &true; を設定すると、FTP 転送の際にまず EPSV コマンドの利用を
            試みます。失敗した場合は PASV を利用します。&false; を設定すると、
            EPSV を無効にします。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant></entry>
           <entry valign="top">
            &true; を設定すると、FTP の操作中にパスが存在しなかったときに
            ディレクトリを作成します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPAPPEND</constant></entry>
           <entry valign="top">
            &true; を設定すると、リモートファイルを上書きせずに追記します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPASCII</constant></entry>
           <entry valign="top">
            <constant>CURLOPT_TRANSFERTEXT</constant> のエイリアスです。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPLISTONLY</constant></entry>
           <entry valign="top">
            &true; を設定すると、FTP でディレクトリ名のみ表示します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADER</constant></entry>
           <entry valign="top">
            &true; を設定すると、ヘッダの内容も出力します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLINFO_HEADER_OUT</constant></entry>
           <entry valign="top">
            &true; を設定すると、リクエスト文字列を追跡します。
           </entry>
           <entry valign="top">
            PHP 5.1.3 以降で使用可能です。プレフィックスが <constant>CURLINFO_</constant>
            となっているのは意図的なものです。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPGET</constant></entry>
           <entry valign="top">
            &true; を設定すると、HTTP のリクエスト形式を GET に戻します。
            GET はデフォルト設定なので、リクエスト形式が変更されている
            場合にのみ必要となります。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPPROXYTUNNEL</constant></entry>
           <entry valign="top">
            &true; にすると、指定された HTTP プロキシを介してトンネルします。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MUTE</constant></entry>
           <entry valign="top">
            &true; を設定すると、cURL 関数に関連する出力を完全に抑えます。
           </entry>
           <entry valign="top">
            cURL 7.15.5 で削除されました (かわりに CURLOPT_RETURNTRANSFER が使えます)
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NETRC</constant></entry>
           <entry valign="top">
            &true; を設定すると、リモートサイトと接続を確立する際に用いる
            ユーザー名やパスワードを、<filename>~/.netrc</filename> から取得します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOBODY</constant></entry>
           <entry valign="top">
            &true; を設定すると、出力から本文を削除します。
            リクエストメソッドは HEAD となります。これを &false;
            に変更してもリクエストメソッドは GET には変わりません。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOPROGRESS</constant></entry>
           <entry valign="top">
            &true; を設定すると、cURL 転送の進捗状況表示を無効にします。
            <note>
             <para>
              PHP は、このオプションを自動的に &true; に設定します。
              これを変更するのは、デバッグ時のみにすべきです。
             </para>
            </note>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOSIGNAL</constant></entry>
           <entry valign="top">
            &true; を設定すると、cURL 関数が PHP プロセスに送信するシグナルを
            無視します。マルチスレッド SAPI ではデフォルトで on となっており、
            そのためタイムアウトオプションもまだ利用されています。
           </entry>
           <entry valign="top">
            cURL 7.10 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POST</constant></entry>
           <entry valign="top">
            &true; を設定すると、HTTP POST を行います。POST は、
            <literal>application/x-www-form-urlencoded</literal> 形式で
            行われます。これは一般的な HTML のフォームと同じ形式です。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PUT</constant></entry>
           <entry valign="top">
            &true; を設定すると、HTTP PUT を行います。PUT するファイルは
            <constant>CURLOPT_INFILE</constant> および
            <constant>CURLOPT_INFILESIZE</constant>
            で指定されている必要があります。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RETURNTRANSFER</constant></entry>
           <entry valign="top">
            &true; を設定すると、<function>curl_exec</function> の返り値を
            文字列で返します。通常はデータを直接出力します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            &false; を設定すると、cURL はサーバー証明書の検証を行いません。
            別の証明書を <constant>CURLOPT_CAINFO</constant> オプションで
            指定するか、<constant>CURLOPT_CAPATH</constant> オプションで
            証明ディレクトリを指定します。
           </entry>
           <entry valign="top">
            cURL 7.10 以降、デフォルト値は &true; です。また、
            cURL 7.10 以降、デフォルトでインストールされています。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TRANSFERTEXT</constant></entry>
           <entry valign="top">
            &true; を設定すると、FTP 転送を ASCII モードで行います。
            LDAP の場合は、データを HTML ではなくプレーンテキストで取得します。
            Windows システムでは <literal>STDOUT</literal>
            に対してバイナリモードを設定しないでください。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNRESTRICTED_AUTH</constant></entry>
           <entry valign="top">
            &true; を設定すると、（<constant>CURLOPT_FOLLOWLOCATION</constant>
            を利用して）場所をたどっていく際にユーザー名とパスワードを送信し続けます。
            これは、たとえホスト名が変わっても続けられます。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UPLOAD</constant></entry>
           <entry valign="top">
            &true; を設定すると、アップロードの準備をします。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_VERBOSE</constant></entry>
           <entry valign="top">
            &true; を設定すると、詳細な情報を出力します。情報は
            <literal>STDERR</literal> か、または
            <constant>CURLOPT_STDERR</constant>
            で指定したファイルに出力されます。
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> には、
       <parameter>option</parameter> の以下の値に関して
       整数値を指定する必要があります。
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>オプション</entry>
           <entry><parameter>value</parameter> への設定値</entry>
           <entry>注記</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_BUFFERSIZE</constant></entry>
           <entry valign="top">
            1 回の読み込みに用いるバッファのサイズ。しかしながら、必ず
            このバッファいっぱいまで読み込まれることを保証するものではありません。
           </entry>
           <entry valign="top">
            cURL 7.10 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CLOSEPOLICY</constant></entry>
           <entry valign="top">
            <constant>CURLCLOSEPOLICY_*</constant> のいずれかの値。
            <note>
             <para>
              このオプションは非推奨となりました。cURL で実装されることがなく、指定しても何の効果もありませんでした。
             </para>
            </note>
           </entry>
           <entry valign="top">
            PHP 5.6.0 で削除されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECTTIMEOUT</constant></entry>
           <entry valign="top">
            接続の試行を待ち続ける秒数。0 は永遠に待ち続けることを意味します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECTTIMEOUT_MS</constant></entry>
           <entry valign="top">
            接続の試行を待ち続けるミリ秒数。0 は永遠に待ち続けることを意味します。
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            システムの標準の名前解決を使うように libcurl をビルドしている場合は、
            接続のタイムアウトは秒単位の精度となり、最小のタイムアウトは 1 秒となります。
           </entry>
           <entry valign="top">
            cURL 7.16.2 で追加されました。PHP 5.2.3 以降で使用可能です。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_CACHE_TIMEOUT</constant></entry>
           <entry valign="top">
            DNS エントリをメモリ内に保持し続ける秒数。デフォルトでは
            120（2 分）に設定されています。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPSSLAUTH</constant></entry>
           <entry valign="top">
            （使用可能な場合の）FTP 認証方法。
            <literal>CURLFTPAUTH_SSL</literal>（まず SSL を試す）、
            <literal>CURLFTPAUTH_TLS</literal>（まず TLS を試す）あるいは
            <literal>CURLFTPAUTH_DEFAULT</literal>（cURL が決める）のいずれかです。
           </entry>
           <entry valign="top">
            cURL 7.12.2 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_VERSION</constant></entry>
           <entry valign="top">
            <parameter>CURL_HTTP_VERSION_NONE</parameter> (デフォルト。
            使用するバージョンを決めるのは cURL にまかせる)、
            <parameter>CURL_HTTP_VERSION_1_0</parameter> (HTTP/1.0 を使用する)、
            あるいは <parameter>CURL_HTTP_VERSION_1_1</parameter> (HTTP/1.1 を使用する)
            のいずれかです。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPAUTH</constant></entry>
           <entry valign="top">
            <para>
             使用する HTTP 認証方法。以下の中から選びます。
             <parameter>CURLAUTH_BASIC</parameter>、
             <parameter>CURLAUTH_DIGEST</parameter>、
             <parameter>CURLAUTH_GSSNEGOTIATE</parameter>、
             <parameter>CURLAUTH_NTLM</parameter>、
             <parameter>CURLAUTH_ANY</parameter> および
             <parameter>CURLAUTH_ANYSAFE</parameter>。
            </para>
            <para>
             2 つ以上の方法を組み合わせるには、ビット演算子 <literal>|</literal>（or）
             を使用します。このような場合、cURL はサーバーがサポートしている方法を
             問い合わせたうえで最適な方法を選択します。
            </para>
            <para>
             <parameter>CURLAUTH_ANY</parameter> は
             <literal>CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>
             のエイリアスです。
            </para>
            <para>
              <parameter>CURLAUTH_ANYSAFE</parameter> は
              <literal>CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>
              のエイリアスです。
            </para>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILESIZE</constant></entry>
           <entry valign="top">
            ファイルをリモートサイトにアップロードする際のファイルサイズ。
            このオプションを指定しても、libcurl がそれ以上のデータを送信するのは止められないことに注意しましょう。
            実際に何が送信されるのかは
            <constant>CURLOPT_READFUNCTION</constant> に依存します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_LIMIT</constant></entry>
           <entry valign="top">
            1 秒あたりのバイト数で、転送速度がこれより遅い期間が
            <constant>CURLOPT_LOW_SPEED_TIME</constant> 秒以上続いた場合に
            PHP は転送を終了します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_TIME</constant></entry>
           <entry valign="top">
            転送速度が <constant>CURLOPT_LOW_SPEED_LIMIT</constant>
            より遅い期間がどれだけ続いた場合に転送を異常終了させるかを、
            秒単位で指定します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXCONNECTS</constant></entry>
           <entry valign="top">
            許可される持続的接続の最大数。もしこの値に達した場合、
            どの接続を閉じるのかを <constant>CURLOPT_CLOSEPOLICY</constant>
            によって決定します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXREDIRS</constant></entry>
           <entry valign="top">
            HTTP のリダイレクト先を追いかける最大値。
            <constant>CURLOPT_FOLLOWLOCATION</constant> とあわせて使用します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PORT</constant></entry>
           <entry valign="top">
            接続先のポート番号。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROTOCOLS</constant></entry>
           <entry valign="top">
            <para>
             <constant>CURLPROTO_*</constant> の値のビットマスク。使用すると、
             転送時に libcurl がどのプロトコルを使用するのかに制約を加えます。
             さまざまなプロトコルに対応するよう libcurl をビルドしていた場合でも、
             これによって特定の転送プロトコルのみを使用するように制限することができます。
             デフォルトでは、libcurl がサポートしているすべてのプロトコルの使用を許可します。
             <constant>CURLOPT_REDIR_PROTOCOLS</constant> も参照ください。
            </para>
            <para>
             使用できるプロトコルオプションは次のとおりです。
             <parameter>CURLPROTO_HTTP</parameter>,
             <parameter>CURLPROTO_HTTPS</parameter>,
             <parameter>CURLPROTO_FTP</parameter>,
             <parameter>CURLPROTO_FTPS</parameter>,
             <parameter>CURLPROTO_SCP</parameter>,
             <parameter>CURLPROTO_SFTP</parameter>,
             <parameter>CURLPROTO_TELNET</parameter>,
             <parameter>CURLPROTO_LDAP</parameter>,
             <parameter>CURLPROTO_LDAPS</parameter>,
             <parameter>CURLPROTO_DICT</parameter>,
             <parameter>CURLPROTO_FILE</parameter>,
             <parameter>CURLPROTO_TFTP</parameter>,
             <parameter>CURLPROTO_ALL</parameter>
            </para>
           </entry>
           <entry valign="top">
            cURL 7.19.4 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYAUTH</constant></entry>
           <entry valign="top">
            プロキシ接続に使用する HTTP 認証の方法。
            <constant>CURLOPT_HTTPAUTH</constant> で説明したのと同じオプションを
            指定可能です。プロキシ認証でサポートされているのは、今のところ
            <parameter>CURLAUTH_BASIC</parameter> および
            <parameter>CURLAUTH_NTLM</parameter> のみです。
           </entry>
           <entry valign="top">
            cURL 7.10.7 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYPORT</constant></entry>
           <entry valign="top">
            プロキシ接続のポート番号。このポート番号は、
            <constant>CURLOPT_PROXY</constant> で指定することも可能です。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYTYPE</constant></entry>
           <entry valign="top">
            <parameter>CURLPROXY_HTTP</parameter>（デフォルト）あるいは
            <parameter>CURLPROXY_SOCKS5</parameter>。
           </entry>
           <entry valign="top">
            cURL 7.10 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REDIR_PROTOCOLS</constant></entry>
           <entry valign="top">
            <constant>CURLPROTO_*</constant> の値のビットマスク。使用すると、
            <constant>CURLOPT_FOLLOWLOCATION</constant> が有効な場合のリダイレクト時の転送に
            libcurl がどのプロトコルを使用するのかに制約を加えます。これによって、
            リダイレクト時に特定の転送プロトコルのみを使用するように制限することができます。
            デフォルトでは、libcurl がサポートしているすべてのプロトコルのうち
            FILE と SCP 以外のすべての使用を許可します。この挙動は 7.19.4
            より前のバージョンとは異なります。7.19.4 より前のバージョンでは、
            サポートするすべてのプロトコルを無条件に許可していました。
            プロトコル定数の値は <constant>CURLOPT_PROTOCOLS</constant> を参照ください。
           </entry>
           <entry valign="top">
            cURL 7.19.4 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESUME_FROM</constant></entry>
           <entry valign="top">
            転送を途中から再開する場合のバイトオフセット。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            1 は SSL ピア証明書に一般名が存在するかどうかを調べます。
            2 はそれに加え、その名前がホスト名と一致することを検証します。
            本番環境では、このオプションの値は常に
            2 (デフォルト値) にしておかなければなりません。
           </entry>
           <entry valign="top">
            値 1 は、cURL 7.28.1 以降では使えなくなりました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLVERSION</constant></entry>
           <entry valign="top">
            使用する SSL のバージョン（2 あるいは 3）。デフォルトでは
            PHP が自動的に判断しますが、これを手動で設定する必要がある場合もあります。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMECONDITION</constant></entry>
           <entry valign="top">
            <constant>CURLOPT_TIMEVALUE</constant> の扱いを決定します。
            <constant>CURLOPT_TIMEVALUE</constant> で指定した時刻以降に
            変更されたページのみを返す場合は
            <parameter>CURL_TIMECOND_IFMODSINCE</parameter> を使用します。
            <constant>CURLOPT_HEADER</constant> が &true; だと仮定すると、
            ページが変更されていない場合は
            <literal>"304 Not Modified"</literal> ヘッダが返されます。
            <parameter>CURL_TIMECOND_IFUNMODSINCE</parameter> は反対の意味です。
            デフォルトは <parameter>CURL_TIMECOND_IFMODSINCE</parameter>
            です。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT</constant></entry>
           <entry valign="top">
            cURL 関数の実行にかけられる時間の最大値。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            cURL 関数の実行にかけられる最大のミリ秒数。
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            システムの標準の名前解決を使うように libcurl をビルドしている場合は、
            接続のタイムアウトは秒単位の精度となり、最小のタイムアウトは 1 秒となります。
           </entry>
           <entry valign="top">
            cURL 7.16.2 で追加されました。PHP 5.2.3 以降で使用可能です。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE</constant></entry>
           <entry valign="top">
            1970 年 1 月 1 日からの経過秒数。この値は
            <constant>CURLOPT_TIMECONDITION</constant> で使用されます。デフォルトでは
            <parameter>CURL_TIMECOND_IFMODSINCE</parameter> が設定されます。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant></entry>
           <entry valign="top">
            ダウンロード速度 (単位は「バイト/秒」) の転送中累加平均がこの値を超えると、
            転送を一時停止して、平均速度がこのパラメータの値以下に落ちるまで待ちます。
            デフォルトは無制限です。
           </entry>
           <entry valign="top">
            cURL 7.15.5 で追加されました。PHP 5.4.0 以降で使用可能です。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant></entry>
           <entry valign="top">
            アップロード速度 (単位は「バイト/秒」) の転送中累加平均がこの値を超えると、
            転送を一時停止して、平均速度がこのパラメータの値以下に落ちるまで待ちます。
            デフォルトは無制限です。
           </entry>
           <entry valign="top">
            cURL 7.15.5 で追加されました。PHP 5.4.0 以降で使用可能です。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_AUTH_TYPES</constant></entry>
           <entry valign="top">
            <constant>CURLSSH_AUTH_PUBLICKEY</constant>, 
            <constant>CURLSSH_AUTH_PASSWORD</constant>, 
            <constant>CURLSSH_AUTH_HOST</constant>, 
            <constant>CURLSSH_AUTH_KEYBOARD</constant>
            のビットマスク。
            <constant>CURLSSH_AUTH_ANY</constant> にすると libcurl がいずれかひとつを選択します。
           </entry>
           <entry valign="top">
            cURL 7.16.1 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_IPRESOLVE</constant></entry>
           <entry valign="top">
            ホスト名の解決にどの形式の IP アドレスを使うのかを、アプリケーションが選べるようにします。
            複数のバージョンの IP アドレスで解決できるホスト名のときに使うもので、指定できる値は
            <constant>CURL_IPRESOLVE_WHATEVER</constant>、
            <constant>CURL_IPRESOLVE_V4</constant> そして
            <constant>CURL_IPRESOLVE_V6</constant> です。
            デフォルトは <constant>CURL_IPRESOLVE_WHATEVER</constant> です。
           </entry>
           <entry valign="top">
            cURL 7.10.8 で追加されました。
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> は、
       <parameter>option</parameter> パラメータの
       以下の値に関して文字列である必要があります。
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>オプション</entry>
           <entry><parameter>value</parameter> への設定値</entry>
           <entry>注記</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_CAINFO</constant></entry>
           <entry valign="top">
            接続先を検証するための証明書を保持するファイル名。
            これは <constant>CURLOPT_SSL_VERIFYPEER</constant> を使用する場合に
            のみ意味を持ちます。
           </entry>
           <entry valign="top">
            絶対パスで指定しなければなりません。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAPATH</constant></entry>
           <entry valign="top">
            複数の証明書ファイルを保持するディレクトリ。このオプションは
            <constant>CURLOPT_SSL_VERIFYPEER</constant> とともに使用します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIE</constant></entry>
           <entry valign="top">
            HTTP リクエストにおける
            <literal>"Cookie: "</literal> ヘッダの内容。
            クッキーが複数ある場合は、セミコロンとスペースで区切られる
            (例 "<literal>fruit=apple; colour=red</literal>")
            ことに注意しましょう。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEFILE</constant></entry>
           <entry valign="top">
            クッキーのデータを保持するファイルの名前。クッキーファイルは、
            Netscape フォーマットあるいは
            HTTP ヘッダを単純にファイルにダンプしたものが使用可能です。
            名前が空文字列の場合はクッキーを読み込みませんが、クッキーの処理は有効なままです。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEJAR</constant></entry>
           <entry valign="top">
            ハンドルを閉じる際 (curl_close のコール後など) に、
            すべての内部クッキーを保存するファイルの名前。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CUSTOMREQUEST</constant></entry>
           <entry valign="top">
            HTTP リクエストで
            <literal>"GET"</literal> あるいは <literal>"HEAD"</literal> 以外に
            使用するカスタムメソッド。これが有用なのは、<literal>"DELETE"</literal>
            やその他のあまり知られていない HTTP リクエストを実行する場合です。
            使用可能な値は <literal>"GET"</literal>、
            <literal>"POST"</literal>、<literal>"CONNECT"</literal> などです。
            HTTP リクエストの内容をすべて指定するわけではありません。つまり、
            <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal> のような
            記述は間違いだということです。
            <note>
             <para>
              使用しようとしているメソッドをサーバーがサポートしていることを
              確かめるまで、これを使用しないでください。
             </para>
            </note>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EGDSOCKET</constant></entry>
           <entry valign="top">
            <constant>CURLOPT_RANDOM_FILE</constant> と似ていますが、
            Entropy Gathering Daemon ソケットを使用してファイル名を生成する点が
            違います。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_ENCODING</constant></entry>
           <entry valign="top">
            <literal>"Accept-Encoding: "</literal> ヘッダの内容。
            これにより、応答のデコードを可能にします。サポートされる
            エンコーディングは <literal>"identity"</literal>、
            <literal>"deflate"</literal> および <literal>"gzip"</literal>
            です。もし空文字列 <literal>""</literal> が指定された場合、
            サポートされるエンコーディングをすべて含むヘッダが送信されます。
           </entry>
           <entry valign="top">
            cURL 7.10 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPPORT</constant></entry>
           <entry valign="top">
            FTP で "PORT" を使用するための IP アドレスを取得する際に使用される値。
            "PORT" は、リモートサーバーに対してこちらが指定した IP アドレスに
            接続するよう指示します。この値に設定できる内容は IP アドレス、ホスト名、
            ネットワークインターフェイス名（Unix）、あるいは単に '-' を指定する
            ことでシステムのデフォルト IP アドレスを指定します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INTERFACE</constant></entry>
           <entry valign="top">
            使用するネットワークインターフェイスの名前。
            インターフェイス名、IP アドレスあるいはホスト名が指定可能です。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KEYPASSWD</constant></entry>
           <entry valign="top">
            <constant>CURLOPT_SSLKEY</constant>
            あるいは <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant> 秘密鍵を使うときに必須となるパスワード。
           </entry>
           <entry valign="top">
            cURL 7.16.1 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KRB4LEVEL</constant></entry>
           <entry valign="top">
            KRB4（Kerberos 4）セキュリティレベル。以下の値のいずれか
            （セキュリティの低い順です）が指定可能です。
            <literal>"clear"</literal>、
            <literal>"safe"</literal>、
            <literal>"confidential"</literal>、
            <literal>"private"</literal>。
            文字列がこれらのどれでもなかった場合は、
            <literal>"private"</literal> が使用されます。このオプションを &null;
            にすると KRB4 セキュリティを無効にします。現時点では、KRB4
            セキュリティは FTP 転送にのみ使用可能です。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTFIELDS</constant></entry>
           <entry valign="top">
            <simpara>
             HTTP "POST" で送信するすべてのデータ。
             ファイルを送信するには、ファイル名の先頭に <literal>@</literal>
             をつけてフルパスを指定します。ファイルタイプを明示的に指定するには、ファイル名の後に
             '<literal>;type=mimetype</literal>' 形式で続けます。
             このパラメータは
             '<literal>para1=val1&amp;para2=val2&amp;...</literal>'
             のように url エンコードされた文字列形式で渡すこともできますし、
             フィールド名をキー、データを値とする配列で渡すこともできます。
             <parameter>value</parameter> が配列の場合、
             <literal>Content-Type</literal> ヘッダには
             <literal>multipart/form-data</literal> を設定します。
            </simpara>
            <simpara>
             PHP 5.2.0 以降、このオプションに
             <literal>@</literal> プレフィックスつきでファイルを渡したときは
             <parameter>value</parameter> が配列でなければならなくなりました。
            </simpara>
            <simpara>
             PHP 5.5.0 以降、<literal>@</literal> プレフィックスは非推奨になりました。
             また、ファイルを <classname>CURLFile</classname> で送信できるようになりました。
            </simpara>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY</constant></entry>
           <entry valign="top">
            リクエストを経由させる HTTP プロキシ。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYUSERPWD</constant></entry>
           <entry valign="top">
            プロキシに接続するためのユーザー名とパスワード。
            <literal>"[username]:[password]"</literal> 形式で指定します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANDOM_FILE</constant></entry>
           <entry valign="top">
            使用するファイル名を、SSL の乱数生成器を使用して作成します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANGE</constant></entry>
           <entry valign="top">
            取得するデータの範囲を
            <literal>"X-Y"</literal> 形式で指定します。X あるいは Y は省略可能です。
            HTTP 転送では、いくつかの範囲をカンマで区切った
            <literal>"X-Y,N-M"</literal> のような形式もサポートしています。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REFERER</constant></entry>
           <entry valign="top">
            HTTP リクエストで使用される <literal>"Referer: "</literal>
            ヘッダの内容。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant></entry>
           <entry valign="top">
            32 桁の十六進文字列。この文字列は、リモートホストの公開鍵の MD5 チェックサムでなければなりません。
            md5sum がマッチしない限り、libcurl はホストとの接続を拒否します。
            このオプションは、SCP および SFTP でのみ有効です。
           </entry>
           <entry valign="top">
            cURL 7.17.1 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant></entry>
           <entry valign="top">
            公開鍵のファイル名。指定しなかった場合、libcurl はデフォルトの場所を探します。デフォルトは、
            環境変数 HOME が設定されていれば $HOME/.ssh/id_dsa.pub、設定されていなければ
            カレントディレクトリの "id_dsa.pub" です。
           </entry>
           <entry valign="top">
            cURL 7.16.1 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant></entry>
           <entry valign="top">
            秘密鍵のファイル名。指定しなかった場合、libcurl はデフォルトの場所を探します。デフォルトは、
            環境変数 HOME が設定されていれば $HOME/.ssh/id_dsa、設定されていなければ
            カレントディレクトリの "id_dsa" です。
            ファイルがパスワードで保護されている場合は、パスワードを
            <constant>CURLOPT_KEYPASSWD</constant> に設定します。
           </entry>
           <entry valign="top">
            cURL 7.16.1 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            SSL で使用する暗号のリスト。例えば
            <literal>RC4-SHA</literal> および <literal>TLSv1</literal> が
            使用可能です。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERT</constant></entry>
           <entry valign="top">
            PEM フォーマットの証明書を含むファイルの名前。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTPASSWD</constant></entry>
           <entry valign="top">
            <constant>CURLOPT_SSLCERT</constant>
            証明書を使用する際に必要なパスワード。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            証明書の形式。サポートされるフォーマットは
            <literal>"PEM"</literal>（デフォルト）、<literal>"DER"</literal>
            および <literal>"ENG"</literal> です。
           </entry>
           <entry valign="top">
            cURL 7.9.3 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE</constant></entry>
           <entry valign="top">
            <constant>CURLOPT_SSLKEY</constant> で指定した SSL 秘密鍵の
            暗号化エンジンの ID 。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE_DEFAULT</constant></entry>
           <entry valign="top">
            非対称暗号化で使用する暗号化エンジンの ID 。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEY</constant></entry>
           <entry valign="top">
            SSL 秘密鍵を含むファイルの名前。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYPASSWD</constant></entry>
           <entry valign="top">
            <constant>CURLOPT_SSLKEY</constant> で指定した SSL 秘密鍵を
            使用するために必要なパスワード。
            <note>
             <para>
              このオプションには重要なパスワードが含まれます。PHP スクリプトを
              安全な状態におくことを忘れないでください。
             </para>
            </note>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            <constant>CURLOPT_SSLKEY</constant> で指定した SSL 秘密鍵の
            形式。サポートされる型は以下のとおりです。
            <literal>"PEM"</literal>（デフォルト）、<literal>"DER"</literal>
            および <literal>"ENG"</literal> 。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_URL</constant></entry>
           <entry valign="top">
            取得する URL 。<function>curl_init</function> でセッションを
            初期化する際に指定することも可能です。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERAGENT</constant></entry>
           <entry valign="top">
            HTTP リクエストで使用される <literal>"User-Agent: "</literal>
            ヘッダの内容。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERPWD</constant></entry>
           <entry valign="top">
            接続に使用するユーザー名とパスワード。
            <literal>"[username]:[password]"</literal> 形式で指定します。
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> には、
       <parameter>option</parameter> の以下の値に関して
       配列を指定する必要があります。
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>オプション</entry>
           <entry><parameter>value</parameter> への設定値</entry>
           <entry>注記</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP200ALIASES</constant></entry>
           <entry valign="top">
            エラーではなく正常な応答として扱われる、HTTP 200 レスポンスの配列。
           </entry>
           <entry valign="top">
            cURL 7.10.3 で追加されました。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPHEADER</constant></entry>
           <entry valign="top">
            設定する HTTP ヘッダフィールドの配列。
            <code>
             array('Content-type: text/plain', 'Content-length: 100')
            </code>
            形式。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTQUOTE</constant></entry>
           <entry valign="top">
            FTP リクエストの実行後に、サーバー上で実行する FTP コマンドの配列。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_QUOTE</constant></entry>
           <entry valign="top">
            FTP リクエストの前にサーバー上で実行する FTP コマンドの配列。
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> はストリームリソース（例えば
       <function>fopen</function> が作成するもの）であり、以下の
       <parameter>option</parameter> パラメータに設定します。
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>オプション</entry>
           <entry><parameter>value</parameter> に設定する内容</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_FILE</constant></entry>
           <entry valign="top">
            転送内容が書き込まれるファイル。デフォルトは <literal>STDOUT</literal>
            （ブラウザウィンドウ）。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILE</constant></entry>
           <entry valign="top">
            アップロード時に転送内容を読み込むファイル。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STDERR</constant></entry>
           <entry valign="top">
            <literal>STDERR</literal> の代わりにエラーを出力する場所。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEHEADER</constant></entry>
           <entry valign="top">
            転送のヘッダ部分が書き込まれるファイル。
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> には、
       <parameter>option</parameter> の以下の値に関して
       有効な関数あるいはクロージャの名前を指定する必要があります。
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>オプション</entry>
           <entry><parameter>value</parameter> への設定値</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADERFUNCTION</constant></entry>
           <entry valign="top">
            二つのパラメータをとるコールバック。
            最初のパラメータは CURL リソースで、2 番目は書き込む
            ヘッダデータの文字列です。このコールバック関数を使用するにあたり、
            ヘッダデータを書き込む処理を実装するのはあなたの役目となります。
            書き込んだデータのバイト数を返します。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWDFUNCTION</constant></entry>
           <entry valign="top">
            三つのパラメータをとるコールバック。
            最初のパラメータは CURL リソースで、2 番目はパスワード
            プロンプトの文字列、そして 3 番目はパスワードの最大長です。
            入力されたパスワードを文字列で返します。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROGRESSFUNCTION</constant></entry>
           <entry valign="top">
            <para>
             五つのパラメータをとるコールバック。
             最初のパラメータは cURL 利ソールで、2 番目はこの転送でダウンロードしようとしている総バイト数、
             3 番目はこれまでにダウンロードしたバイト数、4 番目はこの転送でアップロードしようとしている総バイト数、
             そして 5 番目はこれまでにアップロードしたバイト数です。
            </para>
            <note>
             <para>
              このコールバックが呼ばれるのは、<constant>CURLOPT_NOPROGRESS</constant>
              が &false; の場合だけです。
             </para>
            </note>
            <para>
             ゼロ以外の値を返すと、転送を強制終了できます。このとき、この転送にはエラー
             <constant>CURLE_ABORTED_BY_CALLBACK</constant>
             が設定されます。
            </para>
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_READFUNCTION</constant></entry>
           <entry valign="top">
            三つのパラメータをとるコールバック。
            最初のパラメータは CURL リソースで、2 番目は
            <constant>CURLOPT_INFILE</constant> で cURL に渡したストリームリソース、
            そして最後が読み込むデータの最大量です。
            コールバックは、要求したデータ量以下の長さの文字列を返さなければなりません。
            一般的には、渡されたストリームリソースから読み込んだデータを返します。
            <literal>EOF</literal> を伝えるには空文字列を返さなければなりません。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEFUNCTION</constant></entry>
           <entry valign="top">
            二つのパラメータをとるコールバック。
            最初のパラメータは CURL リソースで、2 番目は書き込む
            データの文字列です。データの保存には、
            このコールバック関数を使わなければなりません。
            書き込んだデータの正確なバイト数を返す必要があります。
            返さなければ、エラーで転送が異常終了します。
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       その他の値
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>オプション</entry>
           <entry><parameter>value</parameter> への設定値</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_SHARE</constant></entry>
           <entry valign="top">
            <function>curl_share_init</function> の結果。
            この cURL ハンドルに、共有ハンドルからのデータを使わせるようにします。
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.6.0</entry>
       <entry>
        <constant>CURLOPT_CLOSEPOLICY</constant> およびそれに関連する値が削除されました。
       </entry>
      </row>
      <row>
       <entry>5.5.0</entry>
       <entry>
        cURL リソースを、
        <constant>CURLOPT_PROGRESSFUNCTION</constant> コールバックの最初の引数として渡すようになりました。
       </entry>
      </row>
      <row>
       <entry>5.5.0</entry>
       <entry>
        <constant>CURLOPT_SHARE</constant> が追加されました。
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        <constant>CURLOPT_PROGRESSFUNCTION</constant> が追加されました。
       </entry>
      </row>
      <row>
       <entry>5.2.10</entry>
       <entry>
        <constant>CURLOPT_PROTOCOLS</constant> および
        <constant>CURLOPT_REDIR_PROTOCOLS</constant>
        が追加されました。
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        <constant>CURLOPT_AUTOREFERER</constant>,
        <constant>CURLOPT_BINARYTRANSFER</constant>,
        <constant>CURLOPT_FTPSSLAUTH</constant>,
        <constant>CURLOPT_PROXYAUTH</constant> および
        <constant>CURLOPT_TIMECONDITION</constant>
        が追加されました。
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        <constant>CURLOPT_FTP_USE_EPRT</constant>,
        <constant>CURLOPT_NOSIGNAL</constant>,
        <constant>CURLOPT_UNRESTRICTED_AUTH</constant>,
        <constant>CURLOPT_BUFFERSIZE</constant>,
        <constant>CURLOPT_HTTPAUTH</constant>,
        <constant>CURLOPT_PROXYPORT</constant>,
        <constant>CURLOPT_PROXYTYPE</constant>,
        <constant>CURLOPT_SSLCERTTYPE</constant> および
        <constant>CURLOPT_HTTP200ALIASES</constant>
        が追加されました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>新規に cURL セッションを初期化、ウェブページを取得する</title>
    <programlisting role="php">
<![CDATA[
<?php
// 新しい cURL リソースを作成します
$ch = curl_init();

// URL その他のオプションを適切に設定します
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, false);

// URL の内容を取得し、ブラウザに渡します
curl_exec($ch);

// cURL リソースを閉じ、システムリソースを開放します
curl_close($ch);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>ファイルのアップロード</title>
    <programlisting role="php">
<![CDATA[
<?php

/* http://localhost/upload.php:
print_r($_POST);
print_r($_FILES);
*/

$ch = curl_init();

$data = array('name' => 'Foo', 'file' => '@/home/user/test.png');

curl_setopt($ch, CURLOPT_URL, 'http://localhost/upload.php');
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, $data);

curl_exec($ch);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [name] => Foo
)
Array
(
    [file] => Array
        (
            [name] => test.png
            [type] => image/png
            [tmp_name] => /tmp/phpcpjNeQ
            [error] => 0
            [size] => 279
        )

)

]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    配列を <constant>CURLOPT_POSTFIELDS</constant> に渡すと、データを
    <emphasis>multipart/form-data</emphasis> でエンコードします。
    一方 URL エンコードされた文字列を渡すと、データを
    <emphasis>application/x-www-form-urlencoded</emphasis> でエンコードします。
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_setopt_array</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
