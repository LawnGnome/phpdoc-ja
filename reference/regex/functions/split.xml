<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/regex.xml, last change in rev 1.4 -->
<!-- EN-Revision: 1.7 Maintainer: hirokawa Status: ready -->
  <refentry id="function.split">
   <refnamediv>
    <refname>split</refname>
    <refpurpose>正規表現により文字列を分割し、配列に格納する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>split</methodname>
      <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>limit</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <note>
     <para>
      Perl互換の正規表現構文を使用する<function>preg_split</function>
      は、往々にして<function>split</function>よりも速い代替案となりま
      す。
     </para>
    </note>
    <para>
     文字列の配列を返します。配列の各要素は正規表現
     <parameter>pattern</parameter>により区切られた
     <parameter>string</parameter>中の部分文字列です。
     <parameter>limit</parameter>が指定された場合、返される配列には
     最大<parameter>limit</parameter>の要素が含まれます。この場合、
     最後の要素には<parameter>string</parameter>の残りの部分が全て
     入っています。エラーを生じた場合、<function>split</function>は
     &false;を返します。
    </para>
    <para>
     <filename>/etc/passwd</filename>の行から最初の4つのフィールド
     を取り出すには、以下のようにします。
    <example>
      <title><function>split</function>の例</title>
      <programlisting role="php">
<![CDATA[
list($user,$pass,$uid,$gid,$extra)= split (":", $passwd_line, 5);
]]>
      </programlisting>
     </example>
    </para>
    <tip>
     <simpara>
      <parameter>pattern</parameter>が<replaceable>n</replaceable>回現
      れる場合、返される配列には、
      <literal><replaceable>n</replaceable>+1</literal>個のアイテムが
      含まれます。例えば、<parameter>pattern</parameter>が現れない場合、
      1個の要素のみを有する配列が返されます。もちろん、これは
      <parameter>string</parameter>が空の場合も同様です。
     </simpara>
    </tip>
    <para>
     スラッシュ、ドット、ハイフンをデリミタとすると日付を処理する例を
     以下に示します。
     <example>
      <title><function>split</function>の例</title>
      <programlisting role="php">
<![CDATA[
$date = "04/30/1973";  // デリミタはスラッシュ、ドット、ハイフンのどれかです。
list ($month, $day, $year) = split ('[/.-]', $date);
echo "Month: $month; Day: $day; Year: $year<br>\n";
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <parameter>pattern</parameter> は大文字小文字を区別することに
     注意してください。
    </para>
    <para>
     正規表現の機能を必要としない場合、正規表現エンジンのオーバーヘッ
     ドがない<function>explode</function>の方がより高速であるというこ
     とに注意して下さい。
    </para>
    <para>
     Perlの<command>$chars = split('', $str)</command>の動作を模擬する
     手段を探しているユーザーについては、
     <function>preg_split</function>の例を参照下さい。
    </para>
    <para>
     <parameter>pattern</parameter> は正規表現であることに注意して下さ
     い。正規表現で特殊文字とみなされる文字を分割したい場合、それらを
     まずエスケープする必要があります。<function>split</function> (ま
     たは他の正規表現関数に関して)の動作が何か変であると感じたならば、
     PHP配布ファイルの	 
     <filename>regex/</filename>サブディレクトリにあるファイル
     <filename>regex.7</filename>を読んで下さい。このファイルは
     manpageフォーマットとなっており、読むには
     <command>man /usr/local/src/regex/regex.7</command>のようにします。
    </para>
    <para>
     <function>preg_split</function>, <function>spliti</function>,
     <function>explode</function>, <function>implode</function>,
     <function>chunk_split</function>, <function>wordwrap</function>も
     参照下さい。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
