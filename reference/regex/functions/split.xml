<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./ja/functions/regex.xml, last change in rev 1.4 -->
<!-- EN-Revision: 1.6 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
  <refentry id="function.split">
   <refnamediv>
    <refname>split</refname>
    <refpurpose>正規表現により文字列を分割し、配列に格納する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <methodsynopsis>
     <type>array</type><methodname>split</methodname>
     <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
     <methodparam><type>string</type><parameter>string</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>limit</parameter></methodparam>
    </methodsynopsis>
    <tip>
     <para>
      Perl 互換の正規表現構文を使用する <function>preg_split</function>
      は、往々にして <function>split</function> よりも速い代替案となります。
      正規表現の威力が必要ないのであれば、<function>explode</function>
      を使用するほうがより高速です。これは正規表現エンジンの
      オーバーヘッドを受けません。
     </para>
    </tip>
    <para>
     文字列の配列を返します。配列の各要素は、大文字小文字を区別する正規表現
     <parameter>pattern</parameter> により区切られた
     <parameter>string</parameter> 中の部分文字列です。
     <parameter>limit</parameter> が指定された場合、返される配列には
     最大 <parameter>limit</parameter> の要素が含まれます。この場合、
     最後の要素には <parameter>string</parameter> の残りの部分が全て
     入っています。エラーを生じた場合、<function>split</function> は
     &false; を返します。
    </para>
    <para>
     <filename>/etc/passwd</filename> の行から最初の 4 つのフィールドを
     取り出すには、以下のようにします。
    </para>
    <para>
     <example>
      <title><function>split</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php
list($user, $pass, $uid, $gid, $extra) =
    split(":", $passwd_line, 5);
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     <parameter>pattern</parameter> が <replaceable>n</replaceable> 回
     現れる場合、返される配列には、
     <literal><replaceable>n</replaceable>+1</literal> 個のアイテムが
     含まれます。例えば、<parameter>pattern</parameter> が現れない場合、
     1 個の要素のみを有する配列が返されます。もちろん、これは
     <parameter>string</parameter> が空の場合も同様です。
    </simpara>
    <para>
     スラッシュ、ドット、ハイフンをデリミタとすると日付を処理する例を
     以下に示します。
    </para>
    <para>
     <example>
      <title><function>split</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php
// デリミタはスラッシュ、ドット、ハイフンのどれかです。
$date = "04/30/1973";
list($month, $day, $year) = split('[/.-]', $date);
echo "Month: $month; Day: $day; Year: $year<br />\n";
?>
]]>
      </programlisting>
     </example>
    </para>

    <para>
     Perl の <command>@chars = split('', $str)</command> の動作を模擬する
     手段を探しているユーザは、
     <function>preg_split</function> あるいは
     <function>str_split</function> の例を参照ください。
    </para>

    <para>
     <parameter>pattern</parameter> は正規表現であることに注意してください。
     正規表現で特殊文字とみなされる文字を分割したい場合、それらを
     まずエスケープする必要があります。<function>split</function>
     (または他の正規表現関数に関して)の動作が何か変であると感じたならば、
     PHP 配布ファイルの	 
     <filename>regex/</filename> サブディレクトリにあるファイル
     <filename>regex.7</filename> を読んでください。このファイルは
     man ページ形式となっており、読むには
     <command>man /usr/local/src/regex/regex.7</command> のようにします。
    </para>

    <para>
     <function>preg_split</function>、<function>spliti</function>、
     <function>str_split</function>、
     <function>explode</function>、<function>implode</function>、
     <function>chunk_split</function> および <function>wordwrap</function>
     も参照ください。
    </para>

   </refsect1>
  </refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
