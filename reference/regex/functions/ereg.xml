<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./ja/functions/regex.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.12 Maintainer: hirokawa Status: ready -->
  <refentry id="function.ereg">
   <refnamediv>
    <refname>ereg</refname>
    <refpurpose>正規表現にマッチさせる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <methodsynopsis>
     <type>int</type><methodname>ereg</methodname>
     <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
     <methodparam><type>string</type><parameter>string</parameter></methodparam>
     <methodparam choice="opt"><type>array</type><parameter role="reference">regs</parameter></methodparam>
    </methodsynopsis>
    <note>
     <para>
      Perl 互換の正規表現構文を使用する <function>preg_match</function>
      のほうが、多くの場合 <function>ereg</function> よりも速く動作します。
     </para>
    </note>
    <simpara>
     この関数は、<parameter>pattern</parameter> で指定した正規表現
     により大文字小文字を区別して <parameter>string</parameter> を検索します。
    </simpara>
    <simpara>
     <parameter>pattern</parameter> の括弧でくくられた部分文字列に
     マッチし、かつこの関数が 3 番目の引数 <parameter>regs</parameter> を
     指定してコールされた場合、マッチした部分が配列 <parameter>regs</parameter>
     に格納されます。$regs[1] は最初の左括弧が始まる部分文字列を保持、
     $regs[2] は二番目の左括弧が始まる部分文字列を保持、
     といったようになっています。$regs[0] は
     マッチした文字列全体のコピーを保持しています。
    </simpara>
    <note>
     <simpara>
      PHP 4.1.0 以前(4.1.0 を含む)のバージョンでは、<literal>$regs</literal>
      にはちょうど 10 個の要素が代入されました。これは、実際にマッチした
      括弧付きのサブ文字列が 10 より多くても少なくても同じでした。ただし、
      <function>ereg</function> にはより多くの部分文字列にマッチする
      能力があります。マッチするものが見付からなかった場合、
      <literal>$regs</literal> は、<function>ereg</function> により
      書き換えられません。
     </simpara>
    </note>    
    <simpara>
     <parameter>string</parameter> の中で <parameter>pattern</parameter>
     がマッチした場合にはマッチした文字列の長さを返し、マッチしなかった場合
     またはエラーとなった場合は &false; を返します。
     オプションのパラメータ <parameter>regs</parameter> が渡されなかったり
     マッチした文字列の長さが 0 だったりした場合は、この関数は 1 を返します。
    </simpara>
    <para>
     以下のサンプルコードは、ISO フォーマット(YYYY-MM-DD) で格納されている
     日付を DD.MM.YYYY フォーマットで表示するものです。
    </para>
    <para>
     <example>
      <title><function>ereg</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php
if (ereg ("([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})", $date, $regs)) {
    echo "$regs[3].$regs[2].$regs[1]";
} else {
    echo "Invalid date format: $date";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <function>eregi</function>、<function>ereg_replace</function>、
     <function>eregi_replace</function>、<function>preg_match</function>、
     <function>strpos</function> および <function>strstr</function>
     も参照ください。
    </para>
   </refsect1>
  </refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
