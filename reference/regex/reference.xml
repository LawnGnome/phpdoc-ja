<?xml version="1.0" encoding="utf-8"?>
 <reference id="ref.regex">
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.7 Maintainer: hirokawa Status: ready -->
<title>正規表現(regex)関数 (POSIX拡張サポート)</title>
  <titleabbrev>Regexps</titleabbrev>
  
  <partintro>
   <section id="regex.intro">
    &reftitle.intro;
    <note>
     <para>
      PHPは、<link linkend="ref.pcre">PCRE関数</link>によりPerl互換の構
      文を使用する正規表現式もサポートします。これらの関数は、「ものぐさ」
      マッチ、言明、条件付きサブパターン、そしてPOSIX拡張正規表現構文
      でサポートされていない他の複数の機能をサポートします。
     </para>
    </note>
    <warning>
     <para>
      これらの正規表現関数はバイナリセーフではありません。<link
       linkend="ref.pcre">PCRE関数</link>はバイナリセーフです。
     </para>
    </warning>
    <para>
     PHPにおいて正規表現は複雑な文字列操作に使用されます。
     次の正規表現関数がサポートされます。
     <itemizedlist>
      <listitem>
       <simpara><function>ereg</function></simpara>
      </listitem>
      <listitem>
       <simpara><function>ereg_replace</function></simpara>
      </listitem>
      <listitem>
       <simpara><function>eregi</function></simpara>
     </listitem>
      <listitem>
       <simpara><function>eregi_replace</function></simpara>
      </listitem>
     <listitem>
       <simpara><function>split</function></simpara>
      </listitem>
      <listitem>
       <simpara><function>spliti</function></simpara>
      </listitem>
     </itemizedlist>
     これらの関数は、全て最初の引数に正規表現をとります。
     PHPはPOSIX 1003.2で定義されたPOSIX拡張正規表現を使用します。
     POSIX正規表現に関する詳細については、PHP配布ファイルのregexディレ
     クトリにあるregexのmanページを参照下さい。
     このページはmanpageフォーマットであり、読むには
     <command>man /usr/local/src/regex/regex.7</command>のようにします。
    </para>
   </section>

   <section id="regex.requirements">
    &reftitle.required;
    &no.requirement;
   </section>
   
   &reference.regex.configure;

   <section id="regex.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="regex.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section id="regex.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section id="regex.examples">
    &reftitle.examples;
    <para>
     <example>
      <title>正規表現の例</title>
     <programlisting role="php">
<![CDATA[
ereg ("abc", $string);            
/* "abc" が $string のどこかにある場合に true を返す */
 
ereg ("^abc", $string);
/* "abc" が $string の最初にある場合に true を返す */
 
ereg ("abc$", $string);
/* "abc"; が $string の最後にある場合に true を返す */
 
eregi ("(ozilla.[23]|MSIE.3)", $HTTP_USER_AGENT);  
/* クライアントブラウザがNetscape 2, 3またはMSIE 3である場合にtrue を返す */
 
ereg ("([[:alnum:]]+) ([[:alnum:]]+) ([[:alnum:]]+)", $string,$regs); 
/* 空白で区切られた3つ単語を
$regs[1], $regs[2],$regs[3]に代入する */
 
$string = ereg_replace ("^", "<br />", $string); 
/* <br /> タグを $string の先頭に挿入する */
  
$string = ereg_replace ("$", "<br />", $string); 
/* <br /> タグを $string の最後に挿入する */
 
$string = ereg_replace ("\n", "", $string);
/* $string の改行文字を全て取り除く */
]]>
      </programlisting>
     </example>
    </para>
   </section>

   <section id="regex.seealso">
    &reftitle.seealso;
    <para>
     Perl互換の構文を有する正規表現については、
     <link linkend="ref.pcre">PCRE関数</link>を参照して下さい。
     簡単なシェル形式のワイルドカードパターンマッチングが
     <function>fnmatch</function>で提供されています。
    </para>
   </section>
  </partintro>

&reference.regex.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

