<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.3 Maintainer: takagi Status: ready -->
<refentry xml:id="function.maxdb-fetch-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>maxdb_fetch_array</refname>
  <refname>result->fetch_array</refname>
  <refpurpose>結果の行を連想配列、数値添字配列あるいはその両方で取得する</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <para>手続き型</para>
  <methodsynopsis>
   <type>mixed</type><methodname>maxdb_fetch_array</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice='opt'><type>int</type><parameter>resulttype</parameter></methodparam>
  </methodsynopsis>
  <para>オブジェクト指向型 (メソッド)</para>
  <classsynopsis>
   <ooclass><classname>result</classname></ooclass>
   <methodsynopsis>
    <type>mixed</type>
    <methodname>fetch_array</methodname>
    <methodparam choice='opt'><type>int</type><parameter>resulttype</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   取得した行に対応する配列を返します。
   <parameter>result</parameter> が表す結果セットに行がもう存在しない場合には
   &null; を返します。
  </para>
  <para>
   <function>maxdb_fetch_array</function> は
   <function>maxdb_fetch_row</function> 関数を拡張したものです。
   データを数値添字の配列に保存することに加え、
   <function>maxdb_fetch_array</function> 関数は結果を連想配列でも保存します。
   その際は、結果セットのフィールド名をキーとして使用します。
  </para>
  &database.field-case;
  &database.fetch-null;
  <para>
   結果の中に同名のカラムが複数存在する場合は、最後のカラムが優先され、
   その前に現れたデータを上書きします。同名の複数のカラムにアクセスするには、
   数値添字形式の配列を使用します。
  </para>
  <para>
   オプションの 2 番目の引数 <parameter>resulttype</parameter> は、
   行データからどのような形式の配列を作成するかを指定する定数です。
   このパラメータに指定可能な値は、
   MAXDB_ASSOC、MAXDB_ASSOC_UPPER、MAXDB_ASSOC_LOWER、MAXDB_NUM あるいは MAXDB_BOTH
   のいずれかです。デフォルトでは <function>maxdb_fetch_array</function>
   関数は MAXDB_BOTH を使用します。これは、このパラメータに
   MAXDB_NUM および MAXDB_ASSOC を指定したのと同じ動作をします。
  </para>
  <para>
   定数 MAXDB_ASSOC を使用すると、この関数は
   <function>maxdb_fetch_assoc</function> と同じように動作します。一方、MAXDB_NUM
   の場合は <function>maxdb_fetch_row</function> と同じ動作となります。
   最後のオプション MAXDB_BOTH は、両方の属性をひとつの配列に含めます。
  </para>
  <para>
   定数 MAXDB_ASSOC_UPPER を使用すると、この関数の動作は
   MAXDB_ASSOC を使用した場合とほぼ同じになります。ただ、
   配列のインデックスが、フィールド名を大文字にしたものになるという点が違います。
  </para>
  <para>
   定数 MAXDB_ASSOC_LOWER を使用すると、この関数の動作は
   MAXDB_ASSOC を使用した場合とほぼ同じになります。ただ、
   配列のインデックスが、フィールド名を小文字にしたものになるという点が違います。
  </para>
 </refsect1>
 <refsect1>
  <title>返り値</title>
  <para>
   取得した行に対応する配列、あるいは結果セットに行がもうない場合に &null;
   を返します。
  </para>
 </refsect1>
 <refsect1>
  <title>参考</title>
  <para>
   <function>maxdb_fetch_assoc</function>,
   <function>maxdb_fetch_row</function>,
   <function>maxdb_fetch_resource</function>.
  </para>
 </refsect1>
 <refsect1>
  <title>例</title>
  <example>
   <title>オブジェクト指向型</title>
   <programlisting role="php">
<![CDATA[
<?php
$maxdb = new maxdb("localhost", "MONA", "RED", "DEMODB");

/* 接続を調べます */
if (maxdb_connect_errno()) {
   printf("接続に失敗しました: %s\n", maxdb_connect_error());
   exit();
}
 
$query = "SELECT name, state FROM hotel.city ORDER by zip";
$result = $maxdb->query($query);

/* 数値添字の配列 */
$row = $result->fetch_array(MAXDB_NUM);
printf ("%s (%s)\n", $row[0], $row[1]);  

/* 連想配列 */
$row = $result->fetch_array(MAXDB_ASSOC);
printf ("%s (%s)\n", $row["NAME"], $row["STATE"]);  

/* 連想配列および数値添字の配列 */
$row = $result->fetch_array(MAXDB_BOTH);
printf ("%s (%s)\n", $row[0], $row["STATE"]);  

/* 結果セットを開放します */
$result->close();

/* 接続を閉じます */
$maxdb->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>手続き型</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");

/* 接続を調べます */
if (maxdb_connect_errno()) {
   printf("接続に失敗しました: %s\n", maxdb_connect_error());
   exit();
}

$query = "SELECT name, state FROM hotel.city ORDER by zip";
$result = maxdb_query($link, $query);

/* 数値添字の配列 */
$row = maxdb_fetch_array($result, MAXDB_NUM);
printf ("%s (%s)\n", $row[0], $row[1]);  

/* 連想配列 */
$row = maxdb_fetch_array($result, MAXDB_ASSOC);
printf ("%s (%s)\n", $row["NAME"], $row["STATE"]);  

/* 連想配列および数値添字の配列 */
$row = maxdb_fetch_array($result, MAXDB_BOTH);
printf ("%s (%s)\n", $row[0], $row["STATE"]);  

/* 結果セットを開放します */
maxdb_free_result($result);

/* 接続を閉じます */
maxdb_close($link);
?>
]]>
   </programlisting>
  </example>
  <para>
   上の例の出力は、たとえば以下のようになります。
  </para>
  <screen>
<![CDATA[
New York (NY)
New York (NY)
Long Island (NY)
]]>
  </screen>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
