<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.7 Maintainer: takagi Status: ready -->
<refentry xml:id="function.maxdb-stmt-bind-param" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>maxdb_stmt_bind_param</refname>
  <refname>stmt->bind_param</refname>
  <refpurpose>プリペアドステートメントに、変数をパラメータとしてバインドする</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <para>手続き型</para>
  <methodsynopsis>
   <type>bool</type><methodname>maxdb_stmt_bind_param</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam><type>string</type><parameter>types</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">var1</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
  </methodsynopsis>
  <para>オブジェクト指向型 (メソッド)</para>
  <classsynopsis>
   <ooclass><classname>stmt</classname></ooclass>
   <methodsynopsis>
    <type>bool</type>
     <methodname>bind_param</methodname>
    <methodparam><type>string</type><parameter>types</parameter></methodparam>
    <methodparam><type>mixed</type><parameter role="reference">var1</parameter></methodparam>
    <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>手続き型 (拡張構文)</para>
  <methodsynopsis>
   <type>bool</type><methodname>maxdb_stmt_bind_param</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam><type>string</type><parameter>types</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">var</parameter></methodparam>
  </methodsynopsis>
  <para>オブジェクト指向型 (メソッド) (拡張構文)</para>
  <classsynopsis>
   <ooclass><classname>stmt</classname></ooclass>
   <methodsynopsis>
    <type>bool</type>
     <methodname>bind_param</methodname>
    <methodparam><type>string</type><parameter>types</parameter></methodparam>
    <methodparam><type>array</type><parameter role="reference">var</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   <function>maxdb_stmt_bind_param</function> は、
   <function>maxdb_prepare</function> に渡された SQL 文のパラメータマーカに、
   変数をバインドするために使用されます。
   文字列 <parameter>types</parameter> にはひとつあるいは複数の文字が含まれ、
   これによって対応するバインド変数の型を指定します。
  </para>
  <para>
   <function>maxdb_stmt_bind_param</function> の拡張構文では、
   パラメータを、PHP の変数リストではなくひとつの配列として渡せるようになります。
   <function>maxdb_stmt_bind_param</function>
   のコール前に配列変数が使用されていない場合は、空の配列として初期化されます。
   <function>maxdb_stmt_bind_param</function> の拡張構文の使用法については、
   例を参照ください。
  </para>
  <para>
   SELECT INTO SQL 文の変数は、<function>maxdb_stmt_bind_param</function>
   でバインドすることも可能です。データベースプロシージャのパラメータについては
   <function>maxdb_stmt_bind_param</function> を使用してバインドできます。
   このような場合の <function>maxdb_stmt_bind_param</function>
   の使用法については、例を参照ください。
  </para>
  <para>
   SQL 文の INTO 変数にバインドする変数が事前に使用されていた場合は、
   その変数の内容は SELECT INTO 文のデータで上書きされます。
   <function>maxdb_stmt_bind_param</function> をコールした後は、
   この変数への参照は無効になります。
  </para>
  <para>
   データベースプロシージャの INOUT パラメータの場合、
   バインドされた INOUT 変数の内容は、データベースプロシージャの出力で
   上書きされます。
   <function>maxdb_stmt_bind_param</function> をコールした後は、
   この変数への参照は無効になります。
  </para>
  <para>
   <table>
    <title>型指定文字</title>
    <tgroup cols='2'>
     <thead>
      <row>
       <entry>文字</entry>
       <entry>説明</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>i</entry>
       <entry>対応する変数は integer 型です</entry>
      </row>
      <row>
       <entry>d</entry>
       <entry>対応する変数は double 型です</entry>
      </row>
      <row>
       <entry>s</entry>
       <entry>対応する変数は string 型です</entry>
      </row>
      <row>
       <entry>b</entry>
       <entry>対応する変数は blob で、一括して送信されます</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>
 <refsect1>
  <title>返り値</title>
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1>
 <title>参考</title>
  <para>
   <function>maxdb_stmt_bind_result</function>,
   <function>maxdb_stmt_execute</function>,
   <function>maxdb_stmt_fetch</function>,
   <function>maxdb_prepare</function>,
   <function>maxdb_stmt_send_long_data</function>,
   <function>maxdb_stmt_errno</function>,
   <function>maxdb_stmt_error</function>
  </para>
 </refsect1>
 <refsect1>
  <title>例</title>
  <example>
   <title>オブジェクト指向型</title>
   <programlisting role="php">
<![CDATA[
<?php
$maxdb = new maxdb('localhost', 'MONA', 'RED', 'DEMODB');

/* 接続を調べます */
if (maxdb_connect_errno()) {
   printf("接続に失敗しました: %s\n", maxdb_connect_error());
   exit();
}

$maxdb->query ("CREATE TABLE temp.mycity LIKE hotel.city");
$maxdb->query ("INSERT INTO temp.mycity SELECT * FROM hotel.city");

$stmt = $maxdb->prepare("INSERT INTO temp.mycity VALUES (?, ?, ?)");
$stmt->bind_param('sss', $zip, $name, $state);

$zip = '11111';
$name = 'Georgetown';
$state = 'NY';

/* プリペアドステートメントを実行します */
$stmt->execute();

printf("%d 行挿入されました。\n", $stmt->affected_rows);

/* ステートメントおよび接続を閉じます */
$stmt->close();

/* CountryLanguage テーブルを掃除します */
$maxdb->query("DELETE FROM temp.mycity WHERE name='Georgetown'");
printf("%d 行削除されました。\n", $maxdb->affected_rows);

/* 接続を閉じます */
$maxdb->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>手続き型</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");

/* 接続を調べます */
if (!$link) {
   printf("接続に失敗しました: %s\n", maxdb_connect_error());
   exit();
}

maxdb_query ($link, "CREATE TABLE temp.mycity LIKE hotel.city");
maxdb_query ($link, "INSERT INTO temp.mycity SELECT * FROM hotel.city");

$stmt = maxdb_prepare($link, "INSERT INTO temp.mycity VALUES (?, ?, ?)");
maxdb_stmt_bind_param($stmt, 'sss', $zip, $name, $state);

$zip = '11111';
$name = 'Georgetown';
$state = 'NY';

/* プリペアドステートメントを実行します */
maxdb_stmt_execute($stmt);

printf("%d 行挿入されました。\n", maxdb_stmt_affected_rows($stmt));

/* ステートメントおよび接続を閉じます */
maxdb_stmt_close($stmt);

/* CountryLanguage テーブルを掃除します */
maxdb_query($link, "DELETE FROM temp.mycity WHERE name='Georgetown'");
printf("%d 行削除されました。\n", maxdb_affected_rows($link));

/* 接続を閉じます */
maxdb_close($link);
?>
]]>
   </programlisting>
  </example>
  <para>
   上の例の出力は、たとえば以下のようになります。
  </para>
  <screen>
<![CDATA[
1 行挿入されました。
1 行削除されました。
]]>
  </screen>
  <example>
   <title>手続き型 (SELECT INTO)</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");

/* 接続を調べます */
if (!$link) {
   printf("接続に失敗しました: %s\n", maxdb_connect_error());
   exit();
}
   
/* SQL クエリを実行します */
$stmt = maxdb_prepare ($link, "SELECT price INTO ? FROM hotel.room where hno = ? and type = ?");
if (!$stmt) {
  printf ("Prepare failed: %s\n", maxdb_error($link));
}

$hno = "50";
$rtype = "suite";

maxdb_stmt_bind_param($stmt, 'dss', $price, $hno, $rtype);
maxdb_stmt_execute($stmt);

printf ("%f\n", $price);

maxdb_stmt_close ($stmt);
?>
]]>
   </programlisting>
  </example>
  <para>
   上の例の出力は、たとえば以下のようになります。
  </para>
  <screen>
<![CDATA[
21.600000
]]>
  </screen>
  <example>
   <title>手続き型 (DB プロシージャ)</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");

/* 接続を調べます */
if (!$link) {
   printf("接続に失敗しました: %s\n", maxdb_connect_error());
   exit();
}

maxdb_report (MAXDB_REPORT_OFF);
maxdb_query($link,"DROP DBPROC test_proc");
maxdb_report (MAXDB_REPORT_ERROR);

$query = "create dbproc test_proc (INOUT e_text char(72)) AS select * from SYSDBA.DUAL; fetch into :e_text;";

maxdb_query($link, $query);

/* SQL クエリを実行します */
$stmt = maxdb_prepare ($link, "CALL test_proc (?)");
if (!$stmt) {
  printf ("Prepare failed: %s\n", maxdb_error($link));
}

maxdb_stmt_bind_param($stmt, 's', $result);
maxdb_stmt_execute($stmt);

printf ("%s\n", $result);

maxdb_stmt_close ($stmt);
?>
]]>
   </programlisting>
  </example>
  <para>
   上の例の出力は、たとえば以下のようになります。
  </para>
  <screen>
<![CDATA[
a
]]>
  </screen>
  <example>
   <title>オブジェクト指向型 (拡張構文)</title>
   <programlisting role="php">
<![CDATA[
<?php
$maxdb = new maxdb('localhost', 'MONA', 'RED', 'DEMODB');

/* 接続を調べます */
if (maxdb_connect_errno()) {
   printf("接続に失敗しました: %s\n", maxdb_connect_error());
   exit();
}

$maxdb->query ("CREATE TABLE temp.mycity LIKE hotel.city");
$maxdb->query ("INSERT INTO temp.mycity SELECT * FROM hotel.city");

$stmt = $maxdb->prepare("INSERT INTO temp.mycity VALUES (?, ?, ?)");

$arr = array();

$stmt->bind_param('iss', $arr);

$arr[0] = 11111;
$arr[1] = 'Georgetown';
$arr[2] = 'NY';

/* プリペアドステートメントを実行します */
$stmt->execute();

printf("%d 行挿入されました。\n", maxdb_stmt_affected_rows($stmt));

$arr[0] = 22222;
$arr[1] = 'New Orleans';
$arr[2] = 'LA';

/* プリペアドステートメントを実行します */
$stmt->execute();

printf("%d 行挿入されました。\n", $stmt->affected_rows);

/* ステートメントおよび接続を閉じます */
$stmt->close();

$result = $maxdb->query("SELECT * from temp.mycity WHERE zip = '11111' OR zip = '22222'");
if ($result) {
  while ($row = $result->fetch_row()) {
    printf ("%s %s %s\n", $row[0], $row[1], $row[2]);
  }
}

/* CountryLanguage テーブルを掃除します */
$maxdb->query("DELETE FROM temp.mycity WHERE name='Georgetown'");
$maxdb->query("DELETE FROM temp.mycity WHERE name='New Orleans'");
printf("%d 行削除されました。\n", $maxdb->affected_rows);

/* 接続を閉じます */
$maxdb->close();
?>
]]>
   </programlisting>
  </example>
  <para>
   上の例の出力は、たとえば以下のようになります。
  </para>
  <screen>
<![CDATA[
1 行挿入されました。
1 行挿入されました。
11111 Georgetown NY
22222 New Orleans LA
2 行削除されました。
]]>
  </screen>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
