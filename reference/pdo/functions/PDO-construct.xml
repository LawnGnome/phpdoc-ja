<?xml version='1.0' encoding='utf-8'?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.7 Maintainer: hirokawa Status: ready -->
<refentry id="function.PDO-construct">
 <refnamediv>
  <refname>PDO::__construct</refname>
  <refpurpose>
   データベースへの接続を表すPDOインスタンスを生成する
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>PDO</type><methodname>PDO::__construct</methodname>
   <methodparam><type>string</type><parameter>dsn</parameter></methodparam>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>driver_opts</parameter></methodparam>
  </methodsynopsis>
  &warn.experimental.func;
  <para>
   指定されたデータベースへの接続を表すPDOインスタンスを生成します。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry><term>dsn</term>
     <listitem>
      <para>
       <parameter>dsn</parameter> パラメータは、データベースへの接続を生成する
       ために必要な引数を指定する方法として、3種類の方法をサポートします。
       <variablelist>
        <varlistentry><term>ドライバ呼び出し</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> は、PDOドライバ名の後にコロンを付け、
           各PDOドライバに依存した接続構文が続く構成となります。
           例えば、<userinput>'odbc:DSN=SAMPLE;UID=db2inst1;PWD=ibmdb2'</userinput>
           はあうODBCデータベースの PDO_ODBC 接続を生成します。一方、
           <userinput>'mysql:host=127.0.0.1;dbname=testdb'</userinput> は、
           MySQLデータベースへのPDO_MYSQL接続を生成します。
          </para>
         </listitem>
        </varlistentry>
        <varlistentry><term>URI呼び出し</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> は、<userinput>uri:</userinput>の後に
           DSN文字列を含むファイルの位置を定義するURIが続く形式となります。
           このURIには、ローカルファイルまたはリモートURLを指定することができます。
          </para>
         </listitem>
        </varlistentry>
        <varlistentry><term>エイリアス</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> は、DSN文字列を定義する
           &php.ini;の<literal>pdo.dsn.<parameter>name</parameter></literal>へ
           マップする名前<parameter>name</parameter> からなります。
           <parameter>name</parameter> にはコロンを含めることはできません。
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>username</term>
     <listitem>
      <para>
       ユーザ名。DSN文字列で必要とされる場合に指定。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>password</term>
     <listitem>
      <para>
       パスワード。DSN文字列で必要とされる場合に指定。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>driver_opts</term>
     <listitem>
      <para>
       ドライバ固有の接続オプションを指定するキー =&gt; 値の配列。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功時にPDOオブジェクトを返します。
  </para>
 </refsect1>
 
 <refsect1 role="exceptions">
  &reftitle.exceptions;
  <para>
   <function>PDO::construct</function> は、
   指定されたデータベースへの接続に失敗した場合、
   PDOException を投げます。
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>ドライバ呼び出しによりPDOインスタンスを生成する</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Connect to an ODBC database using driver invocation */

$dsn = 'mysql:dbname=testdb;host=127.0.0.1';
$user = 'dbuser';
$password = 'dbpass';
try {
    $dbh = new PDO($dsn, $user, $password);
}
catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}
?>
]]>
    </programlisting>
   </example>
   <example><title>URI呼び出しによりPDOインスタンスを生成する</title>
    <para>
     以下の例では、ファイル <filename>/usr/local/dbconnect</filename> が存在し、
     PHPがこのファイルを読み込む権限を有していることを仮定します。
     このファイルには、 PDO_ODBCによりDB2データベースに接続するためのPDO DSNが
     含まれています。
    </para>
    <programlisting>
<![CDATA[
odbc:DSN=SAMPLE;UID=db2inst1;PWD=password
]]>
    </programlisting>
    <para>
     これにより、PHPスクリプトでは、単に<literal>uri:</literal> パラメータを渡し、
     ファイルのURIを示すだけでデータベース接続を作成することができるようになります。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Connect to an ODBC database using driver invocation */

$dsn = 'uri:file:///usr/local/dbconnect';
$user = '';
$password = '';
try {
    $dbh = new PDO($dsn, $user, $password);
}
catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}
?>
]]>
    </programlisting>
   </example>
   <example><title>エイリアスによりPDOインスタンスを生成する</title>
    <para>
     以下の例では、&php.ini; にエイリアス<literal>mydb</literal>のみで
     MySQLデータベースに接続できるようにするための以下のエントリが含まれることを
     仮定します。
     <screen>pdo.dsn.mydb=mysql:dbname=testdb;host=127.0.0.1</screen>
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Connect to an ODBC database using an alias */

$dsn = 'mydb';
$user = '';
$password = '';
try {
    $dbh = new PDO($dsn, $user, $password);
}
catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
