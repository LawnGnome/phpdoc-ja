<?xml version="1.0" encoding="utf-8" ?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.9 Maintainer: shimooka Status: ready -->
<refentry id="function.PDO-quote">
 <refnamediv>
  <refname>PDO->quote()</refname>
  <refpurpose>
   クエリ用の文字列をクオートする
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>PDO</classname></ooclass>
   <methodsynopsis>
    <type>string</type><methodname>quote</methodname>
    <methodparam><type>string</type><parameter>string</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>parameter_type</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>

  <para>
   <xref linkend="function.PDO-quote" /> は入力文字列のまわりに引用符を付け
   (必要であれば) 、
   入力文字列にあるシングルクオートをエスケープします。その場合、
   構成しているドライバに適したクオート形式が使用されます。
  </para>
  <para>
   この関数を SQL の構築に使用する場合、
   SQL ステートメントにユーザーの入力値を埋め込むための
   <xref linkend="function.PDO-quote" /> を使用する代わりに、
   バインドパラメータを用いて SQL を準備するための
   <xref linkend="function.PDO-prepare" />
   を使用することが<emphasis>強く</emphasis>推奨されます。
   バインドパラメータを用いるプリペアドステートメントは、
   補間されたクエリした場合に比べ、
   移植性や利便性に優れ、SQL インジェクションに対する免疫力を持つだけでなく
   しばしばより高速で、サーバやクライアント側でコンパイル済みの形式でクエリを
   キャッシュする事が可能です。
  </para>
  <para>
   全ての PDO ドライバがこのメソッドを実装しているわけではありません
   (たとえば PDO_ODBC などの例があります)。
   代わりにプリペアドステートメントを使用することを検討してください。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
      <listitem>
       <para>
        クオートされる文字列を指定します。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>parameter_type</parameter></term>
      <listitem>
       <para>
        クオートするスタイルを変更するため、
        ドライバにデータ型のヒントを提供します。
        デフォルト値は、PDO::PARAM_STR です。
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   理論上安全なクオートされた SQL ステートメントの文字列を返します。
   ドライバがこの方法での引用符付けをサポートしていない場合は
   &false; を返します。
  </para>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>通常の文字列をクオートする</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = new PDO('sqlite:/home/lynn/music.sql3');

/* 単純な文字列 */
$string = 'Nice';
print "Unquoted string: $string\n";
print "Quoted string: " . $conn->quote($string) . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Unquoted string: Nice
Quoted string: 'Nice'
]]>
    </screen>
   </example>
   <example>
    <title>危険な文字列をクオートする</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = new PDO('sqlite:/home/lynn/music.sql3');

/* 危険な文字列 */
$string = 'Naughty \' string';
print "Unquoted string: $string\n";
print "Quoted string:" . $conn->quote($string) . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Unquoted string: Naughty ' string
Quoted string: 'Naughty '' string'
]]>
    </screen>
   </example>
   <example>
    <title>複雑な文字列をクオートする</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = new PDO('sqlite:/home/lynn/music.sql3');

/* 複雑な文字列 */
$string = "Co'mpl''ex \"st'\"ring";
print "Unquoted string: $string\n";
print "Quoted string: " . $conn->quote($string) . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Unquoted string: Co'mpl''ex "st'"ring
Quoted string: 'Co''mpl''''ex "st''"ring'
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.PDO-prepare" /></member>
    <member><xref linkend="function.PDOStatement-execute" /></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
