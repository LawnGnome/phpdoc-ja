<?xml version='1.0' encoding='utf-8'?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.7 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry id="function.PDOStatement-fetch">
 <refnamediv>
  <refname>PDOStatement::fetch</refname>
  <refpurpose>
   結果セットから次の行を取得する
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>PDOStatement::fetch</methodname>
   <methodparam choice="opt"><type>int</type><parameter>fetch_style</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>cursor_orientation</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>cursor_offset</parameter></methodparam>
  </methodsynopsis>
  &warn.experimental.func;

  <para>
   PDOStatementオブジェクトに関連付けられた結果セットから1行取得します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>fetch_style</parameter></term>
     <listitem>
      <para>
       次のレコードを呼び出し元に返す方法を制御します。
       この値は、<literal>PDO_FETCH_*</literal> 定数のどれかで、
       <literal>PDO_FETCH_BOTH</literal>がデフォルトです。
       <itemizedlist>
        <listitem><para>
          <literal>PDO_FETCH_ASSOC</literal>: は、結果セットに
          返された際のカラム名で添字を付けた配列を返します。
         </para></listitem>
        <listitem><para>
          <literal>PDO_FETCH_BOTH</literal> (デフォルト):
          結果セットに返された際の
          カラム名とカラム番号で添字を付けた配列を返します。
         </para></listitem>
        <listitem><para>
          <literal>PDO_FETCH_BOUND</literal>:
          &true; を返し、結果セットのカラムの値を
          <function>PDOStatement::bindParam</function>メソッドで
          バインドされたPHP変数に代入します。
         </para></listitem>
        <listitem><para>
          <literal>PDO_FETCH_LAZY</literal>:
          <literal>PDO_FETCH_BOTH</literal> と<literal>PDO_FETCH_OBJ</literal>の
          組合せで、オブジェクト変数名を作成します。
         </para></listitem>
        <listitem><para>
          <literal>PDO_FETCH_OBJ</literal>:
          結果セットに返された際のカラム名と同名のプロパティを有する
          匿名のオブジェクトを返します。
         </para></listitem>
        <listitem><para>
          <literal>PDO_FETCH_NUM</literal>:
          結果セットに返された際の0から始まる
          カラム番号を添字とする配列を返します。
         </para></listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cursor_orientation</parameter></term>
     <listitem>
      <para>
       スクロール可能なカーソルを表すPDOStatementオブジェクトの場合、
       この値により呼び出し側に返される行を定義します。
       この値は、<literal>PDO_FETCH_ORI_*</literal> 定数のどれかと
       する必要があり、
       <literal>PDO_FETCH_ORI_NEXT</literal>がデフォルトとなっています。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       スクロール可能なカーソルを表すPDOStatementオブジェクトの場合で、
       <literal>cursor_orientation</literal>パラメータが
       <literal>PDO_FETCH_ORI_ABS</literal>に設定された場合、この値により
       取得される結果セットの行の絶対位置が指定されます。
      </para>
      <para>
       スクロール可能なカーソルを表すPDOStatementオブジェクトの場合で、
       <literal>cursor_orientation</literal>パラメータが
       <literal>PDO_FETCH_ORI_REL</literal>に設定された場合、この値は、
       <function>PDOStatement::fetch</function> がコールされる前のカーソルの
       位置を基準として取得する行の位置を指定します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>異なる取得方法で行を取得する</title>
    <programlisting role="php">
<![CDATA[
<?php
$sth = $dbh->prepare("SELECT name, colour FROM fruit");
$sth->execute();

/* Exercise PDOStatement::fetch styles */
print("PDO_FETCH_ASSOC: ");
print("Return next row as an array indexed by column name\n");
$result = $sth->fetch(PDO_FETCH_ASSOC);
print_r($result);
print("\n");

print("PDO_FETCH_BOTH: ");
print("Return next row as an array indexed by both column name and number\n");
$result = $sth->fetch(PDO_FETCH_BOTH);
print_r($result);
print("\n");

print("PDO_FETCH_LAZY: ");
print("Return next row as an anonymous object with column names as properties\n");
$result = $sth->fetch(PDO_FETCH_LAZY);
print_r($result);
print("\n");

print("PDO_FETCH_OBJ: ");
print("Return next row as an anonymous object with column names as properties\n");
$result = $sth->fetch(PDO_FETCH_OBJ);
print $result->NAME;
print("\n");
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
PDO_FETCH_ASSOC: Return next row as an array indexed by column name
Array
(
    [NAME] => apple
    [COLOUR] => red
)

PDO_FETCH_BOTH: Return next row as an array indexed by both column name and number
Array
(
    [NAME] => banana
    [0] => banana
    [COLOUR] => yellow
    [1] => yellow
)

PDO_FETCH_LAZY: Return next row as an anonymous object with column names as properties
PDORow Object
(
    [NAME] => orange
    [COLOUR] => orange
)

PDO_FETCH_OBJ: Return next row as an anonymous object with column names as properties
kiwi
]]>
    </screen>
   </example>
   <example><title>スクロール可能なカーソルで行を取得する</title>
    <programlisting role="php">
<![CDATA[
<?php
function readDataForwards($dbh) {
  $sql = 'SELECT hand, won, bet FROM mynumbers ORDER BY BET';
  try {
    $stmt = $dbh->prepare($sql, array(PDO_ATTR_CURSOR, PDO_CURSOR_SCROLL));
    $stmt->execute();
    while ($row = $stmt->fetch(PDO_FETCH_NUM, PDO_FETCH_ORI_NEXT)) {
      $data = $row[0] . "\t" . $row[1] . "\t" . $row[2] . "\n";
      print $data;
    }
    $stmt = null;
  }
  catch (PDOException $e) {
    print $e->getMessage();
  }
}
function readDataBackwards($dbh) {
  $sql = 'SELECT hand, won, bet FROM mynumbers ORDER BY bet';
  try {
    $stmt = $dbh->prepare($sql, array(PDO_ATTR_CURSOR, PDO_CURSOR_SCROLL));
    $stmt->execute();
    $row = $stmt->fetch(PDO_FETCH_NUM, PDO_FETCH_ORI_LAST);
    do {
      $data = $row[0] . "\t" . $row[1] . "\t" . $row[2] . "\n";
      print $data;
    } while ($row = $stmt->fetch(PDO_FETCH_NUM, PDO_FETCH_ORI_PRIOR));
    $stmt = null;
  }
  catch (PDOException $e) {
    print $e->getMessage();
  }
}

print "Reading forwards:\n";
readDataForwards($conn);

print "Reading backwards:\n";
readDataBackwards($conn);
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
Reading forwards:
21    10    5
16    0     5
19    20    10

Reading backwards:
19    20    10
16    0     5
21    10    5
]]>
    </screen>
   </example>

  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::query</function></member>
    <member><function>PDOStatement::fetchAll</function></member>
    <member><function>PDOStatement::fetchColumn</function></member>
    <member><function>PDOStatement::prepare</function></member>
    <member><function>PDOStatement::setFetchMode</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
