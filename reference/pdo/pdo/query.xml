<?xml version="1.0" encoding="utf-8" ?>
<!-- $Revision$ -->
<!-- EN-Revision: 283830 Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa,shimooka -->
<refentry xml:id="pdo.query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::query</refname>
  <refpurpose>
   SQL ステートメントを実行し、結果セットを PDOStatement オブジェクトとして返す
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis>
   <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>PDO::FETCH_COLUMN</parameter></methodparam>
   <methodparam><type>int</type><parameter>colno</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis>
   <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>PDO::FETCH_CLASS</parameter></methodparam>
   <methodparam><type>string</type><parameter>classname</parameter></methodparam>
   <methodparam><type>array</type><parameter>ctorargs</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis>
   <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>PDO::FETCH_INTO</parameter></methodparam>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>PDO::query</function> は、一回の関数コールの中で
   SQL ステートメントを実行し、このステートメントにより返された
   結果セット (ある場合) を PDOStatement オブジェクトとして返します。
  </para>
  <para>
   複数回発行する必要があるステートメントの場合、
   <function>PDO::prepare</function> で PDOStatement ステートメントを準備し、
   <function>PDOStatement::execute</function> でそのステートメントを
   複数回発行する方がより良いパフォーマンスを得られると実感するでしょう。
  </para>
  <para>
   <function>PDO::query</function> を次にコールする前に
   結果セット内の全てのデータを取得しない場合、そのコールは失敗します。
   <function>PDOStatement::closeCursor</function> をコールし、
   次に <function>PDO::query</function> をコールする前に
   PDOStatement オブジェクトに関連付けられたリソースを解放してください。
  </para>

  <note>
   <para>
    この関数はパラメータをひとつだけしかとらないと記述されていますが、
    追加のパラメータを渡すことも可能です。これらのパラメータは、
    返される結果のオブジェクトに対して
    <function>PDOStatement::setFetchMode</function>
    をコールするのと同じような扱いになります。
   </para>
  </note>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
      <listitem>
       <para>
        準備、発行する SQL ステートメント。
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    <function>PDO::query</function> は、PDOStatement オブジェクトを返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>PDO::query の例</title>
    <para>
     <function>PDO::query</function> の優れた機能は、
     実行に成功したSELECTステートメントにより返されたレコードセットで
     反復処理が可能であることです。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function getFruit($conn) {
    $sql = 'SELECT name, colour, calories FROM fruit ORDER BY name';
    foreach ($conn->query($sql) as $row) {
        print $row['NAME'] . "\t";
        print $row['COLOUR'] . "\t";
        print $row['CALORIES'] . "\n";
    }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
apple   red     150
banana  yellow  250
kiwi    brown   75
lemon   yellow  25
orange  orange  300
pear    green   150
watermelon      pink    90
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::exec</function></member>
    <member><function>PDO::prepare</function></member>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
