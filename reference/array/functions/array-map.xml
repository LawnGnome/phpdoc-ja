<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/array.xml, last change in rev 1.26 -->
<!-- last change to 'array-map' in en/ tree in rev 1.62 -->
  <refentry id="function.array-map">
   <refnamediv>
    <refname>array_map</refname>
    <refpurpose>
     指定した配列の要素にコールバック関数を適用する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>array_map</methodname>
      <methodparam><type>mixed</type><parameter>callback</parameter></methodparam>
      <methodparam><type>array</type><parameter>arr1</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>arr2...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_map</function> は、<parameter>arr1</parameter>の
     各要素にコールバック関数を適用した後、その全ての要素を含む要素を
     返します。コールバック関数が受け付けるパラメータの数は、
     <function>array_map</function>に渡される配列の数に一致している必
     要があります。
    </para>
    <para>
     <example>
      <title><function>array_map</function> の例</title>
      <programlisting role="php">
<![CDATA[
function cube($n) {
  	return $n*$n*$n;
}

$a = array(1, 2, 3, 4, 5);
$b = array_map("cube", $a);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     この例により <varname>$b</varname>には、<literal>array (1, 8, 27,
     64, 125);</literal>が代入されます。
    </para>
    <para>
     <example>
      <title><function>array_map</function> - より多くの配列を使用</title>
      <programlisting role="php">
<![CDATA[
function show_Spanish($n, $m) {
  	return "The number $n is called $m in Spanish";
}

function map_Spanish($n, $m) {
   return array ($n => $m);
}

$a = array(1, 2, 3, 4, 5);
$b = array("uno", "dos", "tres", "cuatro", "cinco");

$c = array_map("show_Spanish", $a, $b);

print_r($c);

// 出力:
// Array
// (
//     [0] => The number 1 is called uno in Spanish
//     [1] => The number 2 is called dos in Spanish
//     [2] => The number 3 is called tres in Spanish
//     [3] => The number 4 is called cuatro in Spanish
//     [4] => The number 5 is called cinco in Spanish
// )

$d = array_map("map_Spanish", $a , $b);

print_r($d);

// 出力:
// Array
// (
//     [0] => Array
//         (
//             [1] => uno
//         )
// 
//     [1] => Array
//         (
//             [2] => dos
//         )
// 
//     [2] => Array
//         (
//             [3] => tres
//         )
// 
//     [3] => Array
//         (
//             [4] => cuatro
//         )
// 
//     [4] => Array
//         (
//             [5] => cinco
//         )
// 
// )
]]>
      </programlisting>
     </example>
    </para>
    <para>
     通常、二つ以上の配列を使用する場合、それらの長さは等しい必要があ
     ります。これは、コールバック関数が対応する要素に対して並行して適
     用されるためです。配列の長さが等しくない場合、最も短い配列は空の
     要素で拡張されます。
    </para>
    <para>
     この関数の面白い使用方法として、配列の配列を構築するというものが
     あります。これは、コールバック関数の名前として
     &null;を使用することにより、簡単に実行できるもの
     です。
    </para>
    <para>
     <example>
      <title>配列の配列を作成する</title>
      <programlisting role="php">
<![CDATA[
$a = array(1, 2, 3, 4, 5);
$b = array("one", "two", "three", "four", "five");
$c = array("uno", "dos", "tres", "cuatro", "cinco");

$d = array_map(null, $a, $b, $c);
print_r($d);

// 出力:
// Array
// (
//     [0] => Array
//         (
//             [0] => 1
//             [1] => one
//             [2] => uno
//         )
// 
//     [1] => Array
//         (
//             [0] => 2
//             [1] => two
//             [2] => dos
//         )
// 
//     [2] => Array
//         (
//             [0] => 3
//             [1] => three
//             [2] => tres
//         )
// 
//     [3] => Array
//         (
//             [0] => 4
//             [1] => four
//             [2] => cuatro
//         )
// 
//     [4] => Array
//         (
//             [0] => 5
//             [1] => five
//             [2] => cinco
//         )
// 
// )
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <function>array_filter</function>,
     <function>array_reduce</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
