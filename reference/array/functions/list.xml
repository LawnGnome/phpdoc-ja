<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- sync: 1.8 -->
  <refentry id="function.list">
   <refnamediv>
    <refname>list</refname>
    <refpurpose>
     配列と同様の形式で、複数の変数への代入を行います
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>void</type><methodname>list</methodname>
      <methodparam rep="repeat"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array</function> と同様に、この関数は実際には関数
     ではなく言語の構成要素です。<function>list</function>は、
     単一の操作で一連の変数に値を割り当てるために使われます。
    </para>
    <note>
     <para>
      <function>list</function>は数値添字の配列のみを生成します。
      添字はゼロから始まります。
     </para>
    </note>
    <para>
     <example>
      <title><function>list</function>の例</title>
      <programlisting role="php">
<![CDATA[
<?php

$info = array('coffee', 'brown', 'caffeine');

// Listing all the variables
list($drink, $color, $power) = $info;
print "$drink is $color and $power makes it special.\n";

// Listing some of them
list($drink, , $power) = $info;
print "$drink has $power.\n";

// Or let's skip to only the third one
list( , , $power) = $info;
print "I need $power!\n";

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title><function>list</function>の使用法の例</title>     
      <programlisting role="php">
<![CDATA[
<table>
 <tr>
  <th>社員氏名</th>
  <th>給与</th>
 </tr>

<?php

$result = mysql_query ("SELECT id, name, salary FROM employees",$conn);
while (list ($id, $name, $salary) = mysql_fetch_row ($result)) {
    print (" <tr>\n".
           "  <td><a href=\"info.php?id=$id\">$name</a></td>\n".
           "  <td>$salary</td>\n".
           " </tr>\n");
}

?>

</table>
]]>
      </programlisting>
     </example>
    </para>
    <warning>
     <para>
      <function>list</function> assigns the values starting with the right-most
      parameter. If you are using plain variables, you don't have to worry
      about this. But if you are using arrays with indices you usually expect
      the order of the indices in the array the same you wrote in the
      <function>list</function> from left to right; which it isn't. It's
      assigned in the reverse order.
     </para>
    </warning>
    <para>
     <example>
      <title>配列の添字を使用した<function>list</function>の例</title>
      <programlisting role="php">
<![CDATA[
<?php

$info = array('coffee', 'brown', 'caffeine');

list($a[0], $a[1], $a[2]) = $info;

var_dump($a);

?>
]]>
      </programlisting>
      <para>
       次のような出力になります(<function>list</function>の文法に書かれた
       順番と、要素の順番の違いに注意):
      </para>
      <screen>
<![CDATA[
array(3) {
  [2]=>
  string(8) "caffeine"
  [1]=>
  string(5) "brown"
  [0]=>
  string(6) "coffee"
}
]]>
      </screen>
     </example>
    </para>
    <para>
     <function>each</function>, <function>array</function>, 
     <function>extract</function>も参照してください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
