<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.17 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry id="function.range">
 <refnamediv>
  <refname>range</refname>
  <refpurpose>
   ある範囲の整数を有する配列を作成する
  </refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>array</type><methodname>range</methodname>
   <methodparam><type>mixed</type><parameter>low</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>high</parameter></methodparam>
   <methodparam choice="opt"><type>number</type><parameter>step</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>range</function> は、<parameter>low</parameter> から
   <parameter>high</parameter> までの整数の配列を返します。
   low > high の場合、順番は high から low となります。
  </para>
  <note>
   <title>新しい引数</title>
   <simpara>
    オプションの引数 <parameter>step</parameter> が PHP 5.0.0 で追加されました。
   </simpara>
  </note>
  <para>
   <parameter>step</parameter> が指定されている場合、それは
   要素毎の増加数となります。<parameter>step</parameter>
   は正の数でなければなりません。デフォルトは 1 です。
  </para>
  <para>
   <example>
    <title><function>range</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
// array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
foreach (range(0, 12) as $number) {
    echo $number;
}

// step 引数は PHP 5.0.0 以降で使用できます
// array(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100)
foreach (range(0, 100, 10) as $number) {
    echo $number;
}

// 文字列シーケンスは PHP 4.1.0 以降で使用できます
// array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i');
foreach (range('a', 'i') as $letter) {
    echo $letter;
}
// array('c', 'b', 'a');
foreach (range('c', 'a') as $letter) {
    echo $letter;
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <para>
    4.1.0 より前のバージョンでは、<function>range</function> 関数は、
    昇順の整数配列のみを生成しました。
    文字シーケンス及び降順の配列のサポートが 4.1.0 で追加されました。
    文字のシーケンスは一文字のみに限定されます。それより長い文字が指定された場合は、
    最初の文字のみが使用されます。
   </para>
  </note>
  <caution>
   <para>
    PHP 4.1.0 から 4.3.2 までは、<function>range</function>
    は数値文字を文字 (string) として認識し、数値 (integer) としては認識しません。
    その代わり、文字列シーケンスが使用されます。例えば、
    <literal>"4242"</literal> は <literal>"4"</literal> として扱われます。
   </para>
  </caution>
  <para>
   <function>shuffle</function>、
   <function>array_fill</function> および
   <link linkend="control-structures.foreach">foreach</link>
   も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
