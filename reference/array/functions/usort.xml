<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'usort' in en/ tree in rev 1.2 -->
  <refentry id="function.usort">
   <refnamediv>
    <refname>usort</refname>
    <refpurpose>
     ユーザー定義の比較関数により値で配列をソートします
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>void</type><methodname>usort</methodname>
      <methodparam><type>array</type><parameter>array</parameter></methodparam>
      <methodparam><type>string</type><parameter>cmp_function</parameter></methodparam>
     </methodsynopsis>
    <para>
     この関数は、ユーザー定義の比較関数により配列をその値でソートします。
     ソートしたい配列を複雑な基準でソートする必要がある場合、
     この関数を使用するべきです。
    </para>
    <para>
     比較関数は、最初の引数が2番目の引数より小さいか、等しいか、大きい
     場合に、それぞれゼロ未満、ゼロに等しい、ゼロより大きい整数を返す
     必要があります。2つのメンバーの比較結果が等しいとなった場合、
     ソートされた配列の順番は定義されません。
    </para>
    <para>
     比較関数としてあるオブジェクトのメンバー関数を使用することも可能です。
     以下の例3を参照下さい。
    </para>
    <para>
     <example>
      <title><function>usort</function>の例</title>
 	<programlisting role="php">
<![CDATA[
function cmp ($a, $b) {   
    if ($a == $b) return 0;
    return ($a > $b) ? -1 : 1;
}

$a = array (3, 2, 5, 6, 1);

usort ($a, "cmp");

while (list ($key, $value) = each ($a)) {
    echo "$key: $value\n";
}
]]>
      </programlisting>
     </example>
    </para>
    <para>
     この例は以下を表示します:
    </para>
   <para>
    <informalexample>
     <programlisting>
<![CDATA[
0: 6
1: 5
2: 3
3: 2
4: 1
]]>
     </programlisting>
    </informalexample>
   </para>
    <note>
     <para>
      もちろん、このような簡単な例では<function>rsort</function>関数
      の方がより適当です。
     </para>
    </note>
    <para>
     <example>
      <title>多次元配列を使用する<function>usort</function>の例</title>
      <programlisting role="php">
<![CDATA[
function cmp ($a, $b) {
    return strcmp($a["fruit"],$b["fruit"]);
} 

$fruits[0]["fruit"] = "lemons";
$fruits[1]["fruit"] = "apples";
$fruits[2]["fruit"] = "grapes";

usort($fruits, "cmp"); 

while (list ($key, $value) = each ($fruits)) {
    echo "\$fruits[$key]: " . $value["fruit"] . "\n";
}
]]>
      </programlisting>
     </example>
    </para>
    <para>
     多次元配列をソートする際には、$a と $b は配列の最初のインデックス
     への参照を保持していまY。
    </para>
    <para>
     この例の出力は以下となります。
    </para>
    <para>
     <informalexample>
      <programlisting>
<![CDATA[
$fruits[0]: apples
$fruits[1]: grapes
$fruits[2]: lemons
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     <example>
      <title>
       <function>usort</function>でオブジェクトのメンバ関数を使用する例
      </title>
      <programlisting role="php">
<![CDATA[
class TestObj {
    var $name;

    function TestObj($name)
    {
        $this->name = $name;
    }

    /* 静的な比較関数: */
    function cmp_obj($a, $b)
    {
        $al = strtolower($a->name);
        $bl = strtolower($b->name);
        if ($al == $bl) return 0;
        return ($al > $bl) ? +1 : -1;
    }
}

$a[] = new TestObj("c");
$a[] = new TestObj("b");
$a[] = new TestObj("d");

uasort($a, array ("TestObj", "cmp_obj"));

foreach ($a as $item) {
    print $item->name."\n";
}
]]>
      </programlisting>
     </example>
    </para>
    <para>
     この例の出力は以下のようになります。
    </para>
    <para>
     <informalexample>
      <programlisting>
b
c
d
      </programlisting>
     </informalexample>
    </para>
    <warning>
     <para>
      (Solarisシステムのような)いくつかのCライブラリに含まれる
      quicksort関数は、比較関数が適当な値を返さない場合にPHPをクラッ
      シュさせる可能性があります。
     </para>
    </warning>
    <para>
     <function>uasort</function>, <function>uksort</function>, 
     <function>sort</function>, <function>asort</function>, 
     <function>arsort</function>, <function>ksort</function>,
     <function>natsort</function>, <function>rsort</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
