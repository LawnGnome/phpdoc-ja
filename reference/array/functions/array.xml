<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.10 Maintainer: hirokawa Status: ready -->
  <refentry id="function.array">
   <refnamediv>
    <refname>array</refname>
    <refpurpose>配列を生成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>array</methodname>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     パラメータの配列を返します。パラメータには、
     <literal>=&gt;</literal>演算子によりインデックスを指定することもできます。
     配列に関するより詳しい情報は<link linkend="language.types.array">配列型</link>
     のセクションをご覧ください。
     <note>
      <para>
       <function>array</function>は、実際にはリテラル配列を表現するための
       言語構成要素であり、通常の関数ではありません。
      </para>
     </note>
    </para>
    <para>
     カンマ区切った構文 "index =&gt; values" は、インデックスと値を定
     義します。インデックスは文字列または数値とすることが可能です。イ
     ンデックスが省略された場合、0から始まる整数インデックスが自動的に
     生成されます。インデックスが整数の場合、次に生成されるインデック
     スは、整数インデックスの最大値 + 1 となります。同じインデックスを
     2度定義した場合、後の定義により最初の定義が上書きされることに注意
     してください。
    </para>
    <para>
     以下の例では、2 次元配列の生成方法、連想配列のキーの指定方法、
     および通常の配列において添字番号をスキップし、それに続く
     要素にアクセスする方法についてご紹介しています。
     <example>
      <title><function>array</function>の例</title>
      <programlisting role="php">
<![CDATA[
<?php
$fruits = array (
    "fruits"  => array ("a"=>"orange", "b"=>"banana", "c"=>"apple"),
    "numbers" => array (1, 2, 3, 4, 5, 6),
    "holes"   => array ("first", 5 => "second", "third")
)
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title><function>array</function> における自動インデックス</title>
      <programlisting role="php">
<![CDATA[
<?php
$array = array( 1, 1, 1, 1,  1, 8=>1,  4=>1, 19, 3=>13);
print_r($array);
?>
]]>
      </programlisting>
      <para>
       この例の出力は次のようになります。
       <screen role="php">
<![CDATA[
Array
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
]]>
       </screen>
      </para>
     </example>
     インデックス '3' は二度定義されており、後の値 13 が保持されること
     に注意してください。インデックス 4 はインデックス 8 の後に定義され、
     次に生成されるインデックス(値は19)は、最大のインデックスが 8 であ
     るため、9となります。
    </para>
    <para>
     次の例は、1から始まる配列を作成します。
     <example>
      <title><function>array</function> で1から始まる配列を作成</title>
      <programlisting role="php">
<![CDATA[
<?php
$firstquarter  = array(1 => 'January', 'February', 'March');
print_r($firstquarter);
?>
]]>
      </programlisting>
      <para>
       この例の出力は次のようになります。
       <screen>
<![CDATA[
Array 
(
    [1] => 'January'
    [2] => 'February'
    [3] => 'March'
)
]]>
       </screen>
      </para>
     </example>
    </para>
    <para>
     <function>array_pad</function>,
     <function>list</function>,
     <link linkend="control-structures.foreach">foreach</link>, 
     <function>range</function>も参照してください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
