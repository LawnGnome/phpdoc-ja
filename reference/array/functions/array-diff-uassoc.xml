<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.14 -->
<!-- EN-Revision: 1.8 Maintainer: takagi Status: ready -->
<refentry id="function.array-diff-uassoc">
 <refnamediv>
  <refname>array_diff_uassoc</refname>
  <refpurpose>
   ユーザが指定したコールバック関数を利用し、
   追加された添字の確認を含めて配列の差を計算する
  </refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>array</type><methodname>array_diff_uassoc</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam><type>array</type><parameter>array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
   <methodparam><type>callback</type><parameter>key_compare_func</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_diff_uassoc</function> は、
   <parameter>array1</parameter> から他の引数の配列の中に現れない全ての値を含む
   <type>array</type> を返します。
   <function>array_diff</function> と異なり、
   キーが比較に使用されることに注意してください。
  </para>
  <para>
   比較は、ユーザが指定したコールバック関数を利用して行われます。
   この関数は、1 つめの引数が 2 つめより小さい / 等しい / 大きい
   場合にそれぞれ 負の数 / ゼロ / 正の数 を返す必要があります。
   これが <function>array_diff_assoc</function> との相違点で、
   こちらは比較のために内部関数を用いています。
  </para>
  <para>
   <example>
    <title><function>array_diff_uassoc</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
function key_compare_func($a, $b)
{
    if ($a === $b) {
        return 0;
    }
    return ($a > $b)? 1:-1;
}

$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "green", "yellow", "red");
$result = array_diff_uassoc($array1, $array2, "key_compare_func");
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [b] => brown
    [c] => blue
    [0] => red
)
]]>
    </screen>
   </example>
  </para>
  <simpara>
   この例で、<literal>"a" =&gt; "green"</literal> の組み合わせが両方の配列に存在し、
   関数の出力には存在しないことが確認できます。
   これとは異なり、<literal>0 =&gt; "red"</literal> は出力されています。
   なぜなら 2 つめの引数の <literal>"red"</literal> は、キーが
   <literal>1</literal> だからです。
  </simpara>
  <simpara>
   2 つのインデックスが等しいかどうかは、
   ユーザが指定したコールバック関数で調べます。
  </simpara>
  <note>
   <simpara>
    この関数は n 次元配列の一つの次元しかチェックしないことに注意してください。
    もちろん、<literal>array_diff_uassoc($array1[0], $array2[0], "key_compare_func");</literal>
    のようにすることでより深い次元でのチェックもできます。
   </simpara>
  </note>
  <para>
   <function>array_diff</function>、
   <function>array_diff_assoc</function>、
   <function>array_udiff</function>、
   <function>array_udiff_assoc</function>、
   <function>array_udiff_uassoc</function>、
   <function>array_intersect</function>、
   <function>array_intersect_assoc</function>、
   <function>array_uintersect</function>、
   <function>array_uintersect_assoc</function> および
   <function>array_uintersect_uassoc</function> も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
