<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/array.xml, last change in rev 1.4 -->
<!-- last change to 'extract' in en/ tree in rev 1.2 -->
  <refentry id="function.extract">
   <refnamediv>
    <refname>extract</refname>
    <refpurpose>
     配列からシンボルテーブルに変数をインポートする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>extract</methodname>
      <methodparam><type>array</type><parameter>var_array</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>extract_type</optional></replaceable>
       </parameter></methodparam>
      <methodparam><type>string</type><parameter>
	<replaceable><optional>prefix</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     この関数は、配列から現在のシンボルテーブルに変数をインポートする
     ために使用されます。この関数は連想配列<parameter>var_array</parameter>
     を引数とし、そのキーを変数名、値を変数の値として処理します。
     各キー/値の組に関して、<parameter>extract_type</parameter>および
     <parameter>prefix</parameter>パラメータに基づき現在のシンボルテー
     ブルに変数を一つ作成します。
    </para>
    <note>
     <para>
      バージョン4.0.5以降、この関数は展開された変数の数を返します。
     </para>
    </note>
    <para>
     <function>extract</function>は、各キーについて変数名として有効で
     あるかどうか、そして、シンボルテーブルの既存の変数と衝突しないか
     どうかを確認します。無効または数値キーおよび衝突に関する対処法は、
     <parameter>extract_type</parameter>で定義されます。これは以下の値
     のどれかとなります。
     <variablelist>
      <varlistentry>
       <term>EXTR_OVERWRITE</term>
       <listitem>
	<simpara>
	 衝突があった場合、存在する変数が上書きされます。
	</simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_SKIP</term>
       <listitem>
	<simpara>
	 衝突があった場合、存在する変数は上書きされません。
	</simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_PREFIX_SAME</term>
       <listitem>
	<simpara>
	 衝突があった場合、<parameter>prefix</parameter>を前につけた
	 新しい変数となります。
	</simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_PREFIX_ALL</term>
       <listitem>
	<simpara>
	 全ての変数の前に<parameter>prefix</parameter>を付けます。PHP
	 4.0.5以降、接頭辞を数値とすることも可能です。
	</simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_PREFIX_INVALID</term>
       <listitem>
        <simpara>
	 無効または数値の変数名のみに接頭辞
         <parameter>prefix</parameter> を付ける。このフラグは、PHP
         4.0.5 で追加されました。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <parameter>extract_type</parameter>が指定されない場合、EXTR_OVERWRITE 
     が仮定されます。
    </para>
    <para>
     <parameter>prefix</parameter>は、
     <parameter>extract_type</parameter>がEXTR_PREFIX_SAME、
     EXTR_PREFIX_ALL、EXTR_PREFIX_INVALID の場合にのみ必要であることに
     注意して下さい。接頭辞を付けた変数名が有効な変数名でない場合、こ
     の変数はシンボルテーブルにインポートされません。
    </para>
    <para>
     <function>extract</function>は、各キーが有効な変数名からなるかど
     うかを確認し、有効な変数名である場合のみインポート処理を行います。
    </para>
    <para>
     extractの使用例としては、シンボルテーブルに
     <function>wddx_deserialize</function>から返された連想配列を
      インポートすることが考えられます。
    </para>
    <para>
     <example>
      <title><function>extract</function>の例</title>
      <programlisting role="php">
<![CDATA[
<?php

/* $var_array はwddx_deserializeから返された配列と仮定します
 */
$size = "large";
$var_array = array ("color" => "blue",
                    "size"  => "medium",
                    "shape" => "sphere");
extract ($var_array, EXTR_PREFIX_SAME, "wddx");
 
print "$color, $size, $shape, $wddx_size\n";
 
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     上記の例の結果は以下となります。
     <programlisting>
<![CDATA[
blue, large, sphere, medium
]]>
     </programlisting>
    </para>
    <para>
     EXTR_PREFIX_SAMEを指定したため、<varname>$size</varname>は上書き
     されず、<varname>$wddx_size</varname>が作成されます。
     EXTR_SKIPが指定された場合、$wddx_sizeは作成されません。EXTR_OVERWRITE
     の場合は、<varname>$size</varname>の値は"medium"となります。
     EXTR_PREFIX_ALLの場合は新規の変数<varname>$wddx_color</varname>,
     <varname>$wddx_size</varname>, <varname>$wddx_shape</varname>
     が作成されます。
    </para>
    <para>
     連想配列を使用する必要があり、数値添字の配列には結果は出力されま
     せん。
    </para>
    <para>
     <function>compact</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
