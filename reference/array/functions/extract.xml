<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.19 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
  <refentry id="function.extract">
   <refnamediv>
    <refname>extract</refname>
    <refpurpose>
     配列からシンボルテーブルに変数をインポートする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>extract</methodname>
      <methodparam><type>array</type><parameter>var_array</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>extract_type</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>prefix</parameter></methodparam>
     </methodsynopsis>
    <para>
     この関数は、配列から現在のシンボルテーブルに変数をインポートする
     ために使用されます。この関数は連想配列<parameter>var_array</parameter>
     を引数とし、そのキーを変数名、値を変数の値として処理します。
     各キー/値の組に関して、<parameter>extract_type</parameter>および
     <parameter>prefix</parameter>パラメータに基づき現在のシンボルテー
     ブルに変数を一つ作成します。
    </para>
    <note>
     <para>
      バージョン4.0.5以降、この関数は展開された変数の数を返します。
     </para>
    </note>
    <note>
     <para>
      <constant>EXTR_IF_EXISTS</constant> と
      <constant>EXTR_PREFIX_IF_EXISTS</constant>はversion 4.2.0で導入されました。
     </para>
    </note>
    <note>
     <para>
      <constant>EXTR_REFS</constant>はversion 4.3.0で導入されました。
     </para>
    </note>
    <para>
     <function>extract</function>は、各キーについて変数名として有効で
     あるかどうか、そして、シンボルテーブルの既存の変数と衝突しないか
     どうかを確認します。無効または数値キーおよび衝突に関する対処法は、
     <parameter>extract_type</parameter>で定義されます。これは以下の値
     のどれかとなります。
     <variablelist>
      <varlistentry>
       <term><constant>EXTR_OVERWRITE</constant></term>
       <listitem>
    <simpara>
     衝突があった場合、存在する変数が上書きされます。
    </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_SKIP</constant></term>
       <listitem>
    <simpara>
     衝突があった場合、存在する変数は上書きされません。
    </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_PREFIX_SAME</constant></term>
       <listitem>
    <simpara>
     衝突があった場合、<parameter>prefix</parameter>を前につけた
     新しい変数となります。
    </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_PREFIX_ALL</constant></term>
       <listitem>
    <simpara>
     全ての変数の前に<parameter>prefix</parameter>を付けます。PHP
     4.0.5以降、接頭辞を数値とすることも可能です。
    </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_PREFIX_INVALID</constant></term>
       <listitem>
        <simpara>
     無効または数値の変数名のみに接頭辞
         <parameter>prefix</parameter> を付ける。このフラグは、PHP
         4.0.5 で追加されました。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_IF_EXISTS</constant></term>
       <listitem>
        <simpara>
         カレントのシンボルテーブルに既に存在する場合にのみ上書きします。
         例えば$_REQUEST以外にあなたが定義した変数のみを展開し
         有効な変数としたいような場合に有用です。このフラグは
         PHP4.2.0で追加されました。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_PREFIX_IF_EXISTS</constant></term>
       <listitem>
        <simpara>
         同じ変数だが接頭辞をつけていないバージョンの変数が
         カレントのシンボルテーブルに存在する場合にのみ
         変数を生成します。このフラグはPHP4.2.0で追加されました。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_REFS</constant></term>
       <listitem>
        <simpara>
         変数を参照として展開します。
         これはインポート済みの変数が、
         <parameter>var_array</parameter>
         パラメータの値に常に参照付けられることを意味します。
         このフラグを単独で使用するか、
         あるいは<parameter>extract_type</parameter>と和算することにより、
         他のフラグとそれを組み合わせることができます。
         このフラグはPHP 4.3.0で追加されました。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <parameter>extract_type</parameter>が指定されない場合、
     <constant>EXTR_OVERWRITE</constant>が仮定されます。
    </para>
    <para>
     <parameter>prefix</parameter>は、
     <parameter>extract_type</parameter>がEXTR_PREFIX_SAME、
     EXTR_PREFIX_ALL、EXTR_PREFIX_INVALID の場合にのみ必要であることに
     注意してください。接頭辞を付けた変数名が有効な変数名でない場合、こ
     の変数はシンボルテーブルにインポートされません。
    </para>
    <para>
     <function>extract</function>は、各キーが有効な変数名からなるかど
     うかを確認し、有効な変数名である場合のみインポート処理を行います。
    </para>
    <warning>
     <para>
      <function>extract</function> をユーザー入力 ($_GET, ...)
      のような信頼できないデータについて使用しないでください。
      もし行う場合、例えば
      <link linkend="security.globals">register_globals</link>
      を信頼しているような古いコードを一時的に実行したい場合、
      <constant>EXTR_SKIP</constant> のような
      <parameter>extract_type</parameter>
      の値が上書きされていないことを確認してください。そして
      <link linkend="ini">&php.ini;</link> の
      <link linkend="ini.variables-order">variables_order</link>
      で定義されたものと同じ順で展開すべきであることに留意してください。
     </para>
    </warning>
    <para>
     extractの使用例としては、シンボルテーブルに
     <function>wddx_deserialize</function>から返された連想配列を
      インポートすることが考えられます。
    </para>
    <para>
     <example>
      <title><function>extract</function>の例</title>
      <programlisting role="php">
<![CDATA[
<?php

/* $var_array はwddx_deserializeから返された配列と仮定します
 */
$size = "large";
$var_array = array("color" => "blue",
                   "size"  => "medium",
                   "shape" => "sphere");
extract($var_array, EXTR_PREFIX_SAME, "wddx");

echo "$color, $size, $shape, $wddx_size\n";

?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
blue, large, sphere, medium
]]>
      </screen>
     </example>
    </para>
    <para>
     EXTR_PREFIX_SAMEを指定したため、<varname>$size</varname>は上書き
     されず、<varname>$wddx_size</varname>が作成されます。
     EXTR_SKIPが指定された場合、$wddx_sizeは作成されません。EXTR_OVERWRITE
     の場合は、<varname>$size</varname>の値は"medium"となります。
     EXTR_PREFIX_ALLの場合は新規の変数<varname>$wddx_color</varname>,
     <varname>$wddx_size</varname>, <varname>$wddx_shape</varname>
     が作成されます。
    </para>
    <para>
     連想配列を使用する必要があります。<constant>EXTR_PREFIX_ALL</constant>
     または<constant>EXTR_PREFIX_INVALID</constant>を使用しない限り、
     数値添字の配列には結果は出力されません。
    </para>
    <para>
     <function>compact</function>も参照ください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
