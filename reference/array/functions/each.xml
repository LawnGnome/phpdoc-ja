<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.17 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
  <refentry id="function.each">
   <refnamediv>
    <refname>each</refname>
    <refpurpose>
     配列から、次のキーと値のペアを返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>each</methodname>
      <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
     </methodsynopsis>
    <para>
     配列 <parameter>array</parameter> から次のキーと値のペアを返し、
     配列カーソルを進めます。このペアは 4 つの要素を持つ配列で、
     それぞれの要素は <literal>0</literal>, <literal>1</literal>,
     <literal>key</literal>, <literal>value</literal> というキーを有しています。
     要素 <literal>0</literal>と<literal>key</literal>
     の各々は配列要素のキー名称を保持しており、<literal>1</literal>
     と <literal>value</literal> の各々はそのデータを保持しています。
    </para>
    <para>
     配列の内部ポインタが配列の最終要素以降を指す場合、
     <function>each</function> は &false; を返します。
    </para>
    <para>
     <example>
      <title><function>each</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php
$foo = array("bob", "fred", "jussi", "jouni", "egon", "marliese");
$bar = each($foo);
?>
]]>
      </programlisting>
      <para>
       <literal>$bar</literal> は、ここでは以下のキー/値のペアを保持しています。
      </para>
      <screen>
<![CDATA[
Array
(
    [1] => bob
    [value] => bob
    [0] => 0
    [key] => 0
)
]]>
      </screen>
     </example>
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
$foo = array ("Robert" => "Bob", "Seppo" => "Sepi");
$bar = each ($foo);
print_r($bar);
?>
]]>
      </programlisting>
      <para>
       <varname>$bar</varname> は次のようなキー/値のペアを持つようになります。
      </para>
      <screen>
<![CDATA[
Array
(
    [1] => Bob
    [value] => Bob
    [0] => Robert
    [key] => Robert
)
]]>
      </screen>
     </informalexample>
    </para>
    <para>
     通常 <function>each</function> は、配列の走査をするために
     <function>list</function> と共に使用します。
     例えばこのようになります。
     <example>
      <title><function>each</function> によって配列を走査する</title>
      <programlisting role="php">
<![CDATA[
<?php
$fruit = array('a' => 'apple', 'b' => 'banana', 'c' => 'cranberry');

reset($fruit);
while (list($key, $val) = each($fruit)) {
    echo "$key => $val\n";
}
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
a => apple
b => banana
c => cranberry
]]>
      </screen>
     </example>
    </para>
    <para>
     <function>each</function> を実行した後、配列カーソルは、
     配列の次の要素に移動します。配列の最終要素にカーソルがある場合は、
     最終要素にとどまります。再度 each を使用して配列を走査するには、
     <function>reset</function> を使用する必要があります。
    </para>
    <caution>
     <para>
      配列を他の変数に代入すると、もとの配列の内部ポインタがリセットされます。
      そのため、上の例のループ内で <varname>$fruit</varname>
      を他の変数に代入すると、無限ループを引き起こしてしまいます。
     </para>
    </caution>
    <para>
     <function>key</function>, <function>list</function>,
     <function>current</function>, <function>reset</function>,
     <function>next</function>, <function>prev</function>,
     <link linkend="control-structures.foreach">foreach</link>
     も参照してください。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
