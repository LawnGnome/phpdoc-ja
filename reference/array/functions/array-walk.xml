<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.25 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry id="function.array-walk">
 <refnamediv>
  <refname>array_walk</refname>
  <refpurpose>
   配列の全ての要素にユーザ関数を適用する
  </refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>bool</type><methodname>array_walk</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>callback</type><parameter>funcname</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>userdata</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   &return.success;
  </simpara>
  <simpara>
   <parameter>array</parameter> 配列の各要素にユーザ定義関数
   <parameter>funcname</parameter> を適用します。通常、
   <parameter>funcname</parameter> は引数を二つとります。
   <parameter>array</parameter> パラメータの値が最初の引数、
   キー/添字は二番目の引数となります。
   オプションの <parameter>userdata</parameter> パラメータが指定された場合、
   コールバック関数 <parameter>funcname</parameter> への三番目の引数として
   渡されます。
  </simpara>
  <simpara>
   <parameter>funcname</parameter> 関数が、指定された引数より多いパラメータを必要とする
   場合、<function>array_walk</function>が<parameter>funcname</parameter>
   をコールする度にエラーレベル <link linkend="errorfunc.constants">E_WARNING</link> が
   発生します。これらの警告は、<function>array_walk</function> コールの前に
   PHP エラー演算子 <link linkend="language.operators.errorcontrol">@</link>
   を付けるか、<function>error_reporting</function> により抑制することができます。
  </simpara>
  <note>
   <para>
    <parameter>funcname</parameter> により配列の値そのものを変更する必要がある
    場合、<parameter>funcname</parameter> の最初の引数は
    <link linkend="language.references">参照</link>として
    渡す必要があります。この場合、配列の要素に加えた変更は、配列自体に
    対して行われます。
   </para>
  </note>
  <note>
   <para>
    キー及び userdata を <parameter>funcname</parameter> に渡す処理は、
    バージョン 4.0.0 で追加されました。
   </para>
  </note>
  <para>
   <function>array_walk</function> は <parameter>array</parameter> の
   内部配列ポインタに影響されません。<function>array_walk</function> は
   ポインタの位置に関わらず配列の全てに渡って適用されます。
  </para>
  <para>
   コールバック関数により配列自身を変更することはできません。
   例えば、要素の追加、削除、要素の unset 等はできません。
   <function>array_walk</function> が適用される配列を
   変更しようとすると、関数の動作を定義できず、予期しない結果を
   得ることになります。
  </para>
  <para>
   <example>
    <title><function>array_walk</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array("d" => "lemon", "a" => "orange", "b" => "banana", "c" => "apple");

function test_alter(&$item1, $key, $prefix)
{
    $item1 = "$prefix: $item1";
}

function test_print ($item2, $key)
{
    echo "$key. $item2<br />\n";
}

echo "Before ...:\n";
array_walk($fruits, 'test_print');

array_walk($fruits, 'test_alter', 'fruit');
echo "... and after:\n";

array_walk($fruits, 'test_print');
?>
]]>
      </programlisting>
      &example.outputs;
      <screen role="php">
<![CDATA[
Before ...:
d. lemon
a. orange
b. banana
c. apple
... and after:
d. fruit: lemon
a. fruit: orange
b. fruit: banana
c. fruit: apple
]]>
    </screen>
   </example>
  </para>
  <simpara>
   <function>array_walk_recursive</function>,
   <function>create_function</function>,
   <function>list</function>,
   <link linkend="control-structures.foreach">foreach</link>,
   <function>each</function>,
   <function>call_user_func_array</function>,
   <function>array_map</function>,
   &seealso.callback; も参照してください。
  </simpara>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
