<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.18 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<refentry xml:id="function.register-shutdown-function" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>register_shutdown_function</refname>
  <refpurpose>シャットダウン時に実行する関数を登録する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>register_shutdown_function</methodname>
   <methodparam><type>callback</type><parameter>function</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>parameter</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   スクリプト処理が完了した際に実行される <parameter>func</parameter> 
   という名前の関数を登録します。
  </simpara>
  <para>
   <function>register_shutdown_function</function> は複数回コールする
   ことが可能で、登録された順に関数がコールされます。
   登録した関数内で <function>exit</function> をコールした場合、
   処理はそこで終了してその他のシャットダウン関数はコールされません。
  </para>
  <para>
   PHP 4.0.6 以前のバージョンを Apache で動かしている場合、
   登録されたシャットダウン関数はリクエストの完了後（結果の出力を含む）
   に実行されます。そのため、<function>echo</function>
   や <function>print</function> を用いてブラウザに出力したり
   <function>ob_get_contents</function>
   を用いて出力バッファの内容を取得したりすることができませんでした。
   PHP 4.1 以降、シャットダウン関数はリクエストの一部として実行されるようになり、
   そこから結果を出力できるようになりました。現在のところ、
   シャットダウン関数の中で出力バッファリング関数を用いてデータを加工する方法はありません。
   シャットダウン関数はすべての出力バッファを閉じてからコールされます。
   そのため、たとえ <link
   linkend="ini.zlib.output-compression">zlib.output_compression</link>
   が有効になっていたとしても出力結果は圧縮されません。
  </para>
  <para>
   PHP 4 以降、<function>register_shutdown_function</function>
   に追加のパラメータを渡すことで
   シャットダウン関数にパラメータを渡せるようになりました。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parameter</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>register_shutdown_function</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
function shutdown()
{
	// これがシャットダウン関数で、
	// スクリプトの処理が完了する前に
	// ここで何らかの操作をすることができます

	echo 'Script executed with success', PHP_EOL;
}

register_shutdown_function('shutdown');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    一般に、PHP では未定義の関数は致命的なエラーを引き起こします。
    しかし <function>register_shutdown_function</function> で指定された
    <parameter>function</parameter> が未定義の場合はそのかわりに
    <constant>E_WARNING</constant> レベルのエラーが発生します。
    また、PHP の内部的な理由により、このエラーは
    <literal>Unknown</literal> の 0 行目で発生したとみなされます。
   </para>
  </note>
  <note>
   <para>
    Apache などいくつかの Web サーバでは、スクリプトの実行時ディレクトリを
    シャットダウン関数内で変更可能です。
   </para>
  </note>
  <note>
   <para>
    シャットダウン関数はスクリプトがシャットダウンする際にコールされるので、
    その際は常にヘッダが送信されています。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="ini.auto-append-file">auto_append_file</link></member>
    <member><function>exit</function></member>
    <member><link
    linkend="features.connection-handling">接続処理</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
