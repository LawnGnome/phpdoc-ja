<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 323624 Maintainer: takagi Status: ready -->

<appendix xml:id="amqp.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  &reftitle.constants;
  &extension.constants;
  <para>
    <variablelist>
      <varlistentry xml:id="constant.amqp-noparam">
        <term>
          <constant>AMQP_NOPARAM</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            この定数をフラグとして渡すと、強制的に他のすべてのフラグを無効にします。
            一時的に ini 設定 <literal>amqp.auto_ack</literal> を無効にしたい場合などに使います。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-durable">
        <term>
          <constant>AMQP_DURABLE</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            永続的な exchange やキューはブローカを再起動しても生き残り、
            データを保持したままとなります。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-passive">
        <term>
          <constant>AMQP_PASSIVE</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            受動的な exchange やキューは再宣言されませんが、
            exchange やキューが存在しなければブローカはエラーとなります。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-exclusive">
        <term>
          <constant>AMQP_EXCLUSIVE</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            キューに対してのみ使えます。このフラグは、
            このキューに対してはひとつのクライアントのみしかやりとりできないことを意味します。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-autodelete">
        <term>
          <constant>AMQP_AUTODELETE</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            exchange の場合、自動削除フラグの意味は、
            バインドされているキューがなくなった時点で exchange が削除されるということです。
            まだキューがバインドされていない場合、exchange は削除されません。
          </simpara>
          <simpara>
            キューの場合、自動削除フラグの意味は、
            購読しているリスナーがなくなった時点でキューが削除されるということです。
            まだアクティブな購読がない場合、キューは削除されません。
          </simpara>
          <simpara>
            注意: 排他的なキューは、クライアントからの接続が切断されると自動的に削除されます。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-internal">
        <term>
          <constant>AMQP_INTERNAL</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            このフラグが定義された exchange に対して、クライアントからキューをバインドすることはできません。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-nolocal">
        <term>
          <constant>AMQP_NOLOCAL</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            クラスタ環境でコンシューマメソッドに渡すときに、ローカルノードからは取得しません。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-autoack">
        <term>
          <constant>AMQP_AUTOACK</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            <methodname>AMQPQueue::get</methodname> や <methodname>AMQPQueue::get</methodname>
            にフラグとして渡すと、メッセージにその場でサーバーでの配送受付マークがつきます。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-ifempty">
        <term>
          <constant>AMQP_IFEMPTY</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            キューの作成時にこのフラグを指定すると、キューが空になったときに削除されるようになります。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-ifunused">
        <term>
          <constant>AMQP_IFUNUSED</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            キューあるいは exchange の作成時にこのフラグを指定すると、
            そのキューあるいは exchange に接続するクライアントがなくなったときに削除されるようになります。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-mandatory">
        <term>
          <constant>AMQP_MANDATORY</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            メッセージを公開するときに、このメッセージを有効なキューにルーティングするようにします。
            失敗すると、エラーを返します。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-immediate">
        <term>
          <constant>AMQP_IMMEDIATE</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            メッセージを公開するときに、このメッセージをすぐにブローカで処理するように
            (優先度が高いものであると) マークします。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-multiple">
        <term>
          <constant>AMQP_MULTIPLE</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            <methodname>AMQPQueue::ack</methodname> をコールするときに設定すると、
            配送タグが「このメッセージを含めて、ここまで」という扱いになります。
            これで、複数のメッセージをひとつのメソッドで受け付けできるようになります。
            ゼロに設定すると、配送タグは単一のメッセージを参照します。
            <constant>AMQP_MULTIPLE</constant> フラグを設定し、かつ配送タグがゼロの場合は
            未処理のメッセージをすべて受け付けることを表します。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-nowait">
        <term>
          <constant>AMQP_NOWAIT</constant>
          (<type>integer</type>)
        </term>
        <listitem>
          <simpara>
            <methodname>AMQPExchange::bind</methodname> のコール時に設定すると、サーバはメソッドに応答しなくなります。
            クライアント側は reply メソッドを待ってはいけません。
            サーバ側で処理を完了できなかった場合はチャネルあるいは接続の例外が発生します。
          </simpara>
        </listitem>
      </varlistentry>      <varlistentry xml:id="constant.amqp-ex-type-direct">
        <term>
          <constant>AMQP_EX_TYPE_DIRECT</constant>
          (<type>string</type>)
        </term>
        <listitem>
          <simpara>
            direct (exchange の型)。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-ex-type-fanout">
        <term>
          <constant>AMQP_EX_TYPE_FANOUT</constant>
          (<type>string</type>)
        </term>
        <listitem>
          <simpara>
            fanout (exchange の型)。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-ex-type-topic">
        <term>
          <constant>AMQP_EX_TYPE_TOPIC</constant>
          (<type>string</type>)
        </term>
        <listitem>
          <simpara>
            topic (exchange の型)。
          </simpara>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="constant.amqp-ex-type-header">
        <term>
          <constant>AMQP_EX_TYPE_HEADER</constant>
          (<type>string</type>)
        </term>
        <listitem>
          <simpara>
            header (exchange の型)。
          </simpara>
        </listitem>
      </varlistentry>
    </variablelist>
  </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
