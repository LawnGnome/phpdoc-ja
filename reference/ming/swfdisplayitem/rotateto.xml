<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.2 Maintainer: takagi Status: ready -->
<refentry xml:id="function.swfdisplayitem.rotateto" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SWFDisplayItem->rotateTo()</refname>
  <refpurpose>グローバル座標で回転させる</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>SWFDisplayItem</classname></ooclass>
   <methodsynopsis>
    <type>void</type><methodname>rotateTo</methodname>
    <methodparam><type>float</type><parameter>angle</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  &warn.experimental.func;
  <para>
   <function>swfdisplayitem->rotateto</function> は、
   グローバル座標で、現在のオブジェクトを
   現在の角度から <parameter>ddegrees</parameter> 度回転させます。
  </para>
  <simpara>
   オブジェクトは、<function>swfshape</function> か
   <function>swfbutton</function>、<function>swftext</function>、
   <function>swfsprite</function> のいずれかとなります。
   これは、<function>swfmovie->add</function> で追加されたものでなければなりません。
  </simpara>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   この例は、背景から前面まで 3 つの回転する文字列を表示します。
   かなりよくできています。
   <example>
    <title><function>swfdisplayitem->rotateto</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$thetext =  "ming!";

$f = new SWFFont("Bauhaus 93.fdb");

$m = new SWFMovie();
$m->setRate(24.0);
$m->setDimension(2400, 1600);
$m->setBackground(0xff, 0xff, 0xff);

// たくさんの任意引数をとる関数というのは
// 常に良い考えです! 本当です!

function text($r, $g, $b, $a, $rot, $x, $y, $scale, $string) 
{
  global $f, $m;

  $t = new SWFText();
  $t->setFont($f);
  $t->setColor($r, $g, $b, $a);
  $t->setHeight(960);
  $t->moveTo(-($f->getWidth($string))/2, $f->getAscent()/2);
  $t->addString($string);

  // その名前がすでに使われていない限りは、通常の PHP 変数と
  // 同様にプロパティを追加することが可能です。
  // 例: $i->scale は設定できません。なぜならそれは関数名だからです。

  $i = $m->add($t);
  $i->x = $x;
  $i->y = $y;
  $i->rot = $rot;
  $i->s = $scale;
  $i->rotateTo($rot);
  $i->scale($scale, $scale);

  // しかし、変更内容はこの関数内で閉じています。そのため、
  // 変更したオブジェクトを関数から返す必要があります。ちょっと面倒くさい……。

  return $i;
}

function step($i) 
{
  $oldrot = $i->rot;
  $i->rot = 19*$i->rot/20;
  $i->x = (19*$i->x + 1200)/20;
  $i->y = (19*$i->y + 800)/20;
  $i->s = (19*$i->s + 1.0)/20;

  $i->rotateTo($i->rot);
  $i->scaleTo($i->s, $i->s);
  $i->moveTo($i->x, $i->y);

  return $i;
}

// どうです? 読みやすいでしょう。

$i1 = text(0xff, 0x33, 0x33, 0xff, 900, 1200, 800, 0.03, $thetext);
$i2 = text(0x00, 0x33, 0xff, 0x7f, -560, 1200, 800, 0.04, $thetext);
$i3 = text(0xff, 0xff, 0xff, 0x9f, 180, 1200, 800, 0.001, $thetext);

for ($i=1; $i<=100; ++$i) {
  $i1 = step($i1);
  $i2 = step($i2);
  $i3 = step($i3);

  $m->nextFrame();
}

header('Content-type: application/x-shockwave-flash');
$m->output();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.swfdisplayitem.rotate" /></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
