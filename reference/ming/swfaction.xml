<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 292734 Maintainer: takagi Status: ready -->
<phpdoc:classref xmlns:phpdoc="http://php.net/ns/phpdoc" xml:id="class.swfaction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>SWFAction クラス</title>
 <titleabbrev>SWFAction</titleabbrev>
 
 <partintro>
 
<!-- {{{ SWFAction intro -->
  <section xml:id="swfaction.intro">
   &reftitle.intro;
   <para>
    SWFAction.
   </para>
  </section>
<!-- }}} -->
 
  <section xml:id="swfaction.synopsis">
   &reftitle.classsynopsis;
 
<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>SWFAction</classname></ooclass>
 
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>SWFAction</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
 
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.swfaction')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
 
   </classsynopsis>
<!-- }}} -->
 
  </section>
 
 <section>
  &reftitle.description;
  <para>
   スクリプトの文法は C 言語をもとにしていますが、多くの機能が
   省略されています - SWF バイトコードマシンは、より単純であることを
   志向しています。例えば、相当手の込んだ細工をしなければ、関数のコールを
   実装することもできません。なぜなら、バイトコードの jump 命令は
   ハードコードされたオフセット値を使用しているからです。
   呼び出し元のアドレスをスタックに格納したりはしません
   - すべての関数は、戻ってくる場所を正確に知っている必要があるのです。
  </para>
  <para>
   結局、どんな機能が残っているのでしょう? コンパイラが理解できるトークンは
   以下のとおりです。
   <itemizedlist>
    <listitem>
     <simpara>
      break
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      for
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      continue
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      if
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      else
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      do
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      while
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   データ型は存在しません。SWF アクションマシンにおいては、すべての値は
   文字列として扱われます。以下の関数が使用可能です。
   <variablelist>
    <varlistentry>
     <term>time()</term>
     <listitem>
      <simpara>
       ムービーが開始してからの経過時間を、ミリ秒 (?) で返します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>random(seed)</term>
     <listitem>
      <simpara>
       0 から seed までの範囲の擬似乱数を返します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>length(expr)</term>
     <listitem>
      <simpara>
       指定した式の長さを返します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>int(number)</term>
     <listitem>
      <simpara>
       指定した数値を、一番近い整数に切り下げた値を返します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>concat(expr, expr)</term>
     <listitem>
      <simpara>
       指定した式を連結して返します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ord(expr)</term>
     <listitem>
      <simpara>
       指定した文字の ASCII コードを返します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>chr(num)</term>
     <listitem>
      <simpara>
       指定した ASCII コードに対応する文字を返します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>substr(string, location, length)</term>
     <listitem>
      <simpara>
       指定した文字列 <parameter>string</parameter> の、
       位置 <parameter>location</parameter> から始まる
       長さ <parameter>length</parameter> の部分文字列を返します。
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   さらに、以下のコマンドも使用できるでしょう。
   <variablelist>
    <varlistentry>
     <term>duplicateClip(clip, name, depth)</term>
     <listitem>
      <simpara>
       指定したムービークリップ (またの名をスプライト)
       <parameter>clip</parameter> を複製します。
       新しいムービークリップの名前は <parameter>name</parameter> で、
       深度は <parameter>depth</parameter> となります。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>removeClip(expr)</term>
     <listitem>
      <simpara>
       指定したムービークリップを削除します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>trace(expr)</term>
     <listitem>
      <simpara>
       指定した式をトレースログに書き込みます。ブラウザのプラグインが
       これをきちんと扱ってくれるかは疑わしいものです。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>startDrag(target, lock, [left, top, right, bottom])</term>
     <listitem>
      <simpara>
       ムービークリップ <parameter>target</parameter> のドラッグを開始します。
       引数 <parameter>lock</parameter> で、マウスをロックするかどうか (?)
       を指定します - 0 (&false;) あるいは 1 (&true;) を指定します。
       オプションのパラメータでは、ドラッグする範囲のを指定します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>stopDrag()</term>
     <listitem>
      <simpara>
       つかれきった心を落ち着かせます。そしてムービークリップの
       ドラッグも修了させます。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>callFrame(expr)</term>
     <listitem>
      <simpara>
       指定したフレームを関数としてコールします。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>getURL(url, target, [method])</term>
     <listitem>
      <simpara>
       指定した URL を読み込みます。引数 <parameter>target</parameter> は、
       (たとえば "_top" や "_blank" のような) HTML ドキュメントの target
       に対応します。オプションの引数 <parameter>method</parameter> は、
       サーバに変数を返したい場合に POST あるいは GET を指定します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>loadMovie(url, target)</term>
     <listitem>
      <simpara>
       指定した URL を読み込みます。引数 <parameter>target</parameter> は、
       (おそらく) フレームの名前か
       あるいは特別な値 "_level0" (現在のムービーを置き換える) 、
       "_level1" (現在のムービーの前面に新しいムービーを表示する) 
       のうちのいずれかです。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>nextFrame()</term>
     <listitem>
      <simpara>
       次のフレームに移動します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>prevFrame()</term>
     <listitem>
      <simpara>
       直前の (あるいは一つ前の) フレームに移動します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>play()</term>
     <listitem>
      <simpara>
       ムービーの再生を開始します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>stop()</term>
     <listitem>
      <simpara>
       ムービーの再生を停止します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>toggleQuality()</term>
     <listitem>
      <simpara>
       高品質/低品質を切り替えます。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>stopSounds()</term>
     <listitem>
      <simpara>
       音声の再生を停止します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>gotoFrame(num)</term>
     <listitem>
      <simpara>
       フレーム番号 <parameter>num</parameter> に移動します。
       フレーム番号は 0 からはじまります。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>gotoFrame(name)</term>
     <listitem>
      <simpara>
       <parameter>name</parameter> という名前のフレームに移動します。
       これは便利です。というのもまだフレームのラベルを追加していないからです。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>setTarget(expr)</term>
     <listitem>
      <simpara>
       アクションのコンテキストといわれるものを設定します。
       これが何をするものなのかは実際のところよくわかりません。
      </simpara>
     </listitem>   
    </varlistentry>
   </variablelist>
   そしてもうひとつ変なものがあります。if 文や while ループの中で、
   指定したフレーム番号が読み込まれているかどうかを調べるために、
   式 frameLoaded(num) が使用可能です。ええ。そのようにいわれています。
   しかし私は実際にこれをテストしたことがなく、実際に動作するのか
   疑問に思っています。かわりに /:framesLoaded を使用するとよいでしょう。
  </para>
  <para>
    ムービークリップ (さぁみなさんご一緒に - またの名をスプライト)
    はプロパティをひじしています。すべてのプロパティが読み込み可能で、
    そのうちのいくつかには値を設定することも可能です。プロパティの
    一覧は以下のとおりです。
    <itemizedlist>
     <listitem>
      <simpara>
       x
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       y 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       xScale 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       yScale 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       currentFrame - (読み込み専用) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       totalFrames - (読み込み専用) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       alpha - 透明度
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       visible - 1=on, 0=off (?) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       width - (読み込み専用) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       height - (読み込み専用) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       rotation 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       target - (読み込み専用) (???) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       framesLoaded - (読み込み専用) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       name 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       dropTarget - (読み込み専用) (???) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       url - (読み込み専用) (???) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       highQuality - 1=high, 0=low (?) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       focusRect - (???) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       soundBufTime - (???) 
      </simpara>
     </listitem>
    </itemizedlist>
    ということで、スプライトの x 位置を指定するには単に <literal>/box.x = 100;</literal>
    とすればよいわけです。なぜ box の前のスラッシュがあるのでしょう?
    これは、flash がムービー内のスプライトを Unix ファイルシステム風に
    管理しているからです - つまり、この場合 box がトップレベルに存在する
    ことになります。box という名前のスプライトがその中に biff という名前の
    スプライトを保持している場合、その x 位置を指定するには
    /box/biff.x = 100; とします。すくなくとも私はそう思っています。
    もし間違っていたら指摘してください。
  </para>
 </section>
 
 </partintro>
 
 &reference.ming.entities.swfaction;
 
</phpdoc:classref>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
