<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./ja/functions/ming.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.10 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
  <refentry id="function.swfaction">
   <refnamediv>
    <refname>SWFAction</refname>
    <refpurpose>新規アクションを作成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>SWFAction</type><methodname>swfaction</methodname>
      <methodparam><type>string</type><parameter>script</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
    <para>
     <function>swfaction</function> は新しいアクションを作成し、
     スクリプトを SWFAction オブジェクトにコンパイルします。
    </para>
    <para>
     スクリプトの文法は C 言語をもとにしていますが、多くの機能が
     省略されています - SWF バイトコードマシンは、より単純であることを
     志向しています。例えば、相当手の込んだ細工をしなければ、関数のコールを
     実装することもできません。なぜなら、バイトコードの jump 命令は
     ハードコードされたオフセット値を使用しているからです。
     呼び出し元のアドレスをスタックに格納したりはしません
     - すべての関数は、戻ってくる場所を正確に知っている必要があるのです。
    </para>
    <para>
     結局、どんな機能が残っているのでしょう? コンパイラが理解できるトークンは
     以下のとおりです。
     <itemizedlist>
      <listitem>
       <simpara>
        break
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        for
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        continue
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        if
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        else
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        do
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        while
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     データ型は存在しません。SWF アクションマシンにおいては、すべての値は
     文字列として扱われます。以下の関数が使用可能です。
     <variablelist>
      <varlistentry>
       <term>time()</term>
       <listitem>
        <simpara>
         ムービーが開始してからの経過時間を、ミリ秒 (?) で返します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>random(seed)</term>
       <listitem>
        <simpara>
         0 から seed までの範囲の擬似乱数を返します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>length(expr)</term>
       <listitem>
        <simpara>
         指定した式の長さを返します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>int(number)</term>
       <listitem>
        <simpara>
         指定した数値を、一番近い整数に切り下げた値を返します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>concat(expr, expr)</term>
       <listitem>
        <simpara>
         指定した式を連結して返します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>ord(expr)</term>
       <listitem>
        <simpara>
         指定した文字の ASCII コードを返します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>chr(num)</term>
       <listitem>
        <simpara>
         指定した ASCII コードに対応する文字を返します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>substr(string, location, length)</term>
       <listitem>
        <simpara>
         指定した文字列 <parameter>string</parameter> の、
         位置 <parameter>location</parameter> から始まる
         長さ <parameter>length</parameter> の部分文字列を返します。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     さらに、以下のコマンドも使用できるでしょう。
     <variablelist>
      <varlistentry>
       <term>duplicateClip(clip, name, depth)</term>
       <listitem>
        <simpara>
         指定したムービークリップ (またの名をスプライト)
         <parameter>clip</parameter> を複製します。
         新しいムービークリップの名前は <parameter>name</parameter> で、
         深度は <parameter>depth</parameter> となります。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>removeClip(expr)</term>
       <listitem>
        <simpara>
         指定したムービークリップを削除します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>trace(expr)</term>
       <listitem>
        <simpara>
         指定した式をトレースログに書き込みます。ブラウザのプラグインが
         これをきちんと扱ってくれるかは疑わしいものです。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>startDrag(target, lock, [left, top, right, bottom])</term>
       <listitem>
        <simpara>
         ムービークリップ <parameter>target</parameter> のドラッグを開始します。
         引数 <parameter>lock</parameter> で、マウスをロックするかどうか (?)
         を指定します - 0 (&false;) あるいは 1 (&true;) を指定します。
         オプションのパラメータでは、ドラッグする範囲のを指定します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>stopDrag()</term>
       <listitem>
        <simpara>
         つかれきった心を落ち着かせます。そしてムービークリップの
         ドラッグも修了させます。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>callFrame(expr)</term>
       <listitem>
        <simpara>
         指定したフレームを関数としてコールします。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>getURL(url, target, [method])</term>
       <listitem>
        <simpara>
         指定した URL を読み込みます。引数 <parameter>target</parameter> は、
         (たとえば "_top" や "_blank" のような) HTML ドキュメントの target
         に対応します。オプションの引数 <parameter>method</parameter> は、
         サーバに変数を返したい場合に POST あるいは GET を指定します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>loadMovie(url, target)</term>
       <listitem>
        <simpara>
         指定した URL を読み込みます。引数 <parameter>target</parameter> は、
         (おそらく) フレームの名前か
         あるいは特別な値 "_level0" (現在のムービーを置き換える) 、
         "_level1" (現在のムービーの前面に新しいムービーを表示する) 
         のうちのいずれかです。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>nextFrame()</term>
       <listitem>
        <simpara>
         次のフレームに移動します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>prevFrame()</term>
       <listitem>
        <simpara>
         直前の (あるいは一つ前の) フレームに移動します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>play()</term>
       <listitem>
        <simpara>
         ムービーの再生を開始します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>stop()</term>
       <listitem>
        <simpara>
         ムービーの再生を停止します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>toggleQuality()</term>
       <listitem>
        <simpara>
         高品質/低品質を切り替えます。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>stopSounds()</term>
       <listitem>
        <simpara>
         音声の再生を停止します。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>gotoFrame(num)</term>
       <listitem>
        <simpara>
         フレーム番号 <parameter>num</parameter> に移動します。
         フレーム番号は 0 からはじまります。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>gotoFrame(name)</term>
       <listitem>
        <simpara>
         <parameter>name</parameter> という名前のフレームに移動します。
         これは便利です。というのもまだフレームのラベルを追加していないからです。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>setTarget(expr)</term>
       <listitem>
        <simpara>
         アクションのコンテキストといわれるものを設定します。
         これが何をするものなのかは実際のところよくわかりません。
        </simpara>
       </listitem>   
      </varlistentry>
     </variablelist>
     そしてもうひとつ変なものがあります。if 文や while ループの中で、
     指定したフレーム番号が読み込まれているかどうかを調べるために、
     式 frameLoaded(num) が使用可能です。ええ。そのようにいわれています。
     しかし私は実際にこれをテストしたことがなく、実際に動作するのか
     疑問に思っています。かわりに /:framesLoaded を使用するとよいでしょう。
    </para>
    <para>
      ムービークリップ (さぁみなさんご一緒に - またの名をスプライト)
      はプロパティをひじしています。すべてのプロパティが読み込み可能で、
      そのうちのいくつかには値を設定することも可能です。プロパティの
      一覧は以下のとおりです。
      <itemizedlist>
       <listitem>
        <simpara>
         x
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         y 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         xScale 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         yScale 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         currentFrame - (読み込み専用) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         totalFrames - (読み込み専用) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         alpha - 透明度
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         visible - 1=on, 0=off (?) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         width - (読み込み専用) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         height - (読み込み専用) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         rotation 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         target - (読み込み専用) (???) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         framesLoaded - (読み込み専用) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         name 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         dropTarget - (読み込み専用) (???) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         url - (読み込み専用) (???) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         highQuality - 1=high, 0=low (?) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         focusRect - (???) 
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         soundBufTime - (???) 
        </simpara>
       </listitem>
      </itemizedlist>
      ということで、スプライトの x 位置を指定するには単に <literal>/box.x = 100;</literal>
      とすればよいわけです。なぜ box の前のスラッシュがあるのでしょう?
      これは、flash がムービー内のスプライトを Unix ファイルシステム風に
      管理しているからです - つまり、この場合 box がトップレベルに存在する
      ことになります。box という名前のスプライトがその中に biff という名前の
      スプライトを保持している場合、その x 位置を指定するには
      /box/biff.x = 100; とします。すくなくとも私はそう思っています。
      もし間違っていたら指摘してください。
    </para>
    <para>
     この単純な例は、赤い四角形がウィンドウを横切るものです。
     <example>
      <title><function>swfaction</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php
  $s = new SWFShape();
  $f = $s->addFill(0xff, 0, 0);
  $s->setRightFill($f);

  $s->movePenTo(-500, -500);
  $s->drawLineTo(500, -500);
  $s->drawLineTo(500, 500);
  $s->drawLineTo(-500, 500);
  $s->drawLineTo(-500, -500);

  $p = new SWFSprite();
  $i = $p->add($s);
  $i->setDepth(1);
  $p->nextFrame();

  for ($n=0; $n<5; ++$n) {
    $i->rotate(-15);
    $p->nextFrame();
  }

  $m = new SWFMovie();
  $m->setBackground(0xff, 0xff, 0xff);
  $m->setDimension(6000, 4000);

  $i = $m->add($p);
  $i->setDepth(1);
  $i->moveTo(-500,2000);
  $i->setName("box");

  $m->add(new SWFAction("/box.x += 3;"));
  $m->nextFrame();
  $m->add(new SWFAction("gotoFrame(0); play();"));
  $m->nextFrame();

  header('Content-type: application/x-shockwave-flash');
  $m->output();
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     この単純な例は、画面上のマウスを追いかけます。
     <example>
      <title><function>swfaction</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php

  $m = new SWFMovie();
  $m->setRate(36.0);
  $m->setDimension(1200, 800);
  $m->setBackground(0, 0, 0);

  /* マウスを追いかけるスプライト - 空ですが、マウスを追いかけるために
     その x 座標と y 座標を取得することが可能です */

  $i = $m->add(new SWFSprite());
  $i->setName('mouse');

  $m->add(new SWFAction("
    startDrag('/mouse', 1); /* '1' は、スプライトをマウスにロックします */
  "));

  /* これらは単なる四角形なので、アンチエイリアスを off にしたほうがよいでしょう */

  $m->add(new SWFAction("
    this.quality = 0;
  "));

  /* 変形ボックス */
  $r = new SWFMorph();
  $s = $r->getShape1();

  /* これは通常の図形から背景よりになることに注意しましょう。なぜかはわかりません */
  $s->setLeftFill($s->addFill(0xff, 0xff, 0xff));
  $s->movePenTo(-40, -40);
  $s->drawLine(80, 0);
  $s->drawLine(0, 80);
  $s->drawLine(-80, 0);
  $s->drawLine(0, -80);

  $s = $r->getShape2();

  $s->setLeftFill($s->addFill(0x00, 0x00, 0x00));
  $s->movePenTo(-1, -1);
  $s->drawLine(2, 0);
  $s->drawLine(0, 2);
  $s->drawLine(-2, 0);
  $s->drawLine(0, -2);

  /* 変形ボックスのためのスプライトコンテナ
     これは、単にボックスを変形させる際の時間軸にすぎません */

  $box = new SWFSprite();
  $box->add(new SWFAction("
    stop();
  "));
  $i = $box->add($r);

  for ($n=0; $n<=20; ++$n) {
    $i->setRatio($n/20);
    $box->nextFrame();
  }

  /* このスプライトにより、同じアクションコードを何度も実行させることが可能となります */

  $cell = new SWFSprite();
  $i = $cell->add($box);
  $i->setName('box');

  $cell->add(new SWFAction("

    setTarget('box');

    /* ...x は、親の x 座標を意味します。すなわち (..).x ということです */
    dx = (/mouse.x + random(6)-3 - ...x)/5;
    dy = (/mouse.y + random(6)-3 - ...y)/5;
    gotoFrame(int(dx*dx + dy*dy));

  "));

  $cell->nextFrame();
  $cell->add(new SWFAction("

    gotoFrame(0);
    play();

  "));

  $cell->nextFrame();

  /* 最後に、セルをムービーに追加します */

  for ($x=0; $x<12; ++$x) {
    for ($y=0; $y<8; ++$y) {
      $i = $m->add($cell);
      $i->moveTo(100*$x+50, 100*$y+50);
    }
  }

  $m->nextFrame();

  $m->add(new SWFAction("

    gotoFrame(1);
    play();

  "));

  header('Content-type: application/x-shockwave-flash');
  $m->output();
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     上と同じですが、きれいな色のボールを使用します...
     <example>
      <title><function>swfaction</function> の例</title>
      <programlisting role="php">
<![CDATA[
<?php

  $m = new SWFMovie();
  $m->setDimension(11000, 8000);
  $m->setBackground(0x00, 0x00, 0x00);

  $m->add(new SWFAction("

this.quality = 0;
/frames.visible = 0;
startDrag('/mouse', 1);

  "));

  // マウスを追いかけるスプライト
  $t = new SWFSprite();
  $i = $m->add($t);
  $i->setName('mouse');

  $g = new SWFGradient();
  $g->addEntry(0, 0xff, 0xff, 0xff, 0xff);
  $g->addEntry(0.1, 0xff, 0xff, 0xff, 0xff);
  $g->addEntry(0.5, 0xff, 0xff, 0xff, 0x5f);
  $g->addEntry(1.0, 0xff, 0xff, 0xff, 0);

  // gradient を指定した図形
  $s = new SWFShape();
  $f = $s->addFill($g, SWFFILL_RADIAL_GRADIENT);
  $f->scaleTo(0.03);
  $s->setRightFill($f);
  $s->movePenTo(-600, -600);
  $s->drawLine(1200, 0);
  $s->drawLine(0, 1200);
  $s->drawLine(-1200, 0);
  $s->drawLine(0, -1200);

  // 複数の色を使用するため、スプライトにする必要があります
  $p = new SWFSprite();
  $p->add($s);
  $p->nextFrame();

  // 図形をここに入れ、各フレームで別の色を使用します
  $q = new SWFSprite();
  $q->add(new SWFAction("gotoFrame(random(7)+1); stop();"));
  $i = $q->add($p);

  $i->multColor(1.0, 1.0, 1.0);
  $q->nextFrame();
  $i->multColor(1.0, 0.5, 0.5);
  $q->nextFrame();
  $i->multColor(1.0, 0.75, 0.5);
  $q->nextFrame();
  $i->multColor(1.0, 1.0, 0.5);
  $q->nextFrame();
  $i->multColor(0.5, 1.0, 0.5);
  $q->nextFrame();
  $i->multColor(0.5, 0.5, 1.0);
  $q->nextFrame();
  $i->multColor(1.0, 0.5, 1.0);
  $q->nextFrame();

  // 最後に、アクションコードにこれを含めます
  $p = new SWFSprite();
  $i = $p->add($q);
  $i->setName('frames');
  $p->add(new SWFAction("

dx = (/:mousex-/:lastx)/3 + random(10)-5;
dy = (/:mousey-/:lasty)/3;
x = /:mousex;
y = /:mousey;
alpha = 100;

  "));
  $p->nextFrame();

  $p->add(new SWFAction("

this.x = x;
this.y = y;
this.alpha = alpha;
x += dx;
y += dy;
dy += 3;
alpha -= 8;

  "));
  $p->nextFrame();

  $p->add(new SWFAction("prevFrame(); play();"));
  $p->nextFrame();

  $i = $m->add($p);
  $i->setName('frames');
  $m->nextFrame();

  $m->add(new SWFAction("

lastx = mousex;
lasty = mousey;
mousex = /mouse.x;
mousey = /mouse.y;

++num;

if (num == 11)
  num = 1;

removeClip('char' & num);
duplicateClip(/frames, 'char' & num, num);

  "));

  $m->nextFrame();
  $m->add(new SWFAction("prevFrame(); play();"));

  header('Content-type: application/x-shockwave-flash');
  $m->output();
?>
]]>
      </programlisting>
     </example>
    </para>
    <!-- Serious syntax errors in example
    <para>
     This simple example will handles keyboard actions.
     (You'll probably have to click in the window to give it focus.
     And you'll probably have to leave your mouse in the frame, too.
     If you know how to give buttons focus programatically, feel free
     to share, won't you?) 
     <example>
      <title><function>swfaction</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php

  /* sprite has one letter per frame */

  $p = new SWFSprite();
  $p->add(new SWFAction("stop();"));

  $chars = 'abcdefghijklmnopqrstuvwxyz'.
       'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.
       '1234567890!@#$%^&/*()_+-=/[]{}|;:,.<>?`~';

  $f = new SWFFont("_sans");

  for ($n=0; $nremove($i);
    $t = new SWFTextField();
    $t->setFont($f);
    $t->setHeight(240);
    $t->setBounds(600,240);
    $t->align(SWFTEXTFIELD_ALIGN_CENTER);
    $t->addString($c);
    $i = $p->add($t);
    $p->labelFrame($c);
    $p->nextFrame();
  }

  /* hit region for button - the entire frame */

  $s = new SWFShape();
  $s->setFillStyle0($s->addSolidFill(0, 0, 0, 0));
  $s->drawLine(600, 0);
  $s->drawLine(0, 400);
  $s->drawLine(-600, 0);
  $s->drawLine(0, -400);

  /* button checks for pressed key, sends sprite to the right frame */

  $b = new SWFButton();
  $b->addShape($s, SWFBUTTON_HIT);

  for($n=0; $naddAction(new SWFAction("

setTarget('/char');
gotoFrame('$c');

    "), SWFBUTTON_KEYPRESS($c));
  }

  $m = new SWFMovie();
  $m->setDimension(600,400);
  $i = $m->add($p);
  $i->setName('char');
  $i->moveTo(0,80);

  $m->add($b);

  header('Content-type: application/x-shockwave-flash');
  $m->output();

?>
]]>
      </programlisting>
     </example>
    </para>
    -->
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
