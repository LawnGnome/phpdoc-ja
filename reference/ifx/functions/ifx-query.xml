<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/ifx.xml, last change in rev 1.1 -->
<!-- last change to 'ifx-query' in en/ tree in rev 1.2 -->
  <refentry id="function.ifx-query">
   <refnamediv>
    <refname>ifx_query</refname>
    <refpurpose>Informix クエリーを送信する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>ifx_query</methodname>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>link_identifier</optional></replaceable>
       </parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>cursor_type</optional></replaceable>
       </parameter></methodparam>
      <methodparam><type>mixed</type><parameter>
	<replaceable><optional>blobidarray</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para> 
     返り値: 成功時に正の Informix 結果 ID、エラー時に &false;
    </para>
    <para> 
     リソース "result_id" は、クエリー結果を取得するために
     他の関数により使用されます。
     <function>ifx_affected_rows</function> 関数による取得を行うために
     "affected_rows" をセットします。
    </para>
    <para> 
     <function>ifx_query</function> は、サーバー上の指定したリンク ID
     が指す現在アクティブなデータベースにクエリーを送信します。リンク
     ID が指定されない場合は、最後にオープンされたリンクを仮定します。
     リンクがオープンされていない場合、この関数は、
     <function>ifx_connect</function> がコールされた時と同様にリンクを
     確立しようと試み、それを使用します。
    </para>
    <para>
     接続 <parameter>conn_id</parameter> において
     <parameter>query</parameter>を実行します。"select 型" のクエリー
     では、カーソルが定義され、オープンされます。オプションの
     <parameter>cursor_type</parameter> パラメータにより、そのカーソル
     を"スクロール" または "ホールド" カーソルとすることができます。こ
     のオプションはビットマスクであり、IFX_SCROLL, IFX_HOLD, または両
     方とも指定することができます。select でないクエリーは、"直ちに実
     行"されます。IFX_SCROLL および IFX_HOLD は定数シンボルのため引用
     符で括る必要はありません。このパラメータを省略した場合、カーソル
     は通常のシーケンシャルカーソルになります。
    </para>
    <para>
     どちらのタイプのクエリーにおいても、(予測または実際の数として)
     作用された行の数は、<function>ifx_affected_rows</function> により
     取得するために保存されます。
    </para>
    <para>
     もし、update クエリーにおいて BLOB (BYTE または TEXT) カラムがあ
     る場合、対応する "BLOB ID" を有する
     <parameter>blobidarray</parameter> パラメータを追加することが可能
     です。この場合、クエリーテキストのこれらのカラムを "?" で置換する
     ことが必要です。
    </para>
    <para>
     TEXT (または BYTE) カラムの内容が許すならば、
     "ifx_textasvarchar(1)" または "ifx_byteasvarchar(1)" を使用するこ
     とも可能です。これにより、TEXT (または BYTE) カラムは、select ク
     エリーの通常の(しかし長い)VARCHAR カラムと同様に処理され、BLOB ID
     で悩むこともなくなります。
    </para>
    <para>
     ifx_textasvarchar(0) または ifx_byteasvarchar(0) (デフォルト値)
     の場合、select クエリーは、BLOB ID (整数値) に属するものとして
     BLOB カラムを返します。BLOB 関数により文字列またはファイルとして
     BLOB の値を得ることが可能です。(以下を参照)
    </para>
    <para>
     <function>ifx_connect</function> も参照下さい。
     <example>
      <title>"orders" テーブルの全行を HTML テーブルとして表示する</title>
      <programlisting role="php">
<![CDATA[
ifx_textasvarchar(1);      // BLOB 用に "text mode" を使用する
$res_id = ifx_query("select * from orders", $conn_id);
if (! $res_id) {
        printf("Can't select orders : %s\n&lt;br>%s&lt;br>\n", ifx_error());
        ifx_error();
        ifx_errormsg();
  die;
}
ifx_htmltbl_result($res_id, "border=\"1\"");
ifx_free_result($res_id);
]]>
      </programlisting>
     </example>
     <example>
      <title>値を "catalog" テーブルに挿入する</title>
      <programlisting role="php">
<![CDATA[
// バイトおよびテキストカラムに関する BLOB ID を作成する。
$textid = ifx_create_blob(0, 0, "Text column in memory");
$byteid = ifx_create_blob(1, 0, "Byte column in memory");
// blob id を blobid 配列に保存
$blobidarray[] = $textid;
$blobidarray[] = $byteid;
// クエリーを実行
$query = "insert into catalog (stock_num, manu_code, " .
         "cat_descr,cat_picture) values(1,'HRO',?,?)";
$res_id = ifx_query($query, $conn_id, $blobidarray);
if (! $res_id) {
  ... エラー ...
}
// 結果 id を解放
ifx_free_result($res_id);
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
