<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: hirokawa Status: ready -->
<section xml:id="ifx.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <note>
  <para>
   Informix 用環境変数 INFORMIXDIR および INFORMIXSERVER が PHP ifx
   ドライバで利用可能であり、INFORMIX のバイナリがあるディレクトリに
   パスが通っていることを確認してください。テストを始める前に
   <function>phpinfo</function> と書いたスクリプトを実行し、
   これを確認してください。
   <function>phpinfo</function> があるスクリプトは、これらの環境変数の
   一覧を出力します。これは、CGI 版の PHP および Apache mod_php で
   共に行われます。これらの環境変数は Apache のスタートアップスクリプトで
   設定する必要があります。
  </para>
  <para>
   また、Informix 共有ライブラリがローダーで利用可能である必要があります
   (LD_LINBRARY_PATH または ld.so.conf/ldconfig を確認してください)。
  </para>
 </note>
 <note>
  <title>
   BLOB (TEXT および BYTE カラム)の使用に関する注意
  </title>
  <para>
   通常、BLOB は BLOB ID により指定されます。
   select クエリは、BYTE および TEXT カラム毎に "blob id" を返します。
   ("ifx_blobinfile(0);" により) メモリー上で BLOB を得ることを選択した場合、
   "string_var = ifx_get_blob($blob_id);" で内容を得ることができます。
   BLOB カラムの内容をファイルに取得したい場合、
   "ifx_blobinfile(1);" を使用してください。
   "ifx_get_blob($blob_id);" によりファイル名を得ることができます。
   BLOB の内容を得る際には、通常のファイル入出力を行ってください。
  </para>
  <para>
   insert/update クエリーに関しては、
   "<function>ifx_create_blob</function>;" により自分で 
   "blob id" を作成する必要があります。
   その後、blob id を配列に代入し、
   クエリー文字列の中の blob カラムを疑問符 (?) で置換します。
   updates/inserts の場合、<function>ifx_update_blob</function> で blob
   の内容を設定するのが便利でしょう。
  </para>
  <para>
   BLOB カラムの動作は、設定用変数で変更することができます。
   これらの変数は、実行時にも設定可能です。
  </para>
  <para>
   設定変数 : ifx.textasvarchar
  </para>
  <para>
   設定変数 : ifx.byteasvarchar
  </para>
  <para>
   ランタイム関数 :
  </para>
  <para>
   ifx_textasvarchar(0) : TEXT カラムを有する select クエリーに blob
     id を使用する
  </para>
  <para>
   ifx_byteasvarchar(0) : BYTE カラムを有する select クエリーに blob
     id を使用する
  </para>
  <para>
   ifx_textasvarchar(1) : TEXT カラムを VARCHAR カラムとして返します。
   このため、select クエリにおいて blob id を使用する必要はありません。
  </para>
  <para>
   ifx_byteasvarchar(1) : BYTE カラムを VARCHAR カラムとして返します。
   このため、select クエリにおいて blob id を使用する必要はありません。
  </para>
  <para>
   設定変数 : ifx.blobinfile
  </para>
  <para>
   ランタイム関数 :
  </para>
  <para>
   ifx_blobinfile_mode(0) : メモリに BYTE カラムを返し、blob id
   によりその内容を取り出す
  </para>
  <para>
   ifx_blobinfile_mode(1) : メモリに BYTE カラムを返し、blob id
   によりそのファイル名を取り出す
  </para>
  <para>
   ifx_text/byteasvarchar を 1 に設定した場合、
   通常の(しかしやや長い) VARCHAR フィールドのように
   select クエリーで TEXT や BYTE カラムを使用することが可能です。
   全ての文字列は、PHP で "数えられる" ので、これにより、
   "バイナリ・セーフ"が維持されます。
   これを正しく処理するのはあなた次第です。
   返されるデータには何でも含むことができますが、その内容について
   責任を負うことになります。
  </para>
  <para>
   ifx_blobinfile を 1 に設定した場合、blob の内容を得るために
   ifx_get_blob(..) により返されたファイル名を使用してください。
   この場合、行を取得する際に「Informix により作成された
   テンポラリファイルを削除する」責任があります。
   取得された新規の行は、BYTE カラム毎に新規のテンポラリファイルを
   作成します。
  </para>
  <para>
   テンポラリファイルの位置は、環境変数 "blobdir" により設定することが
   できます。デフォルトは、"." (カレントディレクトリ)です。
   putenv(blobdir="tmpblob"); のようにすることにより、誤って残って
   しまったテンポラリファイルを削除することが容易になります
   (テンポラリファイルの名前は "blb" で始まります)。
  </para>
 </note>
 <note>
  <title>自動的に "char" (SQLCHAR および SQLNCHAR) データを取り去る</title>
  <para>
   これは、次の設定変数により設定することが可能です。
  </para>
  <para>
   ifx.charasvarchar : 最後尾のスペースを何らかの削除処理を行わずに
   自動的に取り去る場合に 1 に設定します。
  </para>
 </note>
 <note>
  <title>&null; 値</title>
  <para>
   設定変数 ifx.nullformat (およびランタイム関数
   <function>ifx_nullformat</function>) を &true; に設定した場合、文字列
   "&null;" として &null; カラムを返します。&false; に設定した場合は
   空文字列を返します。これにより、&null; カラムと空のカラムを識別することが
   可能となります。
  </para>
 </note>

 <para>
 <table>
  <title>Informix 設定オプション</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>名前</entry>
     <entry>デフォルト</entry>
     <entry>変更の可否</entry>
     <entry>変更履歴</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry><link linkend="ini.ifx.allow-persistent">ifx.allow_persistent</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.ifx.max-persistent">ifx.max_persistent</link></entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.ifx.max-links">ifx.max_links</link></entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.ifx.default-host">ifx.default_host</link></entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.ifx.default-user">ifx.default_user</link></entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.ifx.default-password">ifx.default_password</link></entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.ifx.blobinfile">ifx.blobinfile</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.ifx.textasvarchar">ifx.textasvarchar</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.ifx.byteasvarchar">ifx.byteasvarchar</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.ifx.charasvarchar">ifx.charasvarchar</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
    <row>
     <entry><link linkend="ini.ifx.nullformat">ifx.nullformat</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP 5.2.1 で削除。</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 &ini.php.constants;
 </para>
 
 &ini.descriptions.title;
 
 <para>
 <variablelist>
  <varlistentry xml:id="ini.ifx.allow-persistent">
   <term>
    <parameter>ifx.allow_persistent</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     持続的な Informix 接続を可能とするかどうか。
    </para>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.ifx.max-persistent">
   <term>
    <parameter>ifx.max_persistent</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <para>
     プロセス毎の持続的 Informix 接続の最大数。
    </para>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.ifx.max-links">
   <term>
    <parameter>ifx.max_links</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <para>
     持続的接続を含むプロセス毎の Informix 接続の最大数。
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.default-host">
   <term>
    <parameter>ifx.default_host</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     <function>ifx_connect</function> または
     <function>ifx_pconnect</function> において、ホストが指定されない
     場合のデフォルトのホスト。
     &safemode; では適用されません。
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.default-user">
   <term>
    <parameter>ifx.default_user</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     <function>ifx_connect</function> または
     <function>ifx_pconnect</function> において、
     ユーザが指定されない場合のデフォルトのユーザ。
     &safemode; では適用されません。
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.default-password">
   <term>
    <parameter>ifx.default_password</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     <function>ifx_connect</function> または
     <function>ifx_pconnect</function> において、
     パスワードが指定されない場合のデフォルトのパスワード。
     &safemode; では適用されません。
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.blobinfile">
   <term>
    <parameter>ifx.blobinfile</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     blob カラムをファイルに返したい場合には &true; を指定します。
     メモリ内に返したい場合には &false; を指定します。
     <function>ifx_blobinfile_mode</function> により、実行時にこの設定を
     上書きすることができます。
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.textasvarchar">
   <term>
    <parameter>ifx.textasvarchar</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     select 文において TEXT カラムを通常の文字列として返したい場合は
     &true; を指定し、blob id パラメータを使用したい場合は &false;
     を指定します。
     <function>ifx_textasvarchar</function> により、実行時にこの設定を
     上書きすることができます。
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.byteasvarchar">
   <term>
    <parameter>ifx.byteasvarchar</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     select 文において BYTE カラムを通常の文字列として返したい場合は
     &true; を指定し、blob id パラメータを使用したい場合は &false;
     を指定します。
     <function>ifx_byteasvarchar</function> により、実行時にこの設定を
     上書きすることができます。
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.charasvarchar">
   <term>
    <parameter>ifx.charasvarchar</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     取得時に CHAR カラムから末尾の空白を取り除きたい場合に &true;
     を指定してください。
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.nullformat">
   <term>
    <parameter>ifx.nullformat</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     リテラル文字列 "&null;" として &null; カラムを返したい場合に &true;、
     空の文字列として返したい場合は &false; を指定してください。
     <function>ifx_nullformat</function> により、実行時にこの設定を
     上書きすることができます。
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

