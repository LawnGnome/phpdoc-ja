<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<section id="ifx.configuration">
 &reftitle.runtime;
 &extension.runtime;
 <note>
  <para>
   Informix用環境変数INFORMIXDIRおよびINFORMIXSERVERがPHP ifxドライバ
   で利用可能であり、INFORMIXのバイナリがあるディレクトリにパスが通っ
   ていることを確認してください。テストを始める前に
   <function>phpinfo</function>と書いたスクリプトを実行し、これを確認
   してください。
   <function>phpinfo</function> があるスクリプトは、これらの環境変数の
   一覧を出力します。これは、CGI版のPHPおよびApache mod_phpで共に行わ
   れます。これらの環境変数はApacheのスタートアップスクリプトで設定す
   る必要があります。
  </para>
  <para>
   また、Informix共有ライブラリがローダーで利用可能である必要があります。
   (LD_LINBRARY_PATHまたはld.so.conf/ldconfigを確認してください)
  </para>
 </note>
 <note>
  <title>
   BLOB (TEXT および BYTE カラム)の使用に関する注意
  </title>
  <para>
   通常、BLOB はBLOB ID により指定されます。
   select クエリーは、BYTE および TEXT カラム毎に "blob id" を返します。
   ( "ifx_blobinfile(0);" により) メモリー上で BLOB を得ることを選択した場合、
   "string_var = ifx_get_blob($blob_id);"  で内容を得ることができます。
   ファイルから BLOB カラムの内容を取得したい場合、
   "ifx_blobinfile(1);" を使用してください。
   "ifx_get_blob($blob_id);" によりファイル名を得ることができます。
   BLOB の内容を得る際には、通常のファイル入出力を行ってください。
  </para>
  <para>
   insert/update クエリーに関しては、
   "ifx_create_blob(..);" により自分で "blob id" を作成する必要があります。
   その後、blob id を配列に代入し、
   クエリー文字列の中の blob カラムを疑問符 (?) で置換します。
   updates/inserts の場合、<function>ifx_update_blob</function>でblob
   の内容を設定するのが便利でしょう。
  </para>
  <para>
   BLOB カラムの動作は、設定用変数で変更することができます。
   これらの変数は、実行時にも設定可能です。
  </para>
  <para>
   設定変数 : ifx.textasvarchar
  </para>
  <para>
   設定変数 : ifx.byteasvarchar
  </para>
  <para>
   ランタイム関数 :
  </para>
  <para>
   ifx_textasvarchar(0) : TEXT カラムを有する select クエリーに blob
     id を使用する
   columns
  </para>
  <para>
   ifx_byteasvarchar(0) : BYTE カラムを有する select クエリーに blob
     id を使用する
   columns
  </para>
  <para>
   ifx_textasvarchar(1) : TEXTカラムをVARCHARカラムとして返します。
   このため、selectクエリーにおいてblob idを使用する必要はありません。
  </para>
  <para>
   ifx_byteasvarchar(1) : BYTEカラムをVARCHARカラムとして返します。
   このため、selectクエリーにおいてblob idを使用する必要はありません。
  </para>
  <para>
   設定変数 : ifx.blobinfile
  </para>
  <para>
   ランタイム関数 :
  </para>
  <para>
   ifx_blobinfile_mode(0) : メモリーに BYTE カラムを返す, blob id によ
   りその内容を取り出す
  </para>
  <para>
   ifx_blobinfile_mode(1) : モリーに BYTE カラムを返す, blob id によ
   りそのファイル名を取り出す
  </para>
  <para>
   ifx_text/byteasvarchar を 1 に設定した場合、
   通常の(しかしやや長い) VARCHAR フィールドのように
   select クエリーで TEXT や BYTE カラムを使用することが可能です。
   全ての文字列は、PHP で "数えられる" ので、これにより、"バイナリ・セー
   フ"が維持されます。
   これを正しく処理するのはあなた次第です。
   返されるデータには何でも含むことができますが、その内容について
   責任を負うことになります。
  </para>
  <para>
   ifx_blobinfile を 1 に設定した場合、blob の内容を得るために
   ifx_get_blob(..) により返されたファイル名を使用してください。
   この場合、行を取得する際に Informix により作成されたテンポラリファイル
   を削除する責任があります。取得された新規の行は、BYTE カラム毎に新
   規のテンポラリファイルを作成します。
  </para>
  <para>
   テンポラリファイルの位置は、環境変数 "blobdir" により設定すること
   ができます。デフォルトは、"." (カレントディレクトリ)です。
   putenv(blobdir="tmpblob"); のようにすることにより、誤って残ってし
   まったテンポラリファイルを削除することが容易になります。(テンポラ
   リファイルの名前は "blb" で始まります)
  </para>
 </note>
 <note>
  <title>自動的に "char" (SQLCHAR および SQLNCHAR) データを取り去る</title>
  <para>
   これは、次の設定変数により設定することが可能です。
  </para>
  <para>
   ifx.charasvarchar : 最後尾のスペースを何らかの削除処理を行わずに
   自動的に取り去る場合に1に設定します。
  </para>
 </note>
 <note>
  <title>&null; 値</title>
  <para>
   設定変数 ifx.nullformat (およびランタイム関数
   <function>ifx_nullformat</function>) を&true;に設定した場合、文字列
   "&null;" として &null; カラムを返します。&false;に設定した場合は空文字
   列を返します。これにより、&null;カラムと空のカラムを識別することが
   可能となります。
  </para>
 </note>

 <para>
 <table>
  <title>Informix設定オプション</title>
  <tgroup cols="3">
   <thead>
    <row>
     <entry>名前</entry>
     <entry>デフォルト</entry>
     <entry>変更の可否</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>ifx.allow_persistent</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.max_persistent</entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.max_links</entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.default_host</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.default_user</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.default_password</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.blobinfile</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ifx.textasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ifx.byteasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ifx.charasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ifx.nullformat</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
  PHP_INI_*定数に関する詳細と定義については、
  <function>ini_set</function>を参照してください。
 </para>
 <para>
  以下に設定ディレクティブの簡単な説明を示します。
  <variablelist>
  <varlistentry id="ini.ifx.allow-persistent">
    <term>
     <parameter>ifx.allow_persistent</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      持続性のあるInformix接続を可能とするかどうか。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry id="ini.ifx.max-persistent">
    <term>
     <parameter>ifx.max_persistent</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      プロセス毎の持続性のあるInformix接続の最大数。
     </para>
    </listitem>
   </varlistentry>
  
   <varlistentry id="ini.ifx.max-links">
    <term>
     <parameter>ifx.max_links</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      持続的接続を含むプロセス毎のInformix接続の最大数。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.ifx.default-host">
    <term>
     <parameter>ifx.default_host</parameter>
    <type>string</type>
    </term>
    <listitem>
     <para>
      <function>ifx_connect</function> または
      <function>ifx_pconnect</function>においてホストが指定されない場
      合のデフォルトのホスト。
      <link linkend="features.safe-mode">safe mode</link>では適用され
      ません。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.ifx.default-user">
    <term>
     <parameter>ifx.default_user</parameter>
     <type>string</type>
   </term>
    <listitem>
     <para>
      <function>ifx_connect</function> または
      <function>ifx_pconnect</function>においてユーザーが指定されない
      場合のデフォルトのユーザー。
      <link linkend="features.safe-mode">safe mode</link>では適用され
      ません。
     </para>
   </listitem>
   </varlistentry>
   <varlistentry id="ini.ifx.default-password">
    <term>
     <parameter>ifx.default_password</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      <function>ifx_connect</function> または
      <function>ifx_pconnect</function>においてパスワードが指定されな
      い場合のデフォルトのパスワード。
      <link linkend="features.safe-mode">safe mode</link>では適用され
      ません。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.ifx.blobinfile">
    <term>
     <parameter>ifx.blobinfile</parameter>
     <type>boolean</type>
   </term>
    <listitem>
     <para>
      あるファイルにblobカラムを返したい場合には&true;を指定します。メ
      モリ内に返したい場合には&false;を指定します。
      <function>ifx_blobinfile_mode</function>により、この設定を実行
      時に上書きすることができます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.ifx.textasvarchar">
    <term>
     <parameter>ifx.textasvarchar</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      select文においてTEXTカラムを通常の文字列として返したい場合は
      &true;を指定し、blob idパラメータを使用したい場合は、&false;を指
      定します。
      <function>ifx_textasvarchar</function>により、この設定を実行
      時に上書きすることができます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.ifx.byteasvarchar">
    <term>
     <parameter>ifx.byteasvarchar</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      select文においてBYTEカラムを通常の文字列として返したい場合は
      &true;を指定し、blob idパラメータを使用したい場合は、&false;を指
      定します。
      <function>ifx_byteasvarchar</function>により、この設定を実行
      時に上書きすることができます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.ifx.charasvarchar">
    <term>
     <parameter>ifx.charasvarchar</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      取得時にCHARカラムから末尾の空白を取り除きたい場合に&true;を指定
      してください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.ifx.nullformat">
    <term>
     <parameter>ifx.nullformat</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      リテラル文字列"&null;"として&null;カラムを返したい場合に&true;、
      空の文字列として返したい場合は&false;を指定してください。
      <function>ifx_nullformat</function>により、この設定を実行
      時に上書きすることができます。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

