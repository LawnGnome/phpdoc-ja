<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.20 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<refentry xml:id="function.ob-start" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ob_start</refname> 
  <refpurpose>出力のバッファリングを有効にする</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>bool</type><methodname>ob_start</methodname>
   <methodparam choice="opt"><type>callback</type><parameter>output_callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>chunk_size</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>erase</parameter></methodparam>
  </methodsynopsis>
  <para>
   この関数は出力のバッファリングをオンにします。
   出力のバッファリングを有効にすると、
   (ヘッダ以外の) スクリプトからの出力は実際には行われず、
   代わりに内部バッファに保存されます。
  </para>
  <para>
   この内部バッファの内容は、<function>ob_get_contents</function>
   を用いて文字列変数にコピーされます。
   内部バッファの内容を出力するには
   <function>ob_end_flush</function> を使用します。
   <function>ob_end_clean</function>
   は、バッファの内容を出力せずに消去します。
  </para>
  <para>
   オプションの引数 <parameter>output_callback</parameter>
   関数を指定することが可能です。この関数は、パラメータとして文字列をとり、
   文字列を返します。このコールバック関数は、
   <function>ob_end_flush</function> がコールされた際、
   またはリクエストの最後にブラウザに出力をフラッシュする際にコールされます。
   <parameter>output_callback</parameter> がコールされた際に、
   この関数は出力バッファの内容をパラメータとして受け取ります。このコールバック関数は、
   新規の出力バッファを実際に出力される結果として返す必要があり、
   この結果はブラウザに送信されます。
   <parameter>output_callback</parameter> がコール可能な関数ではない場合は
   &false; を返します。
   コールバック関数が 2 つの引数をとる場合、
   2 番目のパラメータは以下のビットフィールド
   <constant>PHP_OUTPUT_HANDLER_START</constant>、
   <constant>PHP_OUTPUT_HANDLER_CONT</constant> および
   <constant>PHP_OUTPUT_HANDLER_END</constant> を含みます。
   <parameter>output_callback</parameter> が &false;
   を返すと、元の入力がそのままブラウザに送信されます。
  </para>
  <note>
   <para>
    PHP 4.0.4 において、Web ページの圧縮をサポートする圧縮 gz エンコード
    されたデータの Web ブラウザへの送信を容易にするために
    <function>ob_gzhandler</function> がサポートされています。
    <function>ob_gzhandler</function> は、ブラウザが受け入れる content
    encoding の型を調べ、それに基づいて出力を返します。
   </para>
  </note>
  <note>
   <para>
    PHP 4.3.2 未満では、この関数は渡された
    <parameter>output_callback</parameter> を実行することができなくても
    &false; を返しませんでした。
   </para>
  </note>
  <warning>
   <para>
    web サーバによっては (例: Apache)、コールバック関数からコールされた際に、
    スクリプトの実行ディレクトリを変更するものがあります。
    コールバック関数の内部で <literal>chdir(dirname($_SERVER['SCRIPT_FILENAME']))</literal>
    などと指定することで、これをもとに戻すことが可能です。
   </para>
  </warning>
  <para>
   オプションのパラメータ <parameter>chunk_size</parameter> が渡された場合、
   出力が <parameter>chunk_size</parameter> バイトを超えるたびに、
   最初の改行の際にコールバック関数がコールされます。
   <parameter>output_callback</parameter> パラメータに &null; 値を渡すと、
   これをバイパスすることができます。
  </para>
  <para>
   オプションのパラメータ <parameter>erase</parameter> に &false; を指定すると、
   スクリプトが終了するまでバッファは削除されません (PHP 4.3.0 以降で対応)。
  </para>
  <para>
   出力バッファはスタッカブルであり、このため、他の
   <function>ob_start</function> がアクティブの間に
   <function>ob_start</function> をコールすることが可能です。この場合、
   <function>ob_end_flush</function> を適切な回数コールするようにしてください。
   複数の出力コールバック関数がアクティブの場合、
   ネストした順番で逐次連続的に出力がフィルタ処理されます。
  </para>
    <para>
     <function>ob_end_clean</function>、
     <function>ob_end_flush</function>、<function>ob_clean</function>、
     <function>ob_flush</function> および <function>ob_start</function>
     をコールバック関数の内部からコールすることはできません。
     実際にコールした際の挙動は未定義です。バッファの内容を消去したい際には、
     コールバック関数から "" (空文字列) を返してください。
     同じく、<literal>print_r($expression, true)</literal> や
     <literal>highlight_file($filename, true)</literal> のような
     出力バッファリング関数も、
     コールバック関数の内部からコールすることはできません。
    </para>
  <example>
   <title>ユーザ定義のコールバック関数の例</title>
   <programlisting role="php">
<![CDATA[
<?php

function callback($buffer)
{

  // apples を全て oranges に置換する
  return (ereg_replace("apples", "oranges", $buffer));

}

ob_start("callback");

?>
<html>
<body>
<p>It's like comparing apples to oranges.</p>
</body>
</html>
<?php

ob_end_flush();

?>
]]>
     </programlisting>
    </example>
    <para>
     出力は次のようになります。
     <informalexample>
      <programlisting role="php">
<![CDATA[
<html>
<body>
<p>It's like comparing oranges to oranges.</p>
</body>
</html>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   <function>ob_get_contents</function>、
   <function>ob_end_flush</function>、
   <function>ob_end_clean</function>、
   <function>ob_implicit_flush</function>、
   <function>ob_gzhandler</function>、<function>ob_iconv_handler</function>、
   <function>mb_output_handler</function> および
   <function>ob_tidyhandler</function> も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
