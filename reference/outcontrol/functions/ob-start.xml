<?xml version="1.0" encoding="utf-8"?>
<!-- sync: 1.5 -->
  <refentry id="function.ob-start">
   <refnamediv>
    <refname>ob_start</refname> 
    <refpurpose>出力のバッファリングを有効にする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>bool</type><methodname>ob_start</methodname>
      <methodparam choice="opt"><type>callback</type><parameter>
        output_callback
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     この関数は出力のバッファリングをオンにします。出力のバッファリン
     グがアクティブの場合、(ヘッダ以外の)スクリプトからの出力は実際に
     は行われず、代わりに内部バッファに追加されます。
    </para>
    <para>
     この内部バッファの内容は、<function>ob_get_contents</function> を
     用いて文字列変数にコピーされます。実際の出力は、
     <function>ob_end_flush</function> がコールされた際に行われます。
     <function>ob_end_clean</function> は、バッファの内容を出力せずに
     消去します。
    </para>
    <para>
     オプションの引数<parameter>output_callback</parameter>関数を指定
     することが可能です。この関数は、パラメータとして文字列をとり、文
     字列を返します。このコールバック関数は、
     <function>ob_end_flush</function> がコールされた際、または、リク
     エストの最後にブラウザに出力をフラッシュする際にコールされます。
     <parameter>output_callback</parameter>がコールされた際に、この関
     数は、出力バッファの内容をパラメータとして受取ります。このコール
     バック関数は、新規の出力バッファを実際に出力される結果として返す
     必要があり、この結果はブラウザに送信されます。
     <parameter>output_callback</parameter>がコール可能な関数ではない場合
     &false;を返します。
    </para>
    <note>
     <para>
      PHP 4.0.4において、Webページの圧縮をサポートする圧縮gzエンコード
      されたデータのWebブラウザへの送信を容易にするために
      <function>ob_gzhandler</function> がサポートされています。
      <function>ob_gzhandler</function>は、ブラウザが受け入れるcontent
      encodingの型を調べ、それに基づいて出力を返します。
     </para>
    </note>
    <note>
     <para>
      PHP4.3.2未満では、この関数は、渡された
      <parameter>output_callback</parameter>を実行することができなくても
      &false;を返しませんでした。
     </para>
    </note>
    <para>
     出力バッファはスタッカブルであり、このため、他の
     <function>ob_start</function> がアクティブの間に
     <function>ob_start</function> をコールすることが可能です。この場
     合、<function>ob_end_flush</function> を適当な回数コールするよ
     うにして下さい。複数の出力コールバック関数がアクティブの場合、出
     力はネストした順番で逐次連続的にフィルタ処理されます。
    </para>
    <example>
     <title>ユーザ定義のコールバック関数の例</title>
     <programlisting role="php">
<![CDATA[
<?php

function callback($buffer) {

  // apples を全て oranges に置換する
  return (ereg_replace("apples", "oranges", $buffer));

}

ob_start("callback");

?>

<html>
<body>
<p>It's like comparing apples to oranges.
</body>
</html>

<?php

ob_end_flush();

?>
]]>
     </programlisting>
    </example>
    <para>
     出力は次のようになります。
     <informalexample>
      <programlisting role="php">
<![CDATA[
<html>
<body>
<p>It's like comparing oranges to oranges.
</body>
</html>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     <function>ob_get_contents</function>,
     <function>ob_end_flush</function>,
     <function>ob_end_clean</function>, 
     <function>ob_implicit_flush</function>,
     <function>ob_gzhandler</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
