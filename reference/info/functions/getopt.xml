<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 319063 Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.getopt">
 <refnamediv>
  <refname>getopt</refname>
  <refpurpose>コマンドライン引数のリストからオプションを取得する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>getopt</methodname>
   <methodparam><type>string</type><parameter>options</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>longopts</parameter></methodparam>
  </methodsynopsis>
  <para>
   スクリプトに渡されたオプションをパースします。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <simpara>
       この文字列の各文字をオプション文字として使用し、
       スクリプトにハイフンひとつ (<literal>-</literal>)
       で始まるオプションとして渡された内容とマッチさせます。
      </simpara>
      <simpara>
       たとえば、オプション文字列 <literal>"x"</literal> は
       <literal>-x</literal> というオプションを認識します。
      </simpara>
      <simpara>
       a-z、A-Z および 0-9 のみを認識します。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>longopts</parameter></term>
     <listitem>
      <simpara>
       オプションの配列。
       この配列の各要素をオプション文字列として使用し、
       スクリプトにハイフンふたつ (<literal>--</literal>)
       で始まるオプションとして渡された内容とマッチさせます。
      </simpara>
      <simpara>
       たとえば、longopts の要素 <literal>"opt"</literal> は
       <literal>--opt</literal> というオプションを認識します。
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   <parameter>options</parameter> パラメータに含まれる要素には次のようなものがあります。
   <simplelist>
    <member>単一の文字 (値を受け付けない)</member>
    <member>文字の後にコロンをひとつ続けたもの (値が必須であるパラメータ)</member>
    <member>文字の後にコロンをふたつ続けたもの (値がオプションであるパラメータ)</member>
   </simplelist>
   オプションの値は、文字列の後の最初の引数となります。
   値の前に空白があるかどうかは関係ありません。
   <note>
    <simpara>
     オプションの値で、<literal>" "</literal> (空白) を区切り文字として使用することはできません。
    </simpara>
   </note>
  </para>
  <note>
   <para>
    <parameter>options</parameter> と
    <parameter>longopts</parameter> の書式はほぼ同じです。唯一の違いは、
    <parameter>longopts</parameter> はオプションの配列
    (その各要素がオプションとなる) を受け取るけれども <parameter>options</parameter>
    は文字列 (その各文字がオプションとなる) を受け取るということです。
   </para>
  </note>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   この関数はオプション/引数のペアを連想配列で返します。
   失敗した場合は &false; を返します。
  </para>
  <note>
   <para>
    オプション以外のものが見つかった時点でオプションのパースは終了し、
    それ以降の内容は破棄されます。
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        "=" を引数/値の区切り文字として使用できるようになりました。
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        オプションの値 ("::" で指定します) に対応しました。
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        パラメータ <parameter>longopts</parameter>
        がすべてのプラットフォームで使えるようになりました。
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        この関数はシステムに依存しなくなり、今では
        Windows でも動作するようになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="getopt.examples-1">
    <title><function>getopt</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$options = getopt("f:hp:");
var_dump($options);
?>
]]>
    </programlisting>
    <para>
     上のスクリプトを <literal>php script.php -fvalue -h</literal>
     として実行すると、次のようになります。
    </para>
    <screen>
<![CDATA[
array(2) {
  ["f"]=>
  string(5) "value"
  ["h"]=>
  bool(false)
}
]]>
    </screen>
   </example>
  </para>
  <para>
   <example xml:id="getopt.examples-2">
    <title><function>getopt</function> の例 その2</title>
    <programlisting role="php">
<![CDATA[
<?php
$shortopts  = "";
$shortopts .= "f:";  // 値が必須
$shortopts .= "v::"; // 値がオプション
$shortopts .= "abc"; // これらのオプションは値を受け取りません

$longopts  = array(
    "required:",     // 値が必須
    "optional::",    // 値がオプション
    "option",        // 値なし
    "opt",           // 値なし
);
$options = getopt($shortopts, $longopts);
var_dump($options);
?>
]]>
    </programlisting>
    <para>
     上のスクリプトを <literal>php script.php -f "value for f" -v
     -a --required value --optional="optional value" --option</literal>
     として実行すると、次のようになります。
    </para>
    <screen>
<![CDATA[
array(6) {
  ["f"]=>
  string(11) "value for f"
  ["v"]=>
  bool(false)
  ["a"]=>
  bool(false)
  ["required"]=>
  string(5) "value"
  ["optional"]=>
  string(14) "optional value"
  ["option"]=>
  bool(false)
}
]]>
    </screen>
   </example>
  </para>
  <para>
   <example xml:id="getopt.examples-3">
    <title><function>getopt</function> の例 その3</title>
    <para>複数のオプションを一度に渡す例</para>
    <programlisting role="php">
<![CDATA[
<?php
$options = getopt("abc");
var_dump($options);
?>
]]>
    </programlisting>
    <para>
     上のスクリプトを <literal>php script.php -aaac</literal>
     として実行すると、次のようになります。
    </para>
    <screen>
<![CDATA[
array(2) {
  ["a"]=>
  array(3) {
    [0]=>
    bool(false)
    [1]=>
    bool(false)
    [2]=>
    bool(false)
  }
  ["c"]=>
  bool(false)
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="reserved.variables.argv"><varname>$argv</varname></link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
