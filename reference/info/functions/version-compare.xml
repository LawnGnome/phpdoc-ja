<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.12 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<refentry id="function.version-compare">
 <refnamediv>
  <refname>version_compare</refname>
  <refpurpose>ふたつの "PHP 標準" バージョン番号文字列を比較する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>version_compare</methodname>
   <methodparam><type>string</type><parameter>version1</parameter></methodparam>
   <methodparam><type>string</type><parameter>version2</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>operator</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>version_compare</function>は、ふたつの "PHP 標準" バージョン
   番号文字列を比較します。この関数は、いくつかのバージョンの PHP でのみ
   動作するプログラムを書きたい場合に有用です。
  </para>
  <para>
   この関数はまず、バージョン文字列の
   <literal>_</literal>, <literal>-</literal>,
   <literal>+</literal> をドット <literal>.</literal> で置き換えます。
   さらに、数値でない部分の前後にドット <literal>.</literal> を追加します。
   例えば '4.3.2RC1' は '4.3.2.RC.1' となります。
   次に、explode('.', $ver) とするのと同じように結果を分割し、左から右へ
   各部分を比較していきます。特殊な文字列が含まれている場合は以下の順で
   並べ替えます:
   <literal>dev</literal> &lt; <literal>alpha</literal> = 
   <literal>a</literal> &lt; <literal>beta</literal> = 
   <literal>b</literal> &lt; <literal>RC</literal> &lt; 
   <literal>pl</literal>. 
   この方法により、'4.1' と '4.1.2' のようなバージョンの違いだけではなく
   PHP 固有の開発ステータスの違いも判断することが可能となります。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>version1</parameter></term>
     <listitem>
      <para>
       最初のバージョン番号。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>version2</parameter></term>
     <listitem>
      <para>
       ふたつめのバージョン番号。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>operator</parameter></term>
     <listitem>
      <para>
       三番目のオプション引数 <parameter>operator</parameter> を指定した場合、
       特定の関係を調べることが可能です。指定可能な演算子を以下に示します。
       <literal>&lt;</literal>,
       <literal>lt</literal>, <literal>&lt;=</literal>,
       <literal>le</literal>, <literal>&gt;</literal>,
       <literal>gt</literal>, <literal>&gt;=</literal>,
       <literal>ge</literal>, <literal>==</literal>,
       <literal>=</literal>, <literal>eq</literal>,
       <literal>!=</literal>, <literal>&lt;&gt;</literal>,
       <literal>ne</literal>
       この引数を用いると、この関数はこの演算子により指定された関係が
       成り立つ場合に &true; 、そうでない場合に &false; を返します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>version_compare</function>は、最初のバージョンが二番目よりも小さい場合に
   -1、等しい場合に 0、二番目のほうが小さい場合に +1 を返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>version_compare</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
// -1 を表示します
echo version_compare("4.0.4", "4.0.6");

// これらはすべて 1 を表示します
echo version_compare("4.0.4", "4.0.6", "<");
echo version_compare("4.0.6", "4.0.6", "eq");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <constant>PHP_VERSION</constant> 定数には現在の
    PHP のバージョンが格納されます。
   </para>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
