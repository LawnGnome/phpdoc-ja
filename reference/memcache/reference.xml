<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.7 Maintainer: takagi Status: ready -->
<!-- Purpose: remote.other -->
<!-- Membership: pecl, external -->

 <reference id="ref.memcache">
  <title>Memcache 関数</title>
  <titleabbrev>Memcache</titleabbrev>

  <partintro>
   <section id="memcache.intro">
    &reftitle.intro;
    <para>
     Memcache モジュールは、memcached に対する手続き型および
     オブジェクト指向のインターフェイスを提供します。これは非常に効率的な
     キャッシュデーモンで、動的な web アプリケーションでの
     データベースの読み込み量を減らすように設計されています。
    </para>
    <para>
     memcached についてのより詳細な情報は <ulink
     url="&url.memcache;">&url.memcache;</ulink> にあります。
    </para>
   </section>

   <section id="memcache.requirements">
    &reftitle.required;
    <para>
     このモジュールは、その場でのデータ圧縮機能をサポートするために
     <ulink url="&url.zlib;">zlib</ulink> の関数を使用しています。
     このモジュールをインストールするには Zlib が必要となります。
    </para>
    <para>
     memcache 拡張モジュールを使用するには、PHP 4.3.3 以降が必要です。
    </para>
   </section>

   &reference.memcache.configure;
   &reference.memcache.constants;
   
   <section id="memcache.ini">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="memcache.resources">
    &reftitle.resources;
    <para>
     memcache モジュールで使用されるリソースは 1 種類で、それは
     キャッシュサーバとの接続を指す ID です。
    </para>
   </section>

   <section id="memcache.examples">
   &reftitle.examples;
    <para>
     <example>
      <title>memcache 拡張モジュールの概要</title>
      <programlisting role="php">
<![CDATA[
<?php

$memcache = new Memcache;
$memcache->connect('localhost', 11211) or die ("接続できませんでした");

$version = $memcache->getVersion();
echo "サーバのバージョン: ".$version."<br/>\n";

$tmp_object = new stdClass;
$tmp_object->str_attr = 'test';
$tmp_object->int_attr = 123;

$memcache->set('key', $tmp_object, false, 10) or die ("データをサーバに保存できませんでした");
echo "データをキャッシュに保存します (データの有効期限は 10 秒です)<br/>\n";

$get_result = $memcache->get('key');
echo "キャッシュから取得したデータ:<br/>\n";

var_dump($get_result);

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     上の例では、オブジェクトをキャッシュに保存した後に、改めて取得しなおします。
     オブジェクトやその他の非スカラー型のデータは、保存される前に
     シリアライズされます。そのため (接続 ID などの) リソース型を
     保存することはできません。
    </para>
   </section>

  </partintro>

  &reference.memcache.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
