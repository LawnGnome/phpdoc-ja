<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322131 Maintainer: takagi Status: ready -->
<chapter xml:id="mysqlnd.config" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

  &reftitle.runtime;
  &extension.runtime;

  <para>
  <table>
   <title>MySQL Native Driver 設定オプション</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="mysqlnd.collect-statistics">mysqlnd.collect_statistics</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>PHP 5.3.0 以降で利用可能。</entry>
     </row>
     <row>
      <entry><link linkend="mysqlnd.collect-memory-statistics">mysqlnd.collect_memory_statistics</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>PHP 5.3.0 以降で利用可能。</entry>
     </row>
     <row>
      <entry><link linkend="mysqlnd.debug">mysqlnd.debug</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>PHP 5.3.0 以降で利用可能。</entry>
     </row>
     <row>
      <entry><link linkend="mysqlnd.net-read-timeout">mysqlnd.net_read_timeout</link></entry>
      <entry>"31536000"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>PHP 5.3.0 以降で利用可能。</entry>
     </row>
     <row>
      <entry><link linkend="mysqlnd.net-cmd-buffer-size">mysqlnd.net_cmd_buffer_size</link></entry>
      <entry>5.3.0 - "2048", 5.3.1 - "4096"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>PHP 5.3.0 以降で利用可能。</entry>
     </row>
     <row>
      <entry><link linkend="mysqlnd.net-read-buffer-size">mysqlnd.net_read_buffer_size</link></entry>
      <entry>"32768"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>PHP 5.3.0 以降で利用可能。</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>

  &ini.descriptions.title;

  <para>
  <variablelist>
   <varlistentry xml:id="mysqlnd.collect-statistics">
    <term>
     <parameter>mysqlnd.collect_statistics</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      さまざまなクライアント統計情報の収集を有効にします。収集した情報には
      <function>mysqli_get_client_stats</function> や
      <function>mysqli_get_connection_stats</function>、
      <function>mysqli_get_cache_stats</function> でアクセスでき、
      <function>phpinfo</function> 関数の出力の
      <literal>mysqlnd</literal> セクションにも表示されます。
     </para>
     <para>
      この設定項目は、メモリ管理に関するもの以外のすべての
      <link linkend="mysqlnd.stats">MySQL Native Driver
      統計情報</link> を有効にします。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="mysqlnd.collect-memory-statistics">
    <term>
     <parameter>mysqlnd.collect_memory_statistics</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      さまざまなメモリ統計情報の収集を有効にします。収集した情報には
      <function>mysqli_get_client_stats</function> や
      <function>mysqli_get_connection_stats</function>、
      <function>mysqli_get_cache_stats</function> でアクセスでき、
      <function>phpinfo</function> 関数の出力の
      <literal>mysqlnd</literal> セクションにも表示されます。
     </para>
     <para>
      この設定項目は、<link linkend="mysqlnd.stats">MySQL Native Driver
      統計情報</link> 全体の中でメモリ管理に関する統計を有効にします。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="mysqlnd.debug">
    <term>
     <parameter>mysqlnd.debug</parameter> <type>string</type>
    </term>
    <listitem>
     <para>
      <literal>mysqlnd</literal> を使うすべての拡張モジュールからの通信を、指定したログファイルに記録します。
     </para>
     <para>
      この項目の書式は <literal>mysqlnd.debug =
      "option1[,parameter_option1][:option2[,parameter_option2]]"</literal>
      となります。
     </para>
     <para>
      書式文字列のオプションは、次のとおりです。
     </para>
     <itemizedlist>
      <listitem>
       <para>
        A[,file] - トレース出力を指定したファイルに追記します。
        また、データの追記はデータベースへの書き込みのたびに発生することを保証します。
        それを実現するために、トレースファイルをいったん閉じてから開きなおします
        (速度は遅くなります)。
        これで、アプリケーションがクラッシュしたときにも完全なログファイルを残せます。
       </para>
      </listitem>
      <listitem>
       <para>
        a[,file] - トレース出力を指定したファイルに追記します。
       </para>
      </listitem>
      <listitem>
       <para>
        d - DBUG_&lt;N&gt; マクロからの、現在の状態に関する出力を有効にします。
        キーワードのリストが後に続くことがあり、その場合は
        指定したキーワードの DBUG マクロからだけ出力させます。
        空のキーワードリストを指定すると、すべてのマクロを出力します。
       </para>
      </listitem>
      <listitem>
       <para>
        f[,functions] - デバッガの動作を、リストで指定した関数だけに絞り込みます。
        空の関数リストを指定すると、すべての関数を選択したことになります。
       </para>
      </listitem>
      <listitem>
       <para>
        F - デバッガからの出力の各行に、その出力の元となったマクロが含まれるソースファイル名を付加します。
       </para>
      </listitem>
      <listitem>
       <para>
        i - デバッガからの出力の各行に、現在のプロセスの PID を付加します。
       </para>
      </listitem>
      <listitem>
       <para>
        L - デバッガからの出力の各行に、その出力の元となったマクロが含まれるソースファイル内の行番号を付加します。
       </para>
      </listitem>
      <listitem>
       <para>
        n - デバッガからの出力の各行に、現在の関数のネストレベルを付加します。
       </para>
      </listitem>
      <listitem>
       <para>
        o[,file] - a[,file] と似ていますが、既存のファイルに追記するのではなく既存のファイルを上書きします。
       </para>
      </listitem>
      <listitem>
       <para>
        O[,file] - A[,file] と似ていますが、既存のファイルに追記するのではなく既存のファイルを上書きします。
       </para>
      </listitem>
      <listitem>
       <para>
        t[,N] - 関数の制御フローのトレースを有効にします。最大のネストレベルを N で指定します。
        N のデフォルトは 200 です。
       </para>
      </listitem>
      <listitem>
       <para>
        x - このオプションはプロファイリングを有効にします。
       </para>
      </listitem>
     </itemizedlist>
     <para>
      利用例は、このようになります。
     </para>
<programlisting>
<![CDATA[
d:t:x:O,/tmp/mysqlnd.trace
]]>
</programlisting>
     <note>
      <para>
       この機能は、デバッグビルド版の PHP でしか使えません。
       Microsoft Windows で使う場合は、Microsoft Visual C
       バージョン 9 以降でデバッグビルドした PHP を使わなければなりません。
      </para>
     </note>
     <para></para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="mysqlnd.net-read-timeout">
    <term>
     <parameter>mysqlnd.net_read_timeout</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      <literal>mysqlnd</literal> は、MySQL Client Library すなわち
      <literal>libmysql</literal> とは異なるネットワーク API を使います。
      <literal>mysqlnd</literal> は PHP ストリームを使いますが、
      <literal>libmysql</literal> は自前のラッパーを用意して操作レベルでのネットワークコールをしています。
      PHP のデフォルト設定では、ストリームの読み込みタイムアウトは 60 秒です。これは
      <filename>php.ini</filename> の
      <literal>default_socket_timeout</literal> で設定します。
      タイムアウト値を設定しなければ、すべてのストリームに対してデフォルト値が適用されます。
      <literal>mysqlnd</literal> は何も値を設定しないので、長いクエリを実行して
      <literal>default_socket_timeout</literal> 秒が経過すると、接続を切断して
      <quote>2006 - MySQL Server has gone away</quote> というエラーが発生します。
      MySQL Client Library のデフォルトのタイムアウトは
      365 * 24 * 3600 秒 (1 年) で、TCP/IP のタイムアウトなどのその他のタイムアウトが発生するのを待ちます。
      <literal>mysqlnd</literal> も同様に、非常に長いタイムアウトを使うことができます。この値は、
      <filename>php.ini</filename> の新しい項目
      <literal>mysqlnd.net_read_timeout</literal> で設定します。
      <literal>mysqlnd.net_read_timeout</literal> は、<literal>mysqlnd</literal>
      を使うすべての拡張モジュール (<literal>ext/mysql</literal> や
      <literal>ext/mysqli</literal>、<literal>PDO_MySQL</literal>) が利用します。
      <literal>mysqlnd</literal> は、PHP ストリームに対して
      <literal>mysqlnd.net_read_timeout</literal> を使うよう指示します。
      MySQL Client Library および PHP ストリームの
      <literal>MYSQL_OPT_READ_TIMEOUT</literal> とは微妙に違いがあることに注意しましょう。
      <literal>MYSQL_OPT_READ_TIMEOUT</literal> は
      TCP/IP 接続でしか動作しないとドキュメントに記載されており、
      MySQL 5.1.2 より前のバージョンでは Windows でしか使えません。
      PHP ストリームにはこの制限はありません。
      信じられないならストリームのドキュメントを調べるとよいでしょう。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="mysqlnd.net-cmd-buffer-size">
    <term>
     <parameter>mysqlnd.net_cmd_buffer_size</parameter>
     <type>long</type>
    </term>
    <listitem>
     <para>
      <literal>mysqlnd</literal> は、内部のコマンド/ネットワークバッファとして
      <filename>php.ini</filename> の <literal>mysqlnd.net_cmd_buffer_size</literal>
      で指定しただけのバイト数をすべての接続に対して確保します。
      MySQL Client Server プロトコルのコマンド、たとえば
      <literal>COM_QUERY</literal> (通常のクエリ)
      がこのバッファに収まらない場合、<literal>mysqlnd</literal>
      はコマンドの送信に必要なだけバッファを拡張します。
      ひとつの接続でバッファの拡張が発生するたびに
      <literal>command_buffer_too_small</literal> をひとつ加算します。
     </para>
     <para>
      ほとんどすべての接続で <literal>mysqlnd</literal> が
      <literal>mysqlnd.net_cmd_buffer_size</literal> の初期値よりバッファを拡張せざるを得なくなったら、
      デフォルトのサイズを大きくしてバッファの再割り当てを回避すべきでしょう。
     </para>
     <para>
      バッファのデフォルトサイズは、PHP 5.3.0 では 2048 バイトです。
      それより新しいバージョンでは、デフォルトが 4096 バイトになりました。
      デフォルトを変更するには、<filename>php.ini</filename> で
      <literal>mysqlnd.net_cmd_buffer_size</literal> を設定するか、あるいは
      <literal>mysqli_options(MYSQLI_OPT_NET_CMD_BUFFER_SIZE, int
      size)</literal> を使います。
     </para>
     <para>
      バッファサイズを 4096 より小さくすることはおすすめしません。というのも、
      <literal>mysqlnd</literal> が読み込む MySQL からの通信パケットの中には
      そのサイズに達するものもあるからです。
      PHP 5.3.0 では、バッファのサイズを超えるパケットを MySQL が送ってきても
      <literal>mysqlnd</literal> はバッファを拡張しませんでした。
      その結果、<literal>mysqlnd</literal> はパケットをデコードできずに
      クライアントアプリケーションがエラーを出すはめになっていました。
      PHP 5.3.0 における <literal>mysqlnd.net_cmd_buffer_size</literal>
      のデフォルトである 2048 バイトを超えるパケットが送られくる可能性があるのは、次の二つの場合だけです。
      ひとつは非常に巨大なエラーメッセージを送信してくる場合、
      もうひとつは、パケットに <literal>COM_LIST_FIELD</literal>
      (<literal>mysql_list_fields()</literal>) からのメタデータが含まれており、
      その中にデフォルト値が非常に長い (>1900 バイト) 文字列型のカラムのメタデータが含まれている場合です。
     </para>
     <para>
      PHP 5.3.2 以降、mysqlnd では 4096 バイト未満のバッファを設定できなくなりました。
     </para>
     <para>
      この値は <literal>mysqli_option(link,
      MYSQLI_OPT_NET_CMD_BUFFER_SIZE, size)</literal> でも変更できます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="mysqlnd.net-read-buffer-size">
    <term>
     <parameter>mysqlnd.net_read_buffer_size</parameter>
     <type>long</type>
    </term>
    <listitem>
     <para>
      MySQL コマンドパケットのボディを読み込むときの、読み込みチャンクの最大バイト数。
      MySQL クライアントサーバープロトコルは、すべてのコマンドをパケット内にカプセル化します。
      パケットは、小さなヘッダと実際の本体を含むボディで構成されています。
      ボディのサイズはヘッダに書き込まれています。
      <literal>mysqlnd</literal> はこのボディを、
      <literal>MIN(header.size, mysqlnd.net_read_buffer_size)</literal>
      バイトごとに分割して読み込みます。パケットのボディが
      <literal>mysqlnd.net_read_buffer_size</literal> バイトより長い場合は、
      <literal>mysqlnd</literal> は <literal>read()</literal>
      を複数回コールする必要があります。
     </para>
     <para>
      この値は <literal>mysqli_optionS(link,
      MYSQLI_OPT_NET_READ_BUFFER_SIZE, size)</literal>
      でも設定できます。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
