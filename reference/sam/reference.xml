<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: takagi Status: ready -->
 <reference id="ref.sam">
  <title>SAM - Simple Asynchronous Messaging: 単純な非同期メッセージング</title>
  <titleabbrev>SAM</titleabbrev>

  <partintro>
   <section id="sam.intro">
    &reftitle.intro;
    <para>
     <!-- This warns that the extension is experimental -->
     &warn.experimental;
     <!-- This is the paragraph text -->
    </para>
    <para>
     この拡張モジュールを使用すると、IBM WebSphere MQSeries
     製品群のようなメッセージングシステム・キューイングシステムに
     PHP スクリプトからアクセスできるようになります。このインターフェイスは、
     一般的な操作 (単純なテキストメッセージをキューに配送するなど)
     については限りなくシンプルに実行できるように設計されています。
     また、熟練者向けには、より複雑な操作もできるようになっています。
     大半のユーザが使用する場合には、複雑で膨大な設定オプションは無視することができます。
    </para>
   </section>  <!-- id=sam.intro -->

   <section id='sam.installation'>
    &reftitle.install;
    <para>
     ここにインストール手順を書きます。
    </para>
   </section>  <!-- id=sam.installation -->

   <section id='sam.usage'>
    <title>API の使用法</title>

    <section id='sam.connections'>
     <title>接続</title>
      <para>
       メッセージングやキューイングの関数を実行するには、
       メッセージングサーバとの接続が確立されていなければなりません。そのためには、
       SAMConnection オブジェクトを作成してその "connect" メソッドを実行します。
       その際に、接続用のプロパティを指定します。SAMConnection
       オブジェクトが破棄されるまでの間は、接続が使用可能となります。
       SAMConnection オブジェクトは、PHP スクリプトが終了する際に破棄されます。
     </para>
     <para>
       メッセージングサーバに接続する際にはデフォルトのプロパティを使用することもできますが、
       最低限、使用するプロトコルだけは PHP スクリプトで指定しなければなりません。
     </para>
     <para>
      <example>
       <title>接続の作成、およびデフォルト設定によるメッセージングサーバへの接続</title>
       <programlisting role='php'>
        <![CDATA[
<?php
   $conn = new SAMConnection();
   $conn->connect(SAM_WMQ);
?>
        ]]>
       </programlisting>
      </example>
     </para>
     <para>
      <example>
       <title>接続の作成、およびリモートのメッセージングサーバへの接続</title>
       <programlisting role='php'>
        <![CDATA[
<?php
   $conn = new SAMConnection();
   $conn->connect(SAM_WMQ, array(SAM_HOST => myhost.mycompany.com,
                                 SAM_PORT => 1506,
                                 SAM_BROKER => mybroker));
?>
        ]]>
       </programlisting>
      </example>
     </para>
    </section>  <!-- id=sam.connections -->

    <section id='sam.messages'>
     <title>メッセージ</title>
     <para>
      キューとのメッセージの送受信を行うのが SAMMessage オブジェクトです。
      SAMMessage オブジェクトは、メッセージ本文 (もしあれば)
      とそのメッセージに関連するヘッダプロパティをカプセル化します。
      SAMMessage オブジェクトは、メッセージング操作の際のパラメータ、
      そしてその返り値の両方に用いられます。
     </para>
     <para>
      <example>
       <title>単純なテキストのメッセージの作成</title>
       <programlisting role="php">
        <![CDATA[
<?php
   $msg = new SAMMessage('This is a simple text message');
?>
        ]]>
       </programlisting>
      </example>
     </para>
     <para>
      メッセージにはヘッダプロパティを関連付けることができます。
      これは、メッセージの配送方法を制御したり、
      受け取り側のアプリケーションに詳しい情報を提供したりするものです。
      デフォルトでは、メッセージのプロパティは文字列として配送されます。
      この場合は、プロパティを設定する際に次のような簡単な構文を使用します。
     </para>
     <para>
      <example>
       <title>デフォルト構文による、テキスト形式のプロパティの設定</title>
       <programlisting role="php">
<![CDATA[
<?php
   $msg->header->myPropertyName = 'textData';
?>
]]>
       </programlisting>
      </example>
     </para>
     <para>
      デフォルト以外の構文で使用する型情報を渡す場合は、値と型情報を連想配列で渡します。
     </para>
     <para>
      <example>
       <title>型ヒントを使用したプロパティの設定</title>
       <programlisting role="php">
<![CDATA[
<?php
   $msg->header->myPropertyName = (3.14159, SAM_FLOAT);
?>
]]>
       </programlisting>
      </example>
     </para>
     <para>
      プロパティは、メッセージのヘッダから取り出すことができます。
     </para>
     <para>
      <example>
       <title>メッセージのヘッダからのプロパティの取得</title>
       <programlisting role="php">
<![CDATA[
<?php
   $myProperty = $msg->header->myPropertyName;
?>
]]>
       </programlisting>
      </example>
     </para>
    </section>  <!-- id=sam.messages -->

    <section id='sam.operations'>
     <title>メッセージング操作</title>
     <para>
      すべてのメッセージング操作は、接続オブジェクトのメソッドをコールすることで行います。
      キューにメッセージを追加するには "send" メソッドを使用し、
      キューからメッセージを取得するには "receive" メソッドを使用します。
      その他のメソッドには、配信や購読機能、
      そしてトランザクションの境界の制御などがあります。
     </para>
     <para>
      <example>
       <title>キューへのメッセージの追加および応答の取得</title>
       <programlisting role="php">
        <![CDATA[
<?php
   $msg = new SAMMessage('This is a simple text message');
   $msg->header->SAM_REPLY_TO = 'queue://receive/test';
   $correlid = $conn->send('queue://send/test', $msg);

   if (!$correlid) {
     // 送信に失敗しました!
     echo "Send failed ($conn->errno) $conn->error";
   } else {
     $resp = $conn->receive('queue://receive/test', array(SAM_SELECT => $correlid));
   }
?>
        ]]>
       </programlisting>
      </example>
     </para>
    </section>  <!-- id=sam.operations -->

    <section id='sam.errors'>
     <title>エラー処理</title>
     <para>
      SAMConnection のメソッドでメッセージング操作を行うものはすべて、
      リクエスト処理中にエラーが発生すると &false; を返します。
      さらに SAMConnection オブジェクトはふたつのプロパティ
      "errno" および "error" を保持しています。これらはそれぞれ、
      接続上でおこった最後のエラーのエラー番号およびエラー内容のテキストを表します。
     </para>
     <para>
      <example>
       <title>結果を返さないメソッドからのエラーの処理</title>
       <programlisting role="php">
        <![CDATA[
<?php
   if (!$conn->commit()) {
     // コミットに失敗しました!
     echo "Commit failed ($conn->errno) $conn->error";
   }
?>
        ]]>
       </programlisting>
      </example>
     </para>
     <para>
      <example>
       <title>結果を返すメソッドからのエラーの処理</title>
       <programlisting role="php">
        <![CDATA[
<?php
   $correlid = $conn->send('queue://send/test', $msg);

   if (!$correlid) {
     // 送信に失敗しました!
     echo "Send failed ($conn->errno) $conn->error";
   } else {
     ...
   }
?>
        ]]>
       </programlisting>
      </example>
     </para>
    </section>  <!-- id=sam.errors -->
   </section>  <!-- id=sam.usage -->

   <!-- class definition section -->
   <section id='sam.classes'>
    &reftitle.classes;

<!-- Connection class    *************************************************** -->
    <section id='sam.class.Connection'>
     <title><classname>SAMConnection</classname></title>
     <para>
      メッセージングサーバとの接続を表すオブジェクトです。
     </para>

     <section id='sam.class.Connection.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-constructor'>new SAMConnection</link> -
         新しい接続オブジェクトを作成し、メッセージング環境への接続を可能にします。
        </para>
       </listitem>
      </itemizedlist>
     </section>  <!-- id=sam.class.Connection.constructor -->

     <section id='sam.class.Connection.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-commit'>commit</link>
         - 現在作業中の内容をコミット (正常に完了) するメソッドです。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-connect'>connect</link>
         - PHP スクリプトをメッセージングサーバに接続させるメソッドです。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-disconnect'>disconnect</link>
         - PHP スクリプトとメッセージングサーバとの接続を解除するメソッドです。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-isConnected'>isConnected</link>
         - PHP スクリプトがメッセージングサーバと接続しているかどうかを調べるメソッドです。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-peek'>peek</link>
         - メッセージをキューから取得し、それをキューに残したままにしておくメソッドです。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-receive'>receive</link>
         - メッセージをキューあるいは購読から取得するメソッドです。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-remove'>remove</link>
         - メッセージをキューから削除するメソッドです。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-rollback'>rollback</link>
         - 現在作業中の内容をキャンセル (ロールバック) するメソッドです。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-send'>send</link>
         - キューにメッセージを送信したり、トピックの投稿したりするメソッドです。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-subscribe'>subscribe</link>
         - ひとつあるいは複数のトピックを購読するためのメソッドです。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-unsubscribe'>unsubscribe</link>
         - ひとつあるいは複数のトピックの購読を解除するメソッドです。
        </para>
       </listitem>
      </itemizedlist>
     </section>  <!-- id=sam.class.Connection.methods -->

     <section id='sam.class.Connection.properties'>
      &reftitle.properties;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-errno'>errno</link> -
         この接続で最後に発生したエラーのエラーコードを表す数値です。
         直近の処理が正常に終了した場合は、このプロパティは 0 となります。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Connection-error'>error</link> -
         この接続で最後に発生したエラーの説明テキストです。
        </para>
       </listitem>
      </itemizedlist>
     </section>    <!-- id=sam.class.Connection.properties -->
    </section>   <!-- id=sam.class.Connection -->

<!-- Message class    *************************************************** -->
    <section id='sam.class.Message'>
     <title><classname>SAMMessage</classname></title>
     <para>
      送受信するメッセージを表すオブジェクトです。
     </para>

     <section id='sam.class.Message.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend='function.SAM-Message-constructor'>new SAMMessage</link> -
         新しいメッセージを作成します。
        </para>
       </listitem>
      </itemizedlist>
     </section>  <!-- id=sam.class.Message.constructor -->

     <section id='sam.class.Message.properties'>
      &reftitle.properties;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend='function.SAM-Message-body'>body</link> -
         メッセージの本文です。
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend='function.SAM-Message-header'>header</link> -
         メッセージのヘッダプロパティです。
        </para>
       </listitem>
      </itemizedlist>
     </section>  <!-- id=sam.class.Message.methods -->
    </section>   <!-- id=sam.class.Message -->

   </section>    <!-- id=sam.classes -->


   <!-- Include the stuff from constants.xml? -->
  &reference.sam.constants;

  </partintro>

  <!-- This seems to create the table of contents -->
 &reference.sam.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
