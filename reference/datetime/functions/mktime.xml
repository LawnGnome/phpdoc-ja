<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 286620 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xml:id="function.mktime" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mktime</refname>
  <refpurpose>日付を Unix のタイムスタンプとして取得する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>mktime</methodname>
   <methodparam choice="opt"><type>int</type><parameter>hour</parameter><initializer>date("H")</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>minute</parameter><initializer>date("i")</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>second</parameter><initializer>date("s")</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>month</parameter><initializer>date("n")</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>day</parameter><initializer>date("j")</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>year</parameter><initializer>date("Y")</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>is_dst</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   与えられた引数に従って UNIX のタイムスタンプを返します。
   このタイムスタンプは、Unix epoch(1970年1月1日00:00:00 GMT)から
   指定された時刻までの通算秒を表す長整数です。
  </para>
  <para>
   引数は右から順に省略することができます。省略された引数は、
   ローカルの日付と時刻に従って、現在の値にセットされます。
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    PHP 5.1 以降、引数なしでコールすると <function>mktime</function>
    は <constant>E_STRICT</constant> notice を発行するようになりました。かわりに
    <function>time</function> 関数を使用しましょう。
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hour</parameter></term>
     <listitem>
      <para>
       時
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>minute</parameter></term>
     <listitem>
      <para>
       分
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>second</parameter></term>
     <listitem>
      <para>
       秒
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>month</parameter></term>
     <listitem>
      <para>
       月
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>day</parameter></term>
     <listitem>
      <para>
       日
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>year</parameter></term>
     <listitem>
      <para>
       年。2 桁または 4 桁の値を指定可能で、
       0-69 の間の値は 2000-2069 に、70-100 は 1970-2000 にマップされます。
       今日最も一般的なシステム、すなわち time_t が 32 ビットの符号付き整数である
       システムでは <parameter>year</parameter> として有効な範囲は 1901 から
       2038 の間です。しかし、PHP 5.1.0 より前のバージョンではこの範囲が
       1970 から 2038 に制限されているシステム (たとえば Windows) もありました。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_dst</parameter></term>
     <listitem>
      <para>
       このパラメータはサマータイム (DST) の時に1にセットされ、
       そうでない時に0、サマータイムであるかどうかが不明である場合に-1
       にセットされます。
       不明な場合、PHP はサマータイムかどうか推測しようとします。
       PHP を実行しているシステムで DST が有効になっている、もしくは
       <parameter>is_dst</parameter> が 1 にセットされている場合、
       一部の時刻は有効になりません。
       もし DST が有効で例えば 2:00 の場合、2:00 から 3:00 までの全ての時刻は
       無効になり、<function>mktime</function> は不確定な値 (通常は負数)
       を返します。いくつかのシステム (例えば Solaris 8) は真夜中に DST
       を有効にしますので、DST が有効なときの 0:30 は前日の 23:30
       と評価されます。
      </para>
      <note>
       <para>
        PHP 5.1.0 以降、このパラメータは廃止されました。その結果、
        新しいタイムゾーン処理機能がかわりに使用されます。
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>mktime</function> は与えられた引数の Unix
   タイムスタンプを返します。引数が不正な場合、
   この関数は &false; を返します（PHP 5.1 より前のバージョンでは
   <literal>-1</literal> を返していました）。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &date.timezone.errors.description;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        <function>mktime</function> は、
        <parameter>is_dst</parameter> パラメータを使用した場合に
        <constant>E_DEPRECATED</constant> をスローするようになりました。
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        <parameter>is_dst</parameter> パラメータは廃止されました。
        エラー時には <literal>-1</literal> ではなく &false;
        を返すようになりました。
        年月日がすべてゼロとすることが可能になりました。
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        引数なしでコールすると、<function>mktime</function>
        は <constant>E_STRICT</constant> notice を発行するようになりました。かわりに
        <function>time</function> 関数を使用しましょう。
       </entry>
      </row>

      &date.timezone.errors.changelog;

     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mktime</function> の基本的な例</title>
    <programlisting role="php">
<![CDATA[
<?php
// デフォルトのタイムゾーンを設定します。PHP 5.1 以降で使用可能です
date_default_timezone_set('UTC');

// 出力: July 1, 2000 is on a Saturday
echo "July 1, 2000 is on a " . date("l", mktime(0, 0, 0, 7, 1, 2000));

// 出力例: 2006-04-05T01:02:03+00:00
echo date('c', mktime(1, 2, 3, 4, 5, 2006));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>mktime</function> の例</title>
    <para>
     <function>mktime</function> は入力日付の有効性を確認しており、
     範囲外の入力を自動的に修正して計算してくれるので便利です。
     例えば、以下の各行はいずれも文字列 "Jan-01-1998"を出力します。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
echo date("M-d-Y", mktime(0, 0, 0, 12, 32, 1997));
echo date("M-d-Y", mktime(0, 0, 0, 13, 1, 1997));
echo date("M-d-Y", mktime(0, 0, 0, 1, 1, 1998));
echo date("M-d-Y", mktime(0, 0, 0, 1, 1, 98));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>次月の最後の日</title>
    <para>
     指定した月の最後の日は次の月の -1 番目の日ではなく、"0" 番目の日
     として表すことが可能です。以下の例はともに文字列"The last day in
     Feb 2000 is: 29" を出力します。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$lastday = mktime(0, 0, 0, 3, 0, 2000);
echo strftime("Last day in Feb 2000 is: %d", $lastday);
$lastday = mktime(0, 0, 0, 4, -31, 2000);
echo strftime("Last day in Feb 2000 is: %d", $lastday);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    PHP 5.1.0 より前のバージョンでは、負の値のタイムスタンプは Windows の
    どのバージョンにおいてもサポートされていませんでした。
    したがって、年の有効範囲は 1970 年から 2038 年の間のみに限定されていました。
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>gmmktime</function></member>
    <member><function>date</function></member>
    <member><function>time</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
