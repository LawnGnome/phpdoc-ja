<?xml version="1.0" encoding="utf-8"?>
<!-- splitted from ./ja/functions/datetime.xml, last change in rev 1.1 -->
<!-- EN-Revision: 1.16 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry id="function.mktime">
 <refnamediv>
  <refname>mktime</refname>
  <refpurpose>日付を UNIX のタイムスタンプとして取得する</refpurpose>
 </refnamediv>
 <refsect1>
  <title>説明</title>
  <methodsynopsis>
   <type>int</type><methodname>mktime</methodname>
   <methodparam choice="opt"><type>int</type><parameter>hour</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>minute</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>second</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>month</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>day</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>year</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>is_dst</parameter></methodparam>
  </methodsynopsis>
  <para>
   <emphasis>警告:</emphasis>
   引数の順番が、通常の UNIX mktime() の引数の順番と
   異なっていることに注意してください。
   このことは、(以下に示すように)パラメータを右から左に
   省略出来るようにすることに役立っているわけではありません。
   これらの値をスクリプトで混用するというのは、ありがちなエラーです。
  </para>
  <para>
   与えられた引数に従って UNIX のタイムスタンプを返します。
   このタイムスタンプは、Unix epoch(1970年1月1日00:00:00 GMT)から
   指定された時刻までの通算秒を表す長整数です。
  </para>
  <para>
   引数は右から順に省略することができます。省略された引数は、
   ローカルの日付と時刻に従って、現在の値にセットされます。
  </para>
  <para>
   <parameter>is_dst</parameter> はサマータイム (DST) の時に1にセットされ、
   そうでない時に0に、サマータイムであるかどうかが不明である場合に-1
   にセットされます。
  </para>
  <para>
   PHP を実行しているシステムで DST が有効になっている、もしくは
   <parameter>is_dst</parameter> が 1 にセットされている場合、
   一部の時刻は有効になりません。
   もし DST が有効で例えば 2:00 の場合、2:00 から 3:00 までの全ての時刻は
   無効になり、<function>mktime</function> は不確定な値 (通常は負数)
   を返します。いくつかのシステム (例えば Solaris 8) は真夜中に DST
   を有効にしますので、DST が有効なときの 0:30 は前日の 23:30 と評価されます。
  </para>
  <note>
   <para>
    <parameter>is_dst</parameter> は　3.0.10　で追加されました。
   </para>
  </note>
  <para>
   <function>mktime</function> は入力日付の有効性を確認しており、
   範囲外の入力を自動的に修正して計算してくれるので便利です。
   例えば、以下の各行はいずれも文字列 "Jan-01-1998"を出力します。
   <example>
    <title><function>mktime</function>の例</title>
    <programlisting role="php">
<![CDATA[
<?php
echo date("M-d-Y", mktime(0, 0, 0, 12, 32, 1997));
echo date("M-d-Y", mktime(0, 0, 0, 13, 1, 1997));
echo date("M-d-Y", mktime(0, 0, 0, 1, 1, 1998));
echo date("M-d-Y", mktime(0, 0, 0, 1, 1, 98));
?>
]]>
    </programlisting>
   </example>
   <parameter>year</parameter> は2桁または4桁の値を指定可能で、
   0-69の間の値は2000-2069に、70-99は1970-1999にマップされます。
   (今日最も一般的なtime_tが32ビットの符号付き整数であるシステムで、
   <parameter>year</parameter>として有効な範囲は1901から2038の間です)
  </para>
  <para>
   <note>
    <title>Windows</title>
    <simpara>
     負の値のタイムスタンプはWindowsのどのバージョンにおいてもサポートされていません。
     したがって、年の有効範囲は1970年から2038年の間のみです。
    </simpara>
   </note>
  </para>
  <para>
   指定した月の最後の日は次の月の -1 番目の日ではなく、"0" 番目の日
   として表すことが可能です。以下の例はともに文字列"The last day in
   Feb 2000 is: 29" を出力します。
   <example>
    <title>次の月の最後の日</title>
    <programlisting role="php">
<![CDATA[
<?php
$lastday = mktime(0, 0, 0, 3, 0, 2000);
echo strftime("Last day in Feb 2000 is: %d", $lastday);

$lastday = mktime(0, 0, 0, 4, -31, 2000);
echo strftime("Last day in Feb 2000 is: %d", $lastday);
?>
]]>
    </programlisting>
   </example>
  </para>
  <simpara>
   year、month、dayをゼロとした日付は、不正と判定されます。
   (さもなくば、30.11.1999と見なされますが、意図した結果にはならない
   でしょう。)
  </simpara>
  <para>
   <function>gmmktime</function>,
   <function>date</function>, <function>time</function>も参照ください。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
