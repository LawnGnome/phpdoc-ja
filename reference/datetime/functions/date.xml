<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 313168 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka,takagi -->
<refentry xml:id="function.date" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>date</refname>
  <refpurpose>ローカルの日付/時刻を書式化する</refpurpose>
 </refnamediv>
  
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>date</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timestamp</parameter><initializer>time()</initializer></methodparam>
  </methodsynopsis>
  <para>
   指定された引数 <parameter>timestamp</parameter> を、与えられた
   フォーマット文字列によりフォーマットし、日付文字列を返します。
   タイムスタンプが与えられない場合は、現在の時刻が使われます。
   つまり <parameter>timestamp</parameter> はオプションであり
   そのデフォルト値は <function>time</function> の値です。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       出力される日付文字列の書式。以下のオプションを参照ください。
       <link linkend="datetime.constants.types">定義済みの定数</link>
       も用意されており、たとえば <constant>DATE_RSS</constant> はフォーマット文字列
       <literal>'D, d M Y H:i:s'</literal> と同じ意味になります。
      </para>
      <para>
       <table>
        <title>以下の文字が <parameter>format</parameter>
        パラメータ文字列として認識されます</title>
        <tgroup cols="3">
         <thead>
          <row>
           <entry><parameter>format</parameter> 文字</entry>
           <entry>説明</entry>
           <entry>戻り値の例</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry align="center"><emphasis>日</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>d</literal></entry>
           <entry>日。二桁の数字（先頭にゼロがつく場合も）</entry>
           <entry><literal>01</literal> から <literal>31</literal></entry>
          </row>
          <row>
           <entry><literal>D</literal></entry>
           <entry>曜日。3文字のテキスト形式。</entry>
           <entry><literal>Mon</literal> から <literal>Sun</literal></entry>
          </row>
          <row>
           <entry><literal>j</literal></entry>
           <entry>日。先頭にゼロをつけない。</entry>
           <entry><literal>1</literal> から <literal>31</literal></entry>
          </row>
          <row>
           <entry><literal>l</literal> (小文字の 'L')</entry>
           <entry>曜日。フルスペル形式。</entry>
           <entry><literal>Sunday</literal> から <literal>Saturday</literal></entry>
          </row>
          <row>
           <entry><literal>N</literal></entry>
           <entry>ISO-8601 形式の、曜日の数値表現
           (PHP 5.1.0 で追加)。</entry>
           <entry><literal>1</literal>（月曜日）から <literal>7</literal>（日曜日）</entry>
          </row>
          <row>
           <entry><literal>S</literal></entry>
           <entry>英語形式の序数を表すサフィックス。2 文字。</entry>
           <entry>
            <literal>st</literal>, <literal>nd</literal>, <literal>rd</literal>
            または   <literal>th</literal>。  <literal>j</literal>と一緒に使用する
            ことができる。
           </entry>
          </row>
          <row>
           <entry><literal>w</literal></entry>
           <entry>曜日。数値。</entry>
           <entry><literal>0</literal> (日曜)から <literal>6</literal> (土曜)</entry>
          </row>
          <row>
           <entry><literal>z</literal></entry>
           <entry>年間の通算日。数字。(ゼロから開始)</entry>
           <entry><literal>0</literal> から <literal>365</literal></entry>
          </row>
          <row>
           <entry align="center"><emphasis>週</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>W</literal></entry>
           <entry>ISO-8601 月曜日に始まる年単位の週番号 (PHP 4.1.0 で追加)</entry>
           <entry>例: <literal>42</literal> (年の第 42 週目)</entry>
          </row>
          <row>
           <entry align="center"><emphasis>月</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>F</literal></entry>
           <entry>月。フルスペルの文字。</entry>
           <entry><literal>January</literal> から <literal>December</literal></entry>
          </row>
          <row>
           <entry><literal>m</literal></entry>
           <entry>月。数字。先頭にゼロをつける。</entry>
           <entry><literal>01</literal> から <literal>12</literal></entry>
          </row>
          <row>
           <entry><literal>M</literal></entry>
           <entry>月。3 文字形式。</entry>
           <entry><literal>Jan</literal> から <literal>Dec</literal></entry>
          </row>
          <row>
           <entry><literal>n</literal></entry>
           <entry>月。数字。先頭にゼロをつけない。</entry>
           <entry><literal>1</literal> から <literal>12</literal></entry>
          </row>
          <row>
           <entry><literal>t</literal></entry>
           <entry>指定した月の日数。</entry>
           <entry><literal>28</literal> から <literal>31</literal></entry>
          </row>
          <row>
           <entry align="center"><emphasis>年</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>L</literal></entry>
           <entry>閏年であるかどうか。</entry>
           <entry><literal>1</literal>なら閏年。<literal>0</literal>なら閏年ではない。</entry>
          </row>
          <row>
           <entry><literal>o</literal></entry>
           <entry>ISO-8601 形式の年。これは
            <literal>Y</literal> ほぼ同じだが、ISO 週番号
           （<literal>W</literal>）が前年あるいは翌年に属する場合がある点で
            異なる（PHP 5.1.0 で追加）。</entry>
           <entry>例: <literal>1999</literal> あるいは <literal>2003</literal></entry>
          </row>
          <row>
           <entry><literal>Y</literal></entry>
           <entry>年。4 桁の数字。</entry>
           <entry>例: <literal>1999</literal>または<literal>2003</literal></entry>
          </row>
          <row>
           <entry><literal>y</literal></entry>
           <entry>年。2 桁の数字。</entry>
           <entry>例: <literal>99</literal> または <literal>03</literal></entry>
          </row>
          <row>
           <entry align="center"><emphasis>時</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>a</literal></entry>
           <entry>午前または午後（小文字）</entry>
           <entry><literal>am</literal> または <literal>pm</literal></entry>
          </row>
          <row>
           <entry><literal>A</literal></entry>
           <entry>午前または午後（大文字）</entry>
           <entry><literal>AM</literal> または <literal>PM</literal></entry>
          </row>
          <row>
           <entry><literal>B</literal></entry>
           <entry>Swatch インターネット時間</entry>
           <entry><literal>000</literal> から <literal>999</literal></entry>
          </row>
          <row>
           <entry><literal>g</literal></entry>
           <entry>時。12時間単位。先頭にゼロを付けない。</entry>
           <entry><literal>1</literal> から <literal>12</literal></entry>
          </row>
          <row>
           <entry><literal>G</literal></entry>
           <entry>時。24時間単位。先頭にゼロを付けない。</entry>
           <entry><literal>0</literal> から <literal>23</literal></entry>
          </row>
          <row>
           <entry><literal>h</literal></entry>
           <entry>時。数字。12 時間単位。</entry>
           <entry><literal>01</literal> から <literal>12</literal></entry>
          </row>
          <row>
           <entry><literal>H</literal></entry>
           <entry>時。数字。24 時間単位。</entry>
           <entry><literal>00</literal> から <literal>23</literal></entry>
          </row>
          <row>
           <entry><literal>i</literal></entry>
           <entry>分。先頭にゼロをつける。</entry>
           <entry><literal>00</literal> から <literal>59</literal></entry>
          </row>
          <row>
           <entry><literal>s</literal></entry>
           <entry>秒。先頭にゼロをつける。</entry>
           <entry><literal>00</literal> から <literal>59</literal></entry>
          </row>
          <row>
           <entry><literal>u</literal></entry>
           <entry>マイクロ秒 (PHP 5.2.2 で追加)。</entry>
           <entry>例: <literal>654321</literal></entry>
          </row>
          <row>
           <entry align="center"><emphasis>タイムゾーン</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>e</literal></entry>
           <entry>タイムゾーン識別子（PHP 5.1.0 で追加）</entry>
           <entry>例: <literal>UTC</literal>, <literal>GMT</literal>, <literal>Atlantic/Azores</literal></entry>
          </row>
          <row>
           <entry><literal>I</literal> (大文字の i)</entry>
           <entry>サマータイム中か否か</entry>
           <entry><literal>1</literal>ならサマータイム中。 <literal>0</literal>ならそうではない。</entry>
          </row>
          <row>
           <entry><literal>O</literal></entry>
           <entry>グリニッジ標準時 (GMT) との時差</entry>
           <entry>例: <literal>+0200</literal></entry>
          </row>
          <row>
           <entry><literal>P</literal></entry>
           <entry>グリニッジ標準時 (GMT) との時差。時間と分をコロンで区切った形式 (PHP 5.1.3 で追加)。</entry>
           <entry>例: <literal>+02:00</literal></entry>
          </row>
          <row>
           <entry><literal>T</literal></entry>
           <entry>タイムゾーンの略称</entry>
           <entry>例: <literal>EST</literal>, <literal>MDT</literal> ...</entry>
          </row>
          <row>
           <entry><literal>Z</literal></entry>
           <entry>タイムゾーンのオフセット秒数。
            UTC の西側のタイムゾーン用のオフセットは常に負です。そして、
            UTC の東側のオフセットは常に正です。</entry>
           <entry><literal>-43200</literal> から <literal>50400</literal></entry>
          </row>
          <row>
           <entry align="center"><emphasis>全ての日付/時刻</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>c</literal></entry>
           <entry>ISO 8601 日付 (PHP 5 で追加されました)</entry>
           <entry>2004-02-12T15:19:21+00:00</entry>
          </row>
          <row>
           <entry><literal>r</literal></entry>
           <entry><link xlink:href="&url.rfc;2822">RFC 2822</link> フォーマットされた日付</entry>
           <entry>例: <literal>Thu, 21 Dec 2000 16:01:07 +0200</literal></entry>
          </row>
          <row>
           <entry><literal>U</literal></entry>
           <entry>Unix Epoch (1970 年 1 月 1 日 0 時 0 分 0 秒) からの秒数</entry>
           <entry><function>time</function> も参照</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <para>
       フォーマット文字列中の認識されない文字は、そのまま表示されます。
       <literal>Z</literal> 形式は、
       <function>gmdate</function> で使用した場合、常に <literal>0</literal>
       を返します。
      </para>       
      <note>
       <para>
        この関数が受け付けるのは <type>integer</type>
        のタイムスタンプだけです。したがって、書式指定文字
        <literal>u</literal> が有用となるのは
        <function>date_create</function> で作成したタイムスタンプを用いて
        <function>date_format</function> を使用した場合のみです。
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    &date.timestamp.description;
   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   日付を表す文字列を返します。
   <parameter>timestamp</parameter> に数字以外が使用された場合は
   &false; が返され、<constant>E_WARNING</constant>
   レベルのエラーが発生します。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
   
   &date.timezone.errors.description;
 
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        有効なタイムスタンプの範囲は、通常 Fri, 13 Dec 1901
        20:45:54 GMT から Tue, 19 Jan 2038 03:14:07 GMT までです
        (これらの日付は、32 ビット符号付き整数の最小および最大値に
        対応します)。
        しかし、PHP 5.1 より前のバージョンでは、システム環境によっては
        (例: Windows) この範囲が 1970 年 1 月 1 日から 2038 年 1 月 19 日
        までに制限されます。
       </entry>
      </row>
      
      &date.timezone.errors.changelog;

      <row>
       <entry>5.1.1</entry>
       <entry>
        PHP 5.1.1 以降、<parameter>format</parameter> パラメータで標準的な
        日付/時刻フォーマットを指定する際に有用な <link
        linkend="datetime.constants">定数</link>がいくつか追加されました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>date</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
// 使用するデフォルトのタイムゾーンを指定します。PHP 5.1 以降で使用可能です。
date_default_timezone_set('UTC');


// 結果は、たとえば Monday のようになります。
echo date("l");

// 結果は、たとえば Monday 8th of August 2005 03:12:46 PM のようになります。
echo date('l jS \of F Y h:i:s A');

// 結果は July 1, 2000 is on a Saturday となります。
echo "July 1, 2000 is on a " . date("l", mktime(0, 0, 0, 7, 1, 2000));

/* 書式指定パラメータに、定数を使用します。 */
// 結果は、たとえば Mon, 15 Aug 2005 15:12:46 UTC のようになります。
echo date(DATE_RFC822);

// 結果は、たとえば 2000-07-01T00:00:00+00:00 のようになります。
echo date(DATE_ATOM, mktime(0, 0, 0, 7, 1, 2000));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   前にバックスラッシュを付けてエスケープすることにより、
   フォーマット文字列として認識される文字が展開されることを防止することができます。
   バックスラッシュ付きの文字は既に特別なシーケンスであり、
   バックスラッシュもエスケープすることが必要となる可能性があります。
   <example>
    <title><function>date</function> の文字をエスケープする</title>
    <programlisting role="php">
<![CDATA[
<?php
// Wednesday the 15th のように出力
echo date('l \t\h\e jS');
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <function>date</function> と <function>mktime</function>
   の両方を用いて、未来または過去の日付を知ることができます。
   <example>
    <title><function>date</function> と <function>mktime</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$tomorrow  = mktime(0, 0, 0, date("m")  , date("d")+1, date("Y"));
$lastmonth = mktime(0, 0, 0, date("m")-1, date("d"),   date("Y"));
$nextyear  = mktime(0, 0, 0, date("m"),   date("d"),   date("Y")+1);
?>
]]>
    </programlisting>
   </example>
   <note>
    <para>
     サマータイムがあるため、日付や月の秒数を単純にタイムスタンプに
     可減算するよりもより信頼性があります。
    </para>
   </note>
  </para>
  <para>
   <function>date</function> フォーマットのいくつかの例を示します。
   現在の実装で特別な意味がある文字や今後の PHP のバージョンで意味が
   割り付けられるであろう文字については、望ましくない結果を避けるために
   エスケープする必要があることに注意してください。エスケープを
   する際には、改行文字 \n のような文字を回避するために
   シングルクォートを使用してください。
   <example>
    <title><function>date</function> のフォーマット指定</title>
    <programlisting role="php">
<![CDATA[
<?php
// 今日は March 10th, 2001, 5:16:18 pm であり、
// またタイムゾーンは Mountain Standard Time (MST) であるものとします

$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm
$today = date("m.d.y");                         // 03.10.01
$today = date("j, n, Y");                       // 10, 3, 2001
$today = date("Ymd");                           // 20010310
$today = date('h-i-s, j-m-y, it is w Day');     // 05-16-18, 10-03-01, 1631 1618 6 Satpm01
$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // it is the 10th day.
$today = date("D M j G:i:s T Y");               // Sat Mar 10 17:16:18 MST 2001
$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:03:18 m is month
$today = date("H:i:s");                         // 17:16:18
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   他の言語で日付をフォーマットするためには、<function>date</function> のかわりに
   <function>setlocale</function> および <function>strftime</function>
   関数を使用する必要があります。
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    日付の文字列表現からタイムスタンプを生成するには、
    <function>strtotime</function> が使用できるでしょう。
    さらに、いくつかのデータベースは（MySQL の
    <link xlink:href="&url.mysql.docs.date;">UNIX_TIMESTAMP</link> 関数の
    ような）日付フォーマットからタイムスタンプへの変換関数を有しています。
   </para>
  </note>
  <tip>
   <para>
    PHP 5.1 以降、<varname>$_SERVER['REQUEST_TIME']</varname>
    によってリクエスト開始時のタイムスタンプが取得できるようになりました。
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>gmdate</function></member>
    <member><function>idate</function></member>
    <member><function>getdate</function></member>
    <member><function>getlastmod</function></member>
    <member><function>mktime</function></member>
    <member><function>strftime</function></member>
    <member><function>time</function></member>
    <member><function>strtotime</function></member>
    <member><link linkend="datetime.constants.types">定義済みの定数</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
