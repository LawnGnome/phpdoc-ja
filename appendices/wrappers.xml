<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- sync: 1.22 -->
 <appendix id="wrappers">
  <title>サポートされるプロトコル/ラッパー</title>
  <para>
   <function>fopen</function> and <function>copy</function>のようなファ
   イルシステム関数で使用するためにPHPに組み込まれたURL型式のプロトコ
   ルの一覧を示します。これらのラッパーに加えて、PHP 4.3.0以降では、PHP
   スクリプトと<function>stream_register_wrapper</function>により、ユー
   ザ独自のラッパーを書くことができます。
  </para>

  <section id="wrappers.http">
   <title>HTTPおよびHTTPS</title>
   <simpara>PHP 3, PHP 4。PHP 4.3以降では <filename>https://</filename></simpara>
   
   <itemizedlist>
    <listitem><simpara><filename>http://example.com</filename></simpara></listitem>
    <listitem><simpara><filename>http://user:password@example.com</filename></simpara></listitem>
    <listitem><simpara><filename>https://example.com</filename></simpara></listitem>
    <listitem><simpara><filename>https://user:password@example.com</filename></simpara></listitem>
   </itemizedlist>

   <simpara>
    HTTP 1.0によりHTTP GETメソッドを用いてファイル/リソースに読み込み
    のみのアクセスが可能です。仮想ホストにホスト名でアクセスするために、
    <literal>Host:</literal> ヘッダが送信されます。
    iniファイルまたはストリームコンテキストにより、
    <link linkend="ini.user-agent">user_agent</link>文字列を設定してい
    る場合、リクエストの中にも含まれます。
   </simpara>
   <simpara>
    PHP 4.0.5以降、リダイレクトがサポートされています。これ以前のバー
    ジョンを使用している場合、URLの末尾にスラッシュを付ける必要があり
    ます。
   </simpara>
   <simpara>
    ストリームにより、リソースの<emphasis>本体</emphasis> にアクセスで
    きるようになります。ヘッダは、
    <varname>$http_response_header</varname>変数に保存されます。
    <literal>PHP 4.3.0</literal>以降、ヘッダは、<function>stream_get_meta_data</function>に
    よりアクセス可能です。
   </simpara>
   <simpara>
    HTTP 接続は、読み込みのみ可です。HTTPリソースにデータを書き込んだ
    り、ファイルをコピーすることはできません。
   </simpara>
   <note>
    <simpara>
     HTTPSは、<literal>PHP 4.3.0</literal>以降でサポートされており、
     OpenSSLのサポートを有効にした場合のみ使用できます。
    </simpara>
   </note>
  <para>
   <table>
    <title>Wrapper Summary</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>属性</entry>
       <entry>サポート</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>allow_url_fopen</literal>によって制限される</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>読み出しの許可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>書き込みの許可</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>追加書き込みの許可</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>読み書き両用の許可</entry>
       <entry>N/A</entry>
      </row>
      <row>
       <entry><function>stat</function>のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>unlink</function>のサポート</entry>
       <entry>No</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   <table>
    <title>コンテクストのオプション(<literal>PHP 5.0.0</literal>以降)</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>名前</entry>
       <entry>使用法</entry>
       <entry>デフォルト</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>method</literal></entry>
       <entry>
        <constant>GET</constant>, <constant>POST</constant>, または
        リモートサーバでサポートされるその他のHTTPメソッド。
       </entry>
       <entry><constant>GET</constant></entry>
      </row>
      <row>
       <entry><literal>header</literal></entry>
       <entry>Additional headers to be sent during request.  Values
        in this option will override other values (such as
        <literal>User-agent:</literal>, <literal>Host:</literal>,
        and <literal>Authentication:</literal>.
        リクエストに追加して送信するヘッダ。このオプションによる値は
        他の値を上書きします（<literal>User-agent:</literal>, <literal>Host:</literal>,
        <literal>Authentication:</literal>等）
       </entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>user_agent</literal></entry>
       <entry>
        User-Agent: ヘッダとして送信される値。上記の<literal>header</literal>
        コンテクストオプションで送信されて<emphasis>いない</emphasis>場合にのみ
        使用できる。
       </entry>
       <entry>
        &php.ini; setting: <literal>user_agent</literal>
       </entry>
      </row>
      <row>
       <entry><literal>content</literal></entry>
       <entry>
        ヘッダの後に送信する追加データ。
        POSTまたはPUTリクエストの際に使用される。
       </entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  <note>
   <title>Underlying socket stream context options</title>
   <simpara>
    追加のコンテクストオプションは
    <link linkend="transports.inet">underlying transport</link>によって
    サポートされます。<literal>http://</literal>ストリームは
    <literal>tcp://</literal>トランスポートの
    コンテクストオプションを参照しています。
    <literal>https://</literal>ストリームは
    <literal>ssl://</literal>トランスポートの
    コンテクストオプションを参照しています。
   </simpara>
  </note>
 </section>
  
 <section id="wrappers.ftp">
  <title>FTPとFTPS</title>
   <simpara>PHP 3, PHP 4.  <filename>ftps://</filename> PHP 4.3以降</simpara>
   
   <itemizedlist>
    <listitem><simpara><filename>ftp://example.com/pub/file.txt</filename></simpara></listitem>
    <listitem><simpara><filename>ftp://user:password@example.com/pub/file.txt</filename></simpara></listitem>
    <listitem><simpara><filename>ftps://example.com/pub/file.txt</filename></simpara></listitem>
    <listitem><simpara><filename>ftps://user:password@example.com/pub/file.txt</filename></simpara></listitem>
   </itemizedlist>
   
   <simpara>
    FTPにより既存のファイルに読み込みアクセスをしたり、新規にファイル
    を作成することができます。サーバがパッシブモードftpをサポートしな
    い場合、接続は失敗します。
   </simpara>
   <simpara>
    読み込み用または書き込み用でファイルをオープンすることが可能ですが、
    読み書き両用でオープンすることはできません。
    ftpサーバにあるファイルが既に存在する場合、そのファイルを書き込み
    用にオープンしようとした場合には、接続は失敗します。
    既存のファイルをftpにより更新する必要がある場合には、
    コンテクストオプションに<literal>overwrite</literal>を指定し
    ファイルを書き込み用でオープンしてください。あるいは、
    <link linkend="ref.ftp">FTP extension</link>を使用してください。
   </simpara>
  <note>
   <title>Appending</title>
   <simpara>
    <literal>PHP 5.0.0</literal>以降、<literal>ftp://</literal> url ラッパを
    通じてファイルに追加書き込みすることができます。
    それ以前のバージョンでは、<literal>ftp://</literal>を使った
    ファイルへの追加書き込みは失敗します
   </simpara>
  </note>
   <simpara>
    <filename>ftps://</filename> は PHP 4.3で導入されました。
    これは、<filename>ftp://</filename>と同じですが、ftpサーバについて
    セキュアな接続の確立を試みます。
    サーバがSSLをサポートしない場合、接続は通常の暗号化されないftp接続
    で代用されます。
   </simpara>
   <note>
    <simpara>
     FTPSは、PHP 4.3以降でサポートされており、OpenSSLのサポートを有効
     にしていることが必要です。
    </simpara>
   </note>
  <para>
   <table>
    <title>Wrapper Summary</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Attribute</entry>
       <entry>Supported</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Restricted by <literal>allow_url_fopen</literal>.</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>Allows Reading</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>Allows Writing</entry>
       <entry>
        Yes (Prior to <literal>PHP 5.0.0</literal>: new files only.
        <literal>PHP 5.0.0</literal> and later: overwrite allowed
        with context option)
       </entry>
      </row>
      <row>
       <entry>Allows Appending</entry>
       <entry>Yes (<literal>PHP 5.0.0</literal> or later)</entry>
      </row>
      <row>
       <entry>Allows Simultaneous Reading and Writing</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Supports <function>stat</function></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Supports <function>unlink</function></entry>
       <entry>Yes (<literal>PHP 5.0.0</literal> or later)</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   <table>
    <title>Context options (as of <literal>PHP 5.0.0</literal>)</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>Name</entry>
       <entry>Usage</entry>
       <entry>Default</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>overwrite</literal></entry>
       <entry>
        Allow overwriting of already existing files on remote server.
       </entry>
       <entry>&false; (Disabled)</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <note>
   <title>Underlying socket stream context options</title>
   <simpara>
    Additional context options may be supported by the 
    <link linkend="transports.inet">underlying transport</link>
    For <literal>ftp://</literal> streams, refer to context
    options for the <literal>tcp://</literal> transport.  For
    <literal>ftps://</literal> streams, refer to context options
    for the <literal>ssl://</literal> transport.
   </simpara>
  </note>
  </section>
  
  <section id="wrappers.php">
   <title>PHP 入出力 ストリーム</title>
   <simpara>
    PHP 3.0.13以降、<filename>php://output</filename> 、そして、
    PHP 4.3以降、<filename>php://input</filename>
   </simpara>
   
   <itemizedlist>
    <listitem><simpara><filename>php://stdin</filename></simpara></listitem>
    <listitem><simpara><filename>php://stdout</filename></simpara></listitem>
    <listitem><simpara><filename>php://stderr</filename></simpara></listitem>
    <listitem><simpara><filename>php://output</filename></simpara></listitem>
    <listitem><simpara><filename>php://input</filename></simpara></listitem>
   </itemizedlist>
   
   <simpara>
    <filename>php://stdin</filename>、 <filename>php://stdout</filename> 
    と<filename>php://stderr</filename> により、対応するPHPプロセスの
    入力または出力ストリームにアクセスできるようになります。
   </simpara>
   <simpara>
    <filename>php://output</filename> により、
    <function>print</function> および<function>echo</function>と同様の
    手法により、出力バッファに書き込むことができるようになります。
   </simpara>
   <simpara>
    <filename>php://input</filename> により、raw POSTデータを読み込む
    ことができるようになります。これは、
    <varname>$HTTP_RAW_POST_DATA</varname>よりメモリ消費量が少なく、
    代わりとなるものです。また、特別な&php.ini;ディレクティブを全く必
    要としません。
   </simpara>
   <simpara>
    <filename>php://stdin</filename> および
    <filename>php://input</filename> は読み込みのみ可です。一方、
    <filename>php://stdout</filename>,
    <filename>php://stderr</filename> および
    <filename>php://output</filename> は、書き込みのみ可です。
   </simpara>
  <simpara>
   <filename>php://filter</filename> is a kind of meta-wrapper designed
   to permit the application of filters to a stream at the time of 
   opening.  This is useful with all-in-one file functions such as
   <function>readfile</function>, <function>file</function>, and
   <function>file_get_contents</function> where there is otherwise
   no opporotunity to apply a filter to the stream prior the contents
   being read.
  </simpara>
  <simpara>
   The <filename>php://filter</filename> target takes the following 
   &apos;parameters&apos; as parts of its &apos;path&apos;.
  </simpara>
  <itemizedlist>
   <listitem>
    <para>
     <literal>/resource=&lt;stream to be filtered&gt;</literal>
     (<emphasis>required</emphasis>)  This parameter must be located at
     the end of your <filename>php://filter</filename> specification and
     should point to the stream which you want filtered.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* This is equivalent to simply:
   readfile("http://www.example.com");
   since no filters are actually specified */

readfile("php://filter/resource=http://www.example.com");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>/read=&lt;filter list to apply to read chain&gt;</literal>
     (<emphasis>optional</emphasis>)  This parameter takes one or more
     filternames separated by the pipe character <literal>|</literal>.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* This will output the contents of 
   www.example.com entirely in uppercase */
readfile("php://filter/read=string.toupper/resource=http://www.example.com");

/* This will do the same as above
   but will also ROT13 encode it */
readfile("php://filter/read=string.toupper|string.rot13/resource=http://www.example.com");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>/write=&lt;filter list to apply to write chain&gt;</literal>
     (<emphasis>optional</emphasis>)  This parameter takes one or more
     filternames separated by the pipe character <literal>|</literal>.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* This will filter the string "Hello World"
   through the rot13 filter, then write to
   example.txt in the current directory */
file_set_contents("php://filter/write=string.rot13/resource=example.txt","Hello World");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <simpara>
     <literal>/&lt;filter list to apply to both chains&gt;</literal>
     (<emphasis>optional</emphasis>)  Any filter lists which are not
     prefixed specifically by <literal>read=</literal> or 
     <literal>write=</literal> will be applied to both the read and
     write chains (as appropriate).
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   <table>
    <title>
     Wrapper Summary (For <literal>php://filter</literal>, 
     refer to summary of wrapper being filtered.)
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Attribute</entry>
       <entry>Supported</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Restricted by <literal>allow_url_fopen</literal>.</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Allows Reading</entry>
       <entry>
        <literal>php://stdin</literal> and 
        <literal>php://input</literal> only.
       </entry>
      </row>
      <row>
       <entry>Allows Writing</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>, and 
        <literal>php://output</literal> only.
       </entry>
      </row>
      <row>
       <entry>Allows Appending</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>, and 
        <literal>php://output</literal> only. (Equivalent to writing)
       </entry>
      </row>
      <row>
       <entry>Allows Simultaneous Reading and Writing</entry>
       <entry>No.  These wrappers are unidirectional.</entry>
      </row>
      <row>
       <entry>Supports <function>stat</function></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Supports <function>unlink</function></entry>
       <entry>No</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  </section>
  
  <section id="wrappers.compression">
   <title>圧縮ストリーム</title>
   <simpara><filename>zlib:</filename> PHP 4.0.4 - PHP 4.2.3
   (fopencookieを有するシステムのみ)</simpara>
   <simpara><filename>compress.zlib://</filename>および
   <filename>compress.bzip2://</filename> PHP 4.3以降</simpara>
   
   <itemizedlist>
    <listitem><simpara><filename>zlib:</filename></simpara></listitem>
    <listitem><simpara><filename>compress.zlib://</filename></simpara></listitem>
    <listitem><simpara><filename>compress.bzip2://</filename></simpara></listitem>
   </itemizedlist>
   
   <simpara> 
    <filename>zlib:</filename> は、<function>gzopen</function>と同様に
    動作しますが、このストリームは<function>fread</function> および他
    のファイルシステム関数と組み合わせて使用することができるところが異
    なります。この機能ではファイル名に':'文字が含まれる曖昧さがあるた
    め、PHP 4.3以降では古い機能となっています。代わりに
    <filename>compress.zlib://</filename> を使用して下さい。
   </simpara>
   
   <simpara>
    <filename>compress.zlib://</filename>および
    <filename>compress.bzip2://</filename>は、それぞれ
    <function>gzopen</function> および <function>bzopen</function>と等
    価で、fopencookieをサポートしないシステムの上でも動作します。
   </simpara>
   <para>
    <table>
     <title>Wrapper Summary</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Attribute</entry>
        <entry>Supported</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>Restricted by <literal>allow_url_fopen</literal>.</entry>
        <entry>No</entry>
       </row>
       <row>
        <entry>Allows Reading</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>Allows Writing</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>Allows Appending</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>Allows Simultaneous Reading and Writing</entry>
        <entry>No</entry>
       </row>
       <row>
        <entry>Supports <function>stat</function></entry>
        <entry>
         No, use the normal <literal>file://</literal> wrapper 
         to stat compressed files.
        </entry>
       </row>
       <row>
        <entry>Supports <function>unlink</function></entry>
        <entry>
         No, use the normal <literal>file://</literal> wrapper 
         to unlink compressed files.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </section>
 </appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
