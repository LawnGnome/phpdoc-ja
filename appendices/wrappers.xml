<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.59 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
 <appendix id="wrappers">
  <title>サポートされるプロトコル/ラッパー</title>
  <para>
   <function>fopen</function> および <function>copy</function> のような
   ファイルシステム関数で使用するために PHP に組み込まれた、URL 型式の
   プロトコルの一覧を示します。これらのラッパーに加え、PHP 4.3.0 以降では
   PHP スクリプトと <function>stream_wrapper_register</function> によって
   ユーザ独自のラッパーを書くことができます。
  </para>

  <section id="wrappers.file">
   <title>ファイルシステム</title>
   <simpara>
    PHP の全バージョン。PHP 4.3.0 以降では <filename>file://</filename> を用いて明示的に指定します。
   </simpara>

   <itemizedlist>
    <listitem><simpara><filename>/path/to/file.ext</filename></simpara></listitem>
    <listitem><simpara><filename>relative/path/to/file.ext</filename></simpara></listitem>
    <listitem><simpara><filename>fileInCwd.ext</filename></simpara></listitem>
    <listitem><simpara><filename>C:/path/to/winfile.ext</filename></simpara></listitem>
    <listitem><simpara><filename>C:\path\to\winfile.ext</filename></simpara></listitem>
    <listitem><simpara><filename>\\smbserver\share\path\to\winfile.ext</filename></simpara></listitem>
    <listitem><simpara><filename>file:///path/to/file.ext</filename></simpara></listitem>
   </itemizedlist>
   
   <simpara>
    <filename>file://</filename> は PHP で使用されるデフォルトのラッパーで、
    ローカルファイルシステムを表します。
    相対パス(/, \, \\,または Windows のドライブ文字で始まらないパス)が指定された場合、
    指定されたパスは、現在の作業ディレクトリに対して適用されます。
    多くの場合、これは、スクリプトがあるディレクトリです。ただし、カレントディレクトリが
    変更されている場合を除きます。
    CLI SAPI を使用した場合、このデフォルトはスクリプトがコールされたディレクトリとなります。
   </simpara>

   <simpara>
    <function>fopen</function> や <function>file_get_contents</function>
    のようないくつかの関数については、相対パスと同時に <literal>include_path</literal>
    も検索されます。
   </simpara>

   <para>
    <table>
     <title>ラッパーの概要</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>属性</entry>
        <entry>サポートの有無</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.allow-url-fopen">allow_url_fopen</link> で制約される</entry>
        <entry>No</entry>
       </row>
       <row>
        <entry>読み込み許可</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>書き込み許可</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>追加許可</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>同時読み書き許可</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry><function>stat</function> のサポート</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry><function>unlink</function> のサポート</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry><function>rename</function> のサポート</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry><function>mkdir</function> のサポート</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry><function>rmdir</function> のサポート</entry>
        <entry>Yes</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </section>

 <section id="wrappers.socket">
  <title>ソケット</title>
  <para>
   ここでは、ソケット越しに動作するラッパー
   すなわち <literal>tcp</literal>、<literal>http</literal>
   あるいは <literal>ftp</literal> でサポートされるオプションを扱います。
  </para>
  <para>
   PHP 5.1.0 以降、ひとつのオプション <literal>bindto</literal> のみが
   サポートされます。これは PHP がネットワークにアクセスする際の IP アドレス
   （IPv4 あるいは IPv6 のどちらか）やポート番号を指定する際に使用されます。
   その書式は <literal>ip:port</literal>（IP やポート番号に
   <literal>0</literal> を指定すると、それをシステムに自動的に設定させる
   ことができます）です。
  </para>
  <note>
   <para>
    FTP の通常の操作では 2 つのソケット接続を使用するので、
    <literal>bindto</literal> オプションでポート番号を指定することができません。
    そのため、FTP ラッパーでサポートされる唯一の書式は
    <literal>ip:0</literal> となります。
   </para>
  </note>
  <example>
   <title>bindto オプションの使用例</title>
   <programlisting role="php">
<![CDATA[
<?php
// IP アドレス '192.168.0.100' でインターネットに接続する
$opts = array('socket' =>
            array('bindto' => '192.168.0.100:0'));


// IP アドレス '192.168.0.100' とポート番号 '7000' でインターネットに接続する
$opts = array('socket' =>
            array('bindto' => '192.168.0.100:7000'));


// ポート番号 '7000' でインターネットに接続する
$opts = array('socket' =>
            array('bindto' => '0:7000'));


// コンテキストを作成し…
$context = stream_context_create($opts);

// …そしてデータを取得するためにそれを使用する
echo file_get_contents('http://www.example.com', false, $context);

?>
]]>
   </programlisting>
  </example>
 </section>

  <section id="wrappers.http">
   <title>HTTP と HTTPS</title>
   <simpara>PHP 3, PHP 4, PHP 5。<filename>https://</filename> は PHP 4.3.0以降。</simpara>
   
   <itemizedlist>
    <listitem><simpara><filename>http://example.com</filename></simpara></listitem>
    <listitem><simpara><filename>http://example.com/file.php?var1=val1&amp;var2=val2</filename></simpara></listitem>
    <listitem><simpara><filename>http://user:password@example.com</filename></simpara></listitem>
    <listitem><simpara><filename>https://example.com</filename></simpara></listitem>
    <listitem><simpara><filename>https://example.com/file.php?var1=val1&amp;var2=val2</filename></simpara></listitem>
    <listitem><simpara><filename>https://user:password@example.com</filename></simpara></listitem>
   </itemizedlist>
   
   <simpara>
    HTTP 1.0 により HTTP GET メソッドを用いてファイル/リソースに読み込みのみの
    アクセスが可能です。仮想ホストにホスト名でアクセスするために、
    <literal>Host:</literal> ヘッダが送信されます。
    ini ファイルまたはストリームコンテキストによって
    <link linkend="ini.user-agent">user_agent</link> 文字列を設定している場合、
    それはリクエストの中にも含まれます。
   </simpara>
   &warn.ssl-non-standard;
   <simpara>
    PHP 4.0.5 以降、リダイレクトがサポートされています。これ以前のバージョンを
    使用している場合、URL の末尾にスラッシュを付ける必要があります。
    (全てのリダイレクトが処理された後に)ドキュメント取得元のリソースの URL を知ることが
    重要な場合、ストリームから返された一連のレスポンスヘッダを処理する必要があります。
   </simpara>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$url = 'http://www.example.com/redirecting_page.php';

$fp = fopen($url, 'r');

/* PHP 4.3.0 の場合、stream_get_meta_data() の代わりに
   $http_response_header を使用してください　*/
$meta_data = stream_get_meta_data($fp);
foreach($meta_data['wrapper_data'] as $response) {

  /* リダイレクトされているか? */
  if (substr(strtolower($response), 0, 18) == 'content-location: ') {
    /* $url をリダイレクト先に書き換える */
    $url = substr($response, 18);
  }

}

?>
]]>
   </programlisting>
  </informalexample>
  <simpara>
    ストリームにより、リソースの <emphasis>body</emphasis> にアクセスすることが
    できます。ヘッダは、<varname>$http_response_header</varname> 変数に保存されます。
    PHP 4.3.0 以降は、ヘッダは <function>stream_get_meta_data</function>
    により取得できます。
   </simpara>
   <simpara>
    HTTP 接続は読み込みのみ可で、HTTP リソースにデータを書き込んだり
    ファイルをコピーしたりすることはできません。
   </simpara>
   <note>
   <simpara>
     HTTPS は、PHP 4.3.0 以降で OpenSSL のサポートを組み込んだ場合にサポートされます。
    </simpara>
   </note>
   <para>
   <table>
     <title>ラッパーの概要</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>属性</entry>
        <entry>サポートの可否</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.allow-url-fopen">allow_url_fopen</link> の制限を受けるか</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>読み込み可</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>書き込み可</entry>
        <entry>No</entry>
       </row>
       <row>
        <entry>追記可能</entry>
        <entry>No</entry>
       </row>
       <row>
        <entry>同時読み書き可</entry>
        <entry>N/A</entry>
       </row>
       <row>
        <entry><function>stat</function> をサポート</entry>
        <entry>No</entry>
       </row>
       <row>
        <entry><function>unlink</function> をサポート</entry>
        <entry>No</entry>
       </row>
       <row>
        <entry><function>rename</function> をサポート</entry>
        <entry>No</entry>
       </row>
       <row>
        <entry><function>mkdir</function> をサポート</entry>
        <entry>No</entry>
       </row>
       <row>
        <entry><function>rmdir</function> をサポート</entry>
        <entry>No</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    <table>
     <title>コンテキストのオプション</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>名前</entry>
        <entry>使用法</entry>
        <entry>デフォルト</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><literal>method</literal></entry>
        <entry>
         リモートサーバでサポートされる <constant>GET</constant>、
         <constant>POST</constant> あるいはその他の HTTP メソッド。
        </entry>
        <entry><constant>GET</constant></entry>
       </row>
       <row>
        <entry><literal>header</literal></entry>
        <entry>リクエストに付加されるヘッダ。ここで指定した値が
         （<literal>User-agent:</literal>、<literal>Host:</literal>、
         および <literal>Authentication:</literal> などの）他の値を
         上書きすることもあります。
        </entry>
        <entry></entry>
       </row>
       <row>
        <entry><literal>user_agent</literal></entry>
        <entry>User-Agent: ヘッダとして送信する値。上で説明した
         <literal>header</literal> オプションで user-agent が
         定義されて<emphasis>いない</emphasis>場合のみ使用されます。
       </entry>
        <entry>
         &php.ini; での <literal>user_agent</literal> の設定
        </entry>
       </row>
       <row>
        <entry><literal>content</literal></entry>
        <entry>
         ヘッダの後に送信する追加データ。通常、POST または PUT
         リクエストの際に使用されます。
        </entry>
        <entry></entry>
       </row>
       <row>
        <entry><literal>proxy</literal></entry>
        <entry>
         プロキシサーバを示す URI（例: 
         <literal>tcp://proxy.example.com:5100</literal>）。
         （HTTP プロキシを使用した）HTTPS のプロキシ処理は、
         PHP 5.1.0 以降でのみ動作します。
        </entry>
        <entry></entry>
       </row>
       <row>
        <entry><literal>request_fulluri</literal></entry>
        <entry>
         &true; を指定すると、リクエストを生成する際に完全な URI
         （<literal>GET http://www.example.com/path/to/file.html HTTP/1.0</literal>）
         が用いられます。これは標準のリクエストフォーマットではありませんが、
         このようなフォーマットを要求するプロキシサーバも存在します。
        </entry>
        <entry>&false;</entry>
       </row>
      <row>
       <entry><literal>max_redirects</literal></entry>
       <entry>
        リダイレクトをたどる最大数。値が <literal>1</literal> 以下の場合は
        リダイレクトをたどらないことを意味します。
        PHP 5.1.0 で追加されました。
       </entry>
       <entry>20</entry>
      </row>
      </tbody>
     </tgroup>
    </table>
   </para>

  <note>
   <title>基盤となるソケットストリームのコンテキストオプション</title>
   <simpara>
    これ以外のコンテキストオプションが
    <link linkend="transports.inet">基盤となるトランスポート</link>
    でサポートされています。
    <literal>http://</literal> ストリームの場合は、<literal>tcp://</literal>
    のコンテキストオプションを参照ください。
    <literal>https://</literal> ストリームの場合は、<literal>ssl://</literal>
    のコンテキストオプションを参照ください。
   </simpara>
  </note>

  <para>
   バージョン 5 より前では、HTTP リクエストで独自のヘッダを送信することができます。
   これは INI 設定項目 <literal>user_agent</literal>
   を処理する際の副作用によるものです。
   <literal>user_agent</literal> に何らかの正常な文字列
   (たとえばデフォルト設定の <literal>PHP/version</literal> など)
   を指定し、さらに続けて
   キャリッジリターン(\r) / ラインフィード(\n)
   を置いた後に任意のヘッダを記述します。
   この方法は、PHP 4 以降のバージョンで動作します。
  </para>
  <para>
   <example>
    <title>HTTP リクエストで独自のヘッダを送信する</title>
    <programlisting role="php">
<![CDATA[
<?php
ini_set('user_agent', "PHP\r\nX-MyCustomHeader: Foo");

$fp = fopen('http://www.example.com/index.php', 'r');
?>
]]>
    </programlisting>
    <para>送信されるリクエストは次のようになります。</para>
    <screen>
<![CDATA[
GET /index.php HTTP/1.0
Host: www.example.com
User-Agent: PHP
X-MyCustomHeader: Foo
]]>
    </screen>
   </example>
  </para>
 </section>

 <section id="wrappers.ftp">
  <title>FTP と FTPS</title>
   <simpara>PHP 3、PHP 4、PHP 5。<filename>ftps://</filename> は PHP 4.3.0 以降。</simpara>
   
   <itemizedlist>
    <listitem><simpara><filename>ftp://example.com/pub/file.txt</filename></simpara></listitem>
    <listitem><simpara><filename>ftp://user:password@example.com/pub/file.txt</filename></simpara></listitem>
    <listitem><simpara><filename>ftps://example.com/pub/file.txt</filename></simpara></listitem>
    <listitem><simpara><filename>ftps://user:password@example.com/pub/file.txt</filename></simpara></listitem>
   </itemizedlist>
   
  <simpara>
    FTP 経由でのファイルの読み込みと新しいファイルの作成を許可します。
    サーバがパッシブモードの FTP をサポートしていない場合、接続は失敗します。
   </simpara>
  <simpara>
    読み込み用または書き込み用のどちらかでファイルをオープンすることが
    可能ですが、それらを両方同時に指定することはできません。FTP サーバ上の
    既存のファイルを書き込み用にオープンしようとした場合、もし
    コンテキストオプション <literal>overwrite</literal> が指定されていなければ
    接続は失敗します。既存のファイルを FTP 越しに上書きしたい場合は、
    コンテキストオプション <literal>overwrite</literal> を指定したうえで
    書き込み用にファイルをオープンします。別の方法としては、
    <link linkend="ref.ftp">FTP 拡張モジュール</link> を使用することも可能です。
   </simpara>
  <note>
    <title>追記</title>
    <simpara>
     PHP 5.0.0 では、<literal>ftp://</literal> URL ラッパー経由での
     ファイルの追記が可能となりました。それ以前のバージョンでは
     <literal>ftp://</literal> 経由でのファイルの追記は失敗していました。
    </simpara>
   </note>
   <simpara>
    <filename>ftps://</filename> は PHP 4.3.0 から有効になりました。
    これは <filename>ftp://</filename> と同じですが、FTP サーバとの
    安全な接続を確立しようと試みます。もしサーバが SSL をサポートして
    いなければ、通常の（暗号化されない）FTP を使用します。
   </simpara>
   <note>
   <simpara>
    FTPS のサポートは PHP 4.3.0 から始まりました。これを使用するには
    OpenSSL サポートを含めて PHP をコンパイルする必要があります。
   </simpara>
  </note>
   <para>
    <table>
     <title>ラッパーの概要</title>
     <tgroup cols="3">
      <thead>
       <row>
       <entry>属性</entry>
        <entry>PHP 4</entry>
        <entry>PHP 5</entry>
       </row>
     </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.allow-url-fopen">allow_url_fopen</link> で制約される</entry>
        <entry>Yes</entry>
       <entry>Yes</entry>
       </row>
       <row>
        <entry>読み込み許可</entry>
       <entry>Yes</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>書き込み許可</entry>
       <entry>Yes（新規ファイルのみ）</entry>
        <entry>Yes（新規ファイル あるいは 既存のファイルで <parameter>overwrite</parameter> を指定）</entry>
       </row>
       <row>
        <entry>追加許可</entry>
        <entry>No</entry>
       <entry>Yes</entry>
       </row>
       <row>
        <entry>同時読み書き許可</entry>
        <entry>No</entry>
        <entry>No</entry>
       </row>
       <row>
        <entry><function>stat</function> のサポート</entry>
       <entry>No</entry>
        <entry>
         PHP 5.0.0 では <function>filesize</function>、
         <function>filetype</function>、<function>file_exists</function>、
         <function>is_file</function> および <function>is_dir</function> のみ。
         PHP 5.1.0 で <function>filemtime</function>。
       </entry>
       </row>
       <row>
        <entry><function>unlink</function> のサポート</entry>
        <entry>No</entry>
        <entry>Yes</entry>
      </row>
       <row>
        <entry><function>rename</function> のサポート</entry>
        <entry>No</entry>
        <entry>Yes</entry>
       </row>
       <row>
       <entry><function>mkdir</function> のサポート</entry>
        <entry>No</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry><function>rmdir</function> のサポート</entry>
        <entry>No</entry>
        <entry>Yes</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    <table>
     <title>コンテキストオプション（PHP 5.0.0 以降）</title>
     <tgroup cols="3">
      <thead>
      <row>
        <entry>名前</entry>
        <entry>使用法</entry>
        <entry>デフォルト</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><literal>overwrite</literal></entry>
        <entry>
         リモートサーバ上の既存のファイルに対する上書きを許可する。
         書き込みモード（アップロード）時のみ有効。
        </entry>
        <entry>&false;（無効）</entry>
       </row>
       <row>
        <entry><literal>resume_pos</literal></entry>
        <entry>
         転送を開始するファイル内の位置。
         読み込みモード（ダウンロード）時のみ有効。
        </entry>
        <entry>0（ファイルの先頭）</entry>
       </row>
      <row>
        <entry><literal>proxy</literal>（PHP 5.1.0 以降）</entry>
        <entry>
         FTP リクエストを、http プロキシサーバ経由で行う。
         ファイルの読み込み操作にのみ適用される。
         例: <literal>tcp://squid.example.com:8000</literal>
        </entry>
       <entry/>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <note>
    <title>基盤となるソケットストリームのコンテキストオプション</title>
    <simpara>
     これ以外のコンテキストオプションが
     <link linkend="transports.inet">基盤となるトランスポート</link>
     でサポートされています。
     <literal>ftp://</literal> ストリームの場合は、<literal>tcp://</literal>
     のコンテキストオプションを参照ください。
     <literal>ftps://</literal> ストリームの場合は、<literal>ssl://</literal>
     のコンテキストオプションを参照ください。
    </simpara>
   </note>
  </section>
  
  <section id="wrappers.php">
   <title>PHP 入出力ストリーム</title>
   <simpara>
    PHP 3.0.13 以降で、<filename>php://output</filename>。
    および PHP 4.3.0 以降で <filename>php://input</filename>、
    PHP 5.0.0 以降で <filename>php://filter</filename>
   </simpara>
   
   <itemizedlist>
    <listitem><simpara><filename>php://stdin</filename></simpara></listitem>
    <listitem><simpara><filename>php://stdout</filename></simpara></listitem>
    <listitem><simpara><filename>php://stderr</filename></simpara></listitem>
    <listitem><simpara><filename>php://output</filename></simpara></listitem>
    <listitem><simpara><filename>php://input</filename></simpara></listitem>
    <listitem><simpara><filename>php://filter</filename></simpara></listitem>
   </itemizedlist>
   
   <simpara>
   <filename>php://stdin</filename>、<filename>php://stdout</filename> 
   および <filename>php://stderr</filename> は、PHP プロセスの
   対応する入出力ストリームへのアクセスを許可します。
  </simpara>
  <simpara>
   <filename>php://output</filename> は、
   <function>print</function> および <function>echo</function>
   と同じ方法での出力バッファへの書き込みを許可します。
  </simpara>
  <simpara>
   <filename>php://input</filename> は、POST の生データの読み込みを
   許可します。これは <varname>$HTTP_RAW_POST_DATA</varname> に比べて
   メモリ消費量が少なく、特別な &php.ini; ディレクティブを設定する
   必要がありません。<filename>php://input</filename> は、
   <literal>enctype="multipart/form-data"</literal> に対しては
   使用できません。
  </simpara>
  <simpara>
   <filename>php://stdin</filename> および
   <filename>php://input</filename> は読み込み専用で、
   <filename>php://stdout</filename>、
   <filename>php://stderr</filename> および
   <filename>php://output</filename> は書き込み専用です。
  </simpara>

  <simpara>
   <filename>php://filter</filename> は、フィルタアプリケーションが
   ストリームをオープンすることを許可するために設計されたメタラッパーです。
   これは、<function>readfile</function>、<function>file</function>
   および <function>file_get_contents</function> のようなオールインワンの
   ファイル関数とともに使用すると有用です。これらの関数には、コンテンツが
   読み込まれる前にストリームにフィルタを適用する手段がありません。
  </simpara>
  <simpara>
   <filename>php://filter</filename> の対象は、以下のように
   'parameters' を 'path' の一部として保持します。
  </simpara>
  <itemizedlist>
   <listitem>
    <para>
     <literal>/resource=&lt;フィルタの対象となるストリーム&gt;</literal>
     （<emphasis>必須</emphasis>）このパラメータは、
     <filename>php://filter</filename> 指定の最後に存在し、フィルタリング
     したいストリームを指している必要があります。
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* これは単純に以下と同じです。
   readfile("http://www.example.com");
   なぜなら、実際のところ何のフィルタ処理も行われないからです。 */

readfile("php://filter/resource=http://www.example.com");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>/read=&lt;読み込みチェーンに適用するフィルタのリスト&gt;</literal>
     （<emphasis>任意</emphasis>）このパラメータは 1 つ以上のフィルタ名を
     パラメータとしてとり、それらはパイプ文字 <literal>|</literal> で区切られます。
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* これは、www.example.com のすべての内容を
   大文字に変換して出力します。 */
readfile("php://filter/read=string.toupper/resource=http://www.example.com");

/* これは上の例と同じですが、それに加えて
   ROT13 エンコード処理を行います。 */
readfile("php://filter/read=string.toupper|string.rot13/resource=http://www.example.com");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>/write=&lt;書き込みチェーンに適用するフィルタのリスト&gt;</literal>
     （<emphasis>任意</emphasis>）このパラメータは 1 つ以上のフィルタ名を
     パラメータとしてとり、それらはパイプ文字 <literal>|</literal> で区切られます。
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* これは、文字列 "Hello World"
   に対して rot13 フィルタを適用し、カレントディレクトリの
   example.txt に書き込みます。 */
file_put_contents("php://filter/write=string.rot13/resource=example.txt","Hello World");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <simpara>
     <literal>/&lt;両方のチェーンに適用するフィルタのリスト&gt;</literal>
     （<emphasis>任意</emphasis>）<literal>read=</literal> あるいは
     <literal>write=</literal> の指定をされていないすべてのフィルタは、
     読み込みチェーンと書き込みチェーンの両方に（適宜）適用されます。
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   <table>
    <title>
     ラッパーの概要（<literal>php://filter</literal> については、
     フィルタされる側のラッパーの概要を参照します）
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>属性</entry>
       <entry>サポートの有無</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.allow-url-fopen">allow_url_fopen</link> で制約される</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>読み込み許可</entry>
       <entry>
        <literal>php://stdin</literal> および
        <literal>php://input</literal> のみ。
       </entry>
      </row>
      <row>
       <entry>書き込み許可</entry>
       <entry>
        <literal>php://stdout</literal>、
        <literal>php://stderr</literal> および
        <literal>php://output</literal> のみ。
       </entry>
      </row>
      <row>
       <entry>追加許可</entry>
       <entry>
        <literal>php://stdout</literal>、
        <literal>php://stderr</literal> および
        <literal>php://output</literal> のみ（書き込みと同じ）。
       </entry>
      </row>
      <row>
       <entry>同時読み書き許可</entry>
       <entry>No. これらのラッパーは一方通行です。</entry>
      </row>
      <row>
       <entry><function>stat</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>unlink</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rename</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>mkdir</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rmdir</function> のサポート</entry>
       <entry>No</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </section>

 <section id="wrappers.compression">
  <title>圧縮ストリーム</title>
  <simpara><filename>zlib:</filename> PHP 4.0.4 - PHP 4.2.3 (fopencookie をサポートするシステムのみ)</simpara>
  <simpara><filename>compress.zlib://</filename> および <filename>compress.bzip2://</filename> PHP 4.3.0以降</simpara>

  <itemizedlist>
   <listitem><simpara><filename>zlib:</filename></simpara></listitem>
   <listitem><simpara><filename>compress.zlib://</filename></simpara></listitem>
   <listitem><simpara><filename>compress.bzip2://</filename></simpara></listitem>
  </itemizedlist>

   <simpara> 
    <filename>zlib:</filename> は <function>gzopen</function> と同様に
    動作しますが、このストリームは <function>fread</function> および
    他のファイルシステム関数と組み合わせて使用することができるところが
    異なります。この機能ではファイル名に ':' 文字が含まれる曖昧さが
    あるため、PHP 4.3.0 以降では古い機能となっています。代わりに
    <filename>compress.zlib://</filename> を使用してください。
   </simpara>

   <simpara>
    <filename>compress.zlib://</filename> および
    <filename>compress.bzip2://</filename> は、それぞれ
    <function>gzopen</function> および <function>bzopen</function> と等価で、
    fopencookie をサポートしないシステムの上でも動作します。
   </simpara>
   <para>
    <table>
     <title>ラッパーの概要</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>属性</entry>
        <entry>サポートの有無</entry>
       </row>
      </thead>
      <tbody>
       <row>
       <entry><link linkend="ini.allow-url-fopen">allow_url_fopen</link> で制約される</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>読み込み許可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>書き込み許可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>追加許可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>同時読み書き許可</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>stat</function> のサポート</entry>
       <entry>
        No, 圧縮されたファイルの状態を知るには、通常の
        <literal>file://</literal> ラッパーを使用します。
       </entry>
      </row>
      <row>
       <entry><function>unlink</function> のサポート</entry>
       <entry>
        No, 圧縮されたファイルを unlink するには、通常の
        <literal>file://</literal> ラッパーを使用します。
       </entry>
      </row>
      <row>
       <entry><function>rename</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>mkdir</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rmdir</function> のサポート</entry>
       <entry>No</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </section>
 <section id="wrappers.ssh2">
  <title>SSH2</title>
  <simpara>
   <filename>ssh2.shell://</filename>
   <filename>ssh2.exec://</filename>
   <filename>ssh2.tunnel://</filename>
   <filename>ssh2.sftp://</filename>
   <filename>ssh2.scp://</filename>
   PHP 4.3.0 以降（PECL）
  </simpara>

  <itemizedlist>
   <listitem><simpara><filename>ssh2.shell://user:pass@example.com:22/xterm</filename></simpara></listitem>
   <listitem><simpara><filename>ssh2.exec://user:pass@example.com:22/usr/local/bin/somecmd</filename></simpara></listitem>
   <listitem><simpara><filename>ssh2.tunnel://user:pass@example.com:22/192.168.0.1:14</filename></simpara></listitem>
   <listitem><simpara><filename>ssh2.sftp://user:pass@example.com:22/path/to/filename</filename></simpara></listitem>
  </itemizedlist>

  <note>
   <title>このラッパーはデフォルトでは有効になっていません</title>
   <simpara>
    <filename>ssh2.*://</filename> ラッパーを使用するには、
    <ulink url="&url.pecl;">PECL</ulink> から
    <ulink url="&url.pecl.package;ssh2">SSH2</ulink> 拡張モジュールを
    インストールする必要があります。
   </simpara>
  </note>

  <simpara>
   ssh2 ラッパーでは、URL のホスト部分に接続リソースを渡すことで既にオープン
   している接続を再利用することが可能です。
  </simpara>

  <example>
   <title>アクティブな接続からストリームをオープンする</title>
   <programlisting role="php">
<![CDATA[
<?php
$session = ssh2_connect('example.com', 22);
ssh2_auth_pubkey_file($session, 'username', '/home/username/.ssh/id_rsa.pub',
                                            '/home/username/.ssh/id_rsa', 'secret');
$stream = fopen("ssh2.tunnel://$session/remote.example.com:1234", 'r');
?>
]]>
   </programlisting>
  </example>
  <para>
   <table>
    <title>ラッパーの概要</title>
    <tgroup cols="6">
     <thead>
      <row>
       <entry>属性</entry>
       <entry>ssh2.shell</entry>
       <entry>ssh2.exec</entry>
       <entry>ssh2.tunnel</entry>
       <entry>ssh2.sftp</entry>
       <entry>ssh2.scp</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.allow-url-fopen">allow_url_fopen</link> で制約される</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>読み込み許可</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>書き込み許可</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>追加許可</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>Yes（サーバがサポートしている場合）</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>同時読み書き許可</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>Yes</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>stat</function> のサポート</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>Yes</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>unlink</function> のサポート</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>Yes</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rename</function> のサポート</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>Yes</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>mkdir</function> のサポート</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>Yes</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rmdir</function> のサポート</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>No</entry>
       <entry>Yes</entry>
       <entry>No</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  <para>
   <table>
    <title>コンテキストオプション</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>名前</entry>
       <entry>使用法</entry>
       <entry>デフォルト</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>session</literal></entry>
       <entry>再利用する接続済みの ssh2 リソース</entry>
       <entry/>
      </row>
      <row>
       <entry><literal>sftp</literal></entry>
       <entry>再利用する割り当て済みの sftp リソース</entry>
       <entry/>
      </row>
      <row>
       <entry><literal>methods</literal></entry>
       <entry>Key exchange, hostkey, cipher, compression, および MAC methods</entry>
       <entry/>
      </row>
      <row>
       <entry><literal>callbacks</literal></entry>
       <entry></entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>username</literal></entry>
       <entry>接続するユーザ名</entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>password</literal></entry>
       <entry>パスワード認証に使用するパスワード</entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>pubkey_file</literal></entry>
       <entry>認証に使用する公開鍵ファイル</entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>privkey_file</literal></entry>
       <entry>認証に使用する秘密鍵ファイル</entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>env</literal></entry>
       <entry>設定する環境変数の連想配列</entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>term</literal></entry>
       <entry>pty を割り当てる際の端末エミュレート方式</entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>term_width</literal></entry>
       <entry>pty を割り当てる際の端末の幅</entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>term_height</literal></entry>
       <entry>pty を割り当てる際の端末の高さ</entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>term_units</literal></entry>
       <entry>term_width および term_height の単位</entry>
       <entry><constant>SSH2_TERM_UNIT_CHARS</constant></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>


 </section>
 <section id="wrappers.audio">
  <title>オーディオストリーム</title>
  <simpara><filename>ogg://</filename> PHP 4.3.0 以降（PECL）</simpara>

  <itemizedlist>
   <listitem><simpara><filename>ogg://soundfile.ogg</filename></simpara></listitem>
   <listitem><simpara><filename>ogg:///path/to/soundfile.ogg</filename></simpara></listitem>
   <listitem><simpara><filename>ogg://http://www.example.com/path/to/soundstream.ogg</filename></simpara></listitem>
  </itemizedlist>

  <note>
   <title>このラッパーはデフォルトでは有効になっていません</title>
   <simpara>
    <filename>ogg://</filename> ラッパーを使用するには、
    <ulink url="&url.pecl;">PECL</ulink> から
    <ulink url="&url.pecl.package;oggvorbis">OGG/Vorbis</ulink> 拡張モジュールを
    インストールする必要があります。
   </simpara>
  </note>

  <simpara>
   <filename>ogg://</filename> ラッパー経由で読み込みモードでオープンされた
   ファイルは、OGG/Vorbis コーデックでエンコードされた圧縮音声ファイルとして
   扱われます。同様に、<filename>ogg://</filename> ラッパー経由で書き込みモード
   あるいは追記モードでオープンされたファイルは、圧縮音声データとして
   書き込まれます。読み込みモードでオープンした OGG/Vorbis ファイルに対して
   <function>stream_get_meta_data</function> を適用した場合、以下のような
   さまざまな情報を返します。
   <parameter>vendor</parameter> タグ、<parameter>comments</parameter>、
   多くの <parameter>channels</parameter>、サンプリングレート
   <parameter>rate</parameter> 、
   および以下のパラメータで指定されるエンコーディングレート。
   <parameter>bitrate_lower</parameter>、<parameter>bitrate_upper</parameter>、
   <parameter>bitrate_nominal</parameter>、<parameter>bitrate_window</parameter>
  </simpara>

  <para>
   <table>
    <title>ラッパーの概要</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>属性</entry>
       <entry>サポートの有無</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.allow-url-fopen">allow_url_fopen</link> で制約される</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>読み込み許可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>書き込み許可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>追加許可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>同時読み書き許可</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>stat</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>unlink</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rename</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>mkdir</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rmdir</function> のサポート</entry>
       <entry>No</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   <table>
    <title>コンテキストオプション</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>名前</entry>
       <entry>使用法</entry>
       <entry>デフォルト</entry>
       <entry>モード</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>pcm_mode</literal></entry>
       <entry>
        読み込みの際に適用する PCM エンコーディング。以下のうちのひとつ。
        <constant>OGGVORBIS_PCM_U8</constant>、<constant>OGGVORBIS_PCM_S8</constant>、
        <constant>OGGVORBIS_PCM_U16_BE</constant>、<constant>OGGVORBIS_PCM_S16_BE</constant>、
        <constant>OGGVORBIS_PCM_U16_LE</constant>、および <constant>OGGVORBIS_PCM_S16_LE</constant>
        （8 ビットか 16 ビットか、符号付きか符号なしか、ビッグエンディアンかリトルエンディアンか）。
       </entry>
       <entry>OGGVORBIS_PCM_S16_LE</entry>
       <entry>Read</entry>
      </row>
      <row>
       <entry><literal>rate</literal></entry>
       <entry>
        入力データのサンプリングレート。Hz 単位。
       </entry>
       <entry>44100</entry>
       <entry>Write/Append</entry>
      </row>
      <row>
       <entry><literal>bitrate</literal></entry>
       <entry>
        整数値の場合、エンコードの際の固定ビットレート（16000 から 131072）。
        浮動小数点値の場合、使用する可変ビットレート（-1.0 から 1.0）。
       </entry>
       <entry>128000</entry>
       <entry>Write/Append</entry>
      </row>
      <row>
       <entry><literal>channels</literal></entry>
       <entry>
        エンコードする音声チャネル数。一般には 1（モノラル）あるいは 2（ステレオ）。
        最大 16 まで。
       </entry>
       <entry>2</entry>
       <entry>Write/Append</entry>
      </row>
      <row>
       <entry><literal>comments</literal></entry>
       <entry>
        エンコード時にトラックヘッダに入れる文字列の配列。
       </entry>
       <entry/>
       <entry>Write/Append</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </section>


 <section id="wrappers.expect">
  <title>対話的プロセスストリーム</title>
  <simpara><filename>expect://</filename> PHP 4.3.0 以降 (PECL) </simpara>

  <itemizedlist>
   <listitem><simpara><filename>expect://command</filename></simpara></listitem>
  </itemizedlist>

  <note>
   <title>このラッパはデフォルトでは有効となっていません。</title>
   <simpara>
    <filename>expect://</filename> ラッパを使用するには、
    <ulink url="&url.pecl;">PECL</ulink> にある
    <ulink url="&url.pecl.package;expect">Expect</ulink> 拡張モジュールを
    インストールする必要があります。
   </simpara>
  </note>

  <simpara>
   <filename>expect://</filename> ラッパでオープンしたストリームを使用すると、
   プロセスの標準入力・標準出力・標準エラー出力への PTY 経由でのアクセスが
   可能となります。
  </simpara>

  <para>
   <table>
    <title>ラッパの概要</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>属性</entry>
       <entry>サポートの有無</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.allow-url-fopen">allow_url_fopen</link> で制約される</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>読み込み許可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>書き込み許可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>追加許可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>同時読み書き許可</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>stat</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>unlink</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rename</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>mkdir</function> のサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rmdir</function> のサポート</entry>
       <entry>No</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </section>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
