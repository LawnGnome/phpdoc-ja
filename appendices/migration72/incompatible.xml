<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343533 Maintainer: takagi Status: working -->

<sect1 xml:id="migration72.incompatible">
 <title>下位互換性のない変更点</title>

 <sect2 xml:id="migration72.incompatible.number_format-no-neg-zero">
  <title><function>number_format</function> は負のゼロを返さない</title>

  <para>
   以前のバージョンでは、<function>number_format</function> 関数が
   <literal>-0</literal> を返せました。
   これは IEEE 754 浮動小数点標準規格に沿ったまったく問題のない値ですが、
   人間が読みやすい形式に数値をフォーマットするという意味では少し不自然でした。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

var_dump(number_format(-0.01)); // string(2) "-0" ではなく string(1) "0" となります
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.incompatible.object-array-casts">
  <title>オブジェクトと配列の型変換における数値キーの扱い</title>

  <para>
   配列からオブジェクトへのキャストやその逆のキャストにおける、数値キーの扱いが改善されました。
   明示的なキャストだけではなく <function>settype</function> を使った場合も同様です。
  </para>

  <para>
   数値キーの配列をオブジェクトにキャストしたときに、その要素にアクセスできるようになったのです。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

// 配列からオブジェクトへの変換
$arr = [0 => 1];
$obj = (object)$arr;
var_dump(
    $obj,
    $obj->{'0'}, // アクセスできるようになりました
    $obj->{0} // アクセスできるようになりました
);
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(stdClass)#1 (1) {
  ["0"]=>    // 数値キーではなく、文字列のキーになりました
  int(1)
}
int(1)
int(1)
]]>
   </screen>
  </informalexample>

  <para>
   また、オブジェクトに数値のキーが含まれる場合に、
   配列にキャストしてもその要素にアクセスできるようになりました。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

// オブジェクトから配列への変換
$obj = new class {
    public function __construct()
    {
        $this->{0} = 1;
    }
};
$arr = (array)$obj;
var_dump(
    $arr,
    $arr[0], // アクセスできるようになりました
    $arr['0'] // アクセスできるようになりました
);
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
array(1) {
  [0]=>    // 文字列のキーではなく、整数のキーになります
  int(1)
}
int(1)
int(1)
]]>
   </screen>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.incompatible.no-null-to-get_class">
  <title><function>get_class</function> に &null; を渡せない</title>

  <para>
   以前のバージョンでは、<function>get_class</function> に &null;
   を渡すと、そのコンテキストの外側のクラスを返していました。
   この機能は削除され、&null; を渡すと <constant>E_WARNING</constant> が発生するようになりました。
   以前と同様の挙動を実現したい場合は、&null; を渡すのではなく単にパラメータを省略するようにしあしょう。
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.warn-on-non-countable-types">
  <title>countabe ではない型をカウントしたときの警告</title>

  <para>
   countable ではない型に対して <function>count</function> (およびそのエイリアスである
   <function>sizeof</function>) を使ったときに
   <constant>E_WARNING</constant> が発生するようになりました。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

var_dump(
    count(1), // integer はカウントできません
    count('abc'), // string はカウントできません
    count(new stdclass), // Countable インターフェイスを実装していないオブジェクトはカウントできません
    count([1,2]) // array はカウントできません
);
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Warning: count(): Parameter must be an array or an object that implements Countable in %s on line %d

Warning: count(): Parameter must be an array or an object that implements Countable in %s on line %d

Warning: count(): Parameter must be an array or an object that implements Countable in %s on line %d
int(1)
int(1)
int(1)
int(2)
]]>
   </screen>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.incompatible.hash-ext-to-objects">
  <title>ext/hash がリソースからオブジェクトへ</title>

  <para>
   長期にわたるリソースからオブジェクトへの移行作業の一環として、
   <link linkend="book.hash">Hash</link> 拡張モジュールがリソースではなくオブジェクトを使うようになりました。
   開発者側から見て特に変わるところはありませんが、もし
   <function>is_resource</function> を使ったチェックを行っているのなら、
   それを <function>is_object</function> に書き換える必要があります。
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.ssl-tls-defaults">
  <title>SSL/TLS のデフォルトの改善</title>

  <para>
   デフォルト設定が以下のように変わりました。
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     <literal>tls://</literal> が、TLSv1.0 や TLSv1.1 や TLSv1.2 のデフォルトになりました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <literal>ssl://</literal> は <literal>tls://</literal> のエイリアスになりました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <literal>STREAM_CRYPTO_METHOD_TLS_*</literal> 定数のデフォルトが、
     TLSv1.0 だけではなく TLSv1.0 または TLSv1.1 + TLSv1.2 となりました。
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration72.incompatible.gettype-on-closed-resource">
  <title><function>gettype</function> return value on closed resources</title>

  <para>
   Previously, using <function>gettype</function> on a closed resource would
   return a string of <literal>"unknown type"</literal>. Now, a string of
   <literal>"resource (closed)"</literal> will be returned.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.is_object-on-incomplete_class">
  <title><function>is_object</function> and <classname>__PHP_Incomplete_Class</classname></title>

  <para>
   Previously, using <function>is_object</function> on the
   <classname>__PHP_Incomplete_Class</classname> class would return &false;.
   Now, &true; will be returned.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.undefined-constants">
  <title>Promote the error level of undefined constants</title>

  <para>
   Unqualified references to undefined constants will now generate an
   <constant>E_WARNING</constant> (instead of an <constant>E_NOTICE</constant>).
   In the next major version of PHP, they will generate
   <classname>Error</classname> exceptions.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.windows-support">
  <title>Windows support</title>

  <para>
   The officially supported, minimum Windows versions are now Windows 7/Server
   2008 R2.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.trait-properties">
  <title>Checks on default property values of traits</title>

  <para>
   Compatibilitiy checks upon default trait property values will no longer
   perform casting.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.object-reserved-word">
  <title><literal>object</literal> for class names</title>

  <para>
   The <literal>object</literal> name was previously soft-reserved in PHP 7.0.
   This is now hard-reserved, prohibiting it from being used as a class, trait,
   or interface name.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.netware-support">
  <title>NetWare support</title>

  <para>
   Support for NetWare has now been removed.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.bcmod-and-floats">
  <title><function>bcmod</function> changes with floats</title>

  <para>
   The <function>bcmod</function> function no longer truncates fractional
   numbers to integers. As such, its behavior now follows
   <function>fmod</function>, rather than the <literal>%</literal> operator.
   For example <literal>bcmod('4', '3.5')</literal> now returns
   <literal>0.5</literal> instead of <literal>1</literal>.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.hash-functions">
  <title>Hashing functions and non-cryptographic hashes</title>

  <para>
   The <function>hash_hmac</function>, <function>hash_hmac_file</function>,
   <function>hash_pbkdf2</function>, and <function>hash_init</function> (with
   <constant>HASH_HMAC</constant>) functions no longer accept non-cryptographic
   hashes.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.json_decode-changes">
  <title><function>json_decode</function> function options</title>

  <para>
   The <function>json_decode</function> function option,
   <constant>JSON_OBJECT_AS_ARRAY</constant>, is now used if the second
   parameter (assoc) is &null;. Previously,
   <constant>JSON_OBJECT_AS_ARRAY</constant> was always ignored.
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.rand-mt_rand-output">
  <title><function>rand</function> and <function>mt_rand</function> output</title>

  <para>
   Sequences generated by <function>rand</function> and
   <function>mt_rand</function> for a specific seed may differ from PHP 7.1 on
   64-bit machines (due to the fixing of a modulo bias bug in the
   implementation).
  </para>
 </sect2>

 <sect2 xml:id="migration72.incompatible.sqlsafe_mode-ini-setting">
  <title>Removal of <link linkend="ini.sql.safe-mode"><parameter>sql.safe_mode</parameter></link> ini setting</title>

  <para>
   The <parameter>sql.safe_mode</parameter> ini setting has now been removed.
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
