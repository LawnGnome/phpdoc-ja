<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.13 $ -->
<!-- sync: 1.19 -->
<appendix id="history">
 <title>PHPの歴史と関連するプロジェクト</title>
 <para>
  PHPは最近数年で大きな進歩を遂げました。強力なサーバサイド
  の言語として最も有名なものの一つになる、ということは簡単な
  ことではありませんでした。PHPがどのように今日に到ったかに
  興味がある人は読み進めてみてください。古いPHPのリリースについては
  <ulink url="&url.php.museum;">PHP Museum</ulink>をご覧ください。
 </para>
 
 <sect1 id="history.php">
  <title>PHPの歴史</title>
  
  <sect2 id="history.phpfi">
   <title>PHP/FI</title>
   <para>
    PHPはPHP/FIというソフトウェアを継承したものです。PHP/FI
    は1995年にRasmus Lerdorfによって作成されました。当初は
    オンラインに置いてある彼のレジュメへのアクセスを解析するための
    Perlスクリプトの単純な組み合わせでした。彼はこのスクリプト
    に 'Personal Home Page Tools' という名前を付けました。
    さらに多くの機能が要求されるようになると、Rasmusはデータ
    ベースとの連携や、簡単な動的ウェブアプリケーションを作成
    できるようなものをC言語で書き直しました。RasmusはPHP/FIの
    ソースコードを皆が見られるように<ulink url="&url.php.release1.0.0;">公開
    </ulink>する、という選択を
    したため、誰もがこれを使い、またバグを直したり改良したり
    することが出来ました。
   </para>
   <para>
    PHP/FI(Personal Home Page / Forms Interpreter)には現在のPHPの
    基本的な機能となっているものが含まれていました。Perlライクな
    変数、フォームの値を自動で解釈する機能、そしてHTMLに埋め込まれた
    文法です。文法そのものはPerlのそれに類似していますが、それよりは
    制限が多く単純でいくらかの矛盾を抱えたものでした。
   </para>
   <para>
    1997年までに、再度Cで書き直されたPHP/FI 2.0は(おそらく)世界で
    数千の熱狂的なユーザを持ち、Internet上の1%程度となるおよそ50,000の
    ドメインにインストールされていたと報告されています。数人が
    ちょっとしたコードを提供していたとはいえ、それはまだ大きな
    一人のプロジェクトでした。
   </para>
   <para>
    PHP/FI 2.0は、その期間の多くをβ版として過ごした後、1997年の秋に
    公式にリリースされました。その後すぐにPHP 3.0のα版が登場しました。
   </para>
  </sect2>

  <sect2 id="history.php3">
   <title>PHP 3</title>
   <para>
    PHP 3.0は今日私たちが知っているPHPに非常に近いものとなった
    最初のバージョンです。これはAndi GutmansとZeev Suraskiが
    PHP/FI 2.0でeコマースのアプリケーションを開発しようとしたときに
    その力不足に気づき、1997年に完全に書き直されて作成されました。
    PHP/FIの既存の資産を失うことなく共存しようという努力の結果、
    Andi、RasmusそしてZeevはPHP 3.0をPHP/FI 2.0の公式な後継
    バージョンとしてアナウンスし、PHP/FI 2.0の開発はほぼ完全に
    中止されました。
   </para>
   <para>
    PHP 3.0の最も強力な点は、その拡張性でした。エンドユーザに
    対して、多くのデータベースへの安定したアクセス機構に加えて
    プロトコルやAPIを提供することでPHP 3.0の拡張機能は
    多くの開発者を惹きつけ、開発に加わったり新しい拡張モジュール
    が提供されるようになりました。間違いなくこれがPHP 3.0の
    非常におおきな成功の鍵でした。PHP 3.0の重要な他の機能としては
    オブジェクト指向な文法や、強力で一貫性のある文法が挙げられます。
   </para>
   <para>
    この完全に新しい言語は、PHP/FI 2.0が持っていた個人使用に制限されている
    という含意を取り除いた新しい名前でリリースされました。それは
    シンプルな 'PHP' という名前で、PHP: Hypertext Preprocessor という
    再帰的な頭字語となっています。
   </para>
   <para>
    1998年の終わりには、インストールベースで数万のユーザがおり、
    数十万のウェブサイトがPHPをインストールしたと報告していました。
    ピーク時にはPHP 3.0は世界のウェブサーバのおよそ10%にインストール
    されていました。
   </para>
   <para>
    9ヶ月の公開テストを経てPHP 3.0は1998年6月に公式にリリース
    されました。
   </para>
  </sect2>

  <sect2 id="history.php4">
   <title>PHP 4</title>
   <para>
    PHP 3.0が公式にリリースされて間もない1998年の冬、Andi Gutmans
    とZeev SuraskiはPHPの核となる部分を書き直し始めました。この
    目的は、複雑なアプリケーションにおけるパフォーマンスの改善と
    PHPコードのモジュールとしての独立性を高めることでした。
    そういったアプリケーションはPHP 3.0の新機能や第三者による
    多くのデータベースやAPIのサポートを使用することで開発可能
    でしたが、PHP 3.0はそういった複雑なアプリケーションを効率的に
    扱うようにはデザインされていませんでした。
   </para>
   <para>
    'Zend Engine'と呼ばれる新しいエンジン(開発者であるZeevとAndi
    の名前の組み合わせ)は、彼らの目的を十分に果たすものでした。
    そしてそれは1999年中ごろに初めて紹介されました。このエンジンを
    使用し、いくつかの広範囲にわたる新機能を追加したPHP 4.0は
    PHP 3.0のおよそ2年後となる2000年5月にリリースされました。
    PHP 4.0はパフォーマンスが大幅に改善されたのに加え、
    さらに多くのウェブサーバのサポート、HTTPセッション、
    出力のバッファリング、ユーザの入力のさらに安全な取得方法の
    提供、いくつかの新しい言語構造の提供といった特徴があります。
   </para>
   <para>
    PHP 4は現在のところPHPの最新バージョンです。Zend Engineの
    変更と改良を行う作業は既に始まっていて、それらの機能は
    PHP 5.0に統合される予定です。
   </para>
   <para>
    今日ではPHPには数十万の開発者がおり、数百万のサイトにインストール
    されています。これはInternetの20%以上のドメインにあたります。
   </para>
   <para>
    PHPの開発チームには、数十人の開発者に加えて、PHPに関連するプロジェクト
    、例えばPEARやドキュメンテーションに従事する別の数十人の開発者がいます。
   </para>
  </sect2>
 
  <sect2 id="history.php5">
   <title>PHP 5</title>
   <para>
    PHPの将来は主にそのコアであるZendエンジンに後押しされています。
    PHP5は新しいZendエンジン2.0を含みます。このエンジンに関する詳細は
    <ulink url="&url.zend.future;">このWebページ</ulink>をご覧ください。
   </para>
  </sect2>
 </sect1>

 <sect1 id="history.php.related">
  <title>PHP関連のプロジェクトの歴史</title>
  
  <!--  Stig and Egon can do this I hope :)

  <sect2 id="history.phpdoc">
   <title>PHP Documentation Project</title>
   <para>
   </para>
  </sect2>
  -->

  <sect2 id="history.pear">
   <title>PEAR</title>
   <para>
    PEARとはthe PHP Extension and Application Repository(元は
    PHP Extension and Add-on Repositoryでした)のことで、
    PHPで書かれた基本的なクラスの集まりで、将来的にはPHPもしくは
    Cで書かれたPHPの拡張モジュールを開発者に配布する中心的な
    方法になっていくでしょう。
   </para>
   <para>
    PEARは2000年1月にTel Avivで開かれたPHP Developers' Meeting
    (PDM)で行われた議論の中から生まれたものです。これはStig
    S. Bakkenによって作成され、彼の初めて娘であるMalin Bakken
    に捧げられています。
   </para>
   <para>
    2000年はじめの頃から、PEARは多くの開発者が一般的で再利用可能な
    機能をPHPコミュニティ全体のために実装しました。これにより、
    PEARは大きな、そして重要なプロジェクトへと成長しました。
    今日PEARにはデータベースへのアクセス、キャッシュ、数学計算、
    eCommerce等のバラエティに富んだクラスが含まれるようになって
    います。
   </para>
  </sect2>

  <sect2 id="history.phpqa">
   <title>PHPの品質保証機関(Quality Assurance Initiative)</title>
   <para>
    PHPの品質保証機関は、PHPのリリースが製品として様々な環境で
    動作するべく十分にテストされていないという批判への対応策
    として開始されました。品質保証チームは現在のところ、PHPの
    ソースコードについて十分に理解している開発の中心となって
    いる人々によって構成されています。こうした開発者はPHPの
    ローカライズやバグフィクスに多くの時間を費やしています。
    この他に、開発者の行った修正を個々の環境でテストして
    フィードバックを提供する多くのメンバーがいます。
   </para>
  </sect2>

  <sect2 id="history.phpgtk">
   <title>PHP-GTK</title>
   <para>
    PHP-GTKをクライアントとして動作するGUIアプリケーションを
    PHPで作成することができます。PHP-GTKの設計と実装は主として
    Andrei Zmievskiに拠ります:
   </para>
   <blockquote>
    <para>
     GUIプログラミングにはずっと興味を持ちつづけていて、あるとき
     Gtk+というものが、Cでコーディングするにはあまりに面倒なものだ
     ということを除けば非常にすばらしいものだと言うことを知りました。
     PyGtkやGTK-Perlの実装を見て、PHPで(必要最小限の部分だけでも)
     Gtkインターフェースを作成できないものだろうか、と考え始めたのです。
     そして2000年の8月にちょっとした時間が出来たので実験を始めました。
     私が主として参考にしたのはPyGtkの実装でした。というのもPyGtkは
     ほぼ全ての機能を網羅していて、且つオブジェクト指向のすばらしい
     インターフェースを持っていたからです。こうした最初の段階で
     私はPyGtkの作者であるJmaes Henstridgeの有用なアドバイスを得ることが
     出来ました。
    </para>
    <para>
     Gtk+関数へのインターフェースを全て自作するのは問題外だったので
     コードジェネレータというアイデアに飛びつきました。これはPyGtkと
     同様の方法です。コードジェネレータとはGtk+のクラス、定数、そして
     メソッドが記述されている.defsファイルを読み込みPHPへのインターフェース
     となるCのコードを生成するPHPのプログラムです。自動的に生成することが
     出来ない部分に関しては.overridesファイルに手動で追加していきました。
    </para>
    <para>
     2000年の秋の間はあまり時間が取れなかったため、コードジェネレータ
     やインフラの構築に長い期間がかかってしまいました。しかし
     PHP-GTKをFrank kromannに見せると、彼は大いに興味を示して
     コードジェネレータとWin32版の実装を手伝い始めてくれました。
     最初のプログラムHello Worldを書いて、それが動作したとき
     私たちはとても興奮しました。このプロジェクトが公開するに
     足るものになるにはさらに数ヶ月が必要でしたが2001年3月1日に
     最初のバージョンをリリースすることが出来ました。このニュースは
     すぐにSlashDotにも載りました。
    </para>
    <para>
     PHP-GTKはさらに拡張していくだろうと考え、私は専用のメーリング
     リストとCVSリポジトリ、そしてCollin Viebrockの助けを得て
     ウェブサイト(gtk.php.net)を用意しました。ドキュメンテーションは
     目下進行中でJames Mooreが手伝ってくれています。
    </para>
    <para>
     PHP-GTKはリリース以来徐々に広がっています。ドキュメンテーション
     チームもは日々マニュアルを更新していますし、PHP-GTK用の拡張
     モジュール、そしてPHP-GTKを使った興味深いアプリケーションを
     作成する人も増えてきています。
    </para>
   </blockquote>
  </sect2>
 </sect1>

 <sect1 id="history.php.books">
  <title>PHP関連の本</title>
  <para>
   PHPが成長していくに従って、開発プラットフォームとして世界中で
   有名になっていきました。この流れを確かめる面白い方法のうちの
   一つは、初期の頃から現在に到るまで頻繁に出版されつづけている
   PHPに関する本を観察してみることです。
  </para>
  <para>
   私たちの知る限り、PHPを扱った最初の本は1999年に出版された
   'php-dynamische webauftritte professionell realisieren'(Egon Schmid,
   Christian Cartus, Richard Blume監修) というドイツの本です。
   Leon Atkinsonによる'Core PHP Programming'という英語で書かれた
   最初の本がその後すぐに出版されました。そのどちらもPHP 3.0を
   扱っていました。
  </para>
  <para>
   こうした最初の出版物に続いて、多くの著者、出版社から数多くの
   本が出版されました。その数は英語で40冊以上、ドイツ語で50冊以上、
   フランス語20冊以上にもなります！さらに他の言語、例えばスペイン語、
   韓国語、日本語そしてヘブライ語でも本が出版されています。
  </para>
  <para>
   このようにPHPに関する書籍が、異なった著者により執筆され、
   多くの出版社から出版され、多くの言語で書かれている、という
   事実はPHPが世界的に成功している強い証拠であると言えるでしょう。
  </para>
 </sect1>
 
 <sect1 id="history.php.publications">
  <title>PHP関連の出版物</title>
  <para>
   私たちの知る限り、PHPに関する記事が最初に掲載された雑誌は
   フランスの Informatiques Magazine で、1998年の終わりごろ
   PHP 3.0が扱われていました。本と同様に、これに続いて様々な
   すばらしい雑誌にPHPに関する記事が掲載されています。
  </para>
  <para>
   PHPに関する記事はDr. Dobbs, Linux Enterprise, Linux Magazine,
   そのた多くの雑誌に掲載されています。ASPベースのアプリケーションを
   Windows上で動作するPHPに移植する記事が、なんとMicrosoftのMSDNに
   掲載されています！
  </para>
 </sect1>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
