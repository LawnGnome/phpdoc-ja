<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: takagi Status: ready -->
<appendix id="userlandnaming">
 <title>ユーザレベルでの命名の手引き</title>
 <para>
  これは、あなたが書く PHP コード中の識別子によりよい名前をつけるための手引きです。
  グローバル名前空間のシンボルを作成するコードでシンボルの名前を決める際には、
  以下のガイドラインを考慮することが重要です。これにより、
  PHP の将来のバージョンとの衝突を避けることができます。
 </para>

 <section id="userlandnaming.globalnamespace">
  <title>グローバル名前空間</title>
  <para>
   グローバル名前空間に属する言語構造には、このようなものがあります。
  </para>

  <itemizedlist>
   <listitem><para>関数</para></listitem>
   <listitem><para>クラス</para></listitem>
   <listitem><para>インターフェイス</para></listitem>
   <listitem><para>定数 (クラス定数以外)</para></listitem>
   <listitem>
    <para>関数/メソッド の外部で定義された変数</para>
   </listitem>
  </itemizedlist>
 </section>

 <section id="userlandnaming.rules">
  <title>ルール</title>
  <para>
   以下のリストは、PHP プロジェクトで新たな内部識別子を作成する際に
   どのような基準で名前を決めているのかを
   おおまかにまとめたものです。完全な規約は、公式の
   <ulink url="&url.userlandnaming.cs;">コーディング規約</ulink>
   を参照ください。
  </para>

  <itemizedlist>
   <listitem>
    <para>
     PHP はトップレベルの名前空間を所有していますが、
     きちんとしたわかりやすい名前をつけるようにこころがけ、
     衝突が起こらないようにしています。
    </para>
   </listitem>
   <listitem>
    <para>
     関数名では、単語の間にアンダースコアを使用します。一方、
     クラス名の場合は lower bumpy camel rule を使用します
     (昔からあるクラスや関数の中には、例外もあります)。
    </para>
   </listitem>
   <listitem>
    <para>
     PHP の拡張モジュールのグローバルシンボルには、
     その拡張モジュールの名前を先頭につけます
     (これまでにこの原則を守っていない例が大量にあることに注意しましょう)。
     たとえば次のようになります。
    </para>

    <itemizedlist>
     <listitem><para><function>curl_close</function></para></listitem>
     <listitem><para><function>mysql_query</function></para></listitem>
     <listitem><para>PREG_SPLIT_DELIM_CAPTURE</para></listitem>
     <listitem><para>new DOMDocument()</para></listitem>
     <listitem>
      <para>
       <function>strpos</function> (過去に間違えた例)
      </para>
     </listitem>
     <listitem><para>new SplFileObject()</para></listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     しかし、イテレータや例外については、単純に最後に
     "Iterator" および "Exception" を追加するようにします。
     たとえば次のようになります。
    </para>
    <itemizedlist>
     <listitem><para>ArrayIterator</para></listitem>
     <listitem><para>LogicException</para></listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     PHP では、__ で始まる名前の関数を特殊な関数として予約済みです。
     以下にあげるような文書化されている機能を使用する場合を除き、
     __ で始まる関数名は使用しないことを推奨します。
    </para>
    <itemizedlist>
     <listitem><para><function>__get</function></para></listitem>
     <listitem><para><function>__autoload</function></para></listitem>
    </itemizedlist>
   </listitem>
  </itemizedlist>
 </section>

 <section id="userlandnaming.tips">
  <title>Tips</title>
  <para>
   将来もそのまま使用できるようなコードを書くためにお勧めなのは、次の方法です。
   グローバル名前空間に属するシンボル名には、
   前または後ろに何らかの文字列を追加するようにします。
   追加する文字は 3 文字から 4 文字程度のできるだけランダムな文字列にし、
   それをアンダースコアで (前または後ろに) 連結します。
   他のユーザのコードとの衝突を避けるためにお勧めなのは、次の方法です。
   まず、他のプロジェクトでどのような接頭辞 (あるいは接尾辞)
   が使用されているかを調べます。そして、自分たちが選択した接頭辞
   (あるいは接尾辞) を周りに広めるようにします。
   これらを満たす例は、次のようになります。
  </para>

  <itemizedlist>
   <listitem><para>MyPx_someFunc()</para></listitem>
   <listitem><para>Foo_Date</para></listitem>
   <listitem><para>$asdf_dbh</para></listitem>
  </itemizedlist>
 </section>

</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
