 <appendix id="debugger">
  <title>PHPデバッガ</title>

  <sect1 id="debugger-about">
   <title>デバッガについて</title>
   <simpara>
    PHP 3 ではネットワーク対応のデバッガがサポーされています。
   </simpara>
   <simpara>
    PHP 4 ではまだ同様の機能はサポートされていません。
   </simpara>
  </sect1>

  <sect1 id="debugger-using">
   <title>デバッガの使用法</title>

   <para>
    PHPの内部デバッガはバグを追跡し、回避するのに役立ちます。この
    デバッガは、PHP が開始されるたびに<acronym>TCP</acronym>ポートに
    接続することにより動作します。そのリクエストからのすべての
    エラーメッセージはこのTCPコネクションに送られます。この情報は
    <acronym>IDE</acronym> や(Emacs のような)プログラマブル・エディタの
    中で動作する「デバッグ用サーバ」のために使われます。
   </para>
   <para>
    デバッガの設定方法：
    <orderedlist>
     <listitem>
      <simpara>
       <link linkend="configuration.file">設定ファイル</link>
       (<link linkend="ini.debugger.port">debugger.port</link>)
       でデバッガ用のTCPポートを設定し、それを
       (<link linkend="ini.debugger.enabled">debugger.enabled</link>)
       で有効にします。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       どこかでそのポートに対してTCPリスナを設定します。
       (たとえば、UNIXでは<command>socket -l -s 1400</command>)
      </simpara>
     </listitem>
     <listitem>
      <simpara> 
       コードの中で"debugger_on(<replaceable>host</replaceable>)"
       を実行します。ここで<replaceable>host</replaceable>は
       <acronym>TCP</acronym>リスナが動作しているホストのIPアドレス
       又はホスト名です。
      </simpara>
     </listitem>
    </orderedlist>
    これで、すべての警告や通知などがそのリスナのソケット上に表示されます。
    <emphasis>
     この表示は、この後<function>error_reporting</function>でエラー出
     力を抑制しても、有効のままです。
    </emphasis>
   </para>
  </sect1>
  
  <sect1 id="debugger-protocol">
   <title>デバッガのプロトコル</title>
   <para>
    デバッガのプロトコルは行ベースです。各行には<emphasis>タイプ
    </emphasis>を持ち、また<emphasis>メッセージ</emphasis>を構成
    する行もあります。各メッセージはタイプ<literal>start</literal>
    を持つ行で始まり、タイプ<literal>end</literal>を持つ行で終わり
    ます。PHP は異なったメッセージを持つ行を同時に送ることがあります。
   </para>
   <para>
    各行のフォーマット：
    <informalexample>
     <literallayout>
      <replaceable>日付</replaceable> 
      <replaceable>時刻</replaceable> 
      <replaceable>ホスト</replaceable>
      (<replaceable>プロセスID</replaceable>) 
      <replaceable>タイプ</replaceable>: 
      <replaceable>メッセージデータ</replaceable>
     </literallayout>
    </informalexample>
    <variablelist>
     <varlistentry>
      <term><replaceable>日付</replaceable></term>
      <listitem>
       <simpara>ISO 8601フォーマットの日付
	(<replaceable>yyyy</replaceable>-<replaceable>mm</replaceable>-<replaceable>dd</replaceable>)
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>時刻</replaceable></term>
      <listitem>
       <simpara>マイクロ秒単位の時刻:
	<replaceable>hh</replaceable>:<replaceable>mm</replaceable>:<replaceable>uuuuuu</replaceable>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>ホスト名</replaceable></term>
      <listitem>
       <simpara>
	スクリプト・エラーを生成したホストのDNS名
	またはIPアドレス。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>プロセスID</replaceable></term>
      <listitem>
       <simpara>
	<replaceable>ホスト</replaceable>において
	このエラーを生成したPHPスクリプトのプロセスID
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>タイプ</replaceable></term>
      <listitem>
       <para>
	行のタイプ。以降に続くデータをどう解釈すべきかを、
	受信プログラムに知らせます。
	<table>
	 <title>デバッガの行タイプ</title>
	 <tgroup cols="2">
	  <thead>
	   <row>
	    <entry>名前</entry>
	    <entry>意味</entry>
	   </row>
	  </thead>
	  <tbody>
	   <row>
	    <entry><literal>start</literal></entry> 
	    <entry>
	     デバッガ・メッセージがここから始まることを受信プログラムに
	     伝える役割をします。<replaceable>データ</replaceable> の内容
	     は、以下に示すエラーメッセージのタイプです。
	    </entry>
	   </row>
	   <row>
	    <entry><literal>message</literal></entry>
	    <entry>PHP エラーメッセージ</entry>
	   </row>
	   <row>
	    <entry><literal>location</literal></entry>
	    <entry>
	     エラーが発生したファイル名と行番号。最初の
	     <literal>location</literal>行は常に最上位レベルの位置が
	     入っています。<replaceable>データ</replaceable>は
	     <literal><replaceable>ファイル名</replaceable>:
	      <replaceable>行番号</replaceable></literal>のようになります。
	     <literal>message</literal> の後、および、すべての
	     <literal>function</literal> の後の行には常に
	     <literal>location</literal> が付きます。
	    </entry>
	   </row>
	   <row>
	    <entry><literal>frames</literal></entry> 
	    <entry>
	     後に続くスタックダンプの中のフレーム数。もし4フレームあれば、
	     4レベルに渡ってコールされた関数の情報があることになります。
	     "frames" 行がない場合は、ネストの深さは0
	     (エラーはトップレベルで起こった)と仮定されます。
	    </entry>
	   </row>
	   <row>
	    <entry><literal>function</literal></entry> 
	    <entry>
	     エラーが発生した関数名。関数コール・スタックにおいて、各レベル
	     毎に繰り返されます。
	    </entry>
	   </row>
	   <row>
	    <entry><literal>end</literal></entry> 
	    <entry>
	     受信プログラムに対して、デバッガのメッセージがここで終わる
	     ことを知らせます。
	    </entry>
	   </row>
	  </tbody>
	 </tgroup>
	</table>
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>データ</replaceable></term>
      <listitem>
       <simpara>行データ</simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    
    <table>
     <title>デバッガのエラータイプ</title>
     <tgroup cols="2">
      <thead>
       <row>
	<entry>デバッガ</entry>
	<entry>PHP内部</entry>
       </row>
      </thead>
      <tbody>
       <row>
	<entry><errortype>警告</errortype></entry>
	<entry><errortype>E_WARNING</errortype></entry>
       </row>
       <row>
	<entry><errortype>エラー</errortype></entry>
	<entry><errortype>E_ERROR</errortype></entry>
       </row>
       <row>
	<entry><errortype>パース</errortype></entry>
	<entry><errortype>E_PARSE</errortype></entry>
       </row>
       <row>
	<entry><errortype>通知</errortype></entry>
	<entry><errortype>E_NOTICE</errortype></entry>
       </row>
       <row>
	<entry><errortype>コア・エラー</errortype></entry>
	<entry><errortype>E_CORE_ERROR</errortype></entry>
       </row>
       <row>
	<entry><errortype>コア警告</errortype></entry>
	<entry><errortype>E_CORE_WARNING</errortype></entry>
       </row>
       <row>
	<entry><errortype>未定義</errortype></entry>
	<entry>(その他)</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    
    <example>
     <title>デバッガメッセージの例</title>
     <literallayout>
1998-04-05 23:27:400966 lucifer.guardian.no(20481) start: notice
1998-04-05 23:27:400966 lucifer.guardian.no(20481) message: Uninitialized variable
1998-04-05 23:27:400966 lucifer.guardian.no(20481) location: (&null;):7
1998-04-05 23:27:400966 lucifer.guardian.no(20481) frames: 1
1998-04-05 23:27:400966 lucifer.guardian.no(20481) function: display
1998-04-05 23:27:400966 lucifer.guardian.no(20481) location: /home/ssb/public_html/test.php3:10
1998-04-05 23:27:400966 lucifer.guardian.no(20481) end: notice
     </literallayout>
    </example>
  </para>
 </sect1>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
