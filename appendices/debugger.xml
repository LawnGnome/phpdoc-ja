<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.15 $ -->
<!-- EN-Revision: 1.28 Maintainer: hirokawa Status: ready -->
 <appendix xml:id="debugger" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>PHP のデバッグ</title>

  <sect1 xml:id="debugger-about">
   <title>デバッガについて</title>
   <simpara>
    PHP 3 ではネットワーク対応のデバッガがサポートされています。
   </simpara>
   <simpara>
    PHP 4 内部の機能としてはデバッガはサポートされていませんが、
    外部デバッガモジュールを使用することが出来ます。
    <link xlink:href="&url.zend.ide;">Zend IDE</link>
    にはデバッガが付属していますし
    DBG(<link xlink:href="&url.dbg;">&url.dbg;</link>)
    や <link xlink:href="&url.apd;">Advanced PHP Debugger</link>(APD)、
    <link xlink:href="&url.xdebug;">Xdebug</link>
    といったフリーの外部デバッガモジュールもあります。
    <link xlink:href="&url.xdebug;">Xdebug</link> はこのセクションでも
    述べますが PHP3
    のデバッグ機能と互換性のあるデバッグインターフェースを持っています。
   </simpara>
  </sect1>

  <sect1 xml:id="debugger-using">
   <title>デバッガの使用法</title>

   <para>
    PHP 3 の内部デバッガはバグを追跡し、回避するのに役立ちます。
    このデバッガは、PHP 3 が開始されるたびに <acronym>TCP</acronym> ポートに
    接続することにより動作します。
    そのリクエストからのすべてのエラーメッセージは、
    この TCP コネクションに送られます。
    この情報は <acronym>IDE</acronym> や(Emacs のような)
    プログラマブル・エディタの中で動作する
    「デバッグ用サーバ」のために使われます。
   </para>
   <para>
    デバッガの設定方法:
    <orderedlist>
     <listitem>
      <simpara>
       <link linkend="configuration.file">設定ファイル</link>
       (<link linkend="ini.debugger.port">debugger.port</link>)
       でデバッガ用の TCP ポートを設定し、それを
       (<link linkend="ini.debugger.enabled">debugger.enabled</link>)
       で有効にします。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       どこかでそのポートに対して TCP リスナを設定します。
       (たとえば、Unix systems では<command>socket -l -s 1400</command>)
      </simpara>
     </listitem>
     <listitem>
      <simpara> 
       コードの中で「debugger_on(<replaceable>host</replaceable>)」
       を実行します。ここで <replaceable>host</replaceable> は
       <acronym>TCP</acronym> リスナが動作しているホストの
       IP アドレス又はホスト名です。
      </simpara>
     </listitem>
    </orderedlist>
    これで、すべての警告や通知などがそのリスナのソケット上に表示されます。
    <emphasis>
     この表示は、この後 <function>error_reporting</function>
     でエラー出力を抑制しても、有効のままです。
    </emphasis>
   </para>
  </sect1>
  
  <sect1 xml:id="debugger-protocol">
   <title>デバッガのプロトコル</title>
   <para>
    PHP 3 のデバッガのプロトコルは行ベースです。各行には
    <emphasis>タイプ</emphasis> を持ち、また <emphasis>メッセージ</emphasis>
    を構成する行もあります。
    各メッセージはタイプ <literal>start</literal>
    を持つ行で始まり、タイプ <literal>end</literal>
    を持つ行で終わります。
    PHP 3 は異なったメッセージを持つ行を同時に送ることがあります。
   </para>
   <para>
    A line has this format:
    <informalexample>
     <programlisting>
<![CDATA[
date time host(pid) type: message-data
]]>
     </programlisting>
    </informalexample>
   </para>
   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable>日付</replaceable></term>
      <listitem>
       <simpara>ISO 8601 フォーマットの日付
    (<replaceable>yyyy</replaceable>-<replaceable>mm</replaceable>-<replaceable>dd</replaceable>)
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>時刻</replaceable></term>
      <listitem>
       <simpara>マイクロ秒単位の時刻:
    <replaceable>hh</replaceable>:<replaceable>mm</replaceable>:<replaceable>uuuuuu</replaceable>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>ホスト名</replaceable></term>
      <listitem>
       <simpara>
    スクリプト・エラーを生成したホストのDNS名
    またはIPアドレス。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>プロセス ID</replaceable></term>
      <listitem>
       <simpara>
    <replaceable>ホスト</replaceable>において
    このエラーを生成した PHP 3 スクリプトのプロセス ID
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>タイプ</replaceable></term>
      <listitem>
       <para>
    行のタイプ。以降に続くデータをどう解釈すべきかを、
    受信プログラムに知らせます。
    <table>
     <title>デバッガの行タイプ</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>名前</entry>
        <entry>意味</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><literal>start</literal></entry> 
        <entry>
         デバッガ・メッセージが、
         ここから始まることを受信プログラムに伝える役割をします。
         <replaceable>データ</replaceable> の内容は、
         以下に示すエラーメッセージのタイプです。
        </entry>
       </row>
       <row>
        <entry><literal>message</literal></entry>
        <entry>PHP 3 エラーメッセージ</entry>
       </row>
       <row>
        <entry><literal>location</literal></entry>
        <entry>
         エラーが発生したファイル名と行番号。最初の
         <literal>location</literal>
         行は常に最上位レベルの位置が入っています。
         <replaceable>データ</replaceable>は
         <literal><replaceable>ファイル名</replaceable>:
          <replaceable>行番号</replaceable></literal> のようになります。
         <literal>message</literal> の後、および、すべての
         <literal>function</literal> の後の行には常に
         <literal>location</literal> が付きます。
        </entry>
       </row>
       <row>
        <entry><literal>frames</literal></entry> 
        <entry>
         後に続くスタックダンプの中のフレーム数。もし4フレームあれば、
         4レベルに渡ってコールされた関数の情報があることになります。
         "frames" 行がない場合は、ネストの深さは0
         (エラーはトップレベルで起こった)と仮定されます。
        </entry>
       </row>
       <row>
        <entry><literal>function</literal></entry> 
        <entry>
         エラーが発生した関数名。関数コール・スタックにおいて、
         各レベル毎に繰り返されます。
        </entry>
       </row>
       <row>
        <entry><literal>end</literal></entry> 
        <entry>
         受信プログラムに対して、
         デバッガのメッセージがここで終わることを知らせます。
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>データ</replaceable></term>
      <listitem>
       <simpara>行データ</simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    
    <table>
     <title>デバッガのエラータイプ</title>
     <tgroup cols="2">
      <thead>
       <row>
    <entry>デバッガ</entry>
    <entry>PHP 3 内部</entry>
       </row>
      </thead>
      <tbody>
       <row>
    <entry><errortype>警告</errortype></entry>
    <entry><errortype>E_WARNING</errortype></entry>
       </row>
       <row>
    <entry><errortype>エラー</errortype></entry>
    <entry><errortype>E_ERROR</errortype></entry>
       </row>
       <row>
    <entry><errortype>パース</errortype></entry>
    <entry><errortype>E_PARSE</errortype></entry>
       </row>
       <row>
    <entry><errortype>通知</errortype></entry>
    <entry><errortype>E_NOTICE</errortype></entry>
       </row>
       <row>
    <entry><errortype>コア・エラー</errortype></entry>
    <entry><errortype>E_CORE_ERROR</errortype></entry>
       </row>
       <row>
    <entry><errortype>コア警告</errortype></entry>
    <entry><errortype>E_CORE_WARNING</errortype></entry>
       </row>
       <row>
    <entry><errortype>未定義</errortype></entry>
    <entry>(その他)</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    
    <example>
     <title>デバッガメッセージの例</title>
     <literallayout>
1998-04-05 23:27:400966 lucifer.guardian.no(20481) start: notice
1998-04-05 23:27:400966 lucifer.guardian.no(20481) message: Uninitialized variable
1998-04-05 23:27:400966 lucifer.guardian.no(20481) location: (&null;):7
1998-04-05 23:27:400966 lucifer.guardian.no(20481) frames: 1
1998-04-05 23:27:400966 lucifer.guardian.no(20481) function: display
1998-04-05 23:27:400966 lucifer.guardian.no(20481) location: /home/ssb/public_html/test.php3:10
1998-04-05 23:27:400966 lucifer.guardian.no(20481) end: notice
     </literallayout>
    </example>
  </para>
 </sect1>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
