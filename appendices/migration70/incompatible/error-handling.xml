<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337376 Maintainer: takagi Status: ready -->

<sect2 xml:id="migration70.incompatible.error-handling">
 <title>エラーや例外の取り扱いの変更</title>

 <para>
  fatal error や recoverable fatal error の多くが、PHP 7 では例外に変換されるようになりました。
  これらの例外は <classname>Error</classname> クラスを継承したもので、
  このクラスは <classname>Throwable</classname> インターフェイスを実装しています。
  つまり、すべての例外がこのインターフェイスを実装していることになります。
 </para>

 <para>
  PHP 7 におけるエラーハンドリングの詳細な説明は
  <link linkend="language.errors.php7">PHP 7 のエラー</link> を参照ください。
  この移行ガイドでは、下位互換性のない変更点を列挙するだけにとどめます。
 </para>

 <sect3 xml:id="migration70.incompatible.error-handling.constructors">
  <title>内部のコンストラクタは、失敗したときに常に例外をスローする</title>

  <para>
   これまでは、コンストラクタの処理が失敗した際に、
   &null; を返したり使用不能なオブジェクトを返したりする内部クラスがありました。
   PHP 7 では、同様の場合に
   <classname>Exception</classname> をスローするようになりました。
   ユーザー定義のクラスでは以前からそうすべきだとされていたことです。
  </para>
 </sect3>

 <sect3 xml:id="migration70.incompatible.error-handling.parse">
  <title>パースエラーが発生すると <classname>ParseError</classname> をスローする</title>

  <para>
   パースエラーが発生すると <classname>ParseError</classname> オブジェクトをスローするようになりました。
   <function>eval</function> のエラーハンドリングをする際には、&catch;
   ブロックを用意してこのエラーを処理しなければいけません。
  </para>
 </sect3>
</sect2>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
