<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.15 $ -->
 <reference id="ref.zlib">
  <title>zlib圧縮関数</title>
  <titleabbrev>Zlib</titleabbrev>
  <partintro>
   <para>
    このモジュールは、Jean-loup Gailly および Mark Adler による
    透過的に gzip (.gz) で圧縮されたファイルを読み書きするための
    <ulink url="&url.zlib;">zlib</ulink> の関数を使用します。
    このモジュールを使用するには、zlib バージョン 1.0.9 以上を
    使用する必要があります。
   </para>
   <para>
    このモジュールは、gzip で圧縮されたファイルで動作する版の多くの
    <link linkend="ref.filesystem">filesystem</link> 関数を含んでいます。
    (非圧縮のファイルも使用可能ですが、ソケットは使用できません)
   </para>
   <note>
    <para>
     バージョン4.0.4-devで.gzファイルに対応したfopen-wrapperを導入しました。
     これにより<function>fopen</function>に'zlib:'をプレフィクスとした
     ファイル名又はパス名を渡すことで、通常のf*()関数で圧縮されたファイルに
     透過的にアクセスすることが出来ます。
    </para>
    <para>
     この機能を利用するには<literal>fopencookie()</literal>関数を提供する
     Cのランタイムライブラリが必要です。現在私の知る限りでは、GNU libcが
     この機能を提供する唯一のライブラリです。
    </para>
   </note>
   
   <sect1 id="zlib-example">
    <title>簡単なコードの例</title>
    <para>
     テンポラリファイルをオープンし、テスト用文字列を書きこみ、
     続いて、このファイルの内容を2回出力します。
    </para>
    <example>
     <title>簡単な Zlib の例</title>
     <programlisting role="php">
<![CDATA[
<?php
$filename = tempnam ('/tmp', 'zlibtest').'.gz';
print "<html>\n<head></head>\n<body>\n<pre>\n";
$s = "Only a test, test, test, test, test, test, test, test!\n";
// 最大限の圧縮を指定して書きこみ用にファイルをオープン
$zp = gzopen ($filename, "w9");
// 文字列をファイルに書きこむ
gzwrite ($zp, $s);
// ファイルを閉じる
gzclose ($zp);
// 読みこみ用にファイルをオープン
$zp = gzopen ($filename, "r");
// 3文字読みこむ
print gzread ($zp, 3);
// ファイルの終端まで読み、閉じる
gzpassthru ($zp);
print "\n";
// ファイルをオープンし、内容を出力する (2回目)。
if (readgzfile ($filename) != strlen ($s)) {
        echo "Error with zlib functions!";
}
unlink ($filename);
print "</pre>\n</h1></body>\n</html>\n";
?>
]]>
     </programlisting>
    </example>
   </sect1>
  </partintro>

  <refentry id="function.gzclose">
   <refnamediv>
    <refname>gzclose</refname>
    <refpurpose>開かれたgzファイルへのポインタを閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gzclose</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ポインタzpが指すgzファイルを閉じます。
    </para>
    <para>
     成功した場合に&true;、失敗した場合に&false;を返します。
    </para>
    <para>
     gzファイルポインタは、有効なファイルポインタであり、かつ、
     <function>gzopen</function>
     によりオープンできたファイルを指している必要があります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzeof">
   <refnamediv>
    <refname>gzeof</refname>
    <refpurpose>gz ファイルポインタにおいてファイル終端を調べる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gzeof</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     gzファイルポインタがEOFを指す時またはエラーが生じた場合に&true;、
    その他の場合に&false;を返します。
    </para>
    <para>
     gzファイルポインタは、有効なファイルポインタであり、かつ、
     <function>gzopen</function>によりオープンできたファイルを指している
     必要があります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzfile">
   <refnamediv>
    <refname>gzfile</refname> 
    <refpurpose>gzファイル全体を配列に読み込む</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>gzfile</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>int
      <parameter>
	<replaceable><optional>use_include_path</optional></replaceable>
       </parameter>
     </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>gzfile</function> は、ファイルを配列にして返すこと以外は
     <function>readgzfile</function> と同じです。
    </para>
    <para>
     オプションの2番目のパラメータを"1"にすることにより、
     <link linkend="ini.include-path">include_path</link> にあるファイルも
     検索することができます。
    </para>
    <para>
     <function>readgzfile</function>および 
     <function>gzopen</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzgetc">
   <refnamediv>
    <refname>gzgetc</refname>
    <refpurpose>gz ファイルへのポインタから文字を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gzgetc</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     zpが指すファイルの中から (非圧縮の)1文字を読み込み、これを含む
     文字列を返します。
     (<function>gzeof</function>と同様に)EOFの場合に&false;を返します。
    </para>
    <para>
     gzファイルポインタは、有効なファイルポインタであり、かつ、
     <function>gzopen</function>
     によりオープンできたファイルを指している必要があります。
    </para>
    <para>
     <function>gzopen</function>および
     <function>gzgets</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzgets">
   <refnamediv>
    <refname>gzgets</refname>
    <refpurpose>ファイルポインタから 1 行を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gzgets</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
      <paramdef>int <parameter>length</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     fpが指すファイルから最大length-1バイトの文字を読み込み、
     これを含む (非圧縮の)文字列を返します。
     length-1バイトを読み込むか、改行または EOF になった場合、
     (どれかが最初にきた時点で) 読み込みを終了します。
    </para>
    <para>
     エラーが発生した場合、&false;を返します。
    </para>
    <para> 
     ファイルポインタは、有効なファイルポインタであり、かつ、
     <function>gzopen</function>
     によりオープンできたファイルを指している必要があります。
    </para>
    <para> 
     <function>gzopen</function>,
     <function>gzgetc</function>, <function>fgets</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.gzgetss">
   <refnamediv>
    <refname>gzgetss</refname>
    <refpurpose>
     gzファイルへのポインタから1行を得て、HTMLタグを取り除く
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gzgetss</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
      <paramdef>int <parameter>length</parameter></paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>allowable_tags</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>gzgetss</function>は読み込んだテキストからHTMLおよびPHPタグを全て
     取り除こうとすることを除いて、<function>gzgets</function>と同じです。
    </para>
    <para>
     オプションの3番目のパラメータにより、取り除かないタグを指定することが
     できます。
    </para>
    <note>
     <para>
      <parameter>allowable_tags</parameter> は PHP 3.0.13, PHP4B3
      で追加されました。
     </para>
    </note>
    <para>
     <function>gzgets</function>,
     <function>gzopen</function>, <function>strip_tags</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.gzopen">
   <refnamediv>
    <refname>gzopen</refname>
    <refpurpose>gz ファイルを開く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gzopen</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>string <parameter>mode</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>use_include_path</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     読み込みまたは書き込み用にgzip(.gz)ファイルをオープンします。
     パラメータmodeは、
     <function>fopen</function>と同じ("rb" または "wb")ですが、
     圧縮レベル("wb9")または圧縮の方策、つまり、"wb6f"のようにフィルターを
     通したデータを'f'で指定したり、'h'でハフマン圧縮のみを行うことを
     指定したりすることができます。
     (方策に関するパラメータの詳細については、zlib.h の中の deflateInit2 の
     説明を参照下さい。) 
    </para>
    <para>
     gzopen は、gzipフォーマットでないファイルの読み込みについても
     使用することができます。
     この場合、<function>gzread</function>は、ファイルを解凍せずに直接読み
     込まれます。
    </para>
    <para>
     <function>gzopen</function>は、開いたファイルへのファイルポインタを
     返します。この後、このファイル記述子から読み込んだデータは全て
     透過的に解凍され、書き込んだデータは圧縮されます。
    </para>
    <para>
     開くことに失敗した場合、この関数は&false;を返します。
    </para>
    <para>
     オプションの3番目のパラメータを"1"にすることにより、
     <link linkend="ini.include-path">include_path</link>にあるファイルも
     検索することができます。
    </para>
    <para>
     <example>
      <title><function>gzopen</function>の例</title>
      <programlisting role="php">
<![CDATA[
$fp = gzopen ("/tmp/file.gz", "r");
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <function>gzclose</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.gzpassthru">
   <refnamediv>
    <refname>gzpassthru</refname>
    <refpurpose>
     gzファイルへのポインタから残りのデータ全部を出力する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gzpassthru</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     gzファイルポインタについてEOFまでデータを読み込み、
     標準出力に(解凍された)結果を書き込みます。
    </para>
    <para>
     エラーが発生した場合、&false;を返します。
    </para>
    <para> 
     ファイルポインタは、有効なファイルポインタであり、かつ、
     <function>gzopen</function>
     によりオープンできたファイルを指している必要があります。
    </para>
    <para>
     gzファイルは、<function>gzpassthru</function>による読込が完了した時点で
     閉じられます。(<parameter>zp</parameter>は使用されなくなります)
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzputs">
   <refnamediv>
    <refname>gzputs</refname>
    <refpurpose>gz ファイルへのポインタに書き込む</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gzputs</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
      <paramdef>string <parameter>str</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>length</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>gzputs</function>は、<function>gzwrite</function>の別名であり、
     完全に同じものです。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzread">
   <refnamediv>
    <refname>gzread</refname>
    <refpurpose>バイナリ対応のgzファイル読み込み</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gzread</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
      <paramdef>int <parameter>length</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>gzread</function>は、最大<parameter>length</parameter> 
     バイトのデータを<parameter>zp</parameter>が指すgzファイルポインタ
     から読み込みます。(解凍された) 
     <parameter>length</parameter>バイトのデータが読み込まれたか、
     EOFに達したとき、読み込みは終了します。
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
// gz ファイルの内容を文字列に読み込みます
$filename = "/usr/local/something.txt.gz";
$zd = gzopen ($filename, "r");
$contents = gzread ($zd, 10000);
gzclose ($zd);
]]>
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     <function>gzwrite</function>、<function>gzopen</function>、
     <function>gzgets</function>、 <function>gzgetss</function>、
     <function>gzfile</function>、<function>gzpassthru</function>
     も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.gzrewind">
   <refnamediv>
    <refname>gzrewind</refname>
    <refpurpose>gz ファイルポインタの示す位置を元に戻す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gzrewind</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     zpが指すファイルのファイル位置記述子をファイルストリームの最初に
     セットします。
    </para>
    <para>
     エラーが生じた場合、0を返します。
    </para>
    <para> 
     ファイルポインタは有効なファイルポインタであり、かつ、
     <function>gzopen</function>によりオープンできたファイルを指している
     必要があります。
    </para>
    <para>
     <function>gzseek</function>および<function>gztell</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzseek">
   <refnamediv>
    <refname>gzseek</refname>
    <refpurpose>gz ファイルポインタの位置を移動する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gzseek</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
      <paramdef>int <parameter>offset</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     zpが指すファイルのファイル位置記述子をファイルストリームにおいて
     offset バイトにセットします。<literal>gzseek( zp, offset,
     SEEK_SET )</literal> を(C 言語において)コールするのと同じです。
    </para>
    <para>
     ファイルが読み込み用にオープンされた場合、この関数は、エミュレー
     ションされますが、極端に遅くなる可能性があります。
     ファイルを書き込み用にオープンした場合、前方への移動のみがサポー
     トされます。この場合、gzseek は、新しい開始位置までゼロの並びのデー
     タを圧縮します。
    </para>
    <para>
     成功した場合、0を返します。それ以外の場合は、-1を返します。
     移動がEOFを超える場合にもエラーは発生しないことに注意してください。
    </para>
    <para>
     <function>gztell</function>および<function>gzrewind</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gztell">
   <refnamediv>
    <refname>gztell</refname>
    <refpurpose>gzファイルポインタの読み込み/書き込み位置を返します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gztell</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     zpが指すファイルポインタの位置、つまり、
     ファイルストリームにおけるオフセット値を返します。
    </para>
    <para>
     エラーが発生した場合、&false;を返します。
    </para>
    <para> 
     ファイルポインタは、有効なファイルポインタであり、かつ、
     <function>gzopen</function>
     によりオープンできたファイルを指している必要があります。
    </para>
    <para>
     <function>gzopen</function> 、
     <function>gzseek</function>および<function>gzrewind</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.gzwrite">
   <refnamediv>
    <refname>gzwrite</refname>
    <refpurpose>バイナリ対応のgzファイル書き込み</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gzwrite</function></funcdef>
      <paramdef>int <parameter>zp</parameter></paramdef>
      <paramdef>string <parameter>string</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>length</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>gzwrite</function>は
     <parameter>string</parameter>の中身をzpが指す
     gzファイルストリームに書き込みます。
     引数<parameter>length</parameter>が指定され場合、(解凍された)
     <parameter>length</parameter>バイトのデータが書き込まれたか、
     <parameter>string</parameter>の終わりに達した時に
     書き込みは終了します。
    </simpara>
    <simpara>
     引数<parameter>length</parameter>が指定された場合、
     <link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link>
     設定オプションは無視されて <parameter>string</parameter> から
     スラッシュが取り除かれなくなることに注意してください。
    </simpara>
    <simpara>
     <function>gzread</function>、<function>gzopen</function>、
     および <function>gzputs</function> も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.readgzfile">
   <refnamediv>
    <refname>readgzfile</refname>
    <refpurpose>gz ファイルを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>readgzfile</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>use_include_path</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ファイルを読み込み、解凍し、標準出力に書き込みます。
    </para>
    <para>
     <function>readgzfile</function>は、gzipフォーマットでないファイル
     の読込にも使用可能です。この場合、<function>readgzfile</function>
     はファイルを解凍せずに直接読込みます。
    </para>
    <para> 
     ファイルから読み込んだ(解凍された)データのバイト数を返します。エラーが
     発生した場合、&false;が返され、@readgzfileとしてコールされている場
     合を除き、エラーメッセージが出力されます。
    </para>
    <para> 
     ファイル<parameter>filename</parameter>は、ファイルシステムから
     オープンされ、その内容が標準出力に書き込まれます。
    </para>
    <para>
     <link linkend="ini.include-path">include_path</link>にあるファイル
     を検索したい場合には、オプションの2番目のパラメータを使用して
     これを設定することが可能です。
    </para>
    <para>
     <function>gzpassthru</function>、
     <function>gzfile</function>および<function>gzopen</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzcompress">
   <refnamediv>
    <refname>gzcompress</refname>
    <refpurpose>文字列をdeflate圧縮する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gzcompress</function></funcdef>
      <paramdef>string <parameter>data</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>level</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>		
     この関数は、入力<parameter>data</parameter>をZLIBデータフォーマッ
     トを持いてcompress圧縮されたものを返し、エラーの場合に&false;を返し
     ます。オプションのパラメータ<parameter>level</parameter>には、0で
     圧縮無し、9で最大限の圧縮を指定できます。
    </para>
    <note>
     <para>
      これは、いくつかのヘッダデータを有する gzip 圧縮と同じではありま
      せん。gzip圧縮については、<function>gzencode</function>を参照下
      さい。
     </para>
    </note>
    <para>
     <function>gzuncompress</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzuncompress">
   <refnamediv>
    <refname>gzuncompress</refname>
    <refpurpose>deflate圧縮された文字列を解凍する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gzuncompress</function></funcdef>
      <paramdef>string <parameter>data</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>length</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>			
     この関数は、<function>gzcompress</function>で圧縮されたデータ
     <parameter>data</parameter>を引数とし解凍された元のデータを返します。
     エラーの場合に&false;を返します。
     この関数は、解凍したデータが圧縮された入力の長さの256倍または
     オプションのパラメータ<parameter>length</parameter>を越える場合に
     場合にエラーを返します。
    </para>
    <para>
     <function>gzcompress</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzdeflate">
   <refnamediv>
    <refname>gzdeflate</refname>
    <refpurpose>文字列を deflate 圧縮する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gzdeflate</function></funcdef>
      <paramdef>string <parameter>data</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>level</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、入力 <parameter>data</parameter> をDEFLATEデータフォー
     マットを用いて圧縮したものを返します。エラーの場合には&false;を返し
     ます。オプションのパラメータ<parameter>level</parameter>には、圧
     縮しない場合に0、最大限の圧縮をする場合に9を指定可能です。
    </para>
    <para>
     DEFLATE圧縮アルゴリズムの詳細については、ドキュメント
     "<ulink url="&url.rfc1951;">DEFLATE Compressed Data Format
     Specification version 1.3</ulink>" (RFC 1951)を参照下さい。
    </para>
    <para>
     <function>gzinflate</function>,
     <function>gzcompress</function>,
     <function>gzuncompress</function>,
     <function>gzencode</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzinflate">
   <refnamediv>
    <refname>gzinflate</refname>
    <refpurpose>deflate圧縮された文字列を解凍する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gzinflate</function></funcdef>
      <paramdef>string <parameter>data</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>length</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、<function>gzdeflate</function>により圧縮された
     <parameter>data</parameter> を引数とし、圧縮前の元のデータを返し
     ます。エラーの場合には&false;を返します。この関数は、解凍されたデー
     タが圧縮された入力 <parameter>data</parameter> の長さの256倍、ま
     たはオプションのパラメータ<parameter>length</parameter>以上の長さ
     である場合にエラーを返します。
    </para>
    <para>
     <function>gzcompress</function>.
     <function>gzuncompress</function>,
     <function>gzdeflate</function>,
     <function>gzencode</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gzencode">
   <refnamediv>
    <refname>gzencode</refname>
    <refpurpose>gzip 圧縮された文字列を作成</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gzencode</function></funcdef>
      <paramdef>string <parameter>data</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>level</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、入力 <parameter>data</parameter>を
     <command>gzip</command> プログラムの出力と互換性のある形式で圧縮
     して返します。エラーが発生した場合は、&false;を返します。オプション
     のパラメータ<parameter>level</parameter> には、圧縮をしない場合に
     0、最大限の圧縮を行う場合に9を指定可能です。指定されない場合のデ
     フォルト圧縮レベルは1になります。
    </para>
    <para>
     返されるデータには、標準的な.gzファイルとするために適当なヘッダと
     データ構造が含まれます。例を以下に示します。
     <example>
      <title>gzipファイルを作成する</title>
      <programlisting role="php">
<![CDATA[
<?php
$data = implode("", "bigfile.txt");
$gzdata = gzencode($data, 9);
$fp = fopen("bigfile.txt.gz", "w");
fwrite($fp, $gzdata);
fclose($fp);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     GZIPファイルフォーマットに関する詳細な情報については、次のドキュ
     メントを参照下さい。
     <ulink url="&url.rfc1952;">GZIP file format specification
     version 4.3</ulink> (RFC 1952)
    </para>
    <para>
     <function>gzcompress</function>.
     <function>gzuncompress</function>,
     <function>gzdeflate</function>,
     <function>gzinflate</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
