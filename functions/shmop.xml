<?xml version="1.0" encoding="utf-8"?>
<reference id="ref.shmop">
  <title>共有メモリ関数</title>
  <titleabbrev>shmop</titleabbrev>
  
  <partintro>
   <para>
    shmop は、共有メモリセグメントをPHPから簡単に読み書きまたは作成、
    削除することを可能にする一連の関数です。Windows上では共有メモリが
    サポートされないため、これらの関数は動作しません。shmopを使用する
    には、--enable-shmop パラメータを configure に指定してPHPをコンパ
    イルする必要があります。
   </para>
   <note>
    <simpara>
     PHP 4.0.3では、これらの関数の名前には<literal>shmop</literal>では
     なく<literal>shm</literal>が前に付きます。
     <!-- TODO: do the old shm_* funcs still work, i.e. are they still
     aliased? -->
    </simpara>
   </note>
   <para>
    <example>
     <title>共有メモリ操作の概要</title> 
     <programlisting role="php">
&lt;?php
   
// システムID 0xff3を有する 100 バイトの共有メモリブロックを作成する
$shm_id = shmop_open (0xff3, "c", 0644, 100);
if(!$shm_id) {
	echo "共有メモリセグメントを作成できませんでした。\n";
}

// 共有メモリのブロック長を得る
$shm_size = shmop_size ($shm_id);
echo "SHM ブロックサイズ: ".$shm_size. " が作成されました。\n";

// 共有メモリにテスト用の文字列を書き込んでみる
$shm_bytes_written = shmop_write ($shm_id, "my shared memory block", 0);
if($shm_bytes_written != strlen("my shared memory block")) {
	echo "データ全体を書き込めませんでした。\n";
}

// その文字列を再び読み込んでみる
$my_string = shmop_read ($shm_id, 0, $shm_size);
if(!$my_string) {
	echo "共有メモリブロックから読み込めません。\n";
}
echo "共有メモリ内のデータは次のようになります: ".$my_string."\n";

// ブロックを削除し、共有メモリセグメントを閉じる
if(!shmop_delete($shm_id)) {
	echo "共有メモリブロックに削除用のマークを付けることができません。";
}
shmop_close($shm_id);
   
?&gt;
     </programlisting>
    </example>
   </para>
  </partintro>  

  <refentry id="function.shmop-open">
   <refnamediv>
    <refname>shmop_open</refname>
    <refpurpose>共有メモリブロックを作成またはオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>shmop_open</function></funcdef>
      <paramdef>int <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>flags</parameter></paramdef>
      <paramdef>int <parameter>mode</parameter></paramdef>
      <paramdef>int <parameter>size</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shmop_open</function> は共有メモリブロックを作成またはオー
     プンします。
    </para>
    <para>
     <function>shmop_open</function> は次の4つの引数をとります: keyは共
     有メモリブロックのシステムIDであり、このパラメータは10進数または
     16進数で指定することが可能です。2番目のパラメータは flagsであり、
     次のものを指定可能です。
     <itemizedlist>
      <listitem>
       <simpara>
        "a" アクセス用 (IPC_EXCLを設定する)
        既存の共有メモリセグメントをオープンする必要がある場合にこのフ
        ラグを使用して下さい
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "c" 作成用 (IPC_CREATEを設定する)
        新規に共有メモリセグメントが必要な場合にこのフラグを使用して下
        さい
       </simpara>
      </listitem>
     </itemizedlist>
     3番目のパラメータは mode で、共有メモリセグメントに設定したい許可
     属性で、ファイルに関する許可属性と同様なものです。許可属性は、例
     えば 0644 のような8進数形式で渡す必要があります。最後のパラメータ
     sizeには作成したい共有メモリブロックの大きさをバイト数で指定しま
     す。
     <note>
      <simpara>
       注意: 既存のメモリセグメントをオープンする場合には、3番目および
       4番目の引数には0を指定する必要があります。成功時に
       <function>shmop_open</function> は作成した共有メモリセグメントに
       アクセスするために使用するIDを返します。
      </simpara>
     </note>
    </para> 
    <para>
     <example>
      <title>共有メモリブロックを新規に作成する</title>
      <programlisting role="php">
&lt;?php
$shm_id = shmop_open (0x0fff, "c", 0644, 100);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     この例は、システムID 0x0fff の共有メモリブロックをオープンします。
    </para>
   </refsect1>
  </refentry>  
  
  <refentry id="function.shmop-read">
   <refnamediv>
    <refname>shmop_read</refname>
    <refpurpose>共有メモリブロックからデータを読み込む</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>shmop_read</function></funcdef>
      <paramdef>int <parameter>shmid</parameter></paramdef>
      <paramdef>int <parameter>offset</parameter></paramdef>
      <paramdef>int <parameter>count</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shmop_read</function> は共有メモリブロックから文字列を読
     み込みます。
    </para>
    <para>
     <function>shmop_read</function> は3つの引数をとります。shmidは
     <function>shmop_open</function>により作成された共有ブロックID、
     offsetは読み始める位置のオフセット、countは読み込むバイト数です。
    </para> 
    <para>
     <example>
      <title>共有メモリブロックを読み込む</title>
      <programlisting role="php">
&lt;?php
$shm_data = shmop_read ($shm_id, 0, 50);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     この例は共有メモリブロックから50バイトを読み込んで、
     <literal>$shm_data</literal>の中のデータに置くものです。
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.shmop-write">
   <refnamediv>
    <refname>shmop_write</refname>
     <refpurpose>共有メモリブロックにデータを書き込む</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
      <funcprototype>
       <funcdef>int <function>shmop_write</function></funcdef>
       <paramdef>int <parameter>shmid</parameter></paramdef>
       <paramdef>string <parameter>data</parameter></paramdef>
       <paramdef>int <parameter>offset</parameter></paramdef>
      </funcprototype>
     </funcsynopsis>
     <para>
      <function>shmop_write</function> は共有メモリブロックに文字列を書
      き込みます。
     </para>
     <para>
      <function>shmop_write</function> は3つの引数パラメータをとります。
      shmid は<function>shmop_open</function>により作成された共有メモリ
      のブロックID、data は共有メモリブロックに書き込むデータ、offset
      は共有メモリセグメント内でデータを書き込み始める位置を指定します。
     </para> 
     <para>
      <example>
      <title>共有メモリブロックに書き込む</title>
      <programlisting role="php">
&lt;?php
$shm_bytes_written = shmop_write ($shm_id, $my_string, 0);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     この例は、共有メモリブロックに<literal>$my_string</literal>内のデー
     タを書き込みます。<literal>$shm_bytes_written</literal> には、書
     き込んだバイト数が代入されます。
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.shmop-size">
  <refnamediv>
   <refname>shmop_size</refname>
   <refpurpose>共有メモリブロックの大きさを得る</refpurpose>
  </refnamediv>
  <refsect1>
   <title>説明</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>shmop_size</function></funcdef>
     <paramdef>int <parameter>shmid</parameter></paramdef>
    </funcprototype>
    </funcsynopsis>
    <para>
     <function>shmop_size</function> は共有メモリブロックの大きさを得るた
     めに使用されます。
    </para>
    <para>
     <function>shmop_size</function> は、<function>shmop_open</function>に
     より作成された共有メモリブロックID shmid を引数とします。この関数
     は、共有メモリブロックが占有するバイト数を表す整数を返します。
    </para> 
    <para>
     <example>
      <title>共有メモリブロックの大きさを得る</title>
      <programlisting role="php">
&lt;?php
$shm_size = shmop_size($shm_id);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     この例は、<literal>$shm_id</literal> をIDとする共有メモリブロック
     の大きさを<literal>$shm_size</literal>に代入します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.shmop-delete">
   <refnamediv>
    <refname>shmop_delete</refname>
    <refpurpose>共有メモリブロックを削除する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>shmop_delete</function></funcdef>
      <paramdef>int <parameter>shmid</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shmop_delete</function> は共有メモリブロックを削除するた
     めに使用されます。
    </para>
    <para>
     <function>shmop_delete</function> は、<function>shmop_open</function>
     により作成された共有メモリブロックID shmid を引数とします。成功時
     に1を返し、失敗した際に0を返します。
    </para> 
    <para>
     <example>
      <title>共有メモリブロックの削除</title>
      <programlisting role="php">
&lt;?php
shmop_delete($shm_id);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     この例は、<literal>$shm_id</literal>をIDとする共有メモリブロック
     を削除します。
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.shmop-close">
   <refnamediv>
    <refname>shmop_close</refname>
    <refpurpose>共有メモリブロックを閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>shmop_close</function></funcdef>
      <paramdef>int <parameter>shmid</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shmop_close</function> は共有メモリブロックを閉じるために
     使用されます。
    </para>
    <para>
     <function>shmop_close</function> は、<function>shmop_open</function>
     により作成された共有メモリのブロックID shmid を引数とします。
    </para> 
    <para>
     <example>
      <title>共有メモリブロックを閉じる</title>
      <programlisting role="php">
&lt;?php
shmop_close($shm_id);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     この例は、<literal>$shm_id</literal>をIDとする共有メモリブロック
     を閉じます。
    </para>
   </refsect1>
  </refentry>
 </reference> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
