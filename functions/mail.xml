 <reference id="ref.mail">
  <title>メール関数</title>
  <titleabbrev>Mail</titleabbrev>
  <partintro>
   <simpara>
    <function>mail</function>関数によりメールを送ることができます。
   </simpara>
  </partintro>

  <refentry id="function.mail">
   <refnamediv>
    <refname>mail</refname>
    <refpurpose>メールの送信</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>mail</function></funcdef>
      <paramdef>string <parameter>to</parameter></paramdef>
      <paramdef>string <parameter>subject</parameter></paramdef>
      <paramdef>string <parameter>message</parameter></paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>additional_headers</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>additional_parameters</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>mail</function>は<parameter>message</parameter>で
     指定されたメッセージを<parameter>to</parameter>で指定された
     受信者に自動的にメールします。<parameter>to</parameter>の中の
     各アドレスをカンマで区切ることにより、複数の受信者を指定できます。
    </simpara>
    <para>
     <example>
      <title>メールを送信する</title>
      <programlisting role="php">
mail ("rasmus@lerdorf.on.ca", "My Subject", "Line 1\nLine 2\nLine 3");
      </programlisting>
     </example>
    </para>
    <simpara>
     4番目の文字列が指定された場合、その文字列はヘッダの最後に挿入され
     ます。通常、これはヘッダを追加する際に使用されます。複数のヘッダ
     を追加する場合は、改行で区切ります。
    </simpara>
    <simpara>
     5番目のパラメータを指定した場合、PHPはこのデータをメーラをコール
     際に追加します。この機能は、sendmailを使用する際に正しい
     Return-Pathヘッダを設定したい場合に便利です。
    </simpara>
    <para>
     <example>
      <title>追加ヘッダを指定してメールを送信</title>
      <programlisting role="php">
mail("nobody@aol.com", "the subject", $message,
     "From: webmaster@$SERVER_NAME\nReply-To: webmaster@$SERVER_NAME\nX-Mailer: PHP/" . phpversion());
      </programlisting>
     </example>
     5番目のパラメータを指定するとこれが使用するメーラのコマンドライン
     パラメータに追加されます。以下の例では、sendmailに正しい
     Return-Pathを設定しています。通常、sendmailは-fパラメータを使用し
     た場合にX-Authentication-Warningヘッダを追加します。これは、通常、
     Webサーバのユーザが認証済のユーザのメンバではないことが多いからで
     す。この警告をなくすには、Webサーバのユーザを使用するsendmailの設
     定ファイルの認証済のユーザ(trusted users)に追加する必要があります。
    </para>
    <note>
     <para>
      この5番目のパラメータは、PHP 4.0.5で追加されました。
     </para>
    </note>
    <para>
     <example>
      <title>
       ヘッダおよびコマンドラインパラメータを追加してメールを送信
      </title>
      <programlisting role="php">
mail("nobody@aol.com", "the subject", $message,
     "From: webmaster@$SERVER_NAME", "-fwebmaster@$SERVERNAME");
      </programlisting>
     </example>
     複雑なemailメッセージを作成する際に単純な文字列結合を使用すること
     も可能です。
     <example>
      <title>複雑なemailを送信する</title>
      <programlisting role="php">
/* recipients */
$recipient .= "Mary &lt;mary@u.college.edu>" . ", " ; //コンマで区切る
$recipient .= "Kelly &lt;kelly@u.college.edu> . ", ";
$recipient .= "ronabop@php.net";

/* 題名 */
$subject = "Birthday Reminders for August";

/* メッセージ */
$message .= "The following email includes a formatted ASCII table\n";
$message .= "Day \t\tMonth \t\tYear\n";
$message .= "3rd \t\tAug \t\t1970\n";
$message .= "17rd\t\tAug \t\t1973\n";

/* 保存されたsigunatureを追加できます */ 
$message .= "--\r\n"; // signatureの区切り
$message .= "Birthday reminder copylefted by public domain";

/* エラー用、From、cc、bcc、等の追加ヘッダ */

$headers .= "From: Birthday Reminder &lt;birthday@php.net>\n";
$headers .= "X-Sender: &lt;birthday@php.net>\n"; 
$headers .= "X-Mailer: PHP\n"; // メイラー
$headers .= "X-Priority: 1\n"; // 緊急メッセージ!
$headers .= "Return-Path: &lt;birthday@php.net>\n";  // エラー時の返信先

/* HTMLメールを送信したい場合、次の行のコメントを外して下さい */
// $headers .= "Content-Type: text/html; charset=iso-8859-1\n" // MIME型

$headers .= "cc:birthdayarchive@php.net\n"; // CCの宛先
$headers .= "bcc:birthdaycheck@php.net, birthdaygifts@php.net\n"; // BCCの宛先

/* ここでメールを送信する */
mail($recipient, $subject, $message, $headers);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ezmlm-hash">
   <refnamediv>
    <refname>ezmlm_hash</refname>
    <refpurpose>EZMLMで必要なハッシュ値を計算する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ezmlm_hash</function></funcdef>
      <paramdef>string <parameter>addr</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>ezmlm_hash</function>は、EZMLMメイリングリストをMySQL
     データベースで管理する際に必要なハッシュ値を計算します。
    </simpara>
    <para>
     <example>
      <title>ハッシュ値を計算し、ユーザを登録する</title>
      <programlisting role="php">
$user = "kris@koehntopp.de";
$hash = ezmlm_hash ($user);
$query = sprintf ("INSERT INTO sample VALUES (%s,'%s')",
       $hash,
       $user
       );
$db->query ($query); // PHPLIB dbインターフェースを使用します
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
