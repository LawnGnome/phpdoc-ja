<reference id="ref.url">
  <title>URL 関数</title>
  <titleabbrev>URLs</titleabbrev>

  <refentry id="function.base64-decode">
   <refnamediv>
    <refname>base64_decode</refname>
    <refpurpose>base64方式によりエンコードされたデータのデコード</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>base64_decode</function></funcdef>
     <paramdef>string <parameter>encoded_data</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>base64_decode</function>は
     <parameter>encoded_data</parameter>をデコードし、
     もとのデータを返します。バイナリになることもあります。</para>
    <para>
     <function>base64_encode</function>およびRFC-2045 6.8節も
     参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.base64-encode">
   <refnamediv>
    <refname>base64_encode</refname>
    <refpurpose>base64方式によるデータのエンコード</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>base64_encode</function></funcdef>
     <paramdef>string <parameter>data</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>base64_encode</function>は
     <parameter>data</parameter>をbase64方式でエンコードします。
     このエンコードは、メールの本体の様に、8ビットクリーンでは
     ないトランスポート層を通じて、バイナリーデータが生き残れる
     様に設計されています。</para>

    <para>
     Base64でエンコードされたデータは、エンコード前のデータにくらべて
     33%余計に容量が必要です。</para>
    <para>
    <function>base64_decode</function>,
      <function>chunk_split</function>,
     RFC-2045 6.8節も参照下さい。</para>
   </refsect1>
  </refentry>

  <refentry id="function.parse-url">
   <refnamediv>
    <refname>parse_url</refname>
    <refpurpose>URL を解釈し、その構成要素を返します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>array <function>parse_url</function></funcdef>
     <paramdef>string <parameter>url</parameter></paramdef>
    </funcsynopsis>
    <para>
    この関数は、URL の様々な構成要素のうち特定できるものに関して
    連想配列にして返します。 この要素には、
     "scheme", "host", "port", "user", "pass", "path", "query", 
     "fragment" があります。
     </para>
   </refsect1>
  </refentry>


  <refentry id="function.urldecode">
   <refnamediv>
    <refname>urldecode</refname>
    <refpurpose>エンコードされたURL文字列のデコード</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>urldecode</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
    </funcsynopsis>
    <para>
     与えられた文字列中のあらゆるエンコード文字
     <literal>%<replaceable>##</replaceable></literal>をデコードします。
     デコードされた文字列が返ります。
     <example>
      <title>urldecode()の使用例</title>
      <programlisting>
       $a = split ('&', $querystring);
       $i = 0;
       while ($i &lt; count ($a)) {
           $b = split ('=', $a [$i]);
           echo 'Value for parameter ', htmlspecialchars (urldecode ($b [0])),
           ' is ', htmlspecialchars (urldecode ($b [1])), "&lt;BR>";
           $i++;
       }
      </programlisting></example></para>
 
    <para>
     <function>urlencode</function> も参考にしてください。</para>
   </refsect1>
  </refentry>


  <refentry id="function.urlencode">
   <refnamediv>
    <refname>urlencode</refname>
    <refpurpose>URL文字列のエンコード</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>urlencode</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
    </funcsynopsis>
    <para>
     <literal>-_.</literal>を除くすべての非英数文字が、%記号
     (<literal>%</literal>)に続く二桁の数字で置き換えられ、
     空白は+記号(<literal>+</literal>)にエンコードされます。
     同様の方法で、WWWのフォームからポストされたデータはエンコード
     され、<literal>application/x-www-form-urlencoded</literal>
     メディア型も同様です。RFC1738エンコード(
     <function>rawurlencode</function>を参照してください)との
     違いは、歴史的な理由で、空白が+記号にエンコードされることです。
     本関数は、URLの問い合わせ部分に使用する文字列のエンコードや
     次のページへ変数を渡すのに便利です。
     <example>
      <title><function>urlencode</function>の使用例</title>
      <programlisting role="php">
       echo '&lt;A HREF="mycgi?foo=', urlencode ($userinput), '">';
      </programlisting>
     </example>
    </para>
    <para>
     <function>urldecode</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>


 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

