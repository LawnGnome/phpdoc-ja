<?xml version="1.0" encoding="utf-8"?>

 <reference id="ref.dir">
  <title>ディレクトリ関数</title>
  <titleabbrev>ディレクトリ</titleabbrev>

  <refentry id="function.chroot">
   <refnamediv>
    <refname>chroot</refname>
    <refpurpose>ルートディレクトリを変更する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>chroot</function></funcdef>
      <paramdef>string <parameter>directory</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのプロセスのルートディレクトリを
     <parameter>directory</parameter>に変更します。ルートディレクトリ
     を変更できない場合に &false;、それ以外の場合に &true; を返します。
    </para>
    <note>
     <para>
      このリクエストの後で再度ルートディレクトリを / にリセットするこ
      とはできないため、Webサーバ環境での実行時にこの関数を使用するの
      は賢明ではありません。この関数は、CGIとして実行する場合にのみ正
      しく機能します。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.chdir">
   <refnamediv>
    <refname>chdir</refname>
    <refpurpose>ディレクトリを変更します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>chdir</function></funcdef>
      <paramdef>string <parameter>directory</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    PHP のカレント・ディレクトリを <parameter>directory</parameter>
    に変更します。ディレクトリを変更できなかった場合は &false; を
    返し、そうでなければ &true; を返します。
    </para>
   </refsect1>
  </refentry>


  <refentry id="class.dir">
   <refnamediv>
    <refname>dir</refname>
    <refpurpose>ディレクトリ・クラス</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>new <function>dir</function></funcdef>
      <paramdef>string <parameter>directory</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    ディレクトリを読むための疑似オブジェクト指向の機構です。
    指定した <parameter>directory</parameter> がオープンされます。
    いったんディレクトリがオープンされると、2 つのプロパティを使用
    できるようになります。handle プロパティは、<function>readdir
    </function>, <function>rewinddir</function>, <function>
    closedir</function> のような他のディレクトリ関数と組み合わせて
    使用可能です。path プロパティには、オープンするディレクトリのパス
    をセットします。read, rewind, close の3種類のメソッドが
    使用できます。
    <example><title><function>dir</function> の例</title>
<programlisting role="php">
$d = dir("/etc");
echo "Handle: ".$d->handle."&lt;br>\n";
echo "Path: ".$d->path."&lt;br>\n";
while($entry=$d->read()) {
    echo $entry."&lt;br>\n";
}
$d->close();
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.closedir">
   <refnamediv>
    <refname>closedir</refname>
    <refpurpose>ディレクトリ・ハンドルをクローズします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>closedir</function></funcdef>
      <paramdef>int <parameter>dir_handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    <parameter>dir_handle</parameter> で指定したディレクトリの
    ストリームをクローズします。このストリームは、<function>opendir
    </function>により事前にオープンされていなければなりません。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.getcwd">
   <refnamediv>
    <refname>getcwd</refname>
    <refpurpose>カレントのワーキングディレクトリを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>getcwd</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのワーキングディレクトリを返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.opendir">
   <refnamediv>
    <refname>opendir</refname>
    <refpurpose>ディレクトリ・ハンドルのオープン</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>opendir</function></funcdef>
      <paramdef>string <parameter>path</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    ディレクトリ・ハンドルをオープンします。この関数は、この後、
    <function>closedir</function>, <function>readdir</function>, 
    <function>rewinddir</function> 関数コールで使用されます。
    </para>
    <para>
     <parameter>path</parameter> が有効なディレクトリでないかまたは権
     限が制限されているかファイルシステムのエラーによりディレクトリが
     オープンできない場合、<function>opendir</function> は &false; を返
     し、PHPエラーを生成します。<function>opendir</function>のこのエラー
     出力は、関数名の前に `@' を付けることにより抑制できます。
    </para>
    <para>
     <example>
      <title><function>opendir</function> の例</title>
      <programlisting role="php">
&lt;?php

if ($dir = @opendir("/tmp")) {
  while($file = readdir($dir)) {
    echo "$file\n";
  }  
  closedir($dir);
}

?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readdir">
   <refnamediv>
    <refname>readdir</refname>
    <refpurpose>ディレクトリ・ハンドルからのエントリ読み込み</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>readdir</function></funcdef>
      <paramdef>int <parameter>dir_handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    ディレクトリから次のファイルのファイル名を返します。ファイル名は
    特定の順序で返されるわけではありません。
     <example>
      <title>カレントディレクトリにある全ファイルのリスト</title>
      <programlisting role="php">
&lt;?php
$handle=opendir('.');
echo "Directory handle: $handle\n";
echo "Files:\n";
while (($file = readdir($handle))!==false) {
    echo "$file\n";
}
closedir($handle); 
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     <function>readdir</function> は、エントリ . および .. を返すことに
     注意して下さい。これらを必要としない場合には、次のように取り除いて下さい。
     <example>
      <title>
       現在のディレクトリの . および .. を除いた全てのファイルの一覧を表示。
      </title>
      <programlisting role="php">
&lt;?php 
$handle=opendir('.'); 
while (false!==($file = readdir($handle))) { 
    if ($file != "." &amp;&amp; $file != "..") { 
        echo "$file\n"; 
    } 
}
closedir($handle); 
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.rewinddir">
   <refnamediv>
    <refname>rewinddir</refname>
    <refpurpose>ディレクトリ・ハンドルを元に戻します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>rewinddir</function></funcdef>
      <paramdef>int <parameter>dir_handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     <para>
     <parameter>dir_handle</parameter> で指定されたディレクトリの
     ストリームをディレクトリの先頭にリセットします。
     </para>
   </refsect1>
  </refentry>


 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
