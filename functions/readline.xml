<?xml version="1.0" encoding="utf-8"?>
 <reference id="ref.readline">
  <title>GNU Readline</title>
  <titleabbrev>Readline</titleabbrev>

  <partintro>
   <simpara>
    <function>readline</function> 関数はGNU Readline ライブラリへのイ
    ンターフェースを実装したものです。これらの関数は、コマンドラインの
    編集機能を提供します。一例をあげると、Bash において文字を挿入した
    り、コマンド履歴を走査したりする際に矢印キーを使用することを可能に
    しているものです。このライブラリの対話的性質のためにWebアプリケー
    ションではあまり使用されていませんが、シェルで動作することを目的と
    したスクリプトを書く際には便利です。
   </simpara>
   <simpara>
    GNU Readline プロジェクトのホームページは、
    <ulink url="&url.readline;">&url.readline;</ulink>にあります。この
    ライブラリは、Bash の作者でもある Chet Ramey により管理されています。
   </simpara>
  </partintro>

  <refentry id="function.readline">
   <refnamediv>
    <refname>readline</refname>
    <refpurpose>1行読み込む</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>readline</function></funcdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>prompt</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、ユーザから取得した文字列を一つだけ返します。ユーザに
     示すプロンプトを文字列で指定することも可能です。返される行は終端
     の改行文字が削除されています。この行を
     <function>readline_add_history</function>を用いてヒストリに追加す
     る必要があります。
    </para>
    <example>
     <title><function>readline</function></title>
     <programlisting role="php">
// ユーザから3回コマンドを取得
for ($i=0; $i &lt; 3; $i++) {
        $line = readline("Command: ");
        readline_add_history($line);
}

// ヒストリをダンプ
print_r(readline_list_history());

// 変数をダンプ
print_r(readline_info());
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.readline-add-history">
   <refnamediv>
    <refname>readline_add_history</refname>
    <refpurpose>ヒストリに1行追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>readline_add_history</function></funcdef>
      <paramdef>string <parameter>line</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、コマンドラインヒストリに1行追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-clear-history">
   <refnamediv>
    <refname>readline_clear_history</refname>
    <refpurpose>ヒストリをクリアする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>readline_clear_history</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数はコマンドラインヒストリ全体をクリアします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-completion-function">
   <refnamediv>
    <refname>readline_completion_function</refname>
    <refpurpose>補完関数を登録する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>readline_completion_function</function></funcdef>
      <paramdef>string <parameter>line</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は補完用の関数を登録します。コマンドラインの一部を入力と
     し、マッチする可能性がある文字列の配列を返す既存の関数の名前を指
     定する必要があります。これは、Bashを使用している際に、タブキーを
     押して得られる機能と同じ種類のものです。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-info">
   <refnamediv>
    <refname>readline_info</refname>
    <refpurpose>種々のreadlineの内部変数を取得/設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>readline_info</function></funcdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>varname</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>newvalue</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     パラメータを指定しないでコールした場合、この関数は readline が使
     用する全ての設定の値を配列で返します。要素の添字は次のようになり
     ます。:
     done, end, erase_empty_line, library_version, 
     line_buffer, mark, pending_input, point, prompt, readline_name,
     terminal_name
    </para>
    <para>
     引数を1つ指定してコールした場合、その設定に関する値が返されます。
     引数を2つ指定してコールした場合、その設定の値は指定した値に変更さ
     れます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-list-history">
   <refnamediv>
    <refname>readline_list_history</refname>
    <refpurpose>ヒストリのリスト</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>readline_list_history</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、コマンドラインヒストリ全体の配列を返します。各要素は、
     ゼロから始まる整数で添字が付加されています。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-read-history">
   <refnamediv>
    <refname>readline_read_history</refname>
    <refpurpose>ヒストリを読み込む</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>readline_read_history</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、コマンドヒストリをファイルから読み込みます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-write-history">
   <refnamediv>
    <refname>readline_write_history</refname>
    <refpurpose>ヒストリを書きこむ</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean <function>readline_write_history</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数はコマンドヒストリをファイルに書き込みます。
    </para>
   </refsect1>
  </refentry>
  
 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
