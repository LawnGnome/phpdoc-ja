<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.21 $ -->
 <reference id="ref.oci8">
  <title>Oracle 8 関数</title>
  <titleabbrev>OCI8</titleabbrev>
  <partintro>
   <para>
    以下の関数により Oracle8 および Oracle7 データベースへのアクセスが
    可能となります。この関数は、Oracle8 Call-Interface (OCI8) を使用し
    ます。この拡張機能を使用するには、Oracle8 クライアントライブラリが
    必要です。
   </para>
   <para>
    この拡張モジュールは、通常のOracle拡張機能より柔軟性があります。
    この拡張モジュールは、グローバルおよびローカルの PHP 変数の Ocacle 
    プレースホルダーへのバインドをサポートします。また、LOB,FILE,ROWID
    を完全にサポートしており、ユーザー定義の変数が使用可能です。
   </para>
   <para>
    この拡張モジュールを使用する前に WebデーモンのユーザでもあるOracle
    ユーザのOracle用環境変数が正しく設定されていることを確認して下さい。
    設定されている必要がある変数を以下に示します。
    <itemizedlist>
     <listitem>
      <simpara>
       ORACLE_HOME
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ORACLE_SID
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LD_PRELOAD
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LD_LIBRARY_PATH
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       NLS_LANG
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ORA_NLS33
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Webサーバーのユーザ用に環境変数を設定した後、Webサーバーのユーザ
    (nobody, www)をグループoracleに追加して下さい。
   </para>
   <note>
    <title>Webサーバが起動しないか、起動時にクラッシュする場合</title>
    <para>
     Apacheがpthreadライブラリにリンクされているかどうか次のように確認
     して下さい。
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
# ldd /www/apache/bin/httpd 
    libpthread.so.0 => /lib/libpthread.so.0 (0x4001c000)
    libm.so.6 => /lib/libm.so.6 (0x4002f000)
    libcrypt.so.1 => /lib/libcrypt.so.1 (0x4004c000)
    libdl.so.2 => /lib/libdl.so.2 (0x4007a000)
    libc.so.6 => /lib/libc.so.6 (0x4007e000)
    /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)
]]>
      </screen>
     </informalexample>
    </para>
    <para>
     libpthread がこの一覧にない場合、Apacheを再インストールする必要が
     あります。
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
# cd /usr/src/apache_1.3.xx
# make clean
# LIBS=-lpthread ./config.status
# make
# make install
]]>
      </screen>
     </informalexample>
    </para>
   </note>
   <para>
    <example>
     <title>OCIに関するヒント</title>
      <programlisting role="php">
<![CDATA[
<?php
// by sergo@bacup.ru

// コマンドの実行を遅延させるには、オプション OCI_DEFAULT を使用して
// 下さい
OCIExecute($stmt, OCI_DEFAULT);

// (クエリ結果取得後に)使用するデータを取得

$result = OCIResult($stmt, $n);
if (is_object ($result)) $result = $result->load();

// INSERT または UPDATE 命令の場合に使用

$sql = "insert into table (field1, field2) values (field1 = 'value',
 field2 = empty_clob()) returning field2 into :field2";
OCIParse($conn, $sql);
$clob = OCINewDescriptor($conn, OCI_D_LOB);
OCIBindByName ($stmt, ":field2", &$clob, -1, OCI_B_CLOB);
OCIExecute($stmt, OCI_DEFAULT);
$clob->save ("some text");
OCICommit($conn);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    コマンドラインで実行するのと同様な手法により、ストアドプロシージャ
    に簡単にアクセス可能です。
    <example>
     <title>ストアドプロシージャの使用法</title>
      <programlisting role="php">
<![CDATA[
<?php
// by webmaster@remoterealty.com
$sth = OCIParse ( $dbh, "begin sp_newaddress( :address_id, '$firstname',
 '$lastname', '$company', '$address1', '$address2', '$city', '$state',
 '$postalcode', '$country', :error_code );end;" );

// この命令は、:address_id を入出力変数、:error_code を出力変数として
// ストアドプロシージャ sp_newaddress をコールします。
// 続いて、以下のようにバインドを実行します。

   OCIBindByName ( $sth, ":address_id", $addr_id, 10 );
   OCIBindByName ( $sth, ":error_code", $errorcode, 10 );
   OCIExecute ( $sth );

?>
]]>
     </programlisting>
    </example>
   </para>
  </partintro>
	
  <refentry id="function.ocidefinebyname">
   <refnamediv>
    <refname>OCIDefineByName</refname>
    <refpurpose>SELECT 実行中、定義用の PHP 変数を使用する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIDefineByName</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>Column-Name</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>variable</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>type</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIDefineByName</function> は、SQL カラムを
     ユーザー定義の PHP 変数に取得します。
     Oracle は、全ての大文字のカラム名を使用しますが、
     select の中で小文字も書くことが可能であることに注意して下さい。
     <function>OCIDefineByName</function> は、
     the <parameter>Column-Name</parameter> が大文字であることを仮定します。
     select 文にない変数を定義する場合は、エラーは発生しないでしょう!
    </para>
    <para>
     抽象 Datatype (LOB/ROWID/BFILE) を定義する必要がある場合、
     まず <function>OCINewDescriptor</function> 関数を用いてその
     領域を確保する必要があります。
     <function>OCIBindByName</function> 関数も参照下さい。
    </para>
    <example>
      <title>OCIDefineByName</title>
      <programlisting>
<![CDATA[
<?php
/* OCIDefineByPos の例 thies@thieso.net (980219) */

$conn = OCILogon("scott","tiger");

$stmt = OCIParse($conn,"select empno, ename from emp");

/* the define MUST be done BEFORE ociexecute! */

OCIDefineByName($stmt,"EMPNO",$empno);
OCIDefineByName($stmt,"ENAME",$ename);

OCIExecute($stmt);

while (OCIFetch($stmt)) {
    echo "empno:".$empno."\n";
    echo "ename:".$ename."\n";
}

OCIFreeStatement($stmt);
OCILogoff($conn);
?>
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.ocibindbyname">
   <refnamediv>
    <refname>OCIBindByName</refname>
    <refpurpose>Oracle プレースホルダーに PHP 変数をバインドする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIBindByName</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>ph_name</parameter></methodparam>
      <methodparam><type>mixed &amp;</type><parameter>variable</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>type</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIBindByName</function> は、PHP 変数
     <parameter>variable</parameter> を Oracle プレースホルダー
     <parameter>ph_name</parameter> にバインドします。実行時に入力用、
     出力用に使用されるによらず、必要な記憶領域が確保されます。
     <parameter>length</parameter> パラメータは、バインド時の最大長を
     設定します。<parameter>length</parameter> を -1 に設定した場合、
     <function>OCIBindByName</function> は
     <parameter>variable</parameter> の現在の長さを最大長として設定し
     ます。
    </para>
    <para>
     抽象データ型 (LOB/ROWID/BFILE) をバインドする必要がある場合、まず
     <function>OCINewDescriptor</function> 関数を使用してこれを確保する
     必要があります。<parameter>length</parameter> は抽象データ型用には
     使用されず、-1 を設定する必要があります。
     <parameter>type</parameter> 変数は使用したいディスクリプタの種類
     をOracle に伝えます。使用可能な値は次のようになります。:
     OCI_B_FILE (Binary-File), OCI_B_CFILE (Character-File), OCI_B_CLOB
     (Character-LOB), OCI_B_BLOB (Binary-LOB) ,OCI_B_ROWID (ROWID)
    </para>
     <example>
      <title>OCIDefineByName</title>
      <programlisting>
<![CDATA[
<?php
/* OCIBindByPos の例 thies@thieso.net (980221)
  3レコードをempに挿入し、挿入の直後にレコードを更新するために
  ROWIDを使用します。
*/

$conn = OCILogon("scott","tiger");

$stmt = OCIParse($conn,"insert into emp (empno, ename) ".
					   "values (:empno,:ename) ".
					   "returning ROWID into :rid");

$data = array(1111 => "Larry", 2222 => "Bill", 3333 => "Jim");

$rowid = OCINewDescriptor($conn,OCI_D_ROWID);

OCIBindByName($stmt,":empno",&$empno,32);
OCIBindByName($stmt,":ename",&$ename,32);
OCIBindByName($stmt,":rid",&$rowid,-1,OCI_B_ROWID);

$update = OCIParse($conn,"update emp set sal = :sal where ROWID = :rid");
OCIBindByName($update,":rid",&$rowid,-1,OCI_B_ROWID);
OCIBindByName($update,":sal",&$sal,32);

$sal = 10000;

while (list($empno,$ename) = each($data)) {
	OCIExecute($stmt);
	OCIExecute($update);
} 

$rowid->free();

OCIFreeStatement($update);
OCIFreeStatement($stmt);

$stmt = OCIParse($conn,"select * from emp where empno in (1111,2222,3333)");
OCIExecute($stmt);
while (OCIFetchInto($stmt,&$arr,OCI_ASSOC)) {
	var_dump($arr);
}
OCIFreeStatement($stmt);

/* テーブル emp から "junk" を削除する.... */
$stmt = OCIParse($conn,"delete from emp where empno in (1111,2222,3333)");
OCIExecute($stmt);
OCIFreeStatement($stmt);

OCILogoff($conn);
?>
]]>
     </programlisting>
    </example>
    <warning>
     <para>
      magic quote と<function>OciBindByName</function>を同時に使用する
      ことは良いアイデアではありません。これは、引用符を付加された変数
      に引用符を付加する必要はなく、また、magic quote により付加された
      引用符は、<function>OciBindByName</function> が magic quote によ
      り付加された引用符を意図的に付加されたものと区別できないため、そ
      のままデータベースに書き込まれるためです。
     </para> 
    </warning>
   </refsect1>
  </refentry>

  <refentry id="function.ocilogon">
   <refnamediv>
    <refname>OCILogon</refname>
    <refpurpose>Oracle への接続を確立する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCILogon</methodname>
      <methodparam><type>string</type><parameter>username</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam><type>string</type><parameter>
	<replaceable><optional>db</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCILogon</function> は他のほとんどの OCI コールで必要な
     接続 ID を返します。
     オプションの3番目のパラメータには、ローカルOracleインスタンスの名前か
     tnsnames.ora における接続先のエントリ名を指定することができます。
     オプションの3番目のパラメータが指定されない場合、
     PHP は接続先のデータベースを定義するために環境変数 ORACLE_SID (Oracle 
     インスタンス)または TWO_TASK (tnsnames.ora) を使用します。
     </para>
     <para>
     <function>OCILogon</function> を使用した場合、接続はページレベルで共有
     されます。
     このことは、多重接続を行った場合でも、コミット及びロールバックは
     そのページの全てのオープンされたトランザクションに適用されることを
     意味します。
    </para>
    <para>
    この例は、接続がどのように共有されるかをデモします。
     <example>
      <title>OCILogon</title>
      <programlisting>
<![CDATA[
<?php
print "<HTML><PRE>";
$db = "";

$c1 = ocilogon("scott","tiger",$db);
$c2 = ocilogon("scott","tiger",$db);

function create_table($conn)
{ $stmt = ociparse($conn,"create table scott.hallo (test varchar2(64))");
  ociexecute($stmt);
  echo $conn." created table\n\n";
}

function drop_table($conn)
{ $stmt = ociparse($conn,"drop table scott.hallo");
  ociexecute($stmt);
  echo $conn." dropped table\n\n";
}

function insert_data($conn)
{ $stmt = ociparse($conn,"insert into scott.hallo 
            values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  ociexecute($stmt,OCI_DEFAULT);
  echo $conn." inserted hallo\n\n";
}

function delete_data($conn)
{ $stmt = ociparse($conn,"delete from scott.hallo");
  ociexecute($stmt,OCI_DEFAULT);
  echo $conn." deleted hallo\n\n";
}

function commit($conn)
{ ocicommit($conn);
  echo $conn." committed\n\n";
}

function rollback($conn)
{ ocirollback($conn);
  echo $conn." rollback\n\n";
}

function select_data($conn)
{ $stmt = ociparse($conn,"select * from scott.hallo");
  ociexecute($stmt,OCI_DEFAULT);
  echo $conn."----selecting\n\n";
  while (ocifetch($stmt))
    echo $conn." <".ociresult($stmt,"TEST").">\n\n";
  echo $conn."----done\n\n";
}

create_table($c1);
insert_data($c1);   // Insert a row using c1
insert_data($c2);   // Insert a row using c2

select_data($c1);   // Results of both inserts are returned
select_data($c2);   

rollback($c1);      // Rollback using c1

select_data($c1);   // Both inserts have been rolled back
select_data($c2);   

insert_data($c2);   // Insert a row using c2
commit($c2);        // commit using c2

select_data($c1);   // result of c2 insert is returned

delete_data($c1);   // delete all rows in table using c1
select_data($c1);   // no rows returned
select_data($c2);   // no rows returned
commit($c1);        // commit using c1

select_data($c1);   // no rows returned
select_data($c2);   // no rows returned


drop_table($c1);
print "</PRE></HTML>";
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     <function>OCIPLogon</function> および
     <function>OCINLogon</function> も参照下さい。
    </simpara>
   </refsect1>
  </refentry>
  
  <refentry id="function.ociplogon">
   <refnamediv>
    <refname>OCIPLogon</refname>
    <refpurpose>
     持続的接続を使用してOracle データベースに接続、ログオンする。
     新しいセッションを返す。
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIPLogon</methodname>
      <methodparam><type>string</type><parameter>username</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam><type>string</type><parameter>
	<replaceable><optional>db</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIPLogon</function> は、Oracle 8 データベースへの持続的接続を
     オープンし、ログオンします。
     オプションの3番目のパラメータには、ローカルOracleインスタンスの名前か
     tnsnames.ora における接続先のエントリ名を指定することができます。
     オプションの3番目のパラメータが指定されない場合、
     PHP は接続先のデータベースを定義するために環境変数 ORACLE_SID (Oracle 
     インスタンス)または TWO_TASK (tnsnames.ora) を使用します。
    </para>
    <simpara>
     <function>OCILogon</function> および
     <function>OCINLogon</function> も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocinlogon">
   <refnamediv>
    <refname>OCINLogon</refname>
    <refpurpose>Oracle データベースに接続し、新規接続にログオン、
    新規セッションを返す
</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCINLogon</methodname>
      <methodparam><type>string</type><parameter>username</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam><type>string</type><parameter>
	<replaceable><optional>db</optional></replaceable>
       </parameter></methodparam>    
     </methodsynopsis>
    <para>
     <function>OCINLogon</function>は、Oracle 8 データベースへの新規接続を
     作成し、ログオンします。
     オプションの3番目のパラメータには、ローカルOracleインスタンスの名前か
     tnsnames.ora における接続先のエントリ名を指定することができます。
     オプションの3番目のパラメータが指定されない場合、
     PHP は接続先のデータベースを定義するために環境変数 ORACLE_SID (Oracle 
     インスタンス)または TWO_TASK (tnsnames.ora) を使用します。
    </para>
    <para>
     <function>OCINLogon</function> は強嶧?に新規接続を作成します。
     一連のトランザクションを独立して実行する必要がある場合にこの関数を
     使用する必要があります。デフォルトでは、接続は、     
     <function>OCILogon</function> を使用した場合はページレベルで共有され、
     <function>OCIPLogon</function> を使用した場合は Web サーバープロセス
     レベルで共有されます。
     <function>OCINLogon</function> を使用して複数の接続をオープンした場合、
     コミットおよびロールバックは指定した接続のみに適用されます。
    </para>
    <para>
    以下の例は、接続がどのように分割されるかを示すものです。
     <example>
      <title>OCINLogon</title>
      <programlisting>
<![CDATA[
<?php
print "<HTML><PRE>";
$db = "";

$c1 = ocilogon("scott","tiger",$db);
$c2 = ocinlogon("scott","tiger",$db);

function create_table($conn)
{ $stmt = ociparse($conn,"create table scott.hallo (test
varchar2(64))");
  ociexecute($stmt);
  echo $conn." created table\n\n";
}

function drop_table($conn)
{ $stmt = ociparse($conn,"drop table scott.hallo");
  ociexecute($stmt);
  echo $conn." dropped table\n\n";
}

function insert_data($conn)
{ $stmt = ociparse($conn,"insert into scott.hallo 
            values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  ociexecute($stmt,OCI_DEFAULT);
  echo $conn." inserted hallo\n\n";
}

function delete_data($conn)
{ $stmt = ociparse($conn,"delete from scott.hallo");
  ociexecute($stmt,OCI_DEFAULT);
  echo $conn." deleted hallo\n\n";
}

function commit($conn)
{ ocicommit($conn);
  echo $conn." committed\n\n";
}

function rollback($conn)
{ ocirollback($conn);
  echo $conn." rollback\n\n";
}

function select_data($conn)
{ $stmt = ociparse($conn,"select * from scott.hallo");
  ociexecute($stmt,OCI_DEFAULT);
  echo $conn."----selecting\n\n";
  while (ocifetch($stmt))
    echo $conn." <".ociresult($stmt,"TEST").">\n\n";
  echo $conn."----done\n\n";
}

create_table($c1);
insert_data($c1);

select_data($c1);   
select_data($c2);   

rollback($c1);      

select_data($c1);   
select_data($c2);   

insert_data($c2);   
commit($c2);        

select_data($c1);   

delete_data($c1);   
select_data($c1);   
select_data($c2);   
commit($c1);        

select_data($c1);
select_data($c2);


drop_table($c1);
print "</PRE></HTML>";
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     <function>OCILogon</function> および
     <function>OCIPLogon</function> も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocilogoff">
   <refnamediv>
    <refname>OCILogOff</refname>
    <refpurpose>Oracleとの接続を切る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCILogOff</methodname>
      <methodparam><type>int</type><parameter>connection</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCILogOff</function> は、Oracle 接続を閉じます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ociexecute">
   <refnamediv>
    <refname>OCIExecute</refname>
    <refpurpose>文を実行する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIExecute</methodname>
      <methodparam><type>int</type><parameter>statement</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>mode</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIExecute</function> は以前処理された文を実行します。
     (<function>OCIParse</function> を参照下さい) 
     オプションの<parameter>mode</parameter>により実行モードを指定することが
     可能とです。(デフォルトはOCI_COMMIT_ON_SUCCESSです) 
     自動的にコミットされたくない場合は、OCI_DEFAULTをモードとして指定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ocicommit">
   <refnamediv>
    <refname>OCICommit</refname>
    <refpurpose>未解決のトランザクションをコミットする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCICommit</methodname>
      <methodparam><type>int</type><parameter>connection</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCICommit</function>は、
     Oracle接続<parameter>connection</parameter>に関する
     全ての未解決の文をコミットします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ocirollback">
   <refnamediv>
    <refname>OCIRollback</refname>
    <refpurpose>未解決のトランザクションをロールバックする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIRollback</methodname>
      <methodparam><type>int</type><parameter>connection</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIRollback</function>は、
     Oracle接続<parameter>connection</parameter>に関する
     全ての未解決の文をロールバックします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ocinewdescriptor">
   <refnamediv>
    <refname>OCINewDescriptor</refname>
    <refpurpose>
     空の新規ディスクリプタLOB/FILE(LOBがデフォルト)を初期化する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCINewDescriptor</methodname>
      <methodparam><type>int</type><parameter>connection</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>type</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCINewDescriptor</function> は、固定したディスクリプタまたは
     LOBロケータに記憶領域を確保します。
     <parameter>type</parameter> で指定可能な値は、OCI_D_FILE, OCI_D_LOB, 
     OCI_D_ROWIDです。
     LOBディスクリプタの場合、メソッドload, save, savefileがディスクリプタに
     関連付けられています。BFILE の場合、load メソッドのみが存在します。2番目の
     例に使用の際のヒントを示します。
    </para>
    <example>
     <title>OCINewDescriptor</title>
     <programlisting>
<![CDATA[
<?php   
    /* このスクリプトは HTML フォームからコールされる前提で作成
     * されており、$user, $passwor, $table, $where, $commitsize
     * がフォームから渡されることを前提にしています。
     * このスクリプトは、ROWID を用いて選択された行を削除し、
     * $commitsize 行毎にコミットします。
     * (ロールバックがないので、注意して使用してください。)
     */
    $conn = OCILogon($user, $password);
    $stmt = OCIParse($conn,"select rowid from $table $where");
    $rowid = OCINewDescriptor($conn,OCI_D_ROWID);
    OCIDefineByName($stmt,"ROWID",$rowid);   
    OCIExecute($stmt);
    while ( OCIFetch($stmt) ) {      
       $nrows = OCIRowCount($stmt);
       $delete = OCIParse($conn,"delete from $table where ROWID = :rid");
       OCIBindByName($delete,":rid",&amp;$rowid,-1,OCI_B_ROWID);
       OCIExecute($delete);      
       print "$nrows\n";
       if ( ($nrows % $commitsize) == 0 ) {
           OCICommit($conn);      
       }   
    }
    $nrows = OCIRowCount($stmt);   
    print "$nrows deleted...\n";
    OCIFreeStatement($stmt);  
    OCILogoff($conn);
?>
]]>
     </programlisting>
     <programlisting>
<![CDATA[
<?php
    /* このスクリプトやLOB カラムにファイルをアップロードする例を示します。
     * LOBカラムにアップロードを行うこの例に関するフォームは、
     * <form action="upload.php3" method="post" enctype="multipart/form-data">
     * <input type="file" name="lob_upload">
     * ... のようなものが使用されます。
     */
  if(!isset($lob_upload) || $lob_upload == 'none'){
?>
<form action="upload.php3" method="post" enctype="multipart/form-data">
Upload file: <input type="file" name="lob_upload"><br>
<input type="submit" value="Upload"> - <input type="reset">
</form>
<?php
  } else {
     // $lob_upload はアップロードファイルのテンポラリファイル名を有しています
     $conn = OCILogon($user, $password);
     $lob = OCINewDescriptor($conn, OCI_D_LOB);
     $stmt = OCIParse($conn,"insert into $table (id, the_blob) 
               values(my_seq.NEXTVAL, EMPTY_BLOB()) returning the_blob into :the_blob");
     OCIBindByName($stmt, ':the_blob', $lob, -1, OCI_B_BLOB);
     OCIExecute($stmt);
     if($lob->savefile($lob_upload)){
        OCICommit($conn);
        echo "Blob のアップロードは成功しました\n";
     }else{
        echo "Blob をアップロードできませんでした\n";
     }
     OCIFreeDesc($lob);
     OCIFreeStatement($stmt);
     OCILogoff($conn);
  }
?>
]]>
     </programlisting>
    </example>
    <example>
     <title>OCINewDescriptor</title>
     <programlisting>
<![CDATA[
<?php   
    /* Calling PL/SQL stored procedures which contain clobs as input
     * parameters (PHP 4 >= 4.0.6). 
     * Example PL/SQL stored procedure signature is:
     *
     * PROCEDURE save_data
     *   Argument Name                  Type                    In/Out Default?
     *   ------------------------------ ----------------------- ------ --------
     *   KEY                            NUMBER(38)              IN
     *   DATA                           CLOB                    IN
     *
     */

    $conn = OCILogon($user, $password);
    $stmt = OCIParse($conn, "begin save_data(:key, :data); end;");
    $clob = OCINewDescriptor($conn, OCI_D_LOB);
	OCIBindByName($stmt, ':key', $key);
	OCIBindByName($stmt, ':data', $clob, -1, OCI_B_CLOB);
	$clob->WriteTemporary($data);
	OCIExecute($stmt, OCI_DEFAULT);
	OCICommit($conn);
	$clob->close();
	$clob->free();
	OCIFreeStatement($stmt);
?>
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.ocirowcount">
   <refnamediv>
    <refname>OCIRowCount</refname>
    <refpurpose>作用された行の数を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIRowCount</methodname>
       <methodparam><type>int</type><parameter>statement</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIRowCount</function> はupdate文に影響された行の数を返します。
     この関数は、select が返す行の数は通知しません!
    </para>
    <para>
     <example>
      <title>OCIRowCount</title>
      <programlisting>
<![CDATA[
<?php
    print "<HTML><PRE>";
    $conn = OCILogon("scott","tiger");
    $stmt = OCIParse($conn,"create table emp2 as select * from emp");
    OCIExecute($stmt);
    print OCIRowCount($stmt) . " rows inserted.<BR>";
    OCIFreeStatement($stmt);
    $stmt = OCIParse($conn,"delete from emp2");
    OCIExecute($stmt);
    print OCIRowCount($stmt) . " rows deleted.<BR>";
    OCICommit($conn);
    OCIFreeStatement($stmt);
    $stmt = OCIParse($conn,"drop table emp2");
    OCIExecute($stmt);
    OCIFreeStatement($stmt);
    OCILogOff($conn);
    print "</PRE></HTML>";
?>
]]>
      </programlisting>
     </example>
    </para>
    </refsect1>
  </refentry>

  <refentry id="function.ocinumcols">
   <refnamediv>
    <refname>OCINumCols</refname>
    <refpurpose>ある文における結果のカラム数を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCINumCols</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCINumCols</function>は、文におけるカラムの数を
     返します。
    </para>
    <example>
     <title>OCINumCols</title>
     <programlisting>
<![CDATA[
<?php   
    print "<HTML><PRE>\n";   
    $conn = OCILogon("scott", "tiger");
    $stmt = OCIParse($conn,"select * from emp");
    OCIExecute($stmt);
    while ( OCIFetch($stmt) ) {
        print "\n";   
        $ncols = OCINumCols($stmt);
        for ( $i = 1; $i <= $ncols; $i++ ) {
            $column_name  = OCIColumnName($stmt,$i);
            $column_value = OCIResult($stmt,$i);
            print $column_name . ': ' . $column_value . "\n";
        }
        print "\n";
    }
    OCIFreeStatement($stmt);  
    OCILogoff($conn);   
    print "</PRE>";
    print "</HTML>\n"; 
?>   
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.ociresult">
   <refnamediv>
    <refname>OCIResult</refname>
    <refpurpose>取得された行におけるカラムの値を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>mixed</type><methodname>OCIResult</methodname>
      <methodparam><type>int</type><parameter>statement</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>column</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIResult</function>は、現在の行におけるカラム
     <parameter>column</parameter>のデータを返します。
     (<function>OCIFetch</function>を参照)
     <function>OCIResult</function> は抽象型(ROWID, LOB, FILE)を除き、
     全て文字列として値を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ocifetch">
   <refnamediv>
    <refname>OCIFetch</refname>
    <refpurpose>結果バッファーの次の行を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIFetch</methodname>
      <methodparam><type>int</type><parameter>statement</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIFetch</function>は、(SELECT文の)次の行を内部結果バッファ
     に取得します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ocifetchinto">
   <refnamediv>
    <refname>OCIFetchInto</refname>
    <refpurpose>結果配列の次の行を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIFetchInto</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>array &amp;</type><parameter>result</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>mode</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIFetchInto</function>は(SELECT 文の)次の行を
     <parameter>result</parameter> 配列に取得します。
     <function>OCIFetchInto</function> は、以前の
     <parameter>result</parameter> の内容を上書きします。
     デフォルトで <parameter>result</parameter> は &null; でない全カラム
     の1次元配列を有します。
    </para>
    <para>
     <parameter>mode</parameter>パラメータによりデフォルト動作の変更を
     可能となります。フラグを追加することにより簡単に一つ以上のフラグ
     を指定することが可能です。(例 OCI_ASSOC+OCI_RETURN_NULLS)
     指定可能なフラグを次に示します。

     <simplelist>
      <member>
       <literal>OCI_ASSOC</literal> 連想配列を返す。
      </member>
      <member>
       <literal>OCI_NUM</literal> 添字 1 から始まる配列を返す。(デフォルト)
      </member>
      <member>
       <literal>OCI_RETURN_NULLS</literal> 空のカラムを返す。
      </member>
      <member>
       <literal>OCI_RETURN_LOBS</literal> ディスクリプタの代わりに LOB
       の値を返す。
      </member>
     </simplelist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ocifetchstatement">
   <refnamediv>
    <refname>OCIFetchStatement</refname>
    <refpurpose>結果データの全ての行を配列に取得する</refpurpose>
   </refnamediv>
   <refsect1>
     <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIFetchStatement</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>array &amp;</type><parameter>variable</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIFetchStatement</function> 結果から全ての行をユーザが
     定義した配列に取得します。
     <function>OCIFetchStatement</function> は取得した行の数を返します。
    </para>
    <example>
     <title>OCIFetchStatement</title>
      <programlisting>
<![CDATA[
<?php
/* OCIFetchStatement example mbritton@verinet.com (990624) */

$conn = OCILogon("scott","tiger");

$stmt = OCIParse($conn,"select * from emp");

OCIExecute($stmt);

$nrows = OCIFetchStatement($stmt,$results);
if ( $nrows > 0 ) {
   print "<TABLE BORDER=\"1\">\n";
   print "<TR>\n";
   while ( list( $key, $val ) = each( $results ) ) {
      print "<TH>$key</TH>\n";
   }
   print "</TR>\n";
   
   for ( $i = 0; $i < $nrows; $i++ ) {
      reset($results);
      print "<TR>\n";
      while ( $column = each($results) ) {   
         $data = $column['value'];
         print "<TD>$data[$i]</TD>\n";
      }
      print "</TR>\n";
   }
   print "</TABLE>\n";
} else {
   echo "No data found<BR>\n";
}      
print "$nrows Records Selected<BR>\n";
 
OCIFreeStatement($stmt);
OCILogoff($conn);
?>
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.ocicolumnisnull">
   <refnamediv>
    <refname>OCIColumnIsNULL</refname>
    <refpurpose>結果カラムが &null; であるかどうかを確認する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIColumnIsNULL</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>column</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIColumnIsNULL</function>は、
     文<parameter>stmt</parameter>の結果として返されたカラムが&null;である
     場合に&true;を返します。
     <parameter>column</parameter> パラメータに(1から始まる)カラム番号または
     カラム名のどちらかを使用可能です。
    </para>
  </refsect1>
  </refentry>

  <refentry id="function.ocicolumnname">
   <refnamediv>
    <refname>OCIColumnName</refname>
    <refpurpose>カラムの名前を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCIColumnName</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>OCIColumnName</function> は指定した(1から始まる)カラム
     番号に対応するカラムの名前を返します。
    </simpara>
    <para>
     <example>
      <title>OCIColumnName</title>
      <programlisting>
<![CDATA[
<?php   
    print "<HTML><PRE>\n";   
    $conn = OCILogon("scott", "tiger");
    $stmt = OCIParse($conn,"select * from emp");
    OCIExecute($stmt);
    print "<TABLE BORDER=\"1\">";
    print "<TR>";
    print "<TH>Name</TH>";
    print "<TH>Type</TH>";
    print "<TH>Length</TH>";
    print "</TR>";
    $ncols = OCINumCols($stmt);
    for ( $i = 1; $i <= $ncols; $i++ ) {
        $column_name  = OCIColumnName($stmt,$i);
        $column_type  = OCIColumnType($stmt,$i);
        $column_size  = OCIColumnSize($stmt,$i);
        print "<TR>";
        print "<TD>$column_name</TD>";
        print "<TD>$column_type</TD>";
        print "<TD>$column_size</TD>";
        print "</TR>";
    }
    OCIFreeStatement($stmt);  
    OCILogoff($conn);   
    print "</PRE>";
    print "</HTML>\n"; 
?>   
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     <function>OCINumCols</function>, <function>OCIColumnType</function>, 
     <function>OCIColumnSize</function>も参照下さい。
    </simpara>
   </refsect1>
  </refentry>
  
  <refentry id="function.ocicolumnsize">
   <refnamediv>
    <refname>OCIColumnSize</refname>
    <refpurpose>結果カラムサイズを返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIColumnSize</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>column</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIColumnSize</function>はOracleにより指定されたカラム
     のサイズを返します。<parameter>col</parameter>パラメータに(1から
     始まる)カラム番号またはカラム名のどちらかを使用可能です。
    </para>
    <para>
     <example>
      <title>OCIColumnSize</title>
      <programlisting>
<![CDATA[
<?php   
    print "<HTML><PRE>\n";   
    $conn = OCILogon("scott", "tiger");
    $stmt = OCIParse($conn,"select * from emp");
    OCIExecute($stmt);
    print "<TABLE BORDER=\"1\">";
    print "<TR>";
    print "<TH>Name</TH>";
    print "<TH>Type</TH>";
    print "<TH>Length</TH>";
    print "</TR>";
    $ncols = OCINumCols($stmt);
    for ( $i = 1; $i <= $ncols; $i++ ) {
        $column_name  = OCIColumnName($stmt,$i);
        $column_type  = OCIColumnType($stmt,$i);
        $column_size  = OCIColumnSize($stmt,$i);
        print "<TR>";
        print "<TD>$column_name</TD>";
        print "<TD>$column_type</TD>";
        print "<TD>$column_size</TD>";
        print "</TR>";
    }
    print "</TABLE>";
    OCIFreeStatement($stmt);  
    OCILogoff($conn);   
    print "</PRE>";
    print "</HTML>\n"; 
?>   
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     <function>OCINumCols</function>, <function>OCIColumnName</function>, 
     <function>OCIColumnSize</function> も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicolumntype">
   <refnamediv>
     <refname>OCIColumnType</refname>
    <refpurpose>カラムのデータ型を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>mixed</type><methodname>OCIColumnType</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>OCIColumnType</function>は、指定した(1から始まる)カラム
     番号に対応するカラムのデータ型を返します。
    </simpara>
    <para>
     <example>
      <title>OCIColumnType</title>
      <programlisting>
<![CDATA[
<?php   
    print "<HTML><PRE>\n";   
    $conn = OCILogon("scott", "tiger");
    $stmt = OCIParse($conn,"select * from emp");
    OCIExecute($stmt);
    print "<TABLE BORDER=\"1\">";
    print "<TR>";
    print "<TH>Name</TH>";
    print "<TH>Type</TH>";
    print "<TH>Length</TH>";
    print "</TR>";
    $ncols = OCINumCols($stmt);
    for ( $i = 1; $i <= $ncols; $i++ ) {
        $column_name  = OCIColumnName($stmt,$i);
        $column_type  = OCIColumnType($stmt,$i);
        $column_size  = OCIColumnSize($stmt,$i);
        print "<TR>";
        print "<TD>$column_name</TD>";
        print "<TD>$column_type</TD>";
        print "<TD>$column_size</TD>";
        print "</TR>";
    }
    OCIFreeStatement($stmt);  
    OCILogoff($conn);   
    print "</PRE>";
    print "</HTML>\n"; 
?>   
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     <function>OCINumCols</function>, <function>OCIColumnName</function>, 
     <function>OCIColumnSize</function> も参照下さい。
    </simpara>
   </refsect1>
  </refentry>
  
  <refentry id="function.ociserverversion">
   <refnamediv>
    <refname>OCIServerVersion</refname>
    <refpurpose>サーバーのバージョン情報を有する文字列を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCIServerVersion</methodname>
      <methodparam><type>int</type><parameter>conn</parameter></methodparam>
     </methodsynopsis>
    <para>
     <example>
      <title>OCIServerVersion</title>
      <programlisting>
<![CDATA[
<?php
   $conn = OCILogon("scott","tiger");
   print "Server Version: " . OCIServerVersion($conn);
   OCILogOff($conn);
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ocistatementtype">
   <refnamediv>
    <refname>OCIStatementType</refname>
    <refpurpose>OCI 命令の型を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCIStatementType</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIStatementType</function> は次の値のどれかを返します。
     <orderedlist>
      <listitem>
       <simpara>
	"SELECT"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"UPDATE"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"DELETE"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"INSERT"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"CREATE"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"DROP"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"ALTER"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"BEGIN"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"DECLARE"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"UNKNOWN"
       </simpara>
      </listitem>
     </orderedlist>
    </para>
    <para>
     <example>
      <title>コーディング例</title>
      <programlisting role="php">
<![CDATA[
<?php
    print "<HTML><PRE>";
    $conn = OCILogon("scott","tiger");
    $sql  = "delete from emp where deptno = 10";
   
    $stmt = OCIParse($conn,$sql);
    if ( OCIStatementType($stmt) == "DELETE" ) {
        die "You are not allowed to delete from this table<BR>";
    }
   
    OCILogoff($conn);
    print "</PRE></HTML>";
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.ocinewcursor">
   <refnamediv>
    <refname>OCINewCursor</refname>
    <refpurpose>
     新規カーソル(命令ハンドル)を返す -
     参照カーソルをバインドするために使用する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCINewCursor</methodname>
      <methodparam><type>int</type><parameter>conn</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCINewCursor</function> は、新規の命令ハンドル
     を指定した接続に確保します。
    </para>
    <para>
     <example>
      <title>ストアドプロシージャからの参照カーソルの使用例</title>
      <programlisting>
<![CDATA[
<?php   
// ストアドプロシージャ info.output が :data の参照カーソルを返すと仮定する
 
$conn = OCILogon("scott","tiger");
$curs = OCINewCursor($conn);
$stmt = OCIParse($conn, "begin info.output(:data); end;");
 
ocibindbyname($stmt,"data",$curs,-1,OCI_B_CURSOR);
ociexecute($stmt);
ociexecute($curs);
 
while (OCIFetchInto($curs,$data)) {
    var_dump($data);
}
  
OCIFreeStatement($stmt);
OCIFreeCursor($curs);
OCILogoff($conn);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>select文におけるREF CURSORの使用例</title>
      <programlisting>
<![CDATA[
<?php   
print "<HTML><BODY>";
$conn = OCILogon("scott","tiger");
$count_cursor = "CURSOR(select count(empno) num_emps from emp " .
                "where emp.deptno = dept.deptno) as EMPCNT from dept";
$stmt = OCIParse($conn,"select deptno,dname,$count_cursor");

ociexecute($stmt);
print "<TABLE BORDER=\"1\">";
print "<TR>";
print "<TH>DEPT NAME</TH>";
print "<TH>DEPT #</TH>";
print "<TH># EMPLOYEES</TH>";
print "</TR>";

while (OCIFetchInto($stmt,&$data,OCI_ASSOC)) {
    print "<TR>";
    $dname  = $data["DNAME"];
    $deptno = $data["DEPTNO"];
    print "<TD>$dname</TD>";
    print "<TD>$deptno</TD>";
    ociexecute($data[ "EMPCNT" ]);
    while (OCIFetchInto($data[ "EMPCNT" ],&$subdata,OCI_ASSOC)) {
        $num_emps = $subdata["NUM_EMPS"];
        print  "<TD>$num_emps</TD>";
    }
    print "</TR>";
}
print "</TABLE>";
print "</BODY></HTML>";
OCIFreeStatement($stmt);
OCILogoff($conn);
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ocifreestatement">
   <refnamediv>
    <refname>OCIFreeStatement</refname>
    <refpurpose>ある文に関連する全リソースを開放する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
       <type>int</type><methodname>OCIFreeStatement</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIFreeStatement</function>は成功時に&true;、失敗した場合に
     &false;を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ocifreecursor">
   <refnamediv>
    <refname>OCIFreeCursor</refname>
    <refpurpose>カーソルに関連づけられた全リソースを開放する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIFreeCursor</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIFreeCursor</function>は成功時に&true;、失敗した時に
     &false;を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ocifreedesc">
   <refnamediv>
    <refname>OCIFreeDesc</refname>
    <refpurpose>ラージオブジェクト記述子を削除する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIFreeDesc</methodname>
      <methodparam><type>object</type><parameter>lob</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIFreeDesc</function> は成功時に&true;、成功しなかった場
     合に&false;を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ociparse">
   <refnamediv>
    <refname>OCIParse</refname>
    <refpurpose>クエリーをパースし、ステートメントを返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIParse</methodname>
      <methodparam><type>int</type><parameter>conn</parameter></methodparam>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>OCIParse</function>は、<parameter>conn</parameter>を
     使用して<parameter>query</parameter>をパースします。クエリーが有
     効な場合にステートメントID、無効な場合に&false;を返します。
     <parameter>query</parameter>は、有効なSQL文である必要があります。
    </simpara>
   </refsect1>
  </refentry>
  
  <refentry id="function.ocierror">
   <refnamediv>
    <refname>OCIError</refname>
    <refpurpose>
     stmt|conn|globalに関する直近のエラーを返す。
     エラーが生じていない場合は&false;を返す。
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>OCIError</methodname>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>stmt|conn|global</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>OCIError</function>は、直近のエラーを返します。
     オプションの <parameter>stmt|conn|global</parameter>が指定されない場合、
     直近のエラーが返されます。エラーが見つからない場合、
     <function>OCIError</function>は&false;を返します。
    </simpara>
   </refsect1>
  </refentry>
  
  <refentry id="function.ociinternaldebug">
   <refnamediv>
    <refname>OCIInternalDebug</refname>
    <refpurpose>
     内部デバッグ用出力有効または無効にする。デフォルトでは無効
    </refpurpose>
   </refnamediv>
    <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>void</type><methodname>OCIInternalDebug</methodname>
      <methodparam><type>int</type><parameter>onoff</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>OCIInternalDebug</function>は内部デバッグ用出力を
     有効にします。デバッグ出力をオフにする場合は0、
     オンにする場合は1を<parameter>onoff</parameter>に設定します。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicancel">
   <refnamediv>
    <refname>OCICancel</refname>
    <refpurpose>カーソルからの読み込みをキャンセルする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCICancel</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     カーソルからデータをもう読み込みたくない場合は、
     <function>OCICancel</function>をコールして下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocisetprefetch">
   <refnamediv>
    <refname>OCISetPrefetch</refname>
    <refpurpose>事前取得するレコード数を設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCISetPrefetch</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>int</type><parameter>rows</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     事前取得する最上位のレコードの数を設定します。デフォルトは1レコード
     です。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ociwritelobtofile">
   <refnamediv>
    <refname>OCIWriteLobToFile</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>void</type><methodname>OCIWriteLobToFile</methodname>
      <methodparam><type>object</type><parameter>lob</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>start</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>lenght</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocisavelobfile">
   <refnamediv>
    <refname>OCISaveLobFile</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCISaveLobFile</methodname>
      <methodparam><type>object</type><parameter>lob</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocisavelob">
   <refnamediv>
    <refname>OCISaveLob</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCISaveLob</methodname>
      <methodparam><type>object</type><parameter>lob</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ociloadlob">
   <refnamediv>
    <refname>OCILoadLob</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCILoadLob</methodname>
      <methodparam><type>object</type><parameter>lob</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicolumnscale">
   <refnamediv>
    <refname>OCIColumnScale</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIColumnScale</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicolumnprecision">
   <refnamediv>
    <refname>OCIColumnPrecision</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIColumnPrecision</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicolumntyperaw">
   <refnamediv>
    <refname>OCIColumnTypeRaw</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>mixed</type><methodname>OCIColumnTypeRaw</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocinewcollection">
   <refnamediv>
    <refname>OCINewCollection</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCINewCollection</methodname>
      <methodparam><type>int</type><parameter>conn</parameter></methodparam>
      <methodparam><type>string</type><parameter>tdo</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>shema</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocifreecollection">
   <refnamediv>
    <refname>OCIFreeCollection</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCIFreeCollection</methodname>
      <methodparam><type>object</type><parameter>lob</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicollassign">
   <refnamediv>
    <refname>OCICollAssign</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCICollAssign</methodname>
      <methodparam><type>object</type><parameter>collection</parameter></methodparam>
      <methodparam><type>object</type><parameter>object</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicollappend">
   <refnamediv>
    <refname>OCICollAppend</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCICollAppend</methodname>
      <methodparam><type>object</type><parameter>collection</parameter></methodparam>
      <methodparam><type>object</type><parameter>object</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicollassignelem">
   <refnamediv>
    <refname>OCICollAssignElem</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCICollAssignElem</methodname>
      <methodparam><type>object</type><parameter>collection</parameter></methodparam>
      <methodparam><type>string</type><parameter>ndx</parameter></methodparam>
      <methodparam><type>string</type><parameter>val</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicollgetelem">
   <refnamediv>
    <refname>OCICollGetElem</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCICollGetElem</methodname>
      <methodparam><type>object</type><parameter>collection</parameter></methodparam>
      <methodparam><type>string</type><parameter>ndx</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicollmax">
   <refnamediv>
    <refname>OCICollMax</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCICollMax</methodname>
      <methodparam><type>object</type><parameter>collection</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicollsize">
   <refnamediv>
    <refname>OCICollSize</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCICollSize</methodname>
      <methodparam><type>object</type><parameter>collection</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ocicolltrim">
   <refnamediv>
    <refname>OCICollTrim</refname>
    <refpurpose>Coming soon.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>OCICollTrim</methodname>
      <methodparam><type>object</type><parameter>collection</parameter></methodparam>
      <methodparam><type>int</type><parameter>num</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Coming soon.
    </simpara>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

