 <reference id="ref.ingres">
  <title>Ingres II 関数</title>
  <titleabbrev>Ingres II</titleabbrev>
  <partintro>
   <simpara>
    これらの関数により、Ingres II データベースサーバにアクセスできるよ
    うになります。
   </simpara>
   <simpara>
    これらの関数を利用可能とするには、オプション
    <option role="configure">--with-ingres</option> を付けて Ingres サ
    ポートを有効にしてPHPをコンパイルする必要があります。コンパイルに
    は、Ingres II に含まれる Open API ライブラリとヘッダが必要です。
    環境変数 II_SYSTEM が正確に設定されていない場合、Ingres がインストー
    ルされたディレクトリを指定するために
    <option role="configure">--with-ingres=DIR</option> を使用する必要
    があるかもしれません。
   </simpara>
   <simpara>
    この拡張モジュールを Apache で使用する際に Apache が起動せず、 
    "PHP Fatal error:  Unable to start
    ingres_ii module in Unknown on line 0" というエラーが発生する場合、
    環境変数 II_SYSTEM が正確に設定されているかどうかを確認して下さい。
    "export II_SYSTEM="/home/ingres/II" を Apache を開始するスクリプト
    に追加して下さい。この後、httpd を起動すれば、うまくいくはずです。
   </simpara>
   <note>
    <para>
     他のデータベースサーバにアクセスするために既にPHP 拡張モジュール
     を使用している場合、Ingres は同一のコネクションについて複数のクエ
     リやトランザクションの並列実行ができない、つまり、この拡張モジュー
     ルにおいて結果およびトランザクションのハンドルを得ることができない
     ことに注意する必要があります。クエリの結果は、別のクエリを送信す
     る前に処理する必要があり、トランザクションは別のトランザクション
     をオープンする前にコミットまたはロールバックする必要があります。
     (これは、最初のクエリを送信する際に自動的に行われます)
    </para>
   </note>
  </partintro>

  <refentry id="function.ingres-connect">
   <refnamediv>
    <refname>ingres_connect</refname>
    <refpurpose>Ingres II データベースへの接続をオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>ingres_connect</function></funcdef>
      <paramdef>string
       <parameter><optional>database</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>username</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>password</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     成功時に Ingres II リンクリソース、失敗した際に false を返します。
    </para>
    <para>
     <function>ingres_connect</function> は、
     <parameter>database</parameter> とこの後に続く
     <parameter>[node_id::]dbname[/svr_class]</parameter> 構文により指
     定された Ingres データベースへの接続をオープンします。
    </para>
    <para>
     いくつかのパラメータが欠けている場合、
     <function>ingres_connect</function> は、
     <parameter>ingres.default_database</parameter>、
     <parameter>ingres.default_user</parameter>、
     <parameter>ingres.default_password</parameter> に関して
     <filename>php.ini</filename> の値を使用します。
    </para>
    <para>
     接続は、スクリプトの実行終了時または、このリンクについて
     <function>ingres_close</function> がコールされた場合にクローズさ
     れます。
    </para>
    <para>
     他の全ての Ingres 関数は、デフォルトで直近にオープンされたリンク
     を使用します。このため、複数のリンクを同時に使用したい場合には、
     返された値を保存しておく必要があります。
    </para>
    <example>
     <title><function>ingres_connect</function> の例</title>
     <programlisting role="php">
&lt;?php
    $link = ingres_connect ("mydb", "user", "pass")
        or die ("接続できません");
    print ("接続に成功しました");
    ingres_close ($link);
?>
     </programlisting>
    </example>
    <example>
     <title>
      デフォルトリンクを使用する<function>ingres_connect</function>の例
     </title>
     <programlisting role="php">
&lt;?php
    ingres_connect ("mydb", "user", "pass")
        or die ("接続できません");
    print ("接続に成功しました");
    ingres_close ();
?>
     </programlisting>
    </example>
    <para> 
     <function>ingres_pconnect</function> および
     <function>ingres_close</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-pconnect">
   <refnamediv>
    <refname>ingres_pconnect</refname>
    <refpurpose>
     Ingres II データベースへの持続的接続をオープンする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>ingres_pconnect</function></funcdef>
      <paramdef>string
       <parameter><optional>database</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>username</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>password</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     成功した際に Ingres II リンクリソース、失敗した際に false を返し
     ます。
    </para>
    <para>
     パラメータの詳細と例については、
     <function>ingres_connect</function> を参照下さい。
     <function>ingres_pconnect</function> と
     <function>ingres_connect</function> の違いは次の2つだけです。
     まず、接続時にこの関数は、まず同じパラメータ既にオープンされて
     いる(持続的な)リンクを探すことです。第2に、Ingres サーバへの接続
     はスクリプトの実行終了時にもクローズされないところです。代わりに、
     リンクは、後で使用するためにオープンされたままとなります。
     (<function>ingres_close</function> は、
     <function>ingres_pconnect</function>により確立されたリンクをクロー
     ズしません) このため、この型のリンクは「持続的(persistent)」であ
     ると呼ばれます。
    </para>
    <para> 
     <function>ingres_connect</function> および
     <function>ingres_close</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-close">
   <refnamediv>
    <refname>ingres_close</refname>
    <refpurpose>Ingres II データベース接続を閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_close</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     成功時にtrue、失敗時にfalseを返します。
    </para>
    <para>
     <function>ingres_close</function> は、指定したリンクが指す Ingres
     サーバへの接続をクローズします。パラメータ
     <parameter>link</parameter>が指定されない場合、直近にオープンされ
     たリンクが使用されます。
    </para>
    <para>
     持続的接続をクローズすることはできず、持続的でない接続はスクリプ
     トの終了時に自動的にクローズされるため、
     <function>ingres_close</function> は通常は不要です。
    </para>
    <para> 
     <function>ingres_connect</function> および
     <function>ingres_pconnect</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-query">
   <refnamediv>
    <refname>ingres_query</refname>
    <refpurpose>Ingres II にSQLクエリを送信する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_query</function></funcdef>
      <paramdef>string
       <parameter>query</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     成功時にtrue、失敗時にfalseを返します。
    </para>
    <para>
     <function>ingres_query</function> は、指定した
     <parameter>query</parameter> を Ingres サーバに送信します。このク
     エリは、有効なSQLクエリである必要があります。(Ingres SQL リファレ
     ンスガイドを参照下さい)
    </para>
    <para>
     クエリは、現在オープンされているトランザクションの一部となります。
     オープンされているトランザクションがない場合、
     <function>ingres_query</function> は新規のトランザクションをオー
     プンします。トランザクションをクローズするには、データベースへの
     変更をコミットする場合に <function>ingres_commit</function> を、
     これらの変更をキャンセルする場合に
     <function>ingres_rollback</function> のどちらかを使用することが可
     能です。スクリプト終了時に、全てのオープンされたトランザクション
     は(<function>ingres_rollback</function>をコールすることにより)
     ロールバックされます。新規トランザクションをオープンする前に
     <function>ingres_autocommit</function> を使用することも可能です。
     この場合、各SQLクエリは直ちにコミットされます。
    </para>
    <para>
     次の型のSQLクエリは、この関数で送信できません。
     <itemizedlist>
      <listitem>
       <simpara>close (<function>ingres_close</function>を参照)</simpara>
      </listitem>
     <listitem>
       <simpara>commit (<function>ingres_commit</function>を参照)</simpara>
      </listitem>
      <listitem>
       <simpara>connect (<function>ingres_connect</function>を参照)</simpara>
      </listitem>
      <listitem>
       <simpara>disconnect (<function>ingres_close</function>を参照)</simpara>
      </listitem>
      <listitem><simpara>get dbevent</simpara></listitem>
      <listitem><simpara>prepare to commit</simpara></listitem>
      <listitem>
       <simpara>
	rollback (<function>ingres_rollback</function>を参照)
       </simpara>
      </listitem>
      <listitem><simpara>savepoint</simpara></listitem>
      <listitem>
       <simpara>
	set autocommit (<function>ingres_autocommit</function>を参照)
       </simpara>
      </listitem>
      <listitem>
       <simpara>カーソルに関係するクエリはサポートされていません</simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title><function>ingres_query</function> の例</title>
      <programlisting role="php">
&lt;?php 
ingres_connect ($database, $user, $password);

ingres_query ("select * from table");
while ($row = ingres_fetch_row()) {
    echo $row[1];
    echo $row[2];
}
?>
      </programlisting>
     </example>
    </para>
    <para>
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function>,
     <function>ingres_fetch_row</function>,
     <function>ingres_commit</function>,
     <function>ingres_rollback</function>,
     <function>ingres_autocommit</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-num-rows">
   <refnamediv>
    <refname>ingres_num_rows</refname>
    <refpurpose>
     直近のクエリで作用されたレコードの数を取得し、返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int<function>ingres_num_rows</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     For delete, insert or update queries,
     <function>ingres_num_rows</function> returns the number of rows
     affected by the query. For other queries,
     <function>ingres_num_rows</function> returns the number of rows
     in the query's result.
    </para>
    <para>
     <note>
      <simpara>
       This function is mainly meant to get the number of rows
       modified in the database.
       If this function is called before using
       <function>ingres_fetch_array</function>,
       <function>ingres_fetch_object</function> or
       <function>ingres_fetch_row</function> the server will delete
       the result's data and the script won't be able to get them.
      </simpara>
      <simpara>
       You should instead retrieve the result's data using one of these
       fetch functions in a loop until it returns false, indicating that
       no more results are available.
      </simpara>
     </note>
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> and
     <function>ingres_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-num-fields">
   <refnamediv>
    <refname>ingres_num_fields</refname>
    <refpurpose>
     直近のクエリにより返されたフィールドの数を得る
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int<function>ingres_num_fields</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_num_fields</function> returns the number of fields
     in the results returned by the Ingres server after a call to
     <function>ingres_query</function>
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> and
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-name">
   <refnamediv>
    <refname>ingres_field_name</refname>
    <refpurpose>クエリ結果においてフィールド名を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string<function>ingres_field_name</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_name</function> returns the name of a field
     in a query result, or false on failure.
    </para>
    <para>
     <parameter>index</parameter> is the number of the field and must be
     between 1 and the value given by
     <function>ingres_num_fields</function>.
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> and
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-type">
   <refnamediv>
    <refname>ingres_field_type</refname>
    <refpurpose>クエリ結果においてフィールドの型を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string<function>ingres_field_type</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_type</function> returns the type of a field
     in a query result, or false on failure.
     Examples of types returned are "IIAPI_BYTE_TYPE",
     "IIAPI_CHA_TYPE", "IIAPI_DTE_TYPE", "IIAPI_FLT_TYPE",
     "IIAPI_INT_TYPE", "IIAPI_VCH_TYPE". Some of these types can map
     to more than one SQL type depending on the length of the field
     (see <function>ingres_field_length</function>). For example
     "IIAPI_FLT_TYPE" can be a float4 or a float8. For detailed
     information, see the Ingres/OpenAPI User Guide - Appendix C.
    </para>
    <para>
     <parameter>index</parameter> is the number of the field and must be
     between 1 and the value given by
     <function>ingres_num_fields</function>.
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> and
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-nullable">
   <refnamediv>
    <refname>ingres_field_nullable</refname>
    <refpurpose>フィールドにNULL値を設定可能かどうか調べる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_field_nullable</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_nullable</function> returns true if the field
     can be set to the NULL value and false if it can't.
    </para>
    <para>
     <parameter>index</parameter> is the number of the field and must be
     between 1 and the value given by
     <function>ingres_num_fields</function>.
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> and
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-length">
   <refnamediv>
    <refname>ingres_field_length</refname>
    <refpurpose>フィールド長を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int<function>ingres_field_length</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_length</function> returns the length of a field.
     This is the number of bytes used by the server to store the field.
     For detailed information, see the Ingres/OpenAPI User Guide - Appendix C.
    </para>
    <para>
     <parameter>index</parameter> is the number of the field and must be
     between 1 and the value given by
     <function>ingres_num_fields</function>.     
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> and
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-precision">
   <refnamediv>
    <refname>ingres_field_precision</refname>
    <refpurpose>フィールドの精度を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int<function>ingres_field_precision</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_precision</function> returns the precision of
     a field. This value is used only for decimal, float and money SQL data
     types. For detailed information, see the Ingres/OpenAPI User Guide -
     Appendix C.
    </para>
    <para>
     <parameter>index</parameter> is the number of the field and must be
     between 1 and the value given by
     <function>ingres_num_fields</function>.     
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> and
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-scale">
   <refnamediv>
    <refname>ingres_field_scale</refname>
    <refpurpose>フィールドのスケールを得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int<function>ingres_field_scale</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_scale</function> returns the scale of a field.
     This value is used only for the decimal SQL data type. For detailed
     information, see the Ingres/OpenAPI User Guide - Appendix C.
    </para>
    <para>
     <parameter>index</parameter> is the number of the field and must be
     between 1 and the value given by
     <function>ingres_num_fields</function>.     
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> and
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-fetch-array">
   <refnamediv>
    <refname>ingres_fetch_array</refname>
    <refpurpose>1行分の結果を配列に取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array<function>ingres_fetch_array</function></funcdef>
      <paramdef>int
       <parameter><optional>result_type</optional></parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_fetch_array</function> Returns an array that corresponds
     to the fetched row, or false if there are no more rows.
    </para>
    <para>
     This function is an extended version of
     <function>ingres_fetch_row</function>.  In addition to storing the
     data in the numeric indices of the result array, it also stores
     the data in associative indices, using the field names as keys.
    </para>
    <para>
     If two or more columns of the result have the same field names,
     the last column will take precedence. To access the other column(s)
     of the same name, you must use the numeric index of the column or
     make an alias for the column.
     <informalexample>
      <programlisting>
ingres_query(select t1.f1 as foo t2.f1 as bar from t1, t2);
$result = ingres_fetch_array();
$foo = $result["foo"];
$bar = $result["bar"];
      </programlisting>
     </informalexample>
    </para>
    <para>
     <parameter>result_type</parameter> can be II_NUM for enumerated array,
     II_ASSOC for associative array, or II_BOTH (default).
    </para>
    <para>
     Speed-wise, the function is identical to
     <function>ingres_fetch_object</function>, and almost as quick as
     <function>ingres_fetch_row</function> (the difference is
     insignificant).
    </para>
    <para>
     <example>
      <title><function>ingres_fetch_array</function> の例</title>
      <programlisting role="php">
&lt;?php 
ingres_connect ($database, $user, $password);

ingres_query ("select * from table");
while ($row = ingres_fetch_array()) {
    echo $row["user_id"];  # using associative array
    echo $row["fullname"];
    echo $row[1];          # using enumerated array
    echo $row[2];
}
?>
      </programlisting>
     </example>
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_num_fields</function>,
     <function>ingres_field_name</function>,
     <function>ingres_fetch_object</function> and
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-fetch-row">
   <refnamediv>
    <refname>ingres_fetch_row</refname>
    <refpurpose>1行分の結果を数値添字配列として取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array<function>ingres_fetch_row</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_fetch_row</function> returns an array that corresponds
     to the fetched row, or false if there are no more rows. Each result
     column is stored in an array offset, starting at offset 1.
    </para>
    <para>
     Subsequent call to <function>ingres_fetch_row</function> would
     return the next row in the result set, or false if there are no
     more rows.
    </para>
    <para>
     <example>
      <title><function>ingres_fetch_row</function> example</title>
      <programlisting role="php">
&lt;?php 
ingres_connect ($database, $user, $password);

ingres_query ("select * from table");
while ($row = ingres_fetch_row()) {
    echo $row[1];
    echo $row[2];
}
?>
      </programlisting>
     </example>
    </para>
    <para>
     See also
     <function>ingres_num_fields</function>,
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function> and
     <function>ingres_fetch_object</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-fetch-object">
   <refnamediv>
    <refname>ingres_fetch_object</refname>
    <refpurpose>1行分の結果をオブジェクトとして取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object<function>ingres_fetch_object</function></funcdef>
      <paramdef>int
       <parameter><optional>result_type</optional></parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_fetch_object</function> Returns an object that
     corresponds to the fetched row, or false if there are no more rows.
    </para>
    <para> 
     This function is similar to
     <function>ingres_fetch_array</function>, with one difference - an
     object is returned, instead of an array.  Indirectly, that means
     that you can only access the data by the field names, and not by
     their offsets (numbers are illegal property names).
    </para>
    <para>
     The optional argument <parameter>result_type</parameter> is a
     constant and can take the following values: II_ASSOC,
     II_NUM, and II_BOTH.
    </para>
    <para>
     Speed-wise, the function is identical to
     <function>ingres_fetch_array</function>, and almost as quick as
     <function>ingres_fetch_row</function> (the difference is
     insignificant).
    </para>
    <para>
     <example>
      <title><function>ingres_fetch_object</function> example</title>
      <programlisting role="php">
&lt;?php 
ingres_connect ($database, $user, $password);
ingres_query ("select * from table");
while ($row = ingres_fetch_object()) {
    echo $row->user_id;
    echo $row->fullname;
}
?>
      </programlisting>
     </example>
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_num_fields</function>,
     <function>ingres_field_name</function>,
     <function>ingres_fetch_array</function> and
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-rollback">
   <refnamediv>
    <refname>ingres_rollback</refname>
    <refpurpose>トランザクションをロールバックする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_rollback</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_rollback</function> rolls back the currently open
     transaction, actualy canceling all changes made to the database
     during the transaction.
    </para>
    <para>
     This closes the transaction. A new one can be open by sending a
     query with <function>ingres_query</function>.
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_commit</function> and
     <function>ingres_autocommit</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-commit">
   <refnamediv>
    <refname>ingres_commit</refname>
    <refpurpose>トランザクションをコミットする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_commit</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_commit</function> commits the currently open
     transaction, making all changes made to the database permanent.
    </para>
    <para>
     This closes the transaction. A new one can be open by sending a
     query with <function>ingres_query</function>.
    </para>
    <para>
     You can also have the server commit automaticaly after every query
     by calling <function>ingres_autocommit</function> before opening the
     transaction.
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_rollback</function> and
     <function>ingres_autocommit</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-autocommit">
   <refnamediv>
    <refname>ingres_autocommit</refname>
    <refpurpose>autocommit を オンまたはオフに切替える</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_autocommit</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_autocommit</function> is called before opening a
     transaction (before the first call to <function>ingres_query</function>
     or just after a call to <function>ingres_rollback</function> or
     <function>ingres_autocommit</function>) to switch the "autocommit" mode
     of the server on or off (when the script begins the autocommit mode is
     off).
    </para>
    <para>
     When the autocommit mode is on, every query is automaticaly commited
     by the server, as if <function>ingres_commit</function> was called
     after every call to <function>ingres_query</function>.
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_rollback</function> and
     <function>ingres_commit</function>.
    </para>
   </refsect1>
  </refentry>

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

