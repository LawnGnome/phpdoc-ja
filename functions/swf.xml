 <reference id="ref.swf">
  <title>Shockwave Flash関数</title>
  <titleabbrev>SWF</titleabbrev>
  
  <partintro>
   <simpara>
    PHPは、Paul Haeberliが作成したlibswfモジュールによりShockwave
    Flashファイルを作成する機能を提供します。libswfは<ulink
    url="&url.swf;">&url.swf;</ulink>からダウンロードすることが
    可能です。libswfを入手した後にするべきことは、configureに
    <option role="configure">--with-swf[=DIR]</option>を指定することだ
    けです。ただし、DIRはディレクトリincludeおよびlibを有する場所です。
    ディレクトリincludeにはファイルswf.hが、ディレクトリlibにはファイ
    ルlibswf.aがある必要があります。libswfの配布ファイルを展開した際に
    は、二つのファイルは一つのディレクトリにあります。結果的にファイル
    を適当な場所に手動でコピーする必要があります。
   </simpara>
   <para>
    PHPをShockwave Flashサポート付きでインストールした後は、
    ShockwaveファイルをPHPから作成することができるようになります。
    何ができるかが分かると驚かされることでしょう。次のコードを見て下さい。
    <example>
     <title>
      SWFの例
     </title>
     <programlisting role="php">
&lt;?php
swf_openfile ("test.swf", 256, 256, 30, 1, 1, 1);
swf_ortho2 (-100, 100, -100, 100);
swf_defineline (1, -70, 0, 70, 0, .2);
swf_definerect (4, 60, -10, 70, 0, 0);
swf_definerect (5, -60, 0, -70, 10, 0);
swf_addcolor (0, 0, 0, 0);

swf_definefont (10, "Mod");
swf_fontsize (5);
swf_fontslant (10);
swf_definetext (11, "This be Flash wit PHP!", 1);

swf_pushmatrix ();
swf_translate (-50, 80, 0);
swf_placeobject (11, 60);
swf_popmatrix ();

for ($i = 0; $i < 30; $i++) {
    $p = $i/(30-1);
    swf_pushmatrix ();
    swf_scale (1-($p*.9), 1, 1);
    swf_rotate (60*$p,  'z');
    swf_translate (20+20*$p, $p/1.5, 0);
    swf_rotate (270*$p,  'z');
    swf_addcolor ($p, 0, $p/1.2, -$p);
    swf_placeobject (1, 50);
    swf_placeobject (4, 50);
    swf_placeobject (5, 50);
    swf_popmatrix ();
    swf_showframe ();
}

for ($i = 0; $i < 30; $i++) {
    swf_removeobject (50);
    if (($i%4) == 0) {
        swf_showframe ();
    }
}

swf_startdoaction ();
swf_actionstop ();
swf_enddoaction ();

swf_closefile ();
?>
     </programlisting>
    </example>
    このコードはアニメーションを生成し、<ulink
    url="&url.swf.test">url</ulink>で見ることができます。
   </para>
   <note>
    <para>
     SWFサポートはPHP 4 RC2で追加されました。
    </para>
    <para>
     libswf は、Windows でサポートされていません。このライブラリの開発
     は中止されており、他のシステムへ移植するためのソースは入手できま
     せん。
    </para>
   </note>
  </partintro>
  
  <refentry id="function.swf-openfile">
   <refnamediv>
    <refname>swf_openfile</refname>
    <refpurpose>
     新規にShockwave Flashファイルをオープンする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_openfile</function>
      </funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>float <parameter>width</parameter></paramdef>
      <paramdef>float <parameter>height</parameter></paramdef>
      <paramdef>float <parameter>framerate</parameter></paramdef>
      <paramdef>float <parameter>r</parameter></paramdef>
      <paramdef>float <parameter>g</parameter></paramdef>
      <paramdef>float <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_openfile</function>関数は、<parameter>filename</parameter>
     という名前の新しいファイルをオープンします。
     幅は<parameter>width</parameter>、高さは<parameter>height</parameter>、
     フレームレートは<parameter>framerate</parameter>、背景色は赤色が
     <parameter>r</parameter>、緑色が<parameter>g</parameter>、
     青色が<parameter>b</parameter>となります。
    </para>
    <para>
     <function>swf_openfile</function>は最初にコールする関数である必要
     があります。さもないと、セグメンテーションフォルトが発生します。
     出力を画面に送りたい場合には、filenameを"php://stdout"にして下さい。
     (この機能は4.0.1以降でサポートされました)
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-closefile">
   <refnamediv>
    <refname>swf_closefile</refname>
    <refpurpose>
     カレントのShockwave Flashファイルを閉じる
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_closefile</function>
      </funcdef>
      <paramdef>int
       <parameter>
	<replaceable><optional>return_file</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_openfile</function>関数によりオープンされたファイルを
     閉じます。パラメータ<parameter>return_file</parameter>が設定され
     ている場合、SWFファイルの内容が関数から返されます。
    </para>
    <para>
     <example>
      <title>
       ユーザの入力に基づき簡単なflashファイルを生成し、出力します。ま
       た、データベースにこれを保存します。
      </title>
      <programlisting role="php">
&lt;?php

// 変数$textはユーザにより投稿されます。

// データベースアクセス用のグローバル変数
// (swf_savedata()関数で使用)
$DBHOST = "localhost";
$DBUSER = "sterling";
$DBPASS = "secret";

swf_openfile ("php://stdout", 256, 256, 30, 1, 1, 1);

swf_definefont (10, "Ligon-Bold");
swf_fontsize (12);
swf_fontslant (10);
    
swf_definetext (11, $text, 1);
    
swf_pushmatrix ();
swf_translate (-50, 80, 0);
swf_placeobject (11, 60);
swf_popmatrix ();

swf_showframe ();
  
swf_startdoaction ();
swf_actionstop ();
swf_enddoaction ();

$data = swf_closefile (1);

$data ?
swf_savedata ($data) :
die ("Error could not save SWF file");

// void swf_savedata (string data)
// 後で取得できるように生成されたファイルをデータベースに保存します。
function swf_savedata ($data)
{
    global $DBHOST, 
           $DBUSER,
           $DBPASS;
    
    $dbh = @mysql_connect ($DBHOST, $DBUSER, $DBPASS);

    if (!$dbh) {
        die (sprintf ("Error [%d]: %s",
                      mysql_errno (), mysql_error ()));
    }

    $stmt = "INSERT INTO swf_files (file) VALUES ('$data')";

    $sth = @mysql_query ($stmt, $dbh);

    if (!$sth) {
        die (sprintf ("Error [%d]: %s",
                      mysql_errno (), mysql_error ()));
    }

    @mysql_free_result ($sth);
    @mysql_close ($dbh);
}
?>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-labelframe">
   <refnamediv>
    <refname>swf_labelframe</refname>
    <refpurpose>
     カレントのフレームにラベルを付ける
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_labelframe</function>
      </funcdef>
      <paramdef>string
       <parameter>name</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのフレームにパラメータ<parameter>name</parameter>で指定した名前を
     付けます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-showframe">
   <refnamediv>
    <refname>swf_showframe</refname>
    <refpurpose>
     カレントのフレームを表示する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_showframe</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数swf_showframeはカレントのフレームを出力します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-setframe">
   <refnamediv>
    <refname>swf_setframe</refname>
    <refpurpose>
     指定したフレームに切替える
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_setframe</function>
      </funcdef>
      <paramdef>int
       <parameter>framenumber</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_setframe</function>はアクティブなフレームを
     <parameter>framenumber</parameter>で指定したフレームに変更します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-getframe">
   <refnamediv>
    <refname>swf_getframe</refname>
    <refpurpose>
     カレントのフレームのフレーム番号を得る
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int
       <function>swf_getframe</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_getframe</function>はカレントのフレームの
     番号を得ます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-mulcolor">
   <refnamediv>
    <refname>swf_mulcolor</refname>
    <refpurpose>
     グローバル乗算色を指定したrbga値に設定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_mulcolor</function>
      </funcdef>
      <paramdef>float 
       <parameter>r</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>g</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>b</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>a</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_mulcolor</function>関数はグローバル乗算色を指定した
     <parameter>rgba</parameter>色に設定します。この色は、この後
     (暗黙の内に)関数<function>swf_placeobject</function>, 
     <function>swf_modifyobject</function>,<function>swf_addbuttonrecord</function>
     で使用されます。オブジェクトがスクリーンに描かれる時に
     オブジェクトの色に<parameter>rgba</parameter>値が掛けられます。
    </para>
    <note>
     <para>
      <parameter>rgba</parameter>値は正または負のどちらかとすることができます。
     </para>
    </note>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-addcolor">
   <refnamediv>
    <refname>swf_addcolor</refname>
    <refpurpose>
     グローバル加算色を指定したrbga値に設定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_addcolor</function>
      </funcdef>
      <paramdef>float 
       <parameter>r</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>g</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>b</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>a</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_addcolor</function>は、グローバル加算色を指定した
     <parameter>rgba</parameter>色に設定します。この色は、この後
     (暗黙の内に)関数<function>swf_placeobject</function>, 
     <function>swf_modifyobject</function>,<function>swf_addbuttonrecord</function>
     で使用されます。オブジェクトがスクリーンに描かれる時に
     オブジェクトの色に<parameter>rgba</parameter>値が加算されます。
    </para>
    <note>
     <para>
      <parameter>rgba</parameter>値は正または負のどちらかとすることができます。
     </para>
    </note>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-placeobject">
   <refnamediv>
    <refname>swf_placeobject</refname>
    <refpurpose>
     オブジェクトを画面に配置する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_placeobject</function>
      </funcdef>
      <paramdef>int 
       <parameter>objid</parameter>
      </paramdef>
      <paramdef>int 
       <parameter>depth</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>objid</parameter>で指定したオブジェクトを深さ<parameter>depth</parameter>
     でカレントのフレームに配置します。
     パラメータ<parameter>objid</parameter>と<parameter>depth</parameter>は
     1〜65535の間である必要があります。
    </para>
    <para>
     この関数は、(<function>swf_mulcolor</function>で指定した)カレントの乗算色および
     (<function>swf_addcolor</function>で指定した)カレントの加算色をオブジェクトに色づけ
     する際に使用します。また、オブジェクトの位置を決める際にカレントの行列を使用します。
    </para>
    <note>
     <para>
      RGBA色は完全にサポートされています。
     </para>
    </note>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-modifyobject">
   <refnamediv>
    <refname>swf_modifyobject</refname>
    <refpurpose>
     オブジェクトを修正する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_modifyobject</function>
      </funcdef>
      <paramdef>int
       <parameter>depth</parameter>
      </paramdef>
      <paramdef>int
       <parameter>how</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     オブジェクトの位置または/および色を指定した深さ<parameter>depth</parameter>
     に更新します。パラメータ<parameter>how</parameter>は更新するものを定義します。
     <parameter>how</parameter>は定数MOD_MATRIXまたはMOD_COLORまたは組み合わせたもの
     (MOD_MATRIX|MOD_COLOR)とすることが可能です。
    </para>
    <para>
     MOD_COLORは(関数<function>swf_mulcolor</function>で指定した)カレントの乗算色および
     (関数<function>swf_addcolor</function>で指定した)カレントの加算色をオブジェクトを塗る際
     に使用します。MOD_MATRIXはオブジェクトを配置する際にカレントの行列を使用します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-removeobject">
   <refnamediv>
    <refname>swf_removeobject</refname>
    <refpurpose>
     オブジェクトを削除する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_removeobject</function>
      </funcdef>
      <paramdef>int
       <parameter>depth</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>depth</parameter>で指定した深さのオブジェクトを削除します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-nextid">
   <refnamediv>
    <refname>swf_nextid</refname>
    <refpurpose>
     次の未使用のオブジェクトIDを返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int
       <function>swf_nextid</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_nextid</function>は次に利用可能なオブジェクトIDを返します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-startdoaction">
   <refnamediv>
    <refname>swf_startdoaction</refname>
    <refpurpose>
     カレントのフレームのアクションリストの記述を開始する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_startdoaction</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_startdoaction</function>はカレントのフレームの
     アクションリストの記述を開始します。この関数は、カレントのフレームのアクションが
     定義された後にコールする必要があります。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-actiongotoframe">
   <refnamediv>
    <refname>swf_actiongotoframe</refname>
    <refpurpose>
     フレームを実行した後、停止する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_actiongotoframe</function>
      </funcdef>
      <paramdef>int 
       <parameter>framenumber</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_actionGotoFrame</function>は<parameter>framenumber</parameter>
     で指定したフレームまで移動し、実行した後、停止します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-actiongeturl">
   <refnamediv>
    <refname>swf_actiongeturl</refname>
    <refpurpose>
     Shockwave FlashムービーからURLを得る
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_actiongeturl</function>
      </funcdef>
      <paramdef>string 
       <parameter>url</parameter>
      </paramdef>
      <paramdef>string
       <parameter>target</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_actionGetUrl</function>はターゲット<parameter>target</parameter>
     からパラメータ<parameter>url</parameter>で指定したURLを得ます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-actionnextframe">
   <refnamediv>
    <refname>swf_actionnextframe</refname>
    <refpurpose>
     フレームを一つ進める
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_actionnextframe</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     フレームを一つ進めます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-actionprevframe">
   <refnamediv>
    <refname>swf_actionprevframe</refname>
    <refpurpose>
     フレームを一つ戻す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_actionprevframe</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     フレームを一つ戻します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-actionplay">
   <refnamediv>
    <refname>swf_actionplay</refname>
    <refpurpose>
     カレントのフレームからflashムービーの実行を開始する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_actionplay</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのフレームからflashムービーを開始します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-actionstop">
   <refnamediv>
    <refname>swf_actionstop</refname>
    <refpurpose>
     カレントのフレームでflashムービーの実行を終了する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_actionstop</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのフレームでflashムービーの実行を終了します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-actiontogglequality">
   <refnamediv>
    <refname>swf_actiontogglequality</refname>
    <refpurpose>
     クオリティのローとハイを切替える
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
        <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_actiontogglequality</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     flashムービーでクオリティのハイとローを切替えます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-actionwaitforframe">
   <refnamediv>
    <refname>swf_actionwaitforframe</refname>
    <refpurpose>
     フレームがロードされていない場合にアクションをスキップする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_actionwaitforframe</function>
      </funcdef>
      <paramdef>int
       <parameter>framenumber</parameter>
      </paramdef>
      <paramdef>int
       <parameter>skipcount</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_actionWaitForFrame</function>は、パラメータ
     <parameter>framenumber</parameter>で指定したフレームがロードされている
     かどうかを確認し、ロードされていない場合はパラメータ<parameter>skipcount</parameter>
     で指定したアクションの数だけスキップします。
     この関数は "Loading..." 型のアニメーションの場合に有用です。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-actionsettarget">
   <refnamediv>
    <refname>swf_actionsettarget</refname>
    <refpurpose>
     アクションのコンテキストを設定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_actionsettarget</function>
      </funcdef>
      <paramdef>string
       <parameter>target</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_actionSetTarget</function>は全てのアクションの
     コンテキストを設定します。この関数を現在実行中の他のflashムービーを制御する
     ために使用することが可能です。
    </para>
   </refsect1>
  </refentry>
      
  <refentry id="function.swf-actiongotolabel">
   <refnamediv>
    <refname>swf_actiongotolabel</refname>
    <refpurpose>
     指定したラベルを有するフレームを表示する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_actiongotolabel</function>
      </funcdef>
      <paramdef>string 
       <parameter>label</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_actionGotoLabel</function>は<parameter>label</parameter>
     で指定したラベルを有するフレームを表示した後、停止します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-enddoaction">
   <refnamediv>
    <refname>swf_enddoaction</refname>
    <refpurpose>
     カレントのアクションを終了する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_enddoaction</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_startdoaction</function>で開始した
     カレントのアクションを終了します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-defineline">
   <refnamediv>
    <refname>swf_defineline</refname>
    <refpurpose>
     線を定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_defineline</function>
      </funcdef>
      <paramdef>int
       <parameter>objid</parameter>
      </paramdef>
      <paramdef>float
       <parameter>x1</parameter>
      </paramdef>
      <paramdef>float
       <parameter>y1</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>x2</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>y2</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>width</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_defineline</function>は、x座標をパラメータ<parameter>x1</parameter>、
     y座標を<parameter>y1</parameter>で指定した座標から線を引きます。
     線は、x座標を<parameter>x2</parameter>、y座標を<parameter>y2</parameter>で
     指定する点まで引かれます。
     幅をパラメータ<parameter>width</parameter>で定義することも可能です。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-definerect">
   <refnamediv>
    <refname>swf_definerect</refname>
    <refpurpose>
     長方形を定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_definerect</function>
      </funcdef>
      <paramdef>int
       <parameter>objid</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>x1</parameter>
      </paramdef>
      <paramdef>float
       <parameter>y1</parameter>
      </paramdef>
      <paramdef>float
       <parameter>x2</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>y2</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>width</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_definerect</function>は長方形を定義します。
     この際、左上隅の座標のxは<parameter>x1</parameter>、yは<parameter>y1</parameter>
     となります。右下隅の座標のxは<parameter>x2</parameter>、yは<parameter>y2</parameter>
     となります。
     長方形の輪郭の幅をパラメータ<parameter>width</parameter>で指定可能です。
     widthが0.0の場合、長方形は塗りつぶされます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-definepoly">
   <refnamediv>
    <refname>swf_definepoly</refname>
    <refpurpose>
     ポリゴンを定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_definepoly</function>
      </funcdef>
      <paramdef>int
       <parameter>objid</parameter>
      </paramdef>
      <paramdef>array
       <parameter>coords</parameter>
      </paramdef>
      <paramdef>int
       <parameter>npoints</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>width</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_definepoly</function>はx,y座標の配列で指定したポリゴンを定義します。
     (座標はパラメータ<parameter>coords</parameter>で定義します)
     パラメータ<parameter>npoints</parameter>は、
     <parameter>coords</parameter>で指定した配列に含まれる全ての点の数です。
     <parameter>width</parameter>は、ポリゴンの輪郭の幅で、0.0を設定した場合、
     ポリゴンは塗りつぶされます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-startshape">
   <refnamediv>
    <refname>swf_startshape</refname>
    <refpurpose>
     複雑な形状を開始する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_startshape</function>
      </funcdef>
      <paramdef>int
       <parameter>objid</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_startshape</function>は、パラメータ<parameter>objid</parameter>
     で指定したオブジェクトIDを用いて複雑な形状を開始します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-shapelinesolid">
   <refnamediv>
    <refname>swf_shapelinesolid</refname>
    <refpurpose>
     カレントの行のスタイルを設定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_shapelinesolid</function>
      </funcdef>
      <paramdef>float
       <parameter>r</parameter>
      </paramdef>
      <paramdef>float
       <parameter>g</parameter>
      </paramdef>
      <paramdef>float
       <parameter>b</parameter>
      </paramdef>
      <paramdef>float
       <parameter>a</parameter>
      </paramdef>
      <paramdef>float
       <parameter>width</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_shapeLineSolid</function>は、
     カレントの線のスタイルに関して色をパラメータ<parameter>rgba</parameter>に
     線幅をパラメータ<parameter>width</parameter>に設定します。
     widthに0.0が設定された場合、線は描画されません。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-shapefilloff">
   <refnamediv>
    <refname>swf_shapefilloff</refname>
    <refpurpose>
     塗りつぶしをオフにする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_shapefilloff</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_shapeFillOff</function>はカレントの形状において
     塗りつぶしをオフにします。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-shapefillsolid">
   <refnamediv>
    <refname>swf_shapefillsolid</refname>
    <refpurpose>
     カレントの塗りつぶし色を指定した色に設定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_shapefillsolid</function>
      </funcdef>
      <paramdef>float
       <parameter>r</parameter>
      </paramdef>
      <paramdef>float
       <parameter>g</parameter>
      </paramdef>
      <paramdef>float
       <parameter>b</parameter>
      </paramdef>
      <paramdef>float
       <parameter>a</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_shapeFillSolid</function>は、カレントの塗りつぶし形式を
     ソリッド(塗りつぶし有)にし、塗りつぶし色をパラメータ<parameter>rgba</parameter>
     の値にします。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-shapefillbitmapclip">
   <refnamediv>
    <refname>swf_shapefillbitmapclip</refname>
    <refpurpose>
     カレントの塗りつぶしモードをクリップ付きビットマップ
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_shapefillbitmapclip</function>
      </funcdef>
      <paramdef>int 
       <parameter>bitmapid</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     塗りつぶしをクリップ付きのビットマップに設定します。
     空いた部分はパラメータ<parameter>bitmapid</parameter>で指定したビットマップ
     で埋められます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-shapefillbitmaptile">
   <refnamediv>
    <refname>swf_shapefillbitmaptile</refname>
    <refpurpose>
     カレントの塗りつぶしモードをタイル状のビットマップに設定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_shapefillbitmaptile</function>
      </funcdef>
      <paramdef>int 
       <parameter>bitmapid</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     タイル状タイルでの塗りつぶしを設定します。空いた部分は、
     パラメータ<parameter>bitmapid</parameter>で指定したビットマップで
     (タイル状に)埋められます。
    </para>
   </refsect1>
  </refentry>
    
  <refentry id="function.swf-shapemoveto">
   <refnamediv>
    <refname>swf_shapemoveto</refname>
    <refpurpose>
     カレントの位置を移動する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_shapemoveto</function>
      </funcdef>
      <paramdef>float 
       <parameter>x</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>y</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_shapeMoveTo</function>は現在の位置をx座標を
     パラメータ<parameter>x</parameter>、y座標をパラメータ<parameter>y</parameter>
     とする位置に移動します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-shapelineto">
   <refnamediv>
    <refname>swf_shapelineto</refname>
    <refpurpose>
     線を描画する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_shapelineto</function>
      </funcdef>
      <paramdef>float 
       <parameter>x</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>y</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_shapeLineTo</function>は、パラメータ<parameter>x</parameter>、
     <parameter>y</parameter>で指定したx,y座標まで線を描きます。
     カレントの位置はパラメータx,yで設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-shapecurveto">
   <refnamediv>
    <refname>swf_shapecurveto</refname>
    <refpurpose>
     2点間に2次ベジエ曲線を描画する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_shapecurveto</function>
      </funcdef>
      <paramdef>float 
       <parameter>x1</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>y1</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>x2</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>y2</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_shapecurveto</function>は、
     x座標を<parameter>x1</parameter>、y座標を<parameter>y1</parameter>とする点から
     x座標を<parameter>x2</parameter>、y座標を<parameter>y2</parameter>とする点まで
     2次ベジエ曲線を描画します。この後、カレントの位置は
     x,y座標<parameter>x2</parameter>、<parameter>y2</parameter>の点になります。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-shapecurveto3">
   <refnamediv>
    <refname>swf_shapecurveto3</refname>
    <refpurpose>
     3次ベジエ曲線を描画する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_shapecurveto3</function>
      </funcdef>
      <paramdef>float 
       <parameter>x1</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>y1</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>x2</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>y2</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>x3</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>y3</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     x,y座標(<parameter>x1</parameter>,<parameter>y1</parameter>)から
     座標(<parameter>x2</parameter>,<parameter>y2</parameter>)曲線外の制御点として
     x,y座標(<parameter>x3</parameter>,<parameter>y3</parameter>)まで
     3次ベジエ曲線を描画します。この後、
     カレントの位置はx,y座標(<parameter>x3</parameter>,<parameter>y3</parameter>)
     に設定されます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-shapearc">
   <refnamediv>
    <refname>swf_shapearc</refname>
    <refpurpose>
     円弧を描画する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_shapearc</function>
      </funcdef>
      <paramdef>float 
       <parameter>x</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>y</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>r</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>ang1</parameter>
      </paramdef>
      <paramdef>float 
       <parameter>ang2</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_shapeArc</function>は、
     パラメータ<parameter>ang1</parameter>で指定した角度Aから
     パラメータ<parameter>ang2</parameter>で指定した角度Bまで
     円弧を描画します。
     円の中心は、x座標がパラメータ<parameter>x</parameter>、y座標がパラメータ
     <parameter>y</parameter>の点になります。
     円の半径はパラメータ<parameter>r</parameter>で指定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-endshape">
   <refnamediv>
    <refname>swf_endshape</refname>
    <refpurpose>
     カレントの形状の定義を完結する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_endshape</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_endshape</function>はカレントの形状の定義を完結します。
    </para>
   </refsect1>
  </refentry>
    
  <refentry id="function.swf-definefont">
   <refnamediv>
    <refname>swf_definefont</refname>
    <refpurpose>
     フォントを定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_definefont</function>
      </funcdef>
      <paramdef>int 
       <parameter>fontid</parameter>
      </paramdef>
      <paramdef>string 
       <parameter>fontname</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_definefont</function>は、パラメータ<parameter>fontname</parameter>
     で指定したフォントを定義し、パラメータ<parameter>fontid</parameter>で指定した
     IDに設定します。この関数は、<parameter>fontname</parameter>で指定したフォントを
     カレントのフォントに設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-setfont">
   <refnamediv>
    <refname>swf_setfont</refname>
    <refpurpose>
     カレントのフォントを変更する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_setfont</function>
      </funcdef>
      <paramdef>int 
       <parameter>fontid</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_setfont</function>はカレントのフォントをパラメータ
     <parameter>fontid</parameter>で指定した値に設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-fontsize">
   <refnamediv>
    <refname>swf_fontsize</refname>
    <refpurpose>
     フォントの大きさを変更する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_fontsize</function>
      </funcdef>
      <paramdef>float 
       <parameter>size</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_fontsize</function>は、パラメータ<parameter>size</parameter>
     により指定した値にフォントの大きさを変更します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-fontslant">
   <refnamediv>
    <refname>swf_fontslant</refname>
    <refpurpose>
     フォントの傾きを設定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_fontslant</function>
      </funcdef>
      <paramdef>float 
       <parameter>slant</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのフォントの傾きをパラメータ<parameter>slant</parameter>で指定した
     角度に設定します。正の値は前向きの傾きを生成し、負の値は負の傾きを生成します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-fonttracking">
   <refnamediv>
    <refname>swf_fonttracking</refname>
    <refpurpose>
     カレントのフォントのトラッキングを設定する
    </refpurpose>
   </refnamediv>
      <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_fonttracking</function>
      </funcdef>
      <paramdef>float 
       <parameter>tracking</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     パラメータ<parameter>tracking</parameter>で指定した値にフォントのトラッキングを
     設定します。この関数は、文字およびテキスト間の空白を増加させるために使用され、
     正の値は文字間の空白を増加させ、負の値は空白を減少させます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-getfontinfo">
   <refnamediv>
    <refname>swf_getfontinfo</refname>
    <refpurpose>
     大文字のAと小文字のxの高さをピクセル単位で得る
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array 
       <function>swf_getfontinfo</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_getfontinfo</function>は次のパラメータを有する連想配列を
     返します。
     <itemizedlist>
      <listitem>
       <simpara>
	Aheight -  大文字Aのピクセル単位の高さ。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	xheight -  小文字xのピクセル単位の高さ。
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-definetext">
   <refnamediv>
    <refname>swf_definetext</refname>
    <refpurpose>
     テキスト文字列を定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_definetext</function>
      </funcdef>
      <paramdef>int 
       <parameter>objid</parameter>
      </paramdef>
      <paramdef>string 
       <parameter>str</parameter>
      </paramdef>
      <paramdef>int 
       <parameter>docenter</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのフォントおよびフォントサイズを使用してテキスト文字列
     (パラメータ<parameter>str</parameter>)を定義します。
     <parameter>docenter</parameter>は単語のセンタリングを定義します。
     <parameter>docenter</parameter>が1の場合、単語はx方向にセンタリングされます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-textwidth">
   <refnamediv>
    <refname>swf_textwidth</refname>
    <refpurpose>
     文字列の幅を得る
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float 
       <function>swf_textwidth</function>
      </funcdef>
      <paramdef>string 
       <parameter>str</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_textwidth</function>は、カレントのフォントおよびフォントサイズ
     を用いて文字列<parameter>str</parameter>の幅をピクセル値で返します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-definebitmap">
   <refnamediv>
    <refname>swf_definebitmap</refname>
    <refpurpose>
     ビットマップを定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_definebitmap</function>
      </funcdef>
      <paramdef>int 
       <parameter>objid</parameter>
      </paramdef>
      <paramdef>string 
       <parameter>image_name</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_definebitmap</function>は指定したGIF,JPEG,RGB,FIイメージの
     ビットマップを定義します。
     イメージはFlash JPEGまたはFlashカラーマップフォーマットに変換されます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-getbitmapinfo">
   <refnamediv>
    <refname>swf_getbitmapinfo</refname>
    <refpurpose>
     ビットマップに関する情報を得る
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array 
       <function>swf_getbitmapinfo</function>
      </funcdef>
      <paramdef>int 
       <parameter>bitmapid</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_getbitmapinfo</function>は、パラメータ<parameter>bitmapid</parameter>
     で指定したビットマップに関する情報を配列として返します。
     返される配列は、次の要素を有しています。
     <itemizedlist>
      <listitem>
       <simpara>
	"size" -  ビットマップのバイト単位の大きさ。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"width" -  ビットマップのピクセル単位の幅。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	"height" -  ビットマップのピクセル単位の高さ。
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-startsymbol">
   <refnamediv>
    <refname>swf_startsymbol</refname>
    <refpurpose>
     シンボルを定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_startsymbol</function>
      </funcdef>
      <paramdef>int 
       <parameter>objid</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     シンボルとしてオブジェクトIDを定義します。シンボルは、同時に実行可能な
     小さなflashムービーです。パラメータ<parameter>objid</parameter>は
     シンボルとして定義しようとするオブジェクトのIDです。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-endsymbol">
   <refnamediv>
    <refname>swf_endsymbol</refname>
    <refpurpose>
     シンボルの定義を終了する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_endsymbol</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_endsymbol</function>は、関数<function>swf_startsymbol</function>
     で開始したシンボルの定義を終了します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-startbutton">
   <refnamediv>
    <refname>swf_startbutton</refname>
    <refpurpose>
     ボタンの定義を開始する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_startbutton</function>
      </funcdef>
      <paramdef>int 
       <parameter>objid</parameter>
      </paramdef>
      <paramdef>int 
       <parameter>type</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_startbutton</function>は、ボタンの定義を開始します。
     パラメータ<parameter>type</parameter>にはTYPE_MENUBUTTONまたはTYPE_PUSHBUTTONを
     を指定可能です。定数TYPE_MENUBUTTONはマウスを押した時にボタンからフォーカスを
     移すことを可能とし、TYPE_PUSHBUTTONはマウスが押された時にフォーカスを移動する
     ことを可能としません。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-addbuttonrecord">
   <refnamediv>
    <refname>swf_addbuttonrecord</refname>
    <refpurpose>
     カレントのボタンの位置、外観、アクティブエリアを制御する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_addbuttonrecord</function>
      </funcdef>
      <paramdef>int <parameter>states</parameter></paramdef>
      <paramdef>int <parameter>shapeid</parameter></paramdef>
      <paramdef>int <parameter>depth</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_addbuttonrecord</function>によりボタンを使用す
     る際の仕様を定義することが可能です。最初のパラメータ
     <parameter>states</parameter>はボタンが有する状態を定義し、定数
     BSHitTest,BSDown,BSOver,BSUpのどれかまたは全てとすることが可能で
     す。2番目のパラメータ<parameter>shapeid</parameter>はボタンの形状
     であり、通常はボタンの形状のオブジェクトIDです。パラメータ
     <parameter>depth</parameter>は、カレントのフレームにおけるボタン
     の位置です。
     <example>
      <title>
       関数<function>swf_addbuttonrecord</function>の例
      </title>
      <programlisting role="php">
swf_startButton ($objid, TYPE_MENUBUTTON);
swf_addButtonRecord (BSDown|BSOver, $buttonImageId, 340);
swf_onCondition (MenuEnter);
swf_actionGetUrl ("http://www.designmultimedia.com", "_level1");
swf_onCondition (MenuExit);
swf_actionGetUrl ("", "_level1");
swf_endButton ();
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-oncondition">
   <refnamediv>
    <refname>swf_oncondition</refname>
    <refpurpose>
     アクションリストのトリガとして使用されるトランジションを定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_oncondition</function>
      </funcdef>
      <paramdef>int
       <parameter>transition</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_onCondition</function>は、アクションリストのトリガとなる
     トランジションを定義します。使用可能なトランジションの型は複数あり、
     TYPE_MENUBUTTONとして定義されたボタンについては次のものがあります。

     <itemizedlist>
      <listitem>
       <simpara>
	IdletoOverUp
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OverUptoIdle
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OverUptoOverDown
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OverDowntoOverUp
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	IdletoOverDown
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OutDowntoIdle
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	MenuEnter (IdletoOverUp|IdletoOverDown)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	MenuExit (OverUptoIdle|OverDowntoIdle)
       </simpara>
      </listitem>
     </itemizedlist>
     
     TYPE_PUSHBUTTON用としては、次のオプションがあります。
     
     <itemizedlist>
      <listitem>
       <simpara>
	IdletoOverUp
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OverUptoIdle
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OverUptoOverDown
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OverDowntoOverUp
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OverDowntoOutDown
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OutDowntoOverDown
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OutDowntoIdle
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	ButtonEnter (IdletoOverUp|OutDowntoOverDown)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	ButtonExit  (OverUptoIdle|OverDowntoOutDown)
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-endbutton">
   <refnamediv>
    <refname>swf_endbutton</refname>
    <refpurpose>
     カレントのボタンの定義を終了する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_endbutton</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_endButton</function>はカレントのボタンの定義を終了します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-viewport">
   <refnamediv>
    <refname>swf_viewport</refname>
    <refpurpose>
     描画を行う範囲を選択する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_viewport</function>
      </funcdef>
      <paramdef>double 
       <parameter>xmin</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>xmax</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>ymin</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>ymax</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_viewport</function>は描画の範囲として<parameter>xmin</parameter>から
     <parameter>xmax</parameter>、<parameter>ymin</parameter>から<parameter>ymax</parameter>
     までを選択します。
     この関数がコールされない場合、描画範囲はデフォルトとして画面の大きさになります。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-ortho">
   <refnamediv>
    <refname>swf_ortho</refname>
    <refpurpose>
     カレントのビューポートにおけるユーザー座標の直交マッピングを定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_ortho</function>
      </funcdef>
      <paramdef>double 
       <parameter>xmin</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>xmax</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>ymin</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>ymax</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>zmin</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>zmax</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_ortho</function>は、ユーザ座標の直交マッピングをカレントの
     ビューポートに定義します。
    </para>
   </refsect1>
  </refentry>
    
  <refentry id="function.swf-ortho2">
   <refnamediv>
    <refname>swf_ortho2</refname>
    <refpurpose>
     ユーザ座標の2D直交マッピングをカレントのビューポイントに定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_ortho2</function>
      </funcdef>
      <paramdef>double 
       <parameter>xmin</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>xmax</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>ymin</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>ymax</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_ortho2</function>は、ユーザ座標の2次元直交マッピングを
     カレントのビューポートに定義します。この関数は、デフォルトを
     Flashムービーの1対1のマッピングとします。遠近法による
     変換を望む場合、関数<function>swf_perspective</function>を使用することが可能です。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-perspective">
   <refnamediv>
    <refname>swf_perspective</refname>
    <refpurpose>
     遠近法による投影変換を定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_perspective</function>
      </funcdef>
      <paramdef>double 
       <parameter>fovy</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>aspect</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>near</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>far</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_perspective</function>は、遠近法による投影変換を定義します。
     パラメータ<parameter>fovy</parameter>は、y方向の視野角です。
     パラメータ<parameter>aspect</parameter>は、描画領域のビューポートのアスペクト比
     を指定します。パラメータ<parameter>near</parameter>は近いクリッピング面であり、
     パラメータ<parameter>far</parameter>は遠いクリッピング面です。
    </para>
    <note>
     <para>
      遠近法による投影を行う際には、様々な歪み効果が現れる可能性があります。
      これは、Flashプレイヤーが有しているのは二次元行列のみだからです。
      きれいに投影されないケースもあります。
     </para>
    </note>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-polarview">
   <refnamediv>
    <refname>swf_polarview</refname>
    <refpurpose>
     極座標で視点を定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_polarview</function>
      </funcdef>
      <paramdef>double 
       <parameter>dist</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>azimuth</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>incidence</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>twist</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_polarview</function>は極座標の視点を定義する。
     パラメータ<parameter>dist</parameter>には、視点とワールド空間の原点との距離
     を指定します。
     パラメータ<parameter>azimuth</parameter>はx,y平面におけるアジマス角を定義し、
     y軸からの距離で表します。
     パラメータ<parameter>incidence</parameter>は、y,z平面における傾斜角を
     定義し、z軸から測った距離で表します。
     傾斜角は、z軸に関するビューポートの角度として定義されます。
     最後に<parameter>twist</parameter>は、右手則を用いて視線方向に関して
     視点を回転させる量を指定します。
    </para>
   </refsect1>
  </refentry>
    
  <refentry id="function.swf-lookat">
   <refnamediv>
    <refname>swf_lookat</refname>
    <refpurpose>
     視点変換を定義する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>swf_lookat</function>
      </funcdef>
      <paramdef>double 
       <parameter>view_x</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>view_y</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>view_z</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>reference_x</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>reference_y</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>reference_z</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>twist</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_lookat</function>は、
     視点の位置(パラメータ<parameter>view_x</parameter>,<parameter>view_y</parameter>,
     <parameter>view_z</parameter>)およびシーンの基準点の座標
     を指定することにより視点変換を定義します。
     基準点は、パラメータ<parameter>reference_x</parameter>, 
     <parameter>reference_y</parameter>, <parameter>reference_z</parameter>で定義されます。
     <parameter>twist</parameter>は視点のz軸に関する回転を制御します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-pushmatrix">
   <refnamediv>
    <refname>swf_pushmatrix</refname>
    <refpurpose>
     カレントの変換行列をスタックに入れる
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_pushmatrix</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_pushmatrix</function>はカレントの変換行列を
     スタックに入れます。
    </para>
   </refsect1>
  </refentry>
    
  <refentry id="function.swf-popmatrix">
   <refnamediv>
    <refname>swf_popmatrix</refname>
    <refpurpose>
     以前の変換行列を回復する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_popmatrix</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_popmatrix</function>はカレントの変換行列を
     スタックから回復します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-scale">
   <refnamediv>
    <refname>swf_scale</refname>
    <refpurpose>
     カレントの変換をスケリーングする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_scale</function>
      </funcdef>
      <paramdef>double 
       <parameter>x</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>y</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>z</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_scale</function>は、
     パラメータ<parameter>x</parameter>の値により曲線のx座標をスケーリング、
     パラメータ<parameter>y</parameter>の値により曲線のy座標をスケーリング、
     パラメータ<parameter>z</parameter>の値により曲線のz座標をスケーリングします。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-translate">
   <refnamediv>
    <refname>swf_translate</refname>
    <refpurpose>
     カレントの座標軸を変換する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_translate</function>
      </funcdef>
      <paramdef>double 
       <parameter>x</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>y</parameter>
      </paramdef>
      <paramdef>double 
       <parameter>z</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_translate</function>は、指定した<parameter>x</parameter>, 
     <parameter>y</parameter>, and <parameter>z</parameter>の値でカレントの座標を変換します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-rotate">
   <refnamediv>
    <refname>swf_rotate</refname>
    <refpurpose>
     カレントの座標を回転する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_rotate</function>
      </funcdef>
      <paramdef>double 
       <parameter>angle</parameter>
      </paramdef>
      <paramdef>string 
       <parameter>axis</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>swf_rotate</function>は、
     パラメータ<parameter>angle</parameter>で指定した角度だけ、
     パラメータ<parameter>axis</parameter>で指定した座標軸の周りに
     カレントの座標軸を回転します。axisとして有効な値は'x'(x軸)、'y'(y軸)、'z'(z軸)です。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.swf-posround">
   <refnamediv>
    <refname>swf_posround</refname>
    <refpurpose>
     オブジェクトを配置または移動する際の変換時の丸め処理を有効または無効にする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>swf_posround</function>
      </funcdef>
      <paramdef>int 
       <parameter>round</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>swf_posround</function>は、
     オブジェクトを配置または移動する際に行う変換時の丸め処理を有効または無効にします。
     丸めが有効になると読みやすくなる場合が多いです。
     <parameter>round</parameter>により丸める操作の有無を指定します。
     この値を1にした場合に丸めが有効になり、0にした場合に丸めが無効になります。
    </para>
   </refsect1>
  </refentry>
</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->