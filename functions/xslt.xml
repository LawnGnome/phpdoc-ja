<?xml version="1.0" encoding="utf-8"?>
 <reference id="ref.xslt">
  <title>XSLT 関数</title>
  <titleabbrev>XSLT</titleabbrev>
  
  <partintro>
   &warn.experimental;
   <sect1 id="xslt.partintro">
    <title>導入</title>

    <sect2 id="xslt.intro">
     <title>XSLT と Sablotronについて</title>
     <para>
      XSLT (Extensible Stylesheet Language (XSL)
      Transformations) は、XMLドキュメントを他のXMLドキュメントに変換
      する言語です。XSLTは、World Wide Web コンソーシアム (W3C) により
      標準化されています。XSLTに関する情報と関連技術については、
      <ulink url="&url.xslt;">&url.xslt;</ulink> から得ることができま
      す。
     </para>
    </sect2>

    <sect2 id="xslt.install">
     <title>インストール</title>
     <para>
      この拡張モジュールは、<productname>Sabloton</productname>および
      <productname>expat</productname> を使用します。これらは、共に
      <ulink url="&url.sablotron;">&url.sablotron;</ulink>から得ること
      が可能です。 実行バイナリがソースコードと同様に配布されています。
     </para>
     <para>
      UNIXでは、オプション <option
      role="configure">--with-sablot</option> を指定して
      <command>configure</command> を実行します。ライブラリ
      <productname>Sablotron</productname> をコンパイラが見付けられる
      場所にインストールする必要があります。
     </para>
    </sect2>
    
    <sect2 id="xslt.about">
     <title>この拡張モジュールについて</title>
     <para>
      この PHP 拡張モジュールは、Ginger Alliance が開発した 
      <productname>Sablotron</productname> のサポートを PHP に実装しま
      す。このツールキットにより XMLドキュメントを新しいXMLドキュメン
      トを含む他のドキュメントに変換することが可能になります。この出力
      フォーマットには、HTMLまたは他のターゲットフォーマットも含まれま
      す。XSLTは、基本的にWebサイトのコンテンツとデザインを分離する標
      準化され、ポータブルなテンプレート機構を提供するものです。
     </para>
    </sect2>

   </sect1>
  </partintro>

  <refentry id="function.xslt-closelog">
   <refnamediv>
    <refname>xslt_closelog</refname>
    <refpurpose>
     指定した Sablotron インスタンス用のログファイルをクリアする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_closelog</function></funcdef>
      <paramdef>resource <parameter>xh</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     <variablelist>
      <varlistentry>
       <term><parameter>xh</parameter></term>
       <listitem>
	<simpara>
	 XSLT パーサへのリファレンス。
	</simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     この関数は、<parameter>parser</parameter> が有効なパーサを参照し
     ないか、ログファイルをクローズに失敗した場合に &false; を返します。
     その他の場合に &true; を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-create">
   <refnamediv>
    <refname>xslt_create</refname>
    <refpurpose>新規のXSLTプロセッサを作成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>xslt_create</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     この関数は、新規のXSLTプロセッサへのハンドルを返します。このハン
     ドルは、この後に使用する全てのXSLT関数をコールする際に必要です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-errno">
   <refnamediv>
    <refname>xslt_errno</refname>
    <refpurpose>カレントエラー番号を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>xslt_errno</function></funcdef>
      <paramdef>resource <parameter>xh</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     指定したXSLTプロセッサについてカレントのエラー番号を返します。ハ
     ンドルが指定されていない場合、どこかで発生した直近のエラー番号が
     返されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-error">
   <refnamediv>
    <refname>xslt_error</refname>
    <refpurpose>カレントのエラー文字列を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>xslt_error</function></funcdef>
      <paramdef>resource <parameter>xh</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     指定したXSLTプロセッサについてカレントのエラー文字列を返します。
     ハンドラが指定されない場合、どこかで発生した直近のエラー文字列が
     返されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-fetch-result">
   <refnamediv>
    <refname>xslt_fetch_result</refname>
    <refpurpose>(名前のある)結果バッファを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>xslt_fetch_result</function></funcdef>
      <paramdef>resource <parameter>xh</parameter></paramdef>
      <paramdef>string <parameter>result_name</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     ハンドルにより指定したXSLTプロセッサから結果バッファを取得します。
     <parameter>result_name</parameter> が指定されない場合、
     &quot;/_result&quot; という名前のバッファが取得されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-free">
   <refnamediv>
    <refname>xslt_free</refname>
    <refpurpose>XSLT プロセッサを開放する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>xslt_free</function></funcdef>
       <paramdef>resource <parameter>xh</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     ハンドルで指定したXSLTプロセッサを開放します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-openlog">
   <refnamediv>
    <refname>xslt_openlog</refname>
    <refpurpose>
     XSLTプロセッサのメッセージ用のログファイルを設定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_openlog</function></funcdef>
      <paramdef>resource <parameter>xh</parameter></paramdef>
      <paramdef>string <parameter>logfile</parameter></paramdef>
      <paramdef>int <parameter>loglevel</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     XSLT プロセッサのエラーメッセージを全て記録するログファイルを設定
     します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-output-begintransform">
   <refnamediv>
    <refname>xslt_output_begintransform</refname>
    <refpurpose>出力の XSLT 変換を開始する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void 
       <function>xslt_output_begintransform</function>
      </funcdef>
      <paramdef>string <parameter>xslt_filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     この関数は、データ出力の変換を開始します。
     <function>xslt_output_begintransform</function> をコールした場所
     から、<function>xslt_output_endtransform</function> をコールした
     場所まで、最初の引数で指定したXSLTスタイルシートにより全ての出力
     は変換されます。
    </para>
    <para>
     <example>
      <title>
       XSLTスタイルシートによる出力の変換、xml 生成用にDOM-XML関数を使
       用する
      </title>
      <programlisting role="php">
&lt;?php

$xsl_file = "article.xsl";
xslt_output_begintransform($xsl_file);

$doc = new_xmldoc('1.0');
$article = $doc->new_root('article');

$article->new_child('title', 'The History of South Tyrol');
$article->new_child('author', 'Sterling Hughes');
$article->new_child('body', 'Back after WWI, Italy gained South Tyrol from 
                             Austria.  Since that point nothing interesting has
                             happened');

echo $doc->dumpmem();

xslt_output_endtransform();
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-output-endtransform">
   <refnamediv>
    <refname>xslt_output_endtransform</refname>
    <refpurpose>
     xslt_output_begintransformで開始した出力の変換を終了する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>xslt_output_endtransform</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     <function>xslt_output_endtransform</function> は、
     <function>xslt_output_begintransform</function> 関数で開始した出力の変換を
     終了します。出力の変換の結果を見るためには、この関数をコールする
     必要があります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-process">
   <refnamediv>
    <refname>xslt_process</refname>
    <refpurpose>XSLデータを有する文字列によりXMLデータを変換する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool 
       <function>xslt_process</function>
      </funcdef>
       <paramdef>string <parameter>xsl_data</parameter></paramdef>
       <paramdef>string <parameter>xml_data</parameter></paramdef>
       <paramdef>string <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     <function>xslt_process</function> は、XSLT スタイルシートを有する
     文字列を最初の引数、変換したいXMLデータを有する文字列を2番目の引
     数、変換結果を有する文字列を3番目の引数とします。
     <function>xslt_process</function> は、成功時に &true;、失敗時に
     &false; を返します。エラーが発生した場合にエラー番号とエラー文字列
     を得るには、関数 <function>xslt_errno</function> および
     <function>xslt_error</function> を使用して下さい。
    </para>
    <para>
     <example>
      <title>
       3つの文字列を変換するために <function>xslt_process</function>
       を使用する
      </title>
      <programlisting role="php">
&lt;?php

$xslData = '&lt;xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="article"&gt;
    &lt;table border="1" cellpadding="2" cellspacing="1"&gt;
        &lt;tr&gt;
            &lt;td width="20%"&gt;
             &amp;#160;
            &lt;/td&gt;
            &lt;td width="80%"&gt;
                &lt;h2&gt;&lt;xsl:value-of select="title"/&gt;&lt;/h2&gt;
                &lt;h3&gt;&lt;xsl:value-of select="author"/&gt;&lt;/h3&gt;
                &lt;br/&gt;
                
                &lt;xsl:copy-of select="p"/&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;';

$xmlData = '&lt;?xml version="1.0"?&gt;
&lt;article&gt;
    &lt;title&gt;Learning German&lt;/title&gt;
    &lt;author&gt;Sterling Hughes&lt;/author&gt;
    &lt;p&gt;
        Essential phrases:
        &lt;br/&gt;
        K&amp;#246;nnen Sie mir sagen, wo die Toilette ist?&lt;br/&gt;
        Ein grosses Bier, bitte!&lt;br/&gt;
        Noch eins, bitte.&lt;br/&gt;
    &lt;/p&gt;
&lt;/article&gt;';

if (xslt_process($xslData, $xmlData, $result)) {
    echo "Here is the brilliant in-depth article on learning";
    echo " German: ";
    echo "&lt;br>\n&lt;br>";
    echo $result;
} else {
    echo "There was an error that occurred in the XSL transformation...\n";
    echo "\tError number: " . xslt_errno() . "\n";
    echo "\tError string: " . xslt_error() . "\n";
    exit;
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-run">
   <refnamediv>
    <refname>xslt_run</refname>
    <refpurpose>XSLTスタイルシートをファイルに適用する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_run</function></funcdef>
      <paramdef>resource <parameter>xh</parameter></paramdef>
      <paramdef>string <parameter>xslt_file</parameter></paramdef>
      <paramdef>string <parameter>xml_data_file</parameter></paramdef>
      <paramdef>string <parameter>result</parameter></paramdef>
      <paramdef>array <parameter>xslt_params</parameter></paramdef>
      <paramdef>array <parameter>xslt_args</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     xslt_file スタイルシートを適用することにより xml_data_file を処理
     する。スタイルシートは xslt_params にアクセスし、プロセッサは
     xslt_args を指定して開始されます。XSLT変換の結果は、名前のあるバッ
     ファ(デフォルトは &quot;/_result&quot;)に置かれます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-set-sax-handler">
   <refnamediv>
    <refname>xslt_set_sax_handler</refname>
    <refpurpose>XSLTプロセッサに SAX ハンドラを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_set_sax_handler</function></funcdef>
      <paramdef>resource <parameter>xh</parameter></paramdef>
      <paramdef>array <parameter>handlers</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     <parameter>xh</parameter>で指定したリソースハンドルにSAX ハンドラ
     を設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-transform">
   <refnamediv>
    <refname>xslt_transform</refname>
    <refpurpose>XSLT 変換を実行する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool
       <function>xslt_transform</function>
      </funcdef>
      <paramdef>string <parameter>xsl</parameter></paramdef>
      <paramdef>string <parameter>xml</parameter></paramdef>
      <paramdef>string <parameter>result</parameter></paramdef>
      <paramdef>string <parameter>params</parameter></paramdef>
      <paramdef>string <parameter>args</parameter></paramdef>
      <paramdef>string <parameter>resultBuffer</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    &warn.experimental.func;
    <para>
     <function>xslt_transform</function> は、リソースAPIを使用すること
     なく、Sablotron のより高度な機能へのインターフェースを提供します。
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
