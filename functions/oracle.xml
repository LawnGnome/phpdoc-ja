 <reference id="ref.oracle">
  <title>Oracle 関数</title>
  <titleabbrev>Oracle</titleabbrev>

  <refentry id="function.ora-bind">
   <refnamediv>
    <refname>Ora_Bind</refname>
    <refpurpose> PHP変数を Oracle パラメータへバインドします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_bind</function></funcdef>
     <paramdef>int <parameter>cursor</parameter></paramdef>
     <paramdef>string <parameter>PHP variable name</parameter></paramdef>
     <paramdef>string <parameter>SQL parameter name</parameter></paramdef>
     <paramdef>int <parameter>length</parameter></paramdef>
     <paramdef>int <parameter><optional>type</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     バインドに成功した場合に true を、そうでなければ、falseを返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。</para>
    <para>
     この関数は PHP variable name とSQL parameter nameをバインドします。
     SQLパラメータは":name"の形になっていなければなりません。
     オプションのtypeパラメータを用いて、SQLパラメータが、入出力
     (0でデフォルト)か入力(1)か出力(2)パラメータかを定義できます。
     PHP 3.0.1 では、数字の代わりに、定数ORA_BIND_INOUT、
     ORA_BIND_INそしてORA_BIND_OUTを使うことができます。</para>
    <para>
     ora_bind は <function>ora_parse</function>の後で
     <function>ora_exec</function>の前に呼び出されなくてはなりません。
     入力値は、可能であれば出力値を含むバインドしたPHP 変数で、
     <function>ora_exec</function>を呼び出した後、バインドしたPHP変数に
     割り付けることによって与えることができます。

<informalexample>
      <programlisting role="php">
&lt;?php
ora_parse($curs, "declare tmp INTEGER; begin tmp := :in; :out := tmp; :x := 7.77; end;");
ora_bind($curs, "result", ":x", $len, 2);
ora_bind($curs, "input", ":in", 5, 1);
ora_bind($curs, "output", ":out", 5, 2);
$input = 765;
ora_exec($curs);
echo "Result: $result&lt;BR>Out: $output&lt;BR>In: $input";
?>
</programlisting>
     </informalexample></para>

   </refsect1>
  </refentry>

  <refentry id="function.ora-close">
   <refnamediv>
    <refname>Ora_Close</refname>
    <refpurpose>Oracle カーソルをクローズします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_close</function></funcdef>
     <paramdef>int <parameter>cursor</parameter></paramdef>
    </funcsynopsis>
    <para>
     クローズが成功すればtrueを、そうでなければfalseを返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。</para>
    <para>
     この関数は、<function>ora_open</function>でオープンされた
     データカーソルをクローズします。</para>
   </refsect1>
  </refentry>


  <refentry id="function.ora-columnname">
   <refnamediv>
    <refname>Ora_ColumnName</refname>
    <refpurpose>Oracleのカラムの名前を取得します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>Ora_ColumnName</function></funcdef>
     <paramdef>int <parameter>cursor</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcsynopsis>
    <para>
     カーソル <parameter>cursor</parameter>上の、フィールド/カラム
     <parameter>column</parameter>の名前を返します。
     返された名前は全て大文字です。</para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-columntype">
   <refnamediv>
    <refname>Ora_ColumnType</refname>
    <refpurpose>Oracleのカラムの型を取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>Ora_ColumnType</function></funcdef>
     <paramdef>int <parameter>cursor</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcsynopsis>
    <para>
     カーソル<parameter>cursor</parameter>上の、フィールド/カラム
     <parameter>column</parameter>のOracleデータ型名を返します。
     返された型名は、次のどれかになるでしょう：
     <simplelist>
      <member><literal>"VARCHAR2"</literal></member>
      <member><literal>"VARCHAR"</literal></member>
      <member><literal>"CHAR"</literal></member>
      <member><literal>"NUMBER"</literal></member>
      <member><literal>"LONG"</literal></member>
      <member><literal>"LONG RAW"</literal></member>
      <member><literal>"ROWID"</literal></member>
      <member><literal>"DATE"</literal></member>
      <member><literal>"CURSOR"</literal></member>
     </simplelist></para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-commit">
   <refnamediv>
    <refname>Ora_Commit</refname>
    <refpurpose>Oracleトランザクションのコミット</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_commit</function></funcdef>
     <paramdef>int <parameter>conn</parameter></paramdef>
    </funcsynopsis>
    <para>
     成功すればtrueを、エラーであればfalseを返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。</para>
    <para>
     この関数は、各々の<function>ora_exec</function>後、
     自動コミットをオフにします。</para>
   </refsect1>
  </refentry>


  <refentry id="function.ora-commiton">
   <refnamediv>
    <refname>Ora_CommitOn</refname>
    <refpurpose>自動コミット有効</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_commiton</function></funcdef>
     <paramdef>int <parameter>conn</parameter></paramdef>
    </funcsynopsis>
    <para>
     この関数は、与えられた接続上で各々の<function>ora_exec</function>後、
     自動コミットをオンにします。</para>
    <para>
     成功の場合はtrueを、エラーの場合はfalseを返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。</para>
   </refsect1>
  </refentry>


  <refentry id="function.ora-error">
   <refnamediv>
    <refname>Ora_Error</refname>
    <refpurpose>Oracleエラーメッセージの取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>Ora_Error</function></funcdef>
     <paramdef>int <parameter>cursor_or_connection</parameter></paramdef>
    </funcsynopsis>
    <para>
     <replaceable>XXX</replaceable>-<replaceable>NNNNN</replaceable>
     という形式のエラーメッセージが返されます。ここで、
     <replaceable>XXX</replaceable>は何処からエラーが発生したか、
     <replaceable>NNNNN</replaceable>はエラーメッセージを識別します。
    <note>
     <para>接続IDのサポートは、3.0.4 で追加されました。</para>
    </note></para>
    <para>
     UNIX版のOracle上で、以下のようなエラーメッセージの詳細を見つける
     ことができます。:<computeroutput>
    <prompt>$</prompt> <userinput>oerr ora <replaceable>00001</replaceable></userinput> 00001, 00000,
"unique constraint (%s.%s) violated" // *Cause: An update or insert
statement attempted to insert a duplicate key //         For Trusted
ORACLE configured in DBMS MAC mode, you may see //         this message
if a duplicate entry exists at a different level.  // *Action: Either
remove the unique restriction or do not insert the key </computeroutput></para>

   </refsect1>
  </refentry>


  <refentry id="function.ora-errorcode">
   <refnamediv>
    <refname>Ora_ErrorCode</refname>
    <refpurpose>Oracleエラーコードの取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>Ora_ErrorCode</function></funcdef>
     <paramdef>int <parameter>cursor_or_connection</parameter></paramdef>
    </funcsynopsis>
    <para>
     指定したカーソルまたは接続において最後に実行したステートメントの
	エラーコード
     番号を返します。 <comment>FIXME: 可能性のある値を表示
     すべきでしょうか？</comment>
    <note>
     <para>接続IDのサポートは、3.0.4 で追加されました。</para>
    </note></para>

   </refsect1>
  </refentry>


  <refentry id="function.ora-exec">
   <refnamediv>
    <refname>Ora_Exec</refname>
    <refpurpose>Oracleカーソル上でのパースしたステートメントの実行</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_exec</function></funcdef>
     <paramdef>int <parameter>cursor</parameter></paramdef>
    </funcsynopsis>
    <para>
     成功したら、TRUE を、そうでなければ、FALSE を返します。
     エラーについての詳細は、<function>ora_error</function>
     および<function>ora_errorcode</function>関数を用いて
     調べられます。</para>
   </refsect1>
  </refentry>


  <refentry id="function.ora-fetch">
   <refnamediv>
    <refname>Ora_Fetch</refname>
    <refpurpose>カーソルからデータ列の取り出し</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_fetch</function></funcdef>
     <paramdef>int <parameter>cursor</parameter></paramdef>
    </funcsynopsis>
    <para>
     (列が取り出されれば)trueもしくは(取り出す列がもうないか、
     エラーが発生した場合)falseを返します。エラーが発生したら、
     詳細は<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べることが
     できます。エラーがなければ、<function>ora_errorcode</function>は
     0を返すでしょう。指定したカーソルからデータ列を探索します。</para>
   </refsect1>
  </refentry>


  <refentry id="function.ora-getcolumn">
   <refnamediv>
    <refname>Ora_GetColumn</refname>
    <refpurpose>取り出した列からデータの取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>mixed <function>ora_getcolumn</function></funcdef>
     <paramdef>int <parameter>cursor</parameter></paramdef>
     <paramdef>mixed <parameter>column</parameter></paramdef>
    </funcsynopsis>
    <para>
     カラムデータを返します。エラーが発生すればfalseを返し、
     <function>ora_errorcode</function>は0以外の値を返すでしょう。
     しかしながら、この関数の結果がfalseとなる試験は、エラーでない
     ほうがいい場合(返り値がヌル、空白文字列、数字の0、文字列の"0")
     にはtrueになるかもしれないことに注意してください。
     カラムのデータもしくは関数の結果を取り出します。</para>
   </refsect1>
  </refentry>


  <refentry id="function.ora-logoff">
   <refnamediv>
    <refname>Ora_Logoff</refname>
    <refpurpose>Oracle接続のクローズ</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_logoff</function></funcdef>
     <paramdef>int <parameter>connection</parameter></paramdef>
    </funcsynopsis>
    <para>
     成功の場合はtrueを、エラーの場合はfalseを返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。
     ユーザログアウトとサーバからの接続を切ります。</para>
   </refsect1>
  </refentry>


  <refentry id="function.ora-logon">
   <refnamediv>
    <refname>Ora_Logon</refname>
    <refpurpose>Oracle接続のオープン</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_logon</function></funcdef>
     <paramdef>string <parameter>user</parameter></paramdef>
     <paramdef>string <parameter>password</parameter></paramdef>
    </funcsynopsis>
    <para>
     与えられたユーザ名とパスワードを用いて、PHPとOracleデータベースの
     接続を確立します。</para>
    <para>
    次のように <acronym>TNS</acronym> 名を <parameter>user</parameter> 
    に与えることにより、接続は
    <productname>SQL*Net</productname> を用いて作成されます。
      <informalexample>
       <programlisting role="php">
 $conn = Ora_Logon("user<emphasis>@TNSNAME</emphasis>", "pass");
 </programlisting>
      </informalexample></para>
 
     <para>
     非アスキー文字を含む文字データがある場合、
      環境変数 <envar>NLS_LANG</envar> を設定する必要があります。
      サーバーモジュールの場合、サーバーの起動前に
      サーバーの環境変数として設定する必要があります。</para>
 
     <para>
     成功時に接続インデックスを、失敗時に FALSE を返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。</para>
   </refsect1>
  </refentry>


  <refentry id="function.ora-open">
   <refnamediv>
    <refname>Ora_Open</refname>
    <refpurpose>Oracleカーソルのオープン</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_open</function></funcdef>
     <paramdef>int <parameter>connection</parameter></paramdef>
    </funcsynopsis>
    <para>
     接続と連携してOracleカーソルをオープンします。</para>
    <para>
     カーソルのインデックスもしくは失敗した場合のFalseを返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。</para>
   </refsect1>
  </refentry>


  <refentry id="function.ora-parse">
   <refnamediv>
    <refname>Ora_Parse</refname>
    <refpurpose>SQLステートメントのパース</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_parse</function></funcdef>
     <paramdef>int <parameter>cursor_ind</parameter></paramdef>
     <paramdef>string <parameter>sql_statement</parameter></paramdef>
     <paramdef>int <parameter>defer</parameter></paramdef>
    </funcsynopsis>
    <para>
     この関数はSQLステートメントもしくはPL/SQLをパースし、与えられた
     カーソルと関連付けます。成功すれば、0を、エラーの場合は、-1を
     返します。</para>
   </refsect1>
  </refentry>


  <refentry id="function.ora-rollback">
   <refnamediv>
    <refname>Ora_Rollback</refname>
    <refpurpose>トランザクションのロールバック</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>ora_rollback</function></funcdef>
     <paramdef>int <parameter>connection</parameter></paramdef>
    </funcsynopsis>
    <para>
     この関数はOracleのトランザクションを元に戻します。
     (トランザクション定義に対する<function>ora_commit</function>を
     参照してください。)</para>
    <para>
     成功したらtrueを、エラーの場合はfalseを返します。エラーについての
     詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。</para>
   </refsect1>
  </refentry>


 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
