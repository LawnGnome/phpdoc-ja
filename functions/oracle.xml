 <reference id="ref.oracle">
  <title>Oracle 関数</title>
  <titleabbrev>Oracle</titleabbrev>

  <refentry id="function.ora-bind">
   <refnamediv>
    <refname>Ora_Bind</refname>
    <refpurpose> PHP変数をOracleパラメータにバインドする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_bind</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>string <parameter>PHP variable name</parameter></paramdef>
      <paramdef>string <parameter>SQL parameter name</parameter></paramdef>
      <paramdef>int <parameter>length</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>type</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     バインドに成功した場合に&true;、その他の場合に&false;を返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。
    </para>
    <para>
     この関数は、指定した名前のPHP変数をSQLパラメータとバインドします。
     SQLパラメータは":name"の形になっていなければなりません。
     オプションのtypeパラメータを用いて、SQLパラメータが入出力
     (0,デフォルト値)、入力(1)、出力(2)パラメータであるかを定義できます。
     PHP 3.0.1 以降では、数字の代わりに定数ORA_BIND_INOUT、
     ORA_BIND_INそしてORA_BIND_OUTを使うことができます。
    </para>
    <para>
     ora_bind は <function>ora_parse</function>の後でかつ
     <function>ora_exec</function>の前に呼び出されなくてはなりません。
     入力値はバインドされたPHP変数に代入することにより指定することが可能です。
     <function>ora_exec</function>のコールによりバインド先の
     SQLパラメータに値が出力される場合には、バインドされたPHP変数に
     出力値が代入されます。
     <informalexample>
      <programlisting role="php">
&lt;?php
ora_parse($curs, "declare tmp INTEGER; begin tmp := :in; :out := tmp; :x := 7.77; end;");
ora_bind($curs, "result", ":x", $len, 2);
ora_bind($curs, "input", ":in", 5, 1);
ora_bind($curs, "output", ":out", 5, 2);
$input = 765;
ora_exec($curs);
echo "Result: $result&lt;BR>Out: $output&lt;BR>In: $input";
?>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-close">
   <refnamediv>
    <refname>Ora_Close</refname>
    <refpurpose>Oracleカーソルをクローズする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_close</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     クローズが成功すれば&true;を、そうでなければ&false;を返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。
    </para>
    <para>
     この関数は、<function>ora_open</function>でオープンされた
     データカーソルをクローズします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-columnname">
   <refnamediv>
    <refname>Ora_ColumnName</refname>
    <refpurpose>Oracle結果カラムの名前を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>Ora_ColumnName</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>int <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カーソル <parameter>cursor</parameter>上の、フィールド/カラム
     <parameter>column</parameter>の名前を返します。
     返される名前は全て大文字です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-columnsize">
   <refnamediv>
    <refname>Ora_ColumnSize</refname>
    <refpurpose>Oracle 結果カラムのサイズを得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>Ora_ColumnSize</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>int <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カーソル<parameter>cursor</parameter>上のOracleカラム
     <parameter>column</parameter>のサイズを返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-columntype">
   <refnamediv>
    <refname>Ora_ColumnType</refname>
    <refpurpose>Oracleのカラムの型を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>Ora_ColumnType</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>int <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カーソル<parameter>cursor</parameter>上の、フィールド/カラム
     <parameter>column</parameter>のOracleデータ型名を返します。
     返された型名は、次のどれかになります。
     <simplelist>
      <member><literal>"VARCHAR2"</literal></member>
      <member><literal>"VARCHAR"</literal></member>
      <member><literal>"CHAR"</literal></member>
      <member><literal>"NUMBER"</literal></member>
      <member><literal>"LONG"</literal></member>
      <member><literal>"LONG RAW"</literal></member>
      <member><literal>"ROWID"</literal></member>
      <member><literal>"DATE"</literal></member>
      <member><literal>"CURSOR"</literal></member>
     </simplelist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-commit">
   <refnamediv>
    <refname>Ora_Commit</refname>
    <refpurpose>Oracleトランザクションをコミットする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_commit</function></funcdef>
      <paramdef>int <parameter>conn</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     成功した場合に&true;、エラーの場合に&false;を返します。エラーについて
     の詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。
    </para>
    <para>
     この関数はOracleのトランザクションをコミットします。トランザクショ
     ンは、直近のコミット/ロールバック、またはオートコミットがオフになっ
     た時点、または接続が確立された時点から指定した接続に加えられた全
     ての変更として定義されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-commitoff">
   <refnamediv>
    <refname>Ora_CommitOff</refname>
    <refpurpose>オートコミットをオフにする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>接続</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_commitoff</function></funcdef>
      <paramdef>int <parameter>conn</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     成功時に&true;、エラー時に&false;を返します。エラーに関する詳細な
     情報は、関数<function>ora_error</function>および
     <function>ora_errorcode</function>により取得することが可能です。
    </para>
    <para>
     この関数は、各<function>ora_exec</function>の後のオートコミットを
     オフにします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-commiton">
   <refnamediv>
    <refname>Ora_CommitOn</refname>
    <refpurpose>オートコミットを有効にする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_commiton</function></funcdef>
      <paramdef>int <parameter>conn</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、指定した接続において<function>ora_exec</function>
     実行後のオートコミットをオンにします。
    </para>
    <para>
     成功の場合は&true;を、エラーの場合は&false;を返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-do">
   <refnamediv>
    <refname>Ora_Do</refname>
    <refpurpose>パース、実行、取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_do</function></funcdef>
      <paramdef>int <parameter>conn</parameter></paramdef>
      <paramdef>string <parameter>query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、簡単のため<function>ora_parse</function>、
     <function>ora_exec</function>、<function>ora_fetch</function>
     を組み合わせたものです。この関数は、クエリをパース、実行し、結果
     の最初のレコードを取得します。
    </para>
    <para>
     成功時に&true;、エラー時に&false;を返します。エラーに関する詳細は、
     <function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて取得することが可能
     です。
    </para>
    <para>
     <function>ora_parse</function>,<function>ora_exec</function>,
     <function>ora_fetch</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-error">
   <refnamediv>
    <refname>Ora_Error</refname>
    <refpurpose>Oracleエラーメッセージの取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>Ora_Error</function></funcdef>
      <paramdef>int <parameter>cursor_or_connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <replaceable>XXX</replaceable>-<replaceable>NNNNN</replaceable>
     という形式のエラーメッセージが返されます。ここで、
     <replaceable>XXX</replaceable>は何処からエラーが発生したか、
     <replaceable>NNNNN</replaceable>はエラーメッセージを識別します。
    </para>
    <para>
     <note>
      <para>
       接続IDのサポートは、3.0.4 で追加されました。
      </para>
     </note>
    </para>
    <para>
     UNIX版のOracle上では、以下のようにエラーメッセージに関する詳細を得ること
     ができます。
     <computeroutput>
    <prompt>$</prompt> <userinput>oerr ora <replaceable>00001</replaceable></userinput> 00001, 00000,
"unique constraint (%s.%s) violated" // *Cause: An update or insert
statement attempted to insert a duplicate key //         For Trusted
ORACLE configured in DBMS MAC mode, you may see //         this message
if a duplicate entry exists at a different level.  // *Action: Either
remove the unique restriction or do not insert the key
     </computeroutput>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-errorcode">
   <refnamediv>
    <refname>Ora_ErrorCode</refname>
    <refpurpose>Oracleエラーコードの取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>Ora_ErrorCode</function></funcdef>
      <paramdef>int <parameter>cursor_or_connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定したカーソルまたは接続において最後に実行したステートメントの
     エラーコード番号を返します。 
     <note>
      <para>
       接続IDのサポートは、3.0.4 で追加されました。
      </para>
    </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-exec">
   <refnamediv>
    <refname>Ora_Exec</refname>
    <refpurpose>
     Oracleカーソル上でのパースしたステートメントの実行
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_exec</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     成功時に&true;を、エラー時に&false;を返します。
     エラーについての詳細は、<function>ora_error</function>
     および<function>ora_errorcode</function>関数を用いて
     調べられます。
    </para>
    <para>
     <function>ora_parse</function>, <function>ora_fetch</function>, 
     <function>ora_do</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-fetch">
   <refnamediv>
    <refname>Ora_Fetch</refname>
    <refpurpose>カーソルから1行分のデータを取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_fetch</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (列が取り出されれば)&true;もしくは(取り出す列がもうないか、
     エラーが発生した場合)&false;を返します。エラーが発生したら、
     詳細は<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べることが
     できます。エラーがない場合、<function>ora_errorcode</function>は
     0を返します。
     この関数は、指定したカーソル(cursor)から1行分のデータを取得します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-fetch-into">
   <refnamediv>
    <refname>Ora_Fetch_Into</refname>
    <refpurpose>指定した配列resultにレコードを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_fetch_into</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>array <parameter>result</parameter></paramdef>
      <paramdef>int
       <parameter>
        <replaceable><optional>flags</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数により、1件のレコードを配列に取得します。
     <example>
      <title>Oracleレコードを配列に取得する</title>
      <programlisting role="php">
&lt;?php
array($results);
ora_fetch_into($cursor, &amp;$results);
echo $results[0];
echo $results[1];
?>
      </programlisting>
     </example>
     配列をリファレンスで取得する必要があることに注意して下さい。
    </para>
    <simpara>
     <function>ora_parse</function>,<function>ora_exec</function>,
     <function>ora_fetch</function>, <function>ora_do</function>も参照
     下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-getcolumn">
   <refnamediv>
    <refname>Ora_GetColumn</refname>
    <refpurpose>取得した行からデータを得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>ora_getcolumn</function></funcdef>
      <paramdef>int <parameter>cursor</parameter></paramdef>
      <paramdef>mixed <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カラムデータを返します。エラーが発生した場合には&false;を返し、
     <function>ora_errorcode</function>は0以外の値を返します。
     しかしながら、この関数の返り値が&false;となるかどうかを調べる際には、
     エラーでない場合(返り値がヌル、空白文字列、数字の0、文字列の"0")にも
     判定式の値が真となる可能性があることに注意して下さい。
    </para>
    <para>
     この関数は、カラムのデータもしくは関数の結果を取り出します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-logoff">
   <refnamediv>
    <refname>Ora_Logoff</refname>
    <refpurpose>Oracle接続を閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_logoff</function></funcdef>
      <paramdef>int <parameter>connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     成功の場合は&true;を、エラーの場合は&false;を返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。
    </para>
    <para>
     ユーザのログアウトを行い、サーバとの接続を切ります。
    </para>
    <simpara>
     <function>ora_logon</function>も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-logon">
   <refnamediv>
    <refname>Ora_Logon</refname>
    <refpurpose>Oracle接続をオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_logon</function></funcdef>
      <paramdef>string <parameter>user</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定したユーザ名とパスワードによりPHPとOracleデータベースの
     接続を確立します。
    </para>
    <para>
     次のように <acronym>TNS</acronym> 名を <parameter>user</parameter> 
     に与えることにより、接続は
     <productname>SQL*Net</productname> を用いて作成されます。
     <informalexample>
      <programlisting role="php">
$conn = Ora_Logon("user<emphasis>@TNSNAME</emphasis>", "pass");
      </programlisting>
     </informalexample>
    </para>
    <para>
     非アスキー文字を含む文字データがある場合、環境変数
     <envar>NLS_LANG</envar> を設定する必要があります。サーバーモジュー
     ルの場合、サーバーの起動前にサーバーの環境変数として設定する必要
     があります。
    </para>
    <para>
     成功した場合に接続インデックス、失敗した場合に&false;を返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-plogon">
   <refnamediv>
    <refname>Ora_pLogon</refname>
    <refpurpose>
     持続的な Oracle接続をオープンする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_plogon</function></funcdef>
      <paramdef>string <parameter>user</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定したユーザ名およびパスワードを用いて PHPとOracleデータベース
     の間に持続的な接続を確立します。
    </para>
    <simpara>
     <function>ora_logon</function>も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-numcols">
   <refnamediv>
    <refname>Ora_Numcols</refname>
    <refpurpose>カラム数を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_numcols</function></funcdef>
      <paramdef>int <parameter>cursor_ind</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ora_numcols</function> は、結果のカラム数を返します。
     parse/exec/fetch シーケンスの後でのみ意味がある値が返されます。
    </para>
    <simpara>
     <function>ora_parse</function>,<function>ora_exec</function>,
     <function>ora_fetch</function>, <function>ora_do</function>
     も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-numrows">
   <refnamediv>
    <refname>Ora_Numrows</refname>
    <refpurpose>レコード数を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_numrows</function></funcdef>
      <paramdef>int <parameter>cursor_ind</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ora_numrows</function> は、結果のレコード数を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-open">
   <refnamediv>
    <refname>Ora_Open</refname>
    <refpurpose>Oracleカーソルをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_open</function></funcdef>
      <paramdef>int <parameter>connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定した接続(connection)に関してOracleカーソルをオープンします。
    </para>
    <para>
     カーソルのインデャ¯スもしくは失敗した場合に&false;を返します。
     エラーについての詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-parse">
   <refnamediv>
    <refname>Ora_Parse</refname>
    <refpurpose>SQLステートメントを解釈する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_parse</function></funcdef>
      <paramdef>int <parameter>cursor_ind</parameter></paramdef>
      <paramdef>string <parameter>sql_statement</parameter></paramdef>
      <paramdef>int <parameter>defer</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数はSQL命令またはPL/SQLブロックを解釈し、指定したカーソルに
     関連付けます。
    </para>
    <para>
     成功時に0、エラーの場合は-1を返します。
    </para>
    <simpara>
     <function>ora_exec</function>, <function>ora_fetch</function>,
     <function>ora_do</function>も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-rollback">
   <refnamediv>
    <refname>Ora_Rollback</refname>
    <refpurpose>トランザクションをロールバックする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ora_rollback</function></funcdef>
      <paramdef>int <parameter>connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数はOracleのトランザクションを取り消します。
     (トランザクション定義に関しては、<function>ora_commit</function>を
     参照下さい。)
    </para>
    <para>
     成功時に&true;、エラーの場合に&false;を返します。エラーについての
     詳細は、<function>ora_error</function>および
     <function>ora_errorcode</function>関数を用いて調べられます。
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
