
 <reference id="ref.info">
  <title>PHP オプションと情報</title>
  <titleabbrev>PHP オプション/情報</titleabbrev>

  <refentry id="function.assert">
   <refnamediv>
    <refname>assert</refname>
    <refpurpose>assertion が false であるかどうかを調べる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>assert</function></funcdef>
      <paramdef>string|bool <parameter>assertion</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>assert</function> は、指定した
     <parameter>assertion</parameter>を調べて、結果が
     <literal>false</literal>の場合に適当な動作をします。
    </para>
    <para>
     <parameter>assertion</parameter> が文字列として指定された場合、
     <function>assert</function>によりPHPコードとして評価されます。
     文字列 <parameter>assertion</parameter>が優れているところは、
     assertion のチェックがオフになった場合のオーバーヘッドがより少な
     いことであり、assertionが失敗した場合のメッセージを式
     <parameter>assertion</parameter>に有しています。
    </para>
    <para>
     assertion は、デバッグ目的にのみ使用するべきです。
     assertion を常にtrueとなる条件を調べる故障診断に使用し、trueでな
     い場合に何らかのプログラミングエラーを示したり、extension 関数ま
     たは特定のシステム制限や機能といった特定の機能の存在をチェックす
     るために使用することが可能です。
    </para>
    <para>
     assersion は、入力パラメータのチェックのような通常の実行動作に使
     用するべきではありません。一般的には、assertion のチェックが有効
     でない場合に自分のコード常に成城に動作することができる必要があり
     ます。
    </para>
    <para>
     <function>assert</function> の動作は、
     <function>assert_options</function> またはマニュアルの関数の部分
     に記述された .ini の設定により設定することが可能です。
    </para>
   </refsect1>
  </refentry> 

  <refentry id="function.assert-options">
   <refnamediv>
    <refname>assert_options</refname>
    <refpurpose>様々な assert フラグを設定/取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>assert_options</function></funcdef>
      <paramdef>int <parameter>what</parameter></paramdef>
      <paramdef>mixed 
       <parameter>
	<replaceable><optional>value</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>assert_options</function> を使用して、種々の
     <function>assert</function>制御オプションを設定したり、
     単にカレントの設定を調べたりすることが可能です。
    </para>
    <table>
     <title>assert オプション</title>
     <tgroup cols="4">
      <thead>
       <row>
	<entry>オプション</entry>
	<entry>iniパラメータ</entry>
	<entry>デフォルト</entry>
	<entry>説明</entry>
       </row>
      </thead>
      <tbody>
       <row>
	<entry>ASSERT_ACTIVE</entry>
	<entry>assert.active</entry>
	<entry>1</entry>
	<entry><function>assert</function>による評価を有効にする</entry>
       </row>
       <row>
	<entry>ASSERT_WARNING</entry>
	<entry>assert.warning</entry>
	<entry>1</entry>
	<entry>assersionに失敗した場合にPHP警告を発生する</entry>
       </row>
       <row>
	<entry>ASSERT_BAIL</entry>
	<entry>assert.bail</entry>
	<entry>0</entry>
	<entry>assersionに失敗した場合に実行を終了する</entry>
       </row>
       <row>
	<entry>ASSERT_QUIET_EVAL</entry>
	<entry>assert.quiet_eval</entry>
	<entry>0</entry>
	<entry>
	 assersion式についてはerror_reportingを無効にする
	</entry>
       </row>
       <row>
	<entry>ASSERT_CALLBACK</entry>
	<entry>assert_callback</entry>
	<entry>(null)</entry>
	<entry>assertionに失敗した場合にコールされるユーザ関数</entry>
       </row>
      </tbody>    
     </tgroup>
    </table>
    <para>
     <function>assert_options</function> は、指定したオプションの元の
     設定値またはエラーの場合に<literal>false</literal>を返します。
    </para>
   </refsect1>
  </refentry> 

  <refentry id="function.extension-loaded">
   <refnamediv>
    <refname>extension_loaded</refname>
    <refpurpose>ある拡張機能がロードされているかどうかを調べる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>extension_loaded</function></funcdef>
      <paramdef>string <parameter>name</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <parameter>name</parameter> で指定する拡張機能がロードされている
     場合に true を返します。<function>phpinfo</function> を用いて種々
     の拡張機能の名前を知ることができます。
    </simpara>
    <para>
     <function>phpinfo</function> も参照下さい。
     <note>
      <para>
       この関数は、3.0.10 で追加されました。
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dl">
   <refnamediv>
    <refname>dl</refname>
    <refpurpose>実行時にPHP拡張モジュールをロードする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dl</function></funcdef>
      <paramdef>string <parameter>library</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>library</parameter>にあるPHP拡張モジュールをロードしま
     す。設定ディレクティブ<link
     linkend="ini.extension-dir">extension_dir</link>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.getenv">
   <refnamediv>
    <refname>getenv</refname>
    <refpurpose>環境変数の値を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>getenv</function></funcdef>
      <paramdef>string <parameter>varname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>varname</parameter> が示す環境変数の値を返し、
     エラーの場合は false を返します。
     <informalexample>
      <programlisting role="php">
$ip = getenv("REMOTE_ADDR"); // ユーザーのIPアドレスを得ます
      </programlisting>
     </informalexample>
    </para>
    <para>
     <function>phpinfo</function> を使用して全ての環境変数の一覧を見る
     ことができます。
     <ulink url="&url.cgispecs;">CGI specification</ulink> 、特に 
     <ulink url="&url.cgispec;">環境変数のページ</ulink>を参照すること
     により、それらの参照する環境変数の役割の多くを知ることができます。
     <note>
      <para>
       この関数は、ISAPIモードでは動作しません。
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.get-cfg-var">
   <refnamediv>
    <refname>get_cfg_var</refname>
    <refpurpose>PHP 設定オプションの値を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>get_cfg_var</function></funcdef>
      <paramdef>string <parameter>varname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <parameter>varname</parameter> で指定された PHP 設定オプション
     の現在の値を返し、エラーの場合は FALSE を返します。
    </simpara>
    <simpara>
     この関数は、
     PHP がコンパイルされた際にセットされた設定情報や
     Apache の設定ファイルから(php3_configuration_option 命令により)
     読んだ設定情報は返しません。
    </simpara>
    <simpara>
     システムが <link linkend="configuration.file">設定ファイル</link>
     を使用しているかどうかを確認するには、cfg_file_path の設定値を
     取得してみて下さい。
     この値が利用可能なら、設定ファイルが使用されています。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.get-current-user">
   <refnamediv>
    <refname>get_current_user</refname>
    <refpurpose>現在の PHP スクリプトの所有者の名前を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>get_current_user</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     現在の PHP スクリプトの所有者の名前を返します。
    </simpara>
    <simpara>
     <function>getmyuid</function>,
     <function>getmypid</function>,
     <function>getmyinode</function>,
     <function>getlastmod</function> も参照して下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.get-magic-quotes-gpc">
   <refnamediv>
     <refname>get_magic_quotes_gpc</refname>
    <refpurpose>magic quotes gpc の現在アクティブな設定を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>long <function>get_magic_quotes_gpc</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>
     の現在アクティブな設定を返します。(オフの場合 0、オンの場合 1)
    </simpara>
     <simpara>
     <function>get_magic_quotes_runtime</function>,
     <function>set_magic_quotes_runtime</function>も参照下さい。
    </simpara>
   </refsect1>
  </refentry>
  
  <refentry id="function.get-magic-quotes-runtime">
   <refnamediv>
    <refname>get_magic_quotes_runtime</refname>
    <refpurpose>
     magic_quotes_runtime の現在アクティブな設定値を得ます
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>long <function>get_magic_quotes_runtime</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link>
     の現在アクティブな値を返します。
     (オフの場合 0、オンの場合 1)
    </simpara>
     <simpara>
     <function>get_magic_quotes_gpc</function>,
     <function>set_magic_quotes_runtime</function> も参照下さい。
    </simpara>
   </refsect1>
  </refentry>
   
  <refentry id="function.getlastmod">
   <refnamediv>
    <refname>getlastmod</refname>
    <refpurpose>最終ページ更新時刻を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>getlastmod</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     現在のページが最後に更新された時刻を返します。返される
     値は Unix のタイムスタンプで、そのまま <function>date
     </function>に渡す事ができます。エラーの場合は FALSE を返します。
     <example>
      <title><function>getlastmod</function>の例</title>
      <programlisting role="php">
// たとえば、'最終更新時刻：March 04 1998 20:43:59.' を出力する
echo "最終更新時刻：".date( "F d Y H:i:s.", getlastmod() );
      </programlisting>
     </example>
    </para>
    <para>
     <function>date</function>,
     <function>getmyuid</function>,
     <function>get_current_user</function>,
     <function>getmyinode</function>,
     <function>getmypid</function> も参照して下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.getmyinode">
   <refnamediv>
    <refname>getmyinode</refname>
    <refpurpose>現在のスクリプトの i ノードを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>getmyinode</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     現在のスクリプトの i ノードを返し、エラーの場合は  FALSE を返しま
     す。
    </para>
    <para>
     <function>getmyuid</function>,
     <function>get_current_user</function>,
     <function>getmypid</function>,
     <function>getlastmod</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.getmypid">
   <refnamediv>
    <refname>getmypid</refname>
    <refpurpose>PHP のプロセス ID を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>getmypid</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     現在の PHP のプロセス ID を返し、エラーの場合は FALSE を返します。
    </para>
    <note>
     <para>
      プロセスIDはユニークではないため、エントロピ源として優れたもので
      はありません。セキュリティが重要なコンテンツの場合、PIDに基づく
      設計は推奨されません。
     </para>
    </note>
    <para>
     <function>getmyuid</function>,
     <function>get_current_user</function>,
     <function>getmyinode</function>,
     <function>getlastmod</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.getmyuid">
   <refnamediv>
    <refname>getmyuid</refname>
    <refpurpose>PHP スクリプト所有者のユーザ ID を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>getmyuid</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     現在のスクリプトのユーザ ID を返し、エラーの場合は FALSE を返します。
    </simpara>
    <simpara>
     <function>getmypid</function>,
     <function>get_current_user</function>,
     <function>getmyinode</function>,
     <function>getlastmod</function> も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.getrusage">
   <refnamediv>
    <refname>getrusage</refname>
    <refpurpose>カレントリソースの使用に関する情報を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>getrusage</function></funcdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>who</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、getrusage(2)へのインターフェースです。
     システムコールから返されたデータを有する連想配列を返します。
     <parameter>who</parameter>が 1 の場合、getrusageはRUSAGE_CHILDREN
     を付けてコールされます。
     全てのエントリは、記述されたフィールド名を用いてアクセス可能です。
     <example>
      <title><function>getrusage</function> の例</title>
      <programlisting role="php">
$dat = getrusage();
echo $dat["ru_nswap"];         # スワップの数
echo $dat["ru_majflt"];        # ページフォルトの数
echo $dat["ru_utime.tv_sec"];  # 使用するユーザー時間 (秒)
echo $dat["ru_utime.tv_usec"]; # 使用するユーザー時間 (マイクロ秒)
      </programlisting>
     </example>
     更に詳細な情報は、getrusage(2)に関するシステムのmanページを参照下
     さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ini-alter">
   <refnamediv>
    <refname>ini_alter</refname>
    <refpurpose>設定オプションの値を変更する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ini_alter</function></funcdef>
      <paramdef>string <parameter>varname</parameter></paramdef>
      <paramdef>string <parameter>newvalue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     設定オプションの値を変更し、失敗した際に <literal>false</literal>、
     成功時にその設定オプションの元の値を返します。
    </para>
    <note>
     <para>
      この関数は、<function>ini_set</function>へのエイリアスです。
     </para>
    </note>
    <para>
     <function>ini_get</function>,
     <function>ini_restore</function>,
     <function>ini_set</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ini-get">
   <refnamediv>
    <refname>ini_get</refname>
    <refpurpose>設定オプションの値を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ini_get</function></funcdef>
      <paramdef>string <parameter>varname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     成功時に設定オプションの値を返し、失敗時に
     <literal>false</literal> を返します。
    </para>
    <para>
     <function>ini_alter</function>,
     <function>ini_restore</function>,
     <function>ini_set</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ini-restore">
   <refnamediv>
    <refname>ini_restore</refname>
    <refpurpose>設定オプションの値を元に戻す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ini_restore</function></funcdef>
      <paramdef>string <parameter>varname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定した設定オプションを元の値に戻します。
    </para>
    <para>
     <function>ini_alter</function>,
     <function>ini_get</function>,
     <function>ini_set</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ini-set">
   <refnamediv>
    <refname>ini_set</refname>
    <refpurpose>設定オプションの値を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ini_set</function></funcdef>
      <paramdef>string <parameter>varname</parameter></paramdef>
      <paramdef>string <parameter>newvalue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定した設定オプションの値を設定します。成功時に元の値を、失敗し
     た際に<literal>false</literal>を返します。
    </para>
    <para>
     <function>ini_alter</function>,
     <function>ini_get</function>,
     <function>ini_restore</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.phpcredits">
   <refnamediv>
    <refname>phpcredits</refname>
    <refpurpose>PHPに関するクレジットを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>phpcredits</function></funcdef>
      <paramdef>int <parameter>flag</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、PHP開発者、モジュール等のリストを有するクレジットを出
     力します。ページに情報を挿入するために適当なHTMLコードが生成され
     ます。出力方法を指定するパラメータ(定義済の定数フラグ、下記の表を
     参照)を渡す必要があります。例えば、一般的なクレジットを生成するに
     は次のようにします。
     <informalexample>
      <programlisting role="php">
...
phpcredits(CREDITS_GENERAL);
...
      </programlisting>
     </informalexample>
     そして、コア開発者とドキュメントグループを一つのページに表示する
     には次のようにします。
     <informalexample>
      <programlisting role="php">
&lt;?php
  phpcredits(CREDITS_GROUP + CREDITS_DOCS + CREDITS_FULLPAGE);
?&gt;  
      </programlisting>
     </informalexample>
     そして、全てのクレジットをページに埋め込みたいというような場合に
     は、以下のようなコードで実行することが可能です。
     <informalexample>
      <programlisting role="php">
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;My credits page&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
  &lt;?php
    // あなた自身のコード
    phpcredits(CREDITS_ALL + CREDITS_FULLPAGE);
    // その他のコード
  ?&gt;
  &lt;/body&gt;
&lt;/html&gt;
      </programlisting>
     </informalexample>
    </para>
    <para>
    </para>
    <para>
     <table>
      <title>定義済の<function>phpcredits</function>フラ°</title>
      <tgroup cols="2">
       <thead>
	<row>
	 <entry>名前</entry>
	 <entry>説明</entry>
	</row>
       </thead>
       <tbody>
	<row>
	 <entry>CREDITS_ALL</entry>
	 <entry>
	  このフラグは、次のフラグを使用した場合と等価です。 
	  CREDITS_DOCS + CREDITS_GENERAL + 
	  CREDITS_GROUP + CREDITS_MODULES + CREDITS_FULLPAGE
	  このフラグは、適当なタグを有する完全に独立したHTMLページを生
	  成します。
	 </entry>
	</row>
	<row>
	 <entry>CREDITS_DOCS</entry>
	 <entry>ドキュメントチームのクレジット</entry>
	</row>
	<row>
	 <entry>CREDITS_FULLPAGE</entry>
	 <entry>
	  通常、他のフラグと組み合わせて使用されます。他のフラグで指定
	  した情報を含む完全に独立したHTMLページを出力することを指定し
	  ます。
	 </entry>
	</row>
	<row>
	 <entry>CREDITS_GENERAL</entry>
	 <entry>
	  一般的なクレジット: 言語の設計およびコンセプト、PHP 4.0 の作
	  者、SAPIモジュール
	 </entry>
	</row>
	<row>
	 <entry>CREDITS_GROUP</entry>
	 <entry>コア開発者のリスト</entry>
	</row>
	<row>
	 <entry>CREDITS_MODULES</entry>
	 <entry>PHPの拡張モジュールのリスト、およびこれらの作者</entry>
	</row>
	<row>
	 <entry>CREDITS_SAPI</entry>
	 <entry>
	  PHP 4.0.1pl2では、このフラグは定義されていますが、使用されて
	  いません
	 </entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <function>phpinfo</function>,<function>phpversion</function>,
     <function>php_logo_guid</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.phpinfo">
   <refnamediv>
    <refname>phpinfo</refname>
    <refpurpose>いろいろな PHP 情報を出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>phpinfo</function></funcdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>what</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     現在のPHPの状態に関する、多くの情報を出力します。出力される
     情報には、PHPコンパイルオプションと拡張機能、PHPのバージョン、
     サーバ情報と環境（モジュールとしてコンパイルされた場合）、
     PHP の環境、OS バージョン情報、パス、構成オプションのマスター
     およびローカルの値、HTTP ヘッダ、PHP Licenseなどが
     あります。
    </para>
    <para>
     オプションのパラメータ <parameter>what</parameter> に以下の値を一
     つまたは複数指定することにより出力をカスタマイズすることが可能です。
     <itemizedlist>
      <listitem><simpara>INFO_GENERAL</simpara></listitem>
      <listitem><simpara>INFO_CREDITS</simpara></listitem>
      <listitem><simpara>INFO_CONFIGURATION</simpara></listitem>
      <listitem><simpara>INFO_MODULES</simpara></listitem>
      <listitem><simpara>INFO_ENVIRONMENT</simpara></listitem>
      <listitem><simpara>INFO_VARIABLES</simpara></listitem>
      <listitem><simpara>INFO_LICENSE</simpara></listitem>
      <listitem><simpara>INFO_ALL</simpara></listitem>
      <listitem><simpara>CREDITS_GROUP</simpara></listitem>
      <listitem><simpara>CREDITS_GENERAL</simpara></listitem>
      <listitem><simpara>CREDITS_SAPI</simpara></listitem>
      <listitem><simpara>CREDITS_MODULES</simpara></listitem>
      <listitem><simpara>CREDITS_DOCS</simpara></listitem>
      <listitem><simpara>CREDITS_FULLPAGE</simpara></listitem>
      <listitem><simpara>CREDITS_ALL</simpara></listitem>
     </itemizedlist>
    </para>
    <para>
     <function>phpversion</function>,<function>phpcredits</function>,
     <function>php_logo_guid</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.phpversion">
   <refnamediv>
    <refname>phpversion</refname>
    <refpurpose>現在のPHPバージョンを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>phpversion</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    現在動作中の PHP パーサのバージョンを表す文字列を返します。

     <example>
      <title><function>phpversion</function>の例</title>
      <programlisting role="php">
// たとえば、'現在のPHPバージョン：3.0rel-dev'と表示する
echo "現在のPHPバージョン：".phpversion();
      </programlisting>
     </example>
    </para>
    <para>
     <function>phpinfo</function>,<function>phpcredits</function>,
     <function>php_logo_guid</function>,<function>zend_version</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.php-logo-guid">
   <refnamediv>
    <refname>php_logo_guid</refname>
    <refpurpose>ロゴのguidを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>php_logo_guid</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <note>
      <para>
       この機能は、PHP 4 Beta 4で追加されました。
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.php-sapi-name">
   <refnamediv>
    <refname>php_sapi_name</refname>
    <refpurpose>
     WebサーバーとPHPの間のインターフェースの型を返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>php_sapi_name</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>php_sapi_name</function>は、WebサーバーとPHP(サーバーAPI、
     SAPI)の間のインターフェースの型を記述する文字列を返します。
     CGI版のPHPでは、この文字列は"cgi"となり、Apacheのmod_php版では、
     この文字列は"apache"となるといったようになります。
    </simpara>
    <para>
     <example>
      <title><function>php_sapi_name</function>の例</title>
      <programlisting role="php">
$inter_type = php_sapi_name();
if ($inter_type == "cgi")
	print "CGI版のPHPを使用しています\n";
else
	print "CGI版のPHPを使用していません\n";
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.php-uname">
   <refnamediv>
    <refname>php_uname</refname>
    <refpurpose>
     PHPが構築されたオペレーションシステムに関する情報を返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>php_uname</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>php_uname</function> は、PHPが構築されたオペレーティン
     グシステムに関する説明を文字列で返します。
    </simpara>
    <para>
     <example>
      <title><function>php_uname</function>の例</title>
      <programlisting role="php">
if (substr(php_uname(), 0, 7) == "Windows") {
    die("Sorry, this script doesn't run on Windows.\n");
}
</programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.putenv">
   <refnamediv>
    <refname>putenv</refname>
    <refpurpose>環境変数の値を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>putenv</function></funcdef>
      <paramdef>string <parameter>setting</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     サーバーの環境変数に <parameter>setting</parameter> を追加します。
    </para>
    <para>
     <example>
      <title>環境変数の設定</title>
      <programlisting role="php">
putenv ("UNIQID=$uniqid");
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.set-magic-quotes-runtime">
   <refnamediv>
    <refname>set_magic_quotes_runtime</refname>
    <refpurpose>magic_quotes_runtime の現在アクティブな設定を設定します。
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>long <function>set_magic_quotes_runtime</function></funcdef>
      <paramdef>int <parameter>new_setting</parameter></paramdef>
     </funcprototype>
     </funcsynopsis>
    <simpara>
     <link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link>
     の現在アクティブな設定をセットします。(オフの場合 0、オンの場合 1)
    </simpara>
    <simpara>
     <function>get_magic_quotes_gpc</function>,
     <function>get_magic_quotes_runtime</function> も参照下さい。
    </simpara>
   </refsect1>
  </refentry>
  
  <refentry id="function.set-time-limit">
   <refnamediv>
    <refname>set_time_limit</refname>
    <refpurpose>実行時間の最大値を制限します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>set_time_limit</function></funcdef>
      <paramdef>int <parameter>seconds</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     スクリプトが実行可能な秒数を設定します。
     この制限にかかるとスクリプトは致命的エラーを返します。
     デフォルトの制限値は 30 秒です。
     なお、<link linkend="configuration.file">設定ファイル</link>で 
     max_execution_time の値が定義されている場合にはそれを用います。
     secondsにゼロをセットした場合、時間制限は行われません。
    </simpara>
    <simpara>
     <function>set_time_limit</function> がコールされた場合、
     タイムアウトカウンターをゼロから再スタートします。
     言いかえると、タイムアウトがデフォルトの 30 秒で
     スクリプト実行までに 25 秒かかる場合に、
     set_time_limit( 20 ) を実行すると、スクリプトは、
     タイムアウトまでに全体で 45 s の間実行されます。
    </simpara>
    <simpara>
     <function>set_time_limit</function> は、PHPがセーフモードで実行さ
     れている場合には実効がないことに注意して下さい。セーフモードをオ
     フにするか、<link linkend="configuration.file">設定フィ¤ル
     </link>の時間制限を変更する以外に対策はありません。
    </simpara>
   </refsect1>
  </refentry>
  
  <refentry id="function.zend-logo-guid">
   <refnamediv>
    <refname>zend_logo_guid</refname>
    <refpurpose>zend guid を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>zend_logo_guid</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <note>
      <para>
       この機能は、PHP 4 ベータ4で追加されました。
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.get-loaded-extensions">
   <refnamediv>
    <refname>get_loaded_extensions</refname>
    <refpurpose>
     コンパイル/ロードされている全てのモジュールの名前を配列として返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>get_loaded_extensions</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、PHPインタプリタにコンパイル、ロードされている全てのモ
     ジュールの名前を返します。
    </para>
    <para>
     例えば以下のようになります。
     <informalexample>
      <programlisting role="php">
print_r (get_loaded_extensions());
      </programlisting>
     </informalexample>
     この例の出力は以下のようになります。
     <informalexample>
      <programlisting>
Array
(
    [0] =&gt; xml
    [1] =&gt; wddx
    [2] =&gt; standard
    [3] =&gt; session
    [4] =&gt; posix
    [5] =&gt; pgsql
    [6] =&gt; pcre
    [7] =&gt; gd
    [8] =&gt; ftp
    [9] =&gt; db
    [10] =&gt; Calendar
    [11] =&gt; bcmath
)
      </programlisting>
     </informalexample>
    </para>
    <para>
     <function>get_extension_funcs</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.get-extension-funcs">
   <refnamediv>
    <refname>get_extension_funcs</refname>
    <refpurpose>
     あるモジュールの関数名を配列として返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>get_extension_funcs</function></funcdef>
      <paramdef>string <parameter>module_name</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、<parameter>module_name</parameter>で示したモジュール
     で定義された全ての関数の名前を返します。
    </para>
    <para>
     例えば以下のようになります。
     <informalexample>
      <programlisting role="php">
print_r (get_extension_funcs(&quot;xml&quot;));
print_r (get_extension_funcs(&quot;gd&quot;));
      </programlisting>
     </informalexample>
     この例は、モジュール<varname>xml</varname>および
     <varname>gd</varname>の関数のリストをそれぞれ表示します。
    </para>
    <para>
     <function>get_loaded_extensions</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.get-required-files">
   <refnamediv>
    <refname>get_required_files</refname>
    <refpurpose>
     あるスクリプトでrequire_once()またはincluded_once()でロードされた
     ファイルの名前を配列として返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>get_required_files</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、<function>require_once</function>または
     <function>include_once</function> によりスクリプトにロードされた
     全てのファイルの名前を配列として返します。
    </para>
    <note>
     <para>
      PHP 4.0.1pl2においてこの関数は、<varname>required_once</varname>
      で読み込まれるファイルの名前が拡張子&quot;.php&quot;で終ることを
      仮定しており、他の拡張子では動作しません。また、このバージョンで
      は返される配列は連想配列ですあり、この関数は
      <function>get_included_files</function> へのエイリアスではありま
      せんでした。
     </para>
     <para>
      PHP 4.0.4 では、この関数は
      <function>get_included_files</function> へのエイリアスです。
     </para>
    </note>
    </para>
    <para>
     <function>require_once</function>、
     <function>include_once</function>、
     <function>get_included_files</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.get-included-files">
   <refnamediv>
    <refname>get_included_files</refname>
    <refpurpose>
     スクリプトにinclude_once()されたファイルの名前を配列として返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>get_included_files</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、<function>require_once</function>または
     <function>include_once</function> によりスクリプトにロードされた
     全てのファイルの名前を配列として返します。
    </para>
    <para>
     以下に例を示します。
     <example>
      <title>require および include で読み込まれたファイルを出力する</title>
      <programlisting role="php">
&lt;?php

require_once (&quot;local.php&quot;);
require_once (&quot;../inc/global.php&quot;);

for ($i=1; $i&lt;5; $i++)
  include &quot;util&quot;.$i.&quot;php&quot;;

  echo &quot;Required_once/Included_once files\n&quot;;
  print_r (get_required_files());
      </programlisting>
     </example>
     この例の出力は以下のようになります。
     <informalexample>
      <programlisting>
Required_once/Included_once files
Array
(
  [0] =&gt; local.php 
  [1] =&gt; /full/path/to/inc/global.php
  [2] =&gt; util1.php 
  [3] =&gt; util2.php 
  [4] =&gt; util3.php 
  [5] =&gt; util4.php 
)
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      PHP 4.0.1pl2において、この関数は、
      <varname>include_once</varname> で読み込まれるファイルの名前が
      拡張子&quot;.php&quot;で終ることを仮定しており、他の拡張子では
      動作しませんでした。また、このバージョンでは返される配列は連想
      配列であり、includeされたファイルのみが一覧に含まれていました。
     </para>
    </note>
    <para>
     <function>require_once</function>、
     <function>include_once</function>、
     <function>get_required_files</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.zend-version">
   <refnamediv>
    <refname>zend_version</refname>
    <refpurpose>カレントのZendエンジンのバージョンを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>zend_version</function></funcdef>
      <paramdef>void<parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     PHPパーサを現在実行中のZendのバージョンを文字列として返します。
     <example>
      <title><function>zend_version</function>の例</title>
      <programlisting role="php">
// 例えば、'Zend engine version: 1.0.4' を出力
echo "Zend engine version: ".zend_version();
      </programlisting>
     </example>
    </para>
    <para>
     <function>phpinfo</function>, 
     <function>phpcredits</function>,
     <function>php_logo_guid</function>
     <function>phpversion</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
