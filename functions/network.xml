<reference id="ref.network">
  <title>ネットワーク関数</title>
  <titleabbrev>ネットワーク</titleabbrev>

  <refentry id="function.checkdnsrr">
   <refnamediv>
    <refname>checkdnsrr</refname>
    <refpurpose>指定したインターネットホスト名もしくはIPアドレスに
    対応するDNSレコードを検索します。</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>checkdnsrr</function></funcdef>
     <paramdef>string <parameter>host</parameter></paramdef>
     <paramdef>string <parameter><optional>type</optional></parameter></paramdef>
    </funcsynopsis>

    <simpara>
     <parameter>host</parameter>に対応する<parameter>type</parameter>
     型のレコードをDNSから探します。レコードが見つかった場合、TRUE を
     返し、何も見つからないかエラーが発生した場合、FALSE を返します。
     <parameter>type</parameter>は、A, MX, NS, SOA, PTR, CNAMEもしくは
     ANYのどれか一つです。デフォルトはMXです。</simpara>
    <simpara>
     <parameter>host</parameter>は、 4つのドットを用いた表記の
     IPアドレスもしくはホスト名です。</simpara>
    <simpara>
     <function>getmxrr</function>,
     <function>gethostbyaddr</function>, 
     <function>gethostbyname</function>, 
     <function>gethostbynamel</function>および
     named(8)マニュアルページも参考にしてください。</simpara>
   </refsect1>
  </refentry>

  <refentry id="function.closelog">
   <refnamediv>
    <refname>closelog</refname>
    <refpurpose>システムログへの接続を閉じます。</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>closelog</function></funcdef>
     <void/>
    </funcsynopsis>
    <para>
     <function>closelog</function>はシステムログへの書きこみに使用
     されているデスクプリタを閉じます。<function>closelog</function>の
     使用はオプションです。</para>
   </refsect1>
  </refentry>

  <refentry id="function.debugger-on">
   <refnamediv>
    <refname>debugger_on</refname>
    <refpurpose>PHP 内蔵デバッガーを有効にします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>debugger_on</function></funcdef>
     <paramdef>string <parameter>address</parameter></paramdef>
    </funcsynopsis>
    <para>
     PHP の内部デバッガーを有効にし、<parameter>address</parameter>に
     接続します。デバッガーは開発用機能です。</para>
   </refsect1>
  </refentry>

  <refentry id="function.debugger-off">
   <refnamediv>
    <refname>debugger_off</refname>
    <refpurpose>PHP 内蔵デバッガーを無効にします。</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>debugger_off</function></funcdef>
     <void/>
    </funcsynopsis>
    <para>
     PHP の内部デバッガーを無効にします。デバッガーは開発用機能です。</para>
   </refsect1>
  </refentry>


  <refentry id="function.fsockopen">
   <refnamediv>
    <refname>fsockopen</refname>
    <refpurpose>インターネットもしくはUNIXドメインのソケット接続をオープンします</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>fsockopen</function></funcdef>
     <paramdef>string <parameter>hostname</parameter></paramdef>
     <paramdef>int <parameter>port</parameter></paramdef>
     <paramdef>int <parameter><optional>errno</optional></parameter></paramdef>
     <paramdef>string <parameter><optional>errstr</optional></parameter></paramdef>
     <paramdef>double
     <parameter><optional>timeout</optional></parameter></paramdef>
    </funcsynopsis>

    <para>
    
    Internet (AF_INET) ドメインまたは Unix (AF_UNIX)ドメインにおいて
    ストリーム接続を初期化します。
    Internet ドメインの場合、
     <parameter>hostname</parameter> のポート <parameter>port</parameter>
     へのTCPソケット接続がオープンされます。
     Unix ドメインの場合、<parameter>hostname</parameter> あｈソケットへの
     パスとして使用され、<parameter>port</parameter> はこの場合0とする
     必要があります。
     オプションの<parameter>timeout</parameter> により接続システムコール
     がタイムアウトするまでの秒数を指定することが可能です。</para>

   <para>
     <function>fsockopen</function>は、ファイルポインタを返します。
	このファイルポインタは、
     (<function>fgets</function>,<function>fgetss</function>,
     <function>fputs</function>, <function>fclose</function>,
	<function>feof</function>
	のような)
     他のファイル関数で使用可能です。</para>

	<para>
     呼び出しに失敗すると FALSE が返され、オプションの
     <parameter>errno</parameter>および<parameter>errstr</parameter>
     引数が指定されている場合、システムレベル の connect() コールで生じた
     実際のシステムレベルエラーを示すように設定されます。
     errno は 0 なのに、返り値がFALSEであれば、connect()の呼び出しの前に
     エラーが発生したことを示します。この場合、おそらくはソケットの初期化に
     原因があります。引数 errno および errstr は参照渡しでなければならない
     ことに注意してください。</para>

      <para>
		環境により、UNIXドメインまたはオプションの接続タイムアウトは利用
	できません。</para>

    <para>
     ソケットはデフォルトでブロックモードで開かれます。
     <function>set_socket_blocking</function>を使用して、
     非ブロックモードに切換えることができます。
	 <example>
	  <title>fsockopen の例</title>
	  <programlisting>
$fp = fsockopen("www.php.net", 80, &$errno, &$errstr, 30);
if(!$fp) {
	echo "$errstr ($errno)&lt;br&gt;\n";
} else {
	fputs($fp,"GET / HTTP/1.0\n\n");
	while(!feof($fp)) {
		echo fgets($fp,128);
	}
	fclose($fp);
}
	  </programlisting>
	 </example>

     <function>pfsockopen</function>も参照下さい。</para>
     
   </refsect1>
  </refentry>


  <refentry id="function.gethostbyaddr">
   <refnamediv>
    <refname>gethostbyaddr</refname>
    <refpurpose>与えられたIPアドレスに対応するインターネットホスト名を取得
    します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>gethostbyaddr</function></funcdef>
     <paramdef>string <parameter>ip_address</parameter></paramdef>
    </funcsynopsis>

    <para>
    <parameter>ip_address</parameter>で指定されるインターネットホストの
    ホスト名を返します。エラーが発生した場合、
    <parameter>ip_address</parameter>を
    返します。</para>

     <para>
     <function>gethostbyname</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.gethostbyname">
   <refnamediv>
    <refname>gethostbyname</refname>
    <refpurpose>インターネットホスト名に対応するIPアドレスを取得します。
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>gethostbyname</function></funcdef>
     <paramdef>string <parameter>hostname</parameter></paramdef>
    </funcsynopsis>

    <para>
     <parameter>hostname</parameter>で指定されるインターネットホストの
     IPアドレスを返します。</para>
     <para>
     <function>gethostbyaddr</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.gethostbynamel">
   <refnamediv>
    <refname>gethostbynamel</refname>
    <refpurpose>
    与えられたインターネットホスト名に対応するIPアドレスのリストを取得。
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>array <function>gethostbynamel</function></funcdef>
     <paramdef>string <parameter>hostname</parameter></paramdef>
    </funcsynopsis>

    <para>
     <parameter>hostname</parameter> で指定した
     インターネットホストを検索して得られた IPアドレスのリストを返します。</para>
	 
    <para>
     <function>gethostbyname</function>,
     <function>gethostbyaddr</function>, 
     <function>checkdnsrr</function>,
     <function>getmxrr</function>および
     named(8)マニュアルページも参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.getmxrr">
   <refnamediv>
    <refname>getmxrr</refname>
    <refpurpose>与えられたインターネットホスト名に対応するMXレコードを
    取得します。</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>getmxrr</function></funcdef>
     <paramdef>string <parameter>hostname</parameter></paramdef>
     <paramdef>array <parameter>mxhosts</parameter></paramdef>
     <paramdef>array <parameter><optional>weight</optional></parameter></paramdef>
    </funcsynopsis>

    <simpara>
     <parameter>hostname</parameter>に対応するMXレコードをDNSから探します。
     何かレコードが見つかった場合 TRUEを返し、何も見つからないか、エラーが
     発生したら、FALSE を返します。</simpara>
    <simpara>
     見つかったMXレコードのリストは、配列<parameter>mxhosts</parameter>
     に収容されます。配列<parameter>weight</parameter>が指定された場合、
     得られた重み情報で埋められます。</simpara>

    <simpara>
     <function>checkdnsrr</function>,
     <function>gethostbyname</function>,
     <function>gethostbynamel</function>,
     <function>gethostbyaddr</function>および
     named(8)マニュアルページも参考にしてください。</simpara>
   </refsect1>
  </refentry>

   <refentry id="function.getprotobyname">
    <refnamediv>
     <refname>getprotobyname</refname>
     <refpurpose>プロトコル名のプロトコル番号を得る</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
      <funcdef>int <function>getprotobyname</function></funcdef>
      <paramdef>string <parameter>name</parameter></paramdef>
     </funcsynopsis>
 
     <para>
      <function>getprotobyname</function> は、プロトコル <parameter>name</parameter>
      のプロトコル番号を /etc/protocols から取得して返します。
      <function>getprotobynumber</function>も参照下さい。</para>
    </refsect1>
   </refentry>
  
   <refentry id="function.getprotobynumber">
    <refnamediv>
     <refname>getprotobynumber</refname>
     <refpurpose>プロトコル番号が指すプロトコル名を得る</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
      <funcdef>string <function>getprotobynumber</function></funcdef>
      <paramdef>int <parameter>number</parameter></paramdef>
     </funcsynopsis>
 
     <para>
      <function>getprotobynumber</function> は、/etc/protocols に基づき
      プロトコル番号 <parameter>number</parameter> が指すプロトコル名を
      返します。
     <function>getprotobyname</function>も参照下さい。</para>
    </refsect1>
   </refentry>
   
   <refentry id="function.getservbyname">
    <refnamediv>
     <refname>getservbyname</refname>
     <refpurpose>インターネットサービスおよびプロトコルが関連するポート番号を得る</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
      <funcdef>int <function>getservbyname</function></funcdef>
      <paramdef>string <parameter>service</parameter></paramdef>
      <paramdef>string <parameter>protocol</parameter></paramdef>
     </funcsynopsis>
    
     <para>
     <function>getservbyname</function> は、/etc/services に基づき、
     指定したプロトコル <parameter>protocol</parameter> に関して
     <parameter>service</parameter> に対応するインターネットポートを
     返します。
     <parameter>protocol</parameter> は、<literal>tcp</literal> または
     <literal>udp</literal>である必要があります。
   
     <function>getservbyport</function>も参照下さい。</para>
    </refsect1>
   </refentry>
 
   <refentry id="function.getservbyport">
    <refnamediv>
     <refname>getservbyport</refname>
     <refpurpose>ポートおよびプロトコルに対応するインターネットサービスを得る</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
      <funcdef>string <function>getservbyport</function></funcdef>
      <paramdef>int <parameter>port</parameter></paramdef>
      <paramdef>string <parameter>protocol</parameter></paramdef>
     </funcsynopsis>
    
     <para>
     <function>getservbyport</function> は、/etc/services に基づき
     指定したプロトコル <parameter>protocol</parameter> に関して
     ポート <parameter>port</parameter> に関連するインターネットサービスを
     返します。
     <parameter>protocol</parameter> は、<literal>tcp</literal> または
     <literal>udp</literal>のどちらかです。
 
     <function>getservbyname</function>も参照下さい。</para>
    </refsect1>
   </refentry>
 
  <refentry id="function.openlog">
   <refnamediv>
    <refname>openlog</refname>
    <refpurpose>システムログへの接続をオープンします。</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>openlog</function></funcdef>
     <paramdef>string <parameter>ident</parameter></paramdef>
     <paramdef>int <parameter>option</parameter></paramdef>
     <paramdef>int <parameter>facility</parameter></paramdef>
    </funcsynopsis>

    <para>
     <function>openlog</function>は、プログラムによるシステムログへの
     接続をオープンします。
     文字列<parameter>ident</parameter>は、各メッセージに
     追加されます。<parameter>option</parameter>および
     <parameter>facility</parameter>の値は、次節で説明します。
     openlog()の使用はオプションで、必要な場合に
     <function>syslog</function>により自動的に呼び出されます。
     この場合、ident のデフォルト値は<literal>FALSE</literal>となります。

     <function>syslog</function>および<function>closelog</function>も
     参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.pfsockopen">
   <refnamediv>
    <refname>pfsockopen</refname>
    <refpurpose>持続的な Internet または Unix ドメインソケット接続をオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <funcsynopsis>
     <funcdef>int <function>pfsockopen</function></funcdef>
     <paramdef>string <parameter>hostname</parameter></paramdef>
     <paramdef>int <parameter>port</parameter></paramdef>
     <paramdef>int <parameter><optional>errno</optional></parameter></paramdef>
     <paramdef>string <parameter><optional>errstr</optional></parameter></paramdef>
     <paramdef>int
     <parameter><optional>timeout</optional></parameter></paramdef>
    </funcsynopsis>

    <para>
    この関数は、<function>fsockopen</function> と全く同様に動作します。
    ただし、この関数による接続はリクエストが終了した後でも閉じられない
    という違いがあります。
    この関数は、<function>fsockopen</function>の持続的接続版です。</para>
   </refsect1>
  </refentry>

   <refentry id="function.set-socket-blocking">
   <refnamediv>
    <refname>set_socket_blocking</refname>
    <refpurpose>ソケットにおけるブロック/非ブロックモードの設定</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>set_socket_blocking</function></funcdef>
     <paramdef>int <parameter>socket descriptor</parameter></paramdef>
     <paramdef>int <parameter>mode</parameter></paramdef>
    </funcsynopsis>
    <para>
     <parameter>mode</parameter> が FALSE の場合、与えられたソケット
     デスクプリタは非ブロックモードに切換ります。TRUE であれば、
     ブロックモードに切換ります。これは、ソケットからの読みこみを行う
     <function>fgets</function> のコール等に影響します。
     非ブロックモードでは fgets() は常にただちに値を返しますが、
     ブロックモードではデータがソケット上で取得可能になるまで待ちつづけます。</para>
   </refsect1>
  </refentry>

  <refentry id="function.syslog">
   <refnamediv>
    <refname>syslog</refname>
    <refpurpose>システムログメッセージの生成を行います</refpurpose>     
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>syslog</function></funcdef>
     <paramdef>int <parameter>priority</parameter></paramdef>
     <paramdef>string <parameter>message</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>syslog</function>はシステムログが出力するログメッセージを
     生成します。<parameter>priority</parameter>は、容易さとレベルの
     組み合わせで、その値については、次節で説明します。
     残りの引数は送信するメッセージです。
     ただし、2文字 <literal>%m</literal> は、
     <errortype>errno</errortype> の値に対応するエラーメッセージ
     文字列 (strerror) に置換されます。</para>
     <para>
	syslog 機能に関するより詳細な情報は UNIX マシーンの syslog に関する
	man ページにあります。</para>
     <para>
      Windows NT では、 syslog サービスはイベントログによりエミュレート
      されます。</para>
   </refsect1>
  </refentry>

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
