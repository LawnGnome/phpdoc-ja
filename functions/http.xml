 <reference id="ref.http">
  <title>HTTP 関連の関数</title>
  <titleabbrev>HTTP</titleabbrev>

  <partintro>
  <simpara>
  これらの関数は、リモートブラウザに送り返される出力を、HTTP プロトコル
  レベルで制御するためのものです。</simpara>
  </partintro>

  <refentry id="function.header">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>生の HTTP ヘッダを送信する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>header</function></funcdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcsynopsis>
    <para>
    <function>Header</function> 関数は、<acronym>HTML</acronym> ファイル
    の送信に先立って、生の <acronym>HTTP</acronym> ヘッダ文字列を送信
    するために使用します。生の HTTP ヘッダの詳細は、
    <ulink url="&spec.http1.1;">HTTP 1.1 Specification</ulink>を参照して
    下さい。
    <emphasis>注意:</emphasis> 
    覚えておいて頂きたいのは、<function>Header</function> 関数は、
    通常の HTML タグまたは PHP からの出力にかかわらず、すべての実際の出力
    の前にコールされる必要があることです。
    頻出するエラーとして、<function>include</function> または
    auto_prepend を有するコードで空白または空行があると
    <function>header</function> がコールされる前に強制的に出力が
    行われてしまうというものがあります。</para>

    <para>
    header をコールする場合に特別な場合が2つあります。

     There are two special-case header calls.  The first is the &quot;Location&quot;
      header.  Not only does it send this header back to the browser, it also returns
       a REDIRECT status code to Apache.  From a script writer's point of view this
        should not be important, but for people who understand Apache internals it is
	 important to understand.
     <informalexample><programlisting role="php">
header("Location: http://www.php.net");  /* ブラウザをPHP Web サイトにリダイレクトする */
 exit;  /* リダイレクトを行う際に以下のコードが実行されないようにする */
 </programlisting></informalexample></para>
 	<para>
	 The second special-case is any header that starts with the string, &quot;HTTP/&quot;
	 (case is not significant).  For example, if you have your ErrorDocument 404 Apache
	 directive pointed to a PHP script, it would be a good idea to make sure that your
	 PHP script is actually generating a 404.  The first thing you do in your script should
	 then be:
     <informalexample><programlisting role="php">
header("http/1.0 404 Not Found");
	 </programlisting></informalexample>
     </para>

     <para>
     PHP スクリプトはしばしば動的に HTML を生成するため、
     クライアントブラウザや
     サーバーおよびクライアントブラウザの間でプロキシがキャッシュを行ったり
     するべきではありません。
      多くのプロキシとクライアントは、以下のコードにより
      強制的にキャッシュを無効にできます。
      <informalexample><programlisting role="php">
   header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");             // Date in the past
   header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT"); // always modified
   header("Cache-Control: no-cache, must-revalidate");           // HTTP/1.1
   header("Pragma: no-cache");                                   // HTTP/1.0
</programlisting></informalexample></para>
   </refsect1>
  </refentry>

  <refentry id="function.setcookie">
   <refnamediv>
    <refname>setcookie</refname>
    <refpurpose>クッキーを送信する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>setcookie</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>string <parameter>value</parameter></paramdef>
     <paramdef>int <parameter>expire</parameter></paramdef>
     <paramdef>string <parameter>path</parameter></paramdef>
     <paramdef>string <parameter>domain</parameter></paramdef>
     <paramdef>int <parameter>secure</parameter></paramdef>
    </funcsynopsis>
    <para>
    <function>setcookie</function> は、その他のヘッダ情報と共に
    送信するクッキーを定義します。<parameter>name</parameter>
    を除くすべての引数はオプションです。
	クッキーは他のヘッダーを送信する<emphasis>前に</emphasis>送信
	される必要があります。(これはクッキーの制約であってPHPの制約では
	ありません)この制約により
	<literal>&lt;html></literal> または
     <literal>&lt;head></literal> タグの前にこの関数をコールする
	必要があります。</para>
	
    <para>
	引数 <parameter>name</parameter> 以外の全ての引数はオプションです。
	name 引数のみが指定された場合、name という名前のクッキーはリモート
	クライアントから削除されます。
	全ての引数に関して引数の指定をスキップするために空文字列
	(<emphasis>&quot;&quot;</emphasis>)とすることが可能です。
	<parameter>expire</parameter>および <parameter>secure</parameter> 引数
	は空文字列でスキップすることはできません。代わりにゼロ
	(<emphasis>0</emphasis>)を使用してください。
	<parameter>expire</parameter>引数は、
	<function>time</function> または <function>mktime</function> 関数により
	返されたUNIX標準時を現す整数です。
	<parameter>secure</parameter>は、クッキーがHTTPS接続によってのみ
	伝送されることを指定します。</para>
	
   <para>  
	陥りやすい失敗:</para>

    <simpara>
	クッキーはクッキーを有効にするためにページを再ロードするまで
	アクセスすることができません。</simpara>

    <simpara>
	同じスクリプトで<function>setcookie</function>を複数回コールした場合、
	逆の順番で実行されます。他のクッキーを挿入する前に
	あるクッキーを削除しようとする場合、削除する前に挿入を行う必要が
	あります。</simpara>

    <para>
	いくつかの例を以下に示します。
       <example>
       <title><function>setcookie</function> の例</title>
        <programlisting role="php">
setcookie("TestCookie","Test Value");
setcookie("TestCookie",$value,time()+3600);  /* 1時間で期限切れ */
setcookie("TestCookie",$value,time()+3600,"/~rasmus/",".utoronto.ca",1);
</programlisting></example></para>

    <para>
    クッキーの value 部分は、クッキーの送信を行う際に自動的に
    URL エンコードされ、またクッキーを受信した際は、自動的にデコード
    されてクッキー名と同じ名前の変数に格納されます。すなわち、
    スクリプト内部でテスト・クッキーの内容を見たい場合は、単に以下の例の
	うちの一つを使用して下さい。

<informalexample><programlisting role="php">
echo $TestCookie;
echo $HTTP_COOKIE_VARS["TestCookie"];
</programlisting></informalexample></para>

 	<para>
	クッキー名で配列を記述することにより、クッキーの配列を設定することも可能です。
	これにより配列要素と同数のクッキーを設定されますが、
	クッキーがスクリプトに受信された際に、値はクッキー名を有する配列に置きかえられます。
 	 <informalexample>
 	  <programlisting role="php">
 setcookie( "cookie[three]", "cookiethree" );
 setcookie( "cookie[two]", "cookietwo" );
 setcookie( "cookie[one]", "cookieone" );
 if ( isset( $cookie ) ) {
    while( list( $name, $value ) = each( $cookie ) ) {
 	  echo "$name == $value&lt;br&gt;\n";
    }
 }
 	  </programlisting>
 	 </informalexample>
 
 	</para>

    <para>
    クッキーに関する詳細は、<ulink url="&spec.cookies;">&spec.cookies;
    </ulink> にある Netscape のクッキーに関する仕様をご覧ください。</para>

    <simpara>
    サービスパック 1 を適用した Microsoft インターネットエクスプローラ 4 
    は、パスに関するパラメータを設定したクッキーを正確に処理することが
    できません。</simpara>

    <simpara>
     Netscape Communicator 4.05 および Microsoft Internet Explorer 3.x
	は path と time が設定されていない場合、クッキーを正確に処理する
	ことができないようです。</simpara>

   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
