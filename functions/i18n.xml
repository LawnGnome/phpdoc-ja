 <reference id="ref.i18n">
  <title>国際化関数</title>
  <titleabbrev>i18n</titleabbrev>
  <partintro>
   <simpara>
    国際化サポート関数により文字コードの相互変換やマルチバイト検索を始めとする
    日本語を使用した処理を行う際に便利な機能が使用可能となります。
    国際化関数は、PHP3国際化チームにより現在、βテスト中です。
   <simpara>
   この関数を使用するためには、国際化パッチを次の場所から入手する必要が
   あります。
    <ulink
     url="http://php.jpnnet.com/">http://php.jpnnet.com/</ulink>
  </partintro>

  <refentry id="function.i18n-http-output">
   <refnamediv>
    <refname>i18n_http_output</refname>
    <refpurpose>HTTP出力のコードを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>i18n_http_output</function></funcdef>
     <paramdef>string <parameter><optional>code</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>i18n_http_output</function> は、
     HTTP出力のコードを code に設定します。
     以降、ここで指定したコードで出力されます。
     また、引数を指定しないで呼び出すと、現在使用されている
     HTTP出力のコードの名称が文字列として返されます。</para>
    <para>
     コードとして使用可能な文字列と出力コードは次の通りです。
     なお、NONE は使用できません。

     <itemizedlist>
      <listitem><simpara>
	EUC-JP - EUC-JP
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
	pass - 無変換
       </simpara></listitem>
     </itemizedlist>

     </para>
   </refsect1>
  </refentry>

  <refentry id="function.i18n-internal-encoding">
   <refnamediv>
    <refname>i18n_internal_encoding</refname>
    <refpurpose>現在の内部コードを返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>i18n_internal_encoding</function></funcdef>
     <paramdef></paramdef>
    </funcsynopsis>
    <para>
     <function>i18n_internal_enconding</function> は、
     現在の内部コードを文字列として返します。
     返される文字列と対応する内部コードは次の通りです。

     <itemizedlist>
      <listitem><simpara>
	EUC-JP - EUC-JP
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	UTF-8 - UTF-8
       </simpara></listitem>
     </itemizedlist>

     </para>
   </refsect1>
  </refentry>

  <refentry id="function.i18n-http-input">
   <refnamediv>
    <refname>i18n_http_input</refname>
    <refpurpose>HTTP入力のコードを返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>i18n_http_input</function></funcdef>
     <paramdef></paramdef>
    </funcsynopsis>
    <para>
     <function>i18n_http_input</function> は、
     HTTP入力のコードを判定し、結果を文字列として返します。
     返される文字列と対応する出力コードは次の通りです。

     <itemizedlist>
      <listitem><simpara>
	EUC - EUC
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
	UTF-8 - UTF-8
       </simpara></listitem>
      <listitem><simpara>
	NONE - 無変換(i18n.http_inputでpassを指定した場合)
       </simpara></listitem>
     </itemizedlist>

     </para>
   </refsect1>
  </refentry>

  <refentry id="function.i18n-convert">
   <refnamediv>
    <refname>i18n_convert</refname>
    <refpurpose>文字列を指定コードに変換する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>i18n_convert</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>string <parameter>code</parameter></paramdef>
     <paramdef>string <parameter><optional>old_code</optional>
     </parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>i18n_convert</function> は、
     指定した文字列 text を指定したコード code に変換します。
     変換前の文字列の内部コードを old_code として指定しない場合は、
     文字列が現在の内部コードで保存されているものとして変換します。</para>
    <para>
     コードとして使用可能な文字列と出力コードは次の通りです。

     <itemizedlist>
      <listitem><simpara>
	EUC - EUC
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
	UTF-8 - UTF-8
       </simpara></listitem>
      <listitem><simpara>
	NONE - 無変換
       </simpara></listitem>
     </itemizedlist>

     <para>
     また、変換前のコードとして使用可能な文字列と出力コードは次の通りです。

     <itemizedlist>
      <listitem><simpara>
	EUC - EUC
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
	UTF-8 - UTF-8
       </simpara></listitem>
      <listitem><simpara>
	pass - 無変換
       </simpara></listitem>
      <listitem><simpara>
	auto - 自動変換
       </simpara></listitem>
     </itemizedlist>

     </para>
   </refsect1>
  </refentry>


  <refentry id="function.i18n-discover-encoding">
   <refnamediv>
    <refname>i18n_discover_encoding</refname>
    <refpurpose>文字列のコード判定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>i18n_discover_encoding</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>i18n_discover_encoding</function> は、
     指定した文字列 text のコードを判定し、結果を文字列として返します。</para>
    <para>
     返される文字列と対応するコードは以下の通りです。

     <itemizedlist>
      <listitem><simpara>
	EUC-JP - EUC-JP
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
      	UTF-8 - UTF-8
       </simpara></listitem>
      <listitem><simpara>
	ASCII - ASCII（09h, 0Ah, 0Dh, 20h-7Ehのコードのみ）
       </simpara></listitem>
      <listitem><simpara>
        unknown - 不明
       </simpara></listitem>
     </itemizedlist>

     </para>
   </refsect1>
  </refentry>


  <refentry id="function.i18n-mime-header-encode">
   <refnamediv>
    <refname>i18n_mime_header_encode</refname>
    <refpurpose>文字列をMIMEヘッダエンコードする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>i18n_mime_header_encode</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>i18n_mime_header_encode</function> は、
     指定した文字列 text をMIMEヘッダーエンコードし、
     結果を文字列として返します。
     </para>
   </refsect1>
  </refentry>

  <refentry id="function.i18n-mime-header-decode">
   <refnamediv>
    <refname>i18n_mime_header_decode</refname>
    <refpurpose>文字列をMIMEヘッダデコードする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>i18n_mime_header_decode</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>i18n_mime_header_decode</function> は、
     指定した文字列 text をMIMEヘッダーデコードし、
     結果を文字列として返します。
     </para>
   </refsect1>
  </refentry>

  <refentry id="function.i18n-ja-jp-hantozen">
   <refnamediv>
    <refname>i18n_ja_jp_hantozen</refname>
    <refpurpose>文字列の半角文字を全角に変換する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>i18n_ja_jp_hantozen</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>string <parameter><optional>option</optional>
     </parameter></paramdef>
     <paramdef>string <parameter><optional>code</optional>
     </parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>i18n_ja_jp_hantozen</function> は、
     指定した文字列 text の半角文字を全角文字に変換し、
     結果を文字列として返します。

     2番目の引数としてオプション <parameter>option</parameter> を指定することに
     より変換の方法を指定可能です。<parameter>option</parameter> には、
     以下のパラメータを組み合わせた文字列を指定します。
     (デフォルトは "KV" です。)
     
     <itemizedlist>
      <listitem><simpara>
	"r" : 英字を全角から半角に変換
       </simpara></listitem>
      <listitem><simpara>
	"R" : 英字を半角から全角に変換
       </simpara></listitem>
      <listitem><simpara>
        "n" :  数字を全角から半角に変換
       </simpara></listitem>
      <listitem><simpara>
        "N" :  数字を半角から全角に変換
       </simpara></listitem>
      <listitem><simpara>
        "a" :  英数字(21h - 7Eh)を全角から半角に変換
       </simpara></listitem>
      <listitem><simpara>
        "A" :  英数字(21h - 7Eh)を半角から全角に変換
       </simpara></listitem>
      <listitem><simpara>
        "k" :  全角カタカナを半角カナに変換
       </simpara></listitem>
      <listitem><simpara>
        "K" :  半角カナを全角カタカナに変換
       </simpara></listitem>
      <listitem><simpara>
        "h" :  全角ひらがなを半角カナに変換
       </simpara></listitem>
      <listitem><simpara>
        "H" :  半角カナを全角ひらがなに変換
       </simpara></listitem>
      <listitem><simpara>
       "c" :  全角カタカナを全角ひらがなに変換
       </simpara></listitem>
      <listitem><simpara>
       "C" :  全角ひらがなを全角カタカナに変換
       </simpara></listitem>
      <listitem><simpara>
       "V" :  濁音記号を貼り付けて一文字にする、"K"、"H"と組み合わせて使用
       </simpara></listitem>
     </itemizedlist>
     
     オプション <parameter>code</parameter> を指定しない場合、
     現在の内部コードで記憶されているとして処理を行います。</para>

    <para>
     コードとして使用可能な文字列と対応するコードは次の通りです。
     
     <itemizedlist>
      <listitem><simpara>
	EUC-JP - EUC-JP
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
	UTF-8 - UTF-8
       </simpara></listitem>
     </itemizedlist>
     </para>
   </refsect1>
  </refentry>


  <refentry id="function.mbstrlen">
   <refnamediv>
    <refname>mbstrlen</refname>
    <refpurpose>マルチバイト文字列に含まれる文字数を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mbstrlen</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>string <parameter><optional>code</optional>
     </parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mbstrlen</function> は、
     指定した文字列 text に含まれる文字数を返します。
     漢字等のマルチバイト文字は、1文字として認識されます。     
     文字列のコード code を指定しない場合は、現在の内部コードで
     記憶されているものとして処理を行います。</para>

    <para>
     コードとして使用可能な文字列と対応するコードは次の通りです。

     <itemizedlist>
      <listitem><simpara>
	EUC-JP - EUC-JP
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
	UTF-8 - UTF-8
       </simpara></listitem>
      <listitem><simpara>
	auto - 自動認識
       </simpara></listitem>
     </itemizedlist>
     </para>
   </refsect1>
  </refentry>

  <refentry id="function.mbstrpos">
   <refnamediv>
    <refname>mbstrpos</refname>
    <refpurpose>マルチバイト文字列における指定文字列の位置を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mbstrpos</function></funcdef>
     <paramdef>string <parameter>haystack</parameter></paramdef>
     <paramdef>string <parameter>needle</parameter></paramdef>
     <paramdef>int <parameter><optional>offset</optional>
     </parameter></paramdef>
     <paramdef>string <parameter><optional>code</optional>
     </parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mbstrpos</function> は、
     指定した文字列 <parameter>haystack</parameter> において、
     最初に文字列  <parameter>needle</parameter> が見つかった位置を返します。
     漢字等のマルチバイト文字は、1文字として認識されます。
     <para>
     <parameter>needle</parameter>が見つからない場合はfalseを返します。</para>
  <para>
     オプションの <parameter>offset</parameter> パラメータにより
     <parameter>haystack</parameter> のどの文字から検索を開始するかを     
     指定することが可能です。
     この場合でも、返される位置は <parameter>haystack</parameter> の先頭に
     対する相対位置です。    </para>
    <para>
     文字列のコード <function>code</function> を指定しない場合は、
     現在の内部コードで記憶されているものとして処理を行います。</para>

    <para>
     コードとして使用可能な文字列と対応するコードは次の通りです。

     <itemizedlist>
      <listitem><simpara>
	EUC-JP - EUC-JP
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
	UTF-8 - UTF-8
       </simpara></listitem>
     </itemizedlist>

    </para>

     <para>
   <function>strpos</function>,<function>mbstrrpos</function>
    も参照下さい。</para>
   </refsect1>
  </refentry>

  <refentry id="function.mbstrrpos">
   <refnamediv>
    <refname>mbstrrpos</refname>
    <refpurpose>マルチバイト文字列において指定文字列が最後に現れる位置を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mbsttrpos</function></funcdef>
     <paramdef>string <parameter>haysatck</parameter></paramdef>
     <paramdef>string <parameter>needle</parameter></paramdef>
     <paramdef>string <parameter><optional>code</optional>
     </parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mbstrrpos</function> は、
     指定した文字列 <parameter>haysatck</parameter> において
     <parameter>needle</parameter>が最後に現れた位置を数字で返します。</para>
     <para>
    <parameter>needle</parameter> が見つからないとfalseを返します。</para>
    <para>
     漢字等のマルチバイト文字は、1文字として認識されます。</para>
     <para>
     文字列のコード <parameter>code</parameter> を指定しない場合は、
     現在の内部コードで記憶されているものとして処理を行います。</para>

    <para>
     コードとして使用可能な文字列と対応するコードは次の通りです。

     <itemizedlist>
      <listitem><simpara>
	EUC-JP - EUC-JP
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
	UTF-8 - UTF-8
       </simpara></listitem>
      <listitem><simpara>
	auto - 自動認識
       </simpara></listitem>
     </itemizedlist>
  </para>

  <para>
    <function>strrpos</function>, <function>mbstrpos</function>
    も参照下さい。</para>
   </refsect1>
  </refentry>

  <refentry id="function.mbsubstr">
   <refnamediv>
    <refname>mbsubstr</refname>
    <refpurpose>マルチバイト文字列において部分文字列を取り出す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mbsubstr</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>int <parameter>start</parameter></paramdef>
     <paramdef>int <parameter><optional>length</optional>
     </parameter></paramdef>
     <paramdef>string <parameter><optional>code</optional>
     </parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mbsubstr</function> は、
     指定した文字列 <parameter>text</parameter> の
     <parameter>start</parameter> で指定した
    位置から <parameter>length</parameter> 文字分の文字を文字列として
    返します。</para>
    <para>
     漢字等のマルチバイト文字は、1文字として認識されます。</para>
     <para>
    引数パラメータ <parameter>start</parameter> ,<parameter>length</parameter> 
    の指定方法等の仕様は、<function>substr</function>と同じです。</para>
     <para>  
     文字列のコード <parameter>code</parameter> を指定しない場合は、
     現在の内部コードで記憶されているものとして処理を行います。</para>

    <para>
     コードとして使用可能な文字列と対応するコードは次の通りです。

     <itemizedlist>
      <listitem><simpara>
	EUC-JP - EUC-JP
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
	UTF-8 - UTF-8
       </simpara></listitem>
     </itemizedlist>

    例:
     <informalexample>
      <programlisting role="php">
$str = "日本語文字列";
echo mbsubstr($str,2),"&lt;BR&gt;"; // "語文字列"を出力します。
echo mbsubstr($str,2,-1),"&lt;BR&gt;"; // "語文字"を出力します。
echo mbsubstr($str,-3,2),"&lt;BR&gt;"; // "文字"を出力します。
echo mbsubstr($str,-3,-2),"&lt;BR&gt;"; // "文"を出力します。
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mbstrcut">
   <refnamediv>
    <refname>mbstrcut</refname>
    <refpurpose>マルチバイト文字列において部分文字列を取り出す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mbstrcut</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>int <parameter>start</parameter></paramdef>
     <paramdef>int <parameter><optional>length</optional>
     </parameter></paramdef>
     <paramdef>string <parameter><optional>code</optional>
     </parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mbstrcut</function> は、
     指定した文字列 <parameter>text</parameter> の
     <parameter>start</parameter> バイト目から
    <parameter>length</parameter> バイト分の文字列を
    返します。</para>
    <para>
    位置がマルチバイト文字の2バイト目以降の場合はその文字の1バイト目から
    始め、長さに収まり、かつマルチバイト文字またはシフトシーケンスの途中
    とならない最大の位置まで文字列を切り取ります。</para>
    <para>  
    引数パラメータ <parameter>start</parameter> ,<parameter>length</parameter> 
    の指定方法等の仕様は、
    <function>substr</function>と同じです。</para>
   
    <para>
     文字列のコード<parameter>code</parameter>を指定しない場合は、
     現在の内部コードで記憶されているものとして処理を行います。</para>

    <para>
     コードとして使用可能な文字列と対応するコードは次の通りです。

     <itemizedlist>
      <listitem><simpara>
	EUC-JP - EUC-JP
       </simpara></listitem>
      <listitem><simpara>
	SJIS - SJIS
       </simpara></listitem>
      <listitem><simpara>
	JIS - JIS
       </simpara></listitem>
      <listitem><simpara>
	UTF-8 - UTF-8
       </simpara></listitem>
     </itemizedlist>

    例:
     <informalexample>
      <programlisting role="php">
$str = "日本語文字列";
echo mbstrcut($str,2),"&lt;BR&gt;"; // "本語文字列"を出力します。
echo mbstrcut($str,2,-1),"&lt;BR&gt;"; // "本語文字"を出力します。
echo mbstrcut($str,-3,2),"&lt;BR&gt;"; // "字"を出力します。
      </programlisting>
     </informalexample>
    </para>

   </refsect1>
  </refentry>

  <refentry id="function.mbereg">
   <refnamediv>
    <refname>mbereg</refname>
    <refpurpose>正規表現によりマルチバイト文字列を検索する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mbereg</function></funcdef>
     <paramdef>string <parameter>pattern</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
     <paramdef>array <parameter><optional>regs</optional>
     </parameter></paramdef>
    </funcsynopsis>

    <simpara>
    <parameter>pattern</parameter>で与えられた正規表現
    により<parameter>string</parameter>を検索します。
    この関数は、<function>ereg</function>のマルチバイト文字対応版です。</simpara>
    
    <para>    
      文字列中で指定パターンがマッチすると true を返し、マッチしなかった
    場合またはエラーとなった場合は false を返します。</para>

    <para>
    <function>mberegi</function>, <function>ereg</function>
    も参照下さい。</para>

   </refsect1>
  </refentry>

  <refentry id="function.mberegi">
   <refnamediv>
    <refname>mberegi</refname>
    <refpurpose>大文字小文字を区別せずに正規表現により検索する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mberegi</function></funcdef>
     <paramdef>string <parameter>pattern</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
     <paramdef>array <parameter><optional>regs</optional>
     </parameter></paramdef>
    </funcsynopsis>

    <simpara>
    <parameter>pattern</parameter>で与えられた正規表現
    により<parameter>string</parameter>を検索します。
    この関数は、<function>eregi</function>のマルチバイト文字対応版です。</simpara>
    <para>
    この関数は、アルファベット文字をマッチングさせる際に
    大文字小文字の区別をしないこと以外は<function>mbereg</function>と同じです。</para>

    <para>
    <function>mbereg</function>, <function>eregi</function>
    も参照下さい。</para>

   </refsect1>
  </refentry>

  <refentry id="function.mbereg-replace">
   <refnamediv>
    <refname>mbereg_replace</refname>
    <refpurpose>正規表現によりマルチバイト文字列を置換する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>mbereg_replace</function></funcdef>
     <paramdef>string <parameter>pattern</parameter></paramdef>
     <paramdef>string <parameter>replacement</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcsynopsis>
  <para>
    この関数は、<parameter>string</parameter>をスキャンして
    <parameter>pattern</parameter>にマッチするものを探し、
    マッチしたテキストを<parameter>replacement</parameter>
    で置き換えます。</para>
    <para>
    この関数は、<function>ereg_replace</function> の
    マルチバイト文字対応版です。</para>
    <para>
    置換後の文字列が返されます。(マッチしなかった場合は、
    元の文字列が返されます。)</para>
    
   <para>
	<function>mbereg</function>, <function>mberegi</function> および
	<function>ereg_replace</function>も参照下さい。</para>
   </refsect1>
  </refentry>

  <refentry id="function.mberegi-replace">
   <refnamediv>
    <refname>mberegi_replace</refname>
    <refpurpose>正規表現によりマルチバイト文字列を置換する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>mberegi_replace</function></funcdef>
     <paramdef>string <parameter>pattern</parameter></paramdef>
     <paramdef>string <parameter>replacement</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcsynopsis>
   <para>
    この関数は、アルファベット文字をマッチングさせる際に大文字
    小文字の区別をしないこと以外は<function>mbereg_replace</function>と
    同じです。</para>

    <para>
    <function>mbereg</function>, <function>mberegi</function>
    および<function>mbereg_replace</function>も参照下さい。</para>

   </refsect1>
  </refentry>

  <refentry id="function.mbsplit">
   <refnamediv>
    <refname>mbsplit</refname>
    <refpurpose>正規表現によりマルチバイト文字列を分割する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>array <function>mbsplit</function></funcdef>
     <paramdef>string <parameter>pattern</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
     <paramdef>int <parameter>limit</parameter></paramdef>
    </funcsynopsis>
    <para>
    この関数は、正規表現により文字列 <parameter>string</parameter>
    を分割し、結果を分割した各部分文字列を含む配列として返します。</para>
    <para>
    エラーが起こると false を返します。</para>
    <para>
    この関数は、<function>split</function> のマルチバイト文字対応版です。</para>

   </refsect1>
  </refentry>


 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
