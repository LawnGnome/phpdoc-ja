 <reference id="ref.mcrypt">
  <title>暗号化関数</title>
  <titleabbrev>mcrypt</titleabbrev>
  
  <partintro>
   <para>
   ここで示す関数は、<ulink url="&url.mcrypt;">mcrypt</ulink> を
   使用して動作します。</para>

   <para>
   この関数は、CBC, OFB, CFB ,ECB 暗号モードの
   DES,TripleDES,Blowfish (デフォルト),3-WAY,
    SAFER-SK64, SAFER-SK128, TWOFISH, TEA, RC2 ,GOST の
    ような広範なブロックアルゴリズムをサポートする
   mcrypt ライブラリへのインターフェースです。
   加えて、"フリーではない" を思われるRC6 および IDEA もサポートします。</para>

   <para>
   これを使用するには、<ulink url="&url.mcrypt;">ここ</ulink> から
    libmcrypt-x.x.tar.gz をダウンロードし、含まれているインストール用の
    指示に従って下さい。この拡張機能を利用可能にするためには、
    PHP を <option role="configure">--with-mcrypt</option> パラメータを
    付けてコンパイルする必要があります。</para>

   <para>
    mcrypt は、上に示した暗号を用いて暗号化および複合化を
    行うことが可能です。4つの重要な mcrypt コマンド
    (<function>mcrypt_cfb</function>, <function>mcrypt_cbc</function>,
    <function>mcrypt_ecb</function>, 
    <function>mcrypt_ofb</function>) は、
    MCRYPT_ENCRYPT および MCRYPT_DECRYPT という
    2つのモードの両方で実行可能です。
    
    <example>
     <title>入力値を ECB モードの TripleDES で暗号化する</title>
     <programlisting role="php">
&lt;?php
$key = "this is a very secret key";
$input = "Let us meet at 9 o'clock at the secret place.";

$encrypted_data = mcrypt_ecb(MCRYPT_TripleDES, $key, $input, MCRYPT_ENCRYPT);
?&gt;
     </programlisting>
    </example>

    この例では、$encrypted_data に文字列として暗号化されたデータが
    返されます。</para>

   <para>
    mcrypt は、4つの暗号化モード (CBC, OFB, CFB, ECB) で実行可能です。
    ここで、これらの各モードの通常の使用法の概要を示します。
    詳細なリファレンスおよび議論に関しては、
    &book.applied.cryptography; を参照下さい。

    <itemizedlist>
     <listitem><simpara>
      ECB (electronic codebook) は、他のキーを暗号化するといった
      ランダムデータに適しています。
      出力データは短くランダムであるという ECB の短所は、
      都合の良い逆の効果を持っています。</simpara></listitem>

     <listitem><simpara>
      CBC (cipher block chaining) は、特に、
      ECB よりも著しく高いセキュリティで
      ファイルを暗号化する用途に適しています。</simpara></listitem>

     <listitem><simpara>
      CFB (cipher feedback) は、1バイト毎に暗号化する必要がある
      バイトストリームを暗号化する際に最も適したモードです。</simpara></listitem>

     <listitem><simpara>
      OFB (output feedback) は CFB と互換性がありますが、
      エラーの伝播が許容されないアプリケーションに
      使用することが可能です。</simpara></listitem>
    </itemizedlist></para>
    
   <para>
    PHP は、現在ビットストリームの暗号化/複合化をサポートしていません。
    現在のところ、PHP は文字列の処理のみをサポートしています。</para>

   <para>
   サポートされる暗号の完全なリストについては、mcrypt.h の define を
   参照下さい。
   一般に、特定の暗号は、PHP で MCRYPT_暗号名 とすることによりアクセス
   可能です。</para>
   
   <para>
   以下に現在 mcrypt 拡張機能においてサポートされている暗号の簡単なリストを
   示します。mcrypt がサポートする暗号がこのリストにのっていない場合、
   このドキュメントが古いと仮定して下さい。

    <itemizedlist>

     <listitem><simpara>
      MCRYPT_BLOWFISH</simpara></listitem>
     <listitem><simpara>
      MCRYPT_DES</simpara></listitem>
     <listitem><simpara>
      MCRYPT_TripleDES</simpara></listitem>
     <listitem><simpara>
      MCRYPT_ThreeWAY</simpara></listitem>
     <listitem><simpara>
      MCRYPT_GOST</simpara></listitem>
     <listitem><simpara>
      MCRYPT_CRYPT</simpara></listitem>
     <listitem><simpara>
      MCRYPT_DES_COMPAT</simpara></listitem>
     <listitem><simpara>
      MCRYPT_SAFER64</simpara></listitem>
     <listitem><simpara>
      MCRYPT_SAFER128</simpara></listitem>
     <listitem><simpara>
      MCRYPT_CAST128</simpara></listitem>
     <listitem><simpara>
      MCRYPT_TEAN</simpara></listitem>
     <listitem><simpara>
      MCRYPT_RC2</simpara></listitem>
     <listitem><simpara>
      MCRYPT_TWOFISH (古い mcrypt 2.x バージョン用)</simpara></listitem>
     <listitem><simpara>
      MCRYPT_TWOFISH128 (TWOFISHxxx は最近の 2.x バージョンで利用可能)</simpara></listitem>
     <listitem><simpara>
      MCRYPT_TWOFISH192</simpara></listitem>
     <listitem><simpara>
      MCRYPT_TWOFISH256</simpara></listitem>
     <listitem><simpara>
      MCRYPT_RC6</simpara></listitem>
     <listitem><simpara>
      MCRYPT_IDEA</simpara></listitem>

    </itemizedlist></para>

   <para>
   CFB および OFBモードではそれぞれの暗号関数に初期化ベクトル(IV) を与える
   必要があり、CBCモードではIVを指定することが可能です。
   IV は、ユニークである必要があり、暗号化/複合化の際に同じである
   必要があります。
   暗号化されて保存されたデータの場合、関数の出力を
    (ファイル名の MD5 キーのように) 保存されたデータの位置を表す
    インデックスとして使用することができます。
    もしくは、暗号化されたデータと共にIV を渡すことができます。
    (このトピックに関する議論については、&book.applied.cryptography; の 9.3 章
    を参照下さい)</para>

  </partintro>
  
  <refentry id="function.mcrypt-get-cipher-name">
   <refnamediv>
    <refname>mcrypt_get_cipher_name</refname>
    <refpurpose>指定した暗号の名前を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>mcrypt_get_cipher_name</function></funcdef>
     <paramdef>int <parameter>cipher</parameter></paramdef>
    </funcsynopsis>
	
    <para>
     <function>mcrypt_get_cipher_name</function> は、指定した暗号(cipher)
     の名前を得るために使用されます。</para>

    <para>
     <function>mcrypt_get_cipher_name</function> は、暗号番号を引数とし、
     暗号名を返します。指定した暗号が存在しない場合は、false を返します。</para>
     
    <para>
     <example>
      <title>mcrypt_get_cipher_name の例</title>
      <programlisting>
&lt;?php
$cipher = MCRYPT_TripleDES;

print mcrypt_get_cipher_name($cipher);
?&gt;
      </programlisting>
     </example></para>
	 
    <para>
    上の例の出力は次のようになります。
     <programlisting>
TripleDES
     </programlisting></para>
	
   </refsect1>
  </refentry>
  
  <refentry id="function.mcrypt-get-block-size">
   <refnamediv>
    <refname>mcrypt_get_block_size</refname>
    <refpurpose>指定した暗号のブロックサイズを得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mcrypt_get_block_size</function></funcdef>
     <paramdef>int <parameter>cipher</parameter></paramdef>
    </funcsynopsis>
	
    <para>
     <function>mcrypt_get_block_size</function> は、指定した
     <parameter>cipher</parameter> のブロックのサイズを返します。</para>

    <para>
     <function>mcrypt_get_block_size</function> は、
     <parameter>cipher</parameter> を引数と氏、サイズを
     バイト数で返します。</para>

    <para>
     <function>mcrypt_get_key_size</function> も参照下さい。 </para>

   </refsect1>
  </refentry>
  
  <refentry id="function.mcrypt-get-key-size">
   <refnamediv>
    <refname>mcrypt_get_key_size</refname>
    <refpurpose>指定した暗号のキーの長さを得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mcrypt_get_key_size</function></funcdef>
     <paramdef>int <parameter>cipher</parameter></paramdef>
    </funcsynopsis>
	
    <para>
     <function>mcrypt_get_key_size</function> は、
     指定して <parameter>cipher</parameter> のキーの長さを得るために
     使用されます。</para>

    <para>
     <function>mcrypt_get_key_size</function> は、
     <parameter>cipher</parameter> を引数とし、
     長さをバイト数で返します。</para>

    <para>
     <function>mcrypt_get_block_size</function> も参照下さい。</para>

   </refsect1>
  </refentry>
  
  <refentry id="function.mcrypt-create-iv">
   <refnamediv>
    <refname>mcrypt_create_iv</refname>
    <refpurpose>乱数ソースから初期化ベクトル(IV)を生成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string
     <function>mcrypt_create_iv</function></funcdef>
     <paramdef>int <parameter>size</parameter></paramdef>
     <paramdef>int <parameter>source</parameter></paramdef>
    </funcsynopsis>
	
    <para>
     <function>mcrypt_create_iv</function> は、IV を生成するために
     使用されます。</para>

    <para>
     <function>mcrypt_create_iv</function> は、2つの引数、
     IV のサイズを定義する <parameter>size</parameter> および
     IV のソースを指定して <parameter>source</parameter>
     をとります。</para>
     
    <para>
     source には、MCRYPT_RAND (システムの乱数生成器),
     MCRYPT_DEV_RANDOM (/dev/random からデータを読む) ,MCRYPT_DEV_URANDOM
     (/dev/urandom からデータを読む) を指定できます。
     MCRYPT_RAND を使用した場合、乱数生成器を初期化するために
     必ず前もって srand() をコールして下さい。</para>

    <para>
     <example>
      <title>mcrypt_create_iv の例</title>
      <programlisting>
&lt;?php
$cipher = MCRYPT_TripleDES;
$block_size = mcrypt_get_block_size($cipher);
$iv = mcrypt_create_iv($block_size, MCRYPT_DEV_RANDOM);
?&gt;
      </programlisting>
     </example></para>

   </refsect1>
  </refentry>
 
  <refentry id="function.mcrypt-cbc">
   <refnamediv>
    <refname>mcrypt_cbc</refname>
    <refpurpose>CBC モードでデータを暗号化/複合化する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mcrypt_cbc</function></funcdef>
     <paramdef>int <parameter>cipher</parameter></paramdef>
     <paramdef>string <parameter>key</parameter></paramdef>
     <paramdef>string <parameter>data</parameter></paramdef>
     <paramdef>int <parameter>mode</parameter></paramdef>
     <paramdef>string <parameter><optional>iv</optional></parameter></paramdef>
    </funcsynopsis>
	
    <para>
     <function>mcrypt_cbc</function> は、CBC 暗号化モードで
     <parameter>cipher</parameter> および <parameter>key</parameter> 
     を用いて
     (<parameter>mode</parameter> に応じて) <parameter>data</parameter> を
     暗号化または複合化し、結果を文字列として返します。</para>
    
    <para>
     <parameter>cipher</parameter> には、定数 MCRYPT_暗号名 のうちの一つを
     指定します。</para>

    <para>
     <parameter>key</parameter> は、アルゴリズムに与えるキーです。
     キーは、秘密にする必要があります。</para>

    <para>
     <parameter>data</parameter> は、暗号化/複合化するデータです。</para>
     
    <para>
     <parameter>mode</parameter> は、MCRYPT_ENCRYPT または MCRYPT_DECRYPT
     です。</para>

    <para>
     <parameter>iv</parameter> はオプションの初期化ベクトルです。</para>

    <para>
     <function>mcrypt_cfb</function>,
     <function>mcrypt_ecb</function>,
     <function>mcrypt_ofb</function> も参照下さい。</para>
	 
   </refsect1>
  </refentry>

  <refentry id="function.mcrypt-cfb">
   <refnamediv>
    <refname>mcrypt_cfb</refname>
    <refpurpose>CFB モードでデータを暗号化/複合化する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mcrypt_cfb</function></funcdef>
     <paramdef>int <parameter>cipher</parameter></paramdef>
     <paramdef>string <parameter>key</parameter></paramdef>
     <paramdef>string <parameter>data</parameter></paramdef>
     <paramdef>int <parameter>mode</parameter></paramdef>
     <paramdef>string <parameter>iv</parameter></paramdef>
    </funcsynopsis>
	
    <para>
     <function>mcrypt_cfb</function> は、CFB 暗号化モードで
     <parameter>cipher</parameter> および <parameter>key</parameter> 
     を用いて
     (<parameter>mode</parameter> に応じて) <parameter>data</parameter> を
     暗号化または複合化し、結果を文字列として返します。</para>
    
    <para>
     <parameter>cipher</parameter> には、定数 MCRYPT_暗号名 のうちの一つを
     指定します。</para>

    <para>
     <parameter>key</parameter> は、アルゴリズムに与えるキーです。
     キーは、秘密にする必要があります。</para>

    <para>
     <parameter>data</parameter> は、暗号化/複合化するデータです。</para>
     
    <para>
     <parameter>mode</parameter> は、MCRYPT_ENCRYPT または MCRYPT_DECRYPT
     です。</para>

    <para>
     <parameter>iv</parameter> はオプションの初期化ベクトルです。</para>

    <para>
     <function>mcrypt_cbc</function>,
     <function>mcrypt_ecb</function>,
     <function>mcrypt_ofb</function>
     も参照下さい。</para>
	 
   </refsect1>
  </refentry>
  
  <refentry id="function.mcrypt-ecb">
   <refnamediv>
    <refname>mcrypt_ecb</refname>
    <refpurpose>ECB モードでデータを暗号化/複合化する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mcrypt_ecb</function></funcdef>
     <paramdef>int <parameter>cipher</parameter></paramdef>
     <paramdef>string <parameter>key</parameter></paramdef>
     <paramdef>string <parameter>data</parameter></paramdef>
     <paramdef>int <parameter>mode</parameter></paramdef>
    </funcsynopsis>
	
    <para>
     <function>mcrypt_ecb</function> は、ECB 暗号化モードで
     <parameter>cipher</parameter> および <parameter>key</parameter> 
     を用いて
     (<parameter>mode</parameter> に応じて) <parameter>data</parameter> を
     暗号化または複合化し、結果を文字列として返します。</para>
    
    <para>
     <parameter>cipher</parameter> には、定数 MCRYPT_暗号名 のうちの一つを
     指定します。</para>

    <para>
     <parameter>key</parameter> は、アルゴリズムに与えるキーです。
     キーは、秘密にする必要があります。</para>

    <para>
     <parameter>data</parameter> は、暗号化/複合化するデータです。</para>
     
    <para>
     <parameter>mode</parameter> は、MCRYPT_ENCRYPT または MCRYPT_DECRYPT
     です。</para>

    <para>
     <parameter>iv</parameter> はオプションの初期化ベクトルです。</para>

    <para>
     <function>mcrypt_cbc</function>,
     <function>mcrypt_cfb</function>,
     <function>mcrypt_ofb</function>
     も参照下さい。</para>
	 
   </refsect1>
  </refentry>

  <refentry id="function.mcrypt-ofb">
   <refnamediv>
    <refname>mcrypt_ofb</refname>
    <refpurpose>OFB モードでデータを暗号化/複合化する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>mcrypt_ofb</function></funcdef>
     <paramdef>int <parameter>cipher</parameter></paramdef>
     <paramdef>string <parameter>key</parameter></paramdef>
     <paramdef>string <parameter>data</parameter></paramdef>
     <paramdef>int <parameter>mode</parameter></paramdef>
     <paramdef>string <parameter>iv</parameter></paramdef>
    </funcsynopsis>
	
    <para>
     <function>mcrypt_ofb</function> は、OFB 暗号化モードで
     <parameter>cipher</parameter> および <parameter>key</parameter> 
     を用いて
     (<parameter>mode</parameter> に応じて) <parameter>data</parameter> を
     暗号化または複合化し、結果を文字列として返します。</para>
    
    <para>
     <parameter>cipher</parameter> には、定数 MCRYPT_暗号名 のうちの一つを
     指定します。</para>

    <para>
     <parameter>key</parameter> は、アルゴリズムに与えるキーです。
     キーは、秘密にする必要があります。</para>

    <para>
     <parameter>data</parameter> は、暗号化/複合化するデータです。</para>
     
    <para>
     <parameter>mode</parameter> は、MCRYPT_ENCRYPT または MCRYPT_DECRYPT
     です。</para>

    <para>
     <parameter>iv</parameter> はオプションの初期化ベクトルです。</para>

    <para>
     <function>mcrypt_cbc</function>,
     <function>mcrypt_cfb</function>,
     <function>mcrypt_ecb</function> も参照下さい。</para>
	 
   </refsect1>
  </refentry>
 
 </reference> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
