
 <reference id="ref.sybase">
  <title>Sybase 関数</title>
  <titleabbrev>Sybase</titleabbrev>

   <refentry id="function.sybase-affected-rows">
    <refnamediv>
     <refname>sybase_affected_rows</refname>
     <refpurpose>直近のクエリーで変更された行の数を得る</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
      <funcdef>int <function>sybase_affected_rows</function></funcdef>
      <paramdef>int <parameter><optional>link_identifier</optional>
                    </parameter></paramdef>
     </funcsynopsis>
     <para>
      返り値: 直近のクエリーで変更された行の数。</para>
     <para>
      <function>sybase_affected_rows</function> は、
      指定したリンク ID が指すサーバーにおいて
      直近の INSERT、UPDATE、DELETE クエリーで変更された行の数を返します。
      リンク ID が指定されない場合、最後にオープンされたリンクが仮定されます。</para>
     <para>
     このコマンドは、SELECT 文には使用できません。レコードを変更する
     文のみに使用できます。
     SELECT から返された行の数を得たい場合、
     <function>sybase_num_rows</function> を使用して下さい。
    <note>
     <para>
     この関数は、DB ライブラリではなく、Sybase への CT ライブラリインターフェースを使用して
     いる場合にのみ使用可能です。
     </para>
    </note></para>
    </refsect1>
   </refentry>
 
  <refentry id="function.sybase-close">
   <refnamediv>
    <refname>sybase_close</refname>
    <refpurpose>Sybase 接続を閉じます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_close</function></funcdef>
     <paramdef>int <parameter>リンク ID</parameter></paramdef>
    </funcsynopsis>
    <para>返り値: 成功時に TRUE 、エラー時に FALSE を返します。
    </para>
    <para> sybase_close() は、指定されたリンクIDが指す Sybase データベース
    へのリンクを閉じます。
    リンクIDが指定されない場合、最後にオープンされたリンクが指定されたと
    仮定されます。
    </para>
    <para> 
    非持続的なリンクは、スクリプトの実行終了時に自動的に閉じられるため、
    この関数は、通常の場合コールする必要がないことに注意してください。
    </para>
    <para> sybase_close() は、sybase_pconnect() により生成された
    持続的なリンクを閉じません。
    </para>
    <para> <function>sybase_connect</function> および
                     <function>sybase_pconnect</function> も参照下さい。
    </para> 
   </refsect1>
  </refentry>

  <refentry id="function.sybase-connect">
   <refnamediv>
    <refname>sybase_connect</refname>
    <refpurpose>Sybase サーバー接続をオープンします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_connect</function></funcdef>
     <paramdef>string <parameter>サーバー名</parameter></paramdef>
     <paramdef>string <parameter>ユーザー名</parameter></paramdef>
     <paramdef>string <parameter>パスワード</parameter></paramdef>
    </funcsynopsis>
    <para> 成功時に正の Sybase リンク ID を、エラー時に FALSE を返します。
    </para>
    <para> sybase_connect() は、Sybase サーバーへの接続を確立します。
    引数サーバー名は、'interfaces' ファイル中で定義された有効なサーバー名
    である必要があります。
    </para>
    <para> 同じ引数で sybase_connect() を2度コールした場合、
    新たなリンクは確立されず、代わりに、既にオープンされた
    リンクのリンク ID が返されます。
    </para>
    <para> 
    <function>sybase_close</function> をコールすることにより明示的に
    閉じた場合を除き、サーバーへのリンクはスクリプトの実行終了時に
    閉じられます。
    </para>
    <para><function>sybase_pconnect</function> および
                   <function>sybase_close</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-data-seek">
   <refnamediv>
    <refname>sybase_data_seek</refname>
    <refpurpose>内部行ポインタを移動します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_data_seek</function></funcdef>
     <paramdef>int <parameter>結果 ID</parameter></paramdef>
     <paramdef>int <parameter>行番号</parameter></paramdef>
    </funcsynopsis>
    <para> 返り値: 成功の場合に TRUE 、失敗の場合に FALSE 
    </para>
    <para> sybase_data_seek() は、指定された結果 ID を指す 
    Sybase 結果の内部行ポインタを指定した行番号へのポインタに移動します。
    <function>sybase_fetch_row</function> を次にコールした場合、
    その行が返されます。
    </para>
    <para> <function>sybase_data_seek</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-array">
   <refnamediv>
    <refname>sybase_fetch_array</refname>
    <refpurpose>行を配列として取り込みます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_fetch_array</function></funcdef>
     <paramdef>int <parameter>結果</parameter></paramdef>
    </funcsynopsis>
    <para> 返り値: 取り込んだ行が指す配列、または、もう行がない場合には FALSE 。
    </para>
    <para>
     sybase_fetch_array() は、<function>sybase_fetch_row</function>
     の拡張版です。データを結果配列の数値インデックスに保存するのに加えて、
     フィールド名をキーとした連想インデックスにもデータを保存します。     
    </para>
    <para>
    sybase_fetch_array() を使用した場合でも、かなりの機能が付加されるにも
    かかわらず、sybase_fetch_row() を使用した場合に比べて著しく遅くなる
    ということはないということを重要なこととして記しておきます。</para>
    <para>
    更に詳細な情報については、
     <function>sybase_fetch_row</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-field">
   <refnamediv>
    <refname>sybase_fetch_field</refname>
    <refpurpose>フィールド情報を得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>object <function>sybase_fetch_field</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
     <paramdef>int <parameter>フィールドオフセット</parameter></paramdef>
    </funcsynopsis>
    <para>
    フィールド情報を有するオブジェクトを返します。
    </para>
    <para>
     sybase_fetch_field() は、あるクエリーに対する結果において、フィールドに
     関する情報を得るために使用することができます。
     フィールドオフセットが指定されない場合、
     sybase_fetch_field() によりまだ取り込まれていない次のフィールドが
     取り込まれます。
    </para>
    <para>
    オブジェクトのプロパティを以下に示します。
    </para>

     <itemizedlist>
      <listitem><simpara>
	name - カラム名。そのカラムがある関数の結果である場合、
	このプロパティは、computed#N にセットされます。ただし、#N はシリアル
	ナンバーです。
       </simpara></listitem>
      <listitem><simpara>
	column_source - そのカラムが取り出されたテーブル
       </simpara></listitem>
      <listitem><simpara>
	max_length - カラムの最大長
       </simpara></listitem>
      <listitem><simpara>
	numeric - そのカラムが数値である場合に 1 
       </simpara></listitem> 
     </itemizedlist>

    <para>
     <function>sybase_field_seek</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-object">
   <refnamediv>
    <refname>sybase_fetch_object</refname>
    <refpurpose>行をオブジェクトとして取り込みます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_fetch_object</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para> 取り込まれた行に対するプロパティを有するオブジェクトを返します。
    また、行がもうない場合に FALSE を返します。
    </para>
    <para> sybase_fetch_object() は、<function>sybase_fetch_array</function>
    に似ていますが、違いが一つあります。
    それは、配列の代わりにオブジェクトを返すことです。
    間接的に、つまり、フィールド名によりデータにアクセスすることのみが
    可能で、そのオフセット値によりアクセスすることはできません。
    (数値は、プロパティ名としては無効です。)</para>
    <para>
    速度面では、この関数は、
    <function>sybase_fetch_array</function> と同等であり、
    <function>sybase_fetch_row</function> とほとんど同じです。
    (違いはわずかです。)
    </para>
    <para> <function>sybase_fetch-array</function> および
                     <function>sybase_fetch-row</function> も
		     参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-row">
   <refnamediv>
    <refname>sybase_fetch_row</refname>
    <refpurpose>行を配列として得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>array <function>sybase_fetch_row</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para> 取り込まれた行に対する配列、または、もう行がない場合は、 FALSE を
    返します。
    </para>
    <para>
     sybase_fetch_row() は、指定された結果 ID が指す
     結果から1行分のデータを取り込みます。
     行は配列として返されます。
     各結果カラムは、オフセット 0 から始まる配列オフセットに保持されます。
    </para>
    <para>
    連続的に sybase_fetch_rows() をコールした場合、
    結果セットにおける次の行が返されます。
    また、もう行がない場合は FALSE が返されます。
    </para>
    <para>
     <function>sybase_fetch_array</function>、
               <function>sybase_fetch_object</function>、
               <function>sybase_data_seek</function>、
               <function>sybase_fetch_lengths</function>、
               <function>sybase_result</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-field-seek">
   <refnamediv>
    <refname>sybase_field_seek</refname>
    <refpurpose>フィールドオフセットを設定します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_field_seek</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
     <paramdef>int <parameter>フィールドオフセット</parameter></paramdef>
    </funcsynopsis>
    <para>
    指定されたフィールドオフセットを探します。
    次にフィールドオフセットを指定しないで
     <function>sybase_fetch_field</function> をコールした場合、
     このフィールドが返されます。</para>
    <para></para>
    <para>
     <function>sybase_fetch_field</function> も参照下さい。</para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-free-result">
   <refnamediv>
    <refname>sybase_free_result</refname>
    <refpurpose>結果メモリを開放します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_free_result</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>sybase_free_result()</function> は、スクリプト実行時に大量のメモリを
     使用することが懸念される場合にのみコールする必要があります。
     結果メモリは、スクリプト終了時に自動的に開放されます。
     結果 ID を引数として <function>sybase_freeresult()</function> をコールすることが可能で、
     関連する結果メモリは、開放されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-num-fields">
   <refnamediv>
    <refname>sybase_num_fields</refname>
    <refpurpose>結果におけるフィールドの数を得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_num_fields</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para> sybase_num_fields() は、結果セットにおけるフィールド数を
    返します。
    </para>
    <para> 
     <function>sybase_db_query</function>、
     <function>sybase_query</function>、
     <function>sybase_fetch_field</function>、
     <function>sybase_num_rows</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-num-rows">
   <refnamediv>
    <refname>sybase_num_rows</refname>
    <refpurpose>結果における行の数を得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_num_rows</function></funcdef>
     <paramdef>string <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para>
     sybase_num_rows() は、結果セットの行数を返します。
    </para>
    <para>
     <function>sybase_db_query</function>、
     <function>sybase_query</function> 、 
     <function>sybase_fetch_row</function> も返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-pconnect">
   <refnamediv>
    <refname>sybase_pconnect</refname>
    <refpurpose>Sybase の持続的な接続をオープンします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_pconnect</function></funcdef>
     <paramdef>string <parameter>サーバー名</parameter></paramdef>
     <paramdef>string <parameter>ユーザー名</parameter></paramdef>
     <paramdef>string <parameter>パスワード</parameter></paramdef>
    </funcsynopsis>
    <para> 
    成功時に正の Sybase 持続リンク ID を、エラー時に FALSE を返します。</para>
    <para>
     sybase_pconnect() は、2つの違いを除いて
     <function>sybase_connect</function> と全く同様に動作します。</para>
    <para> 
    まず、接続時に、この関数は、最初、同じホスト、ユーザー名、パスワードで
    オープンされた(持続的)リンクを見つけようとします。
    見つかった場合、新しい接続をオープンする代わりにこれに関する
    ID が返されます。</para>
    <para> 
    第二に、SQL サーバーへの接続は、スクリプト実行終了時に
    閉じられません。
    代わりに、このリンクは、将来的に使用するさめにオープンされたままに
    なります。
    (<function>sybase_close</function> は、
    <literal>sybase_pconnect()</literal> により確立されたリンクを閉じません) </para>
    <para> 
    このため、この型のリンクは、'持続的'と呼ばれます。 </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-query">
   <refnamediv>
    <refname>sybase_query</refname>
    <refpurpose>Sybase クエリーを送信します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_query</function></funcdef>
     <paramdef>string <parameter>query</parameter></paramdef>
     <paramdef>int <parameter>link_identifier</parameter></paramdef>
    </funcsynopsis>
    <para> 成功時に正の Sybase 結果 ID を、エラーの時に FALSE を返します。
    </para>
    <para> sybase_query() は、クエリーを指定されたリンク ID が指す
    サーバー上で現在アクティブなデータベースに送信します。
    リンク ID が指定されない場合、最後にオープンされたリンクが指定されたと
    仮定されます。
    リンクがオープンされていない場合、この関数は、
    <function>sybase_connect</function> がコールされた時と同様にリンクを
    確立しようと試み、これを使用します。
    </para>
    <para>
     <function>sybase_db_query</function>、
     <function>sybase_select_db</function>、
     <function>sybase_connect</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-result">
   <refnamediv>
    <refname>sybase_result</refname>
    <refpurpose>結果データを得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_result</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
     <paramdef>int <parameter>i</parameter></paramdef>
     <paramdef>mixed <parameter>field</parameter></paramdef>
    </funcsynopsis>
    <para> 指定された Sybase 結果セットにおいて、指定した行および
    オフセットにおけるセルの内容を返します。
    </para>
    <para>
     sybase_result() は、Sybase 結果セットからセルの内容を返します。
     引数 field は、フィールドのオフセット、フィールド名、または
     フィールド名.テーブル名とすることができます。カラム名のエイリアスが
     定義されている場合('select foo as bar from...')、カラム名の
     代わりにエイリアスを使用して下さい。
    </para>
    <para>
    大きな結果セットを処理する際には、(以下に示す)
    行全体を取り込む関数の一つを使用することを考慮する必要があります。
    これらの関数は、一回の関数コールで複数のセルの内容を返すので、
    sybase_result() よりも著しく高速です。
    また、field 引数において数値オフセットで指定するほうが、
    フィールド名やテーブル名.フィールド名で指定するよりも
    著しく高速であるということにも注意して下さい。
    </para>
    <para>
     推奨される高性能な代替案は次のようなものです:
     <function>sybase_fetch_row</function>、
     <function>sybase_fetch_array</function>、
     <function>sybase_fetch_object</function> 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-select-db">
   <refnamediv>
    <refname>sybase_select_db</refname>
    <refpurpose>Sybase データベースを選択します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_select_db</function></funcdef>
     <paramdef>string <parameter>データベース名</parameter></paramdef>
     <paramdef>int <parameter>リンク ID</parameter></paramdef>
    </funcsynopsis>
    <para> 成功の場合に TRUE 、エラーの場合に FALSE を返します。
    </para>
    <para> sybase_select_db() は、
    指定されたリンク ID が指すデータベースをサーバー上の現在アクティブな
    データベースに設定します。
    リンク ID が指定されない場合、最後にオープンされたリンクが指定されたと
    仮定されます。
    リンクがオープンされていない場合、この関数は、
    <function>sybase_connect</function> がコールされた時と同様に
    リンクを確立しようと試み、これを使用します。
    </para>
    <para>
    その後の <function>sybase_query</function>  のコールは、
    このアクティブなデータベースにおいて行われます。
    </para>
    <para> 
     <function>sybase_connect</function>、
     <function>sybase_pconnect</function>、
     <function>sybase_query</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
