
 <reference id="ref.sybase">
  <title>Sybase 関数</title>
  <titleabbrev>Sybase</titleabbrev>

  <refentry id="function.sybase-affected-rows">
   <refnamediv>
    <refname>sybase_affected_rows</refname>
    <refpurpose>直近のクエリーで変更された行の数を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_affected_rows</function></funcdef>
      <paramdef>int 
       <parameter><optional>link_identifier</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     返り値: 直近のクエリーで変更されたレコードの数。
    </para>
    <para>
     <function>sybase_affected_rows</function>は、指定したリンクIDが指
     すサーバーにおいて直近の INSERT、UPDATE、DELETE クエリーで変更さ
     れたレコードの数を返します。リンクIDが指定されない場合、最後にオー
     プンされたリンクが仮定されます。
    </para>
    <para>
     このコマンドは、SELECT 文には使用できません。レコードを変更する
     文のみに使用できます。SELECT から返された行の数を得たい場合、
     <function>sybase_num_rows</function> を使用して下さい。
     <note>
      <para>
       この関数は、DB ライブラリではなく、Sybase への CT ライブラリイ
       ンターフェースを使用している場合にのみ使用可能です。
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.sybase-close">
   <refnamediv>
    <refname>sybase_close</refname>
    <refpurpose>Sybase 接続を閉じます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>sybase_close</function></funcdef>
      <paramdef>int <parameter>link_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     返り値: 成功時にtrue 、エラー時にfalseを返します。
    </para>
    <para> 
     <function>sybase_close</function>は、指定されたリンクIDが指す
     Sybaseデータベースへのリンクを閉じます。
     リンクIDが指定されない場合、最後にオープンされたリンクが指定されたと
     仮定されます。
    </para>
    <para> 
     持続的でないリンクは、スクリプトの実行終了時に自動的に閉じられるため、
     この関数は、通常の場合コールする必要がないことに注意してください。
    </para>
    <para> 
     <function>sybase_close</function>は、
     <function>sybase_pconnect</function>により生成された持続的なリン
     クは閉じません。
    </para>
    <para> 
     <function>sybase_connect</function>および
     <function>sybase_pconnect</function>も参照下さい。
    </para> 
   </refsect1>
  </refentry>

  <refentry id="function.sybase-connect">
   <refnamediv>
    <refname>sybase_connect</refname>
    <refpurpose>Sybase サーバー接続をオープンします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_connect</function></funcdef>
      <paramdef>string <parameter>servername</parameter></paramdef>
      <paramdef>string <parameter>username</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     成功時に正のSybaseリンクID、エラー時にfalseを返します。
    </para>
    <para>
     <function>sybase_connect</function>は、Sybaseサーバーへの接続を確
     立します。引数servernameは、'interfaces'ファイル中で定義された有
     効なサーバー名である必要があります。
    </para>
    <para> 
     同じ引数で<function>sybase_connect</function>を2度コールした場合、
     新たなリンクは確立されず、代わりに既にオープンされたリンクのリン
     クIDが返されます。
    </para>
    <para> 
     <function>sybase_close</function>をコールすることにより明示的に
     閉じた場合を除き、サーバーへのリンクはスクリプトの実行終了時に
     閉じられます。
    </para>
    <para>
     <function>sybase_pconnect</function>および
     <function>sybase_close</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-data-seek">
   <refnamediv>
    <refname>sybase_data_seek</refname>
    <refpurpose>内部行ポインタを移動します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>sybase_data_seek</function></funcdef>
      <paramdef>int <parameter>result_identifier</parameter></paramdef>
      <paramdef>int <parameter>row_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     返り値: 成功時にtrue 、失敗の場合にfalse 
    </para>
    <para> 
     <function>sybase_data_seek</function>は、指定された結果IDを指す 
     Sybase結果の内部行ポインタを指定した行番号へのポインタに移動します。
     <function>sybase_fetch_row</function>を次にコールした場合、
     その行が返されます。
    </para>
    <para> 
     <function>sybase_data_seek</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-array">
   <refnamediv>
    <refname>sybase_fetch_array</refname>
    <refpurpose>行を配列として取り込みます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>sybase_fetch_array</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     返り値: 取り込んだ行が指す配列、または、もう行がない場合にはfalse 。
    </para>
    <para>
     <function>sybase_fetch_array</function>は、
     <function>sybase_fetch_row</function>の拡張版です。データを結果配
     列の数値インデックスに保存するのに加えて、フィールド名をキーとし
     た連想インデックスにもデータを保存します。
    </para>
    <para>
     <function>sybase_fetch_array</function>を使用した場合でも、かなり
     の機能が付加されるにもかかわらず、
     <function>sybase_fetch_row</function>を使用した場合に比べて著しく
     遅くなるということはないということを重要なこととして記しておきます。
    </para>
    <para>
     更に詳細な情報については、
     <function>sybase_fetch_row</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-field">
   <refnamediv>
    <refname>sybase_fetch_field</refname>
    <refpurpose>フィールド情報を得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>sybase_fetch_field</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
      <paramdef>int <parameter>field_offset</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     フィールド情報を有するオブジェクトを返します。
    </para>
    <para>
     <function>sybase_fetch_field</function>は、あるクエリーに対する結
     果において、フィールドに関する情報を得るために使用することができます。
     フィールドオフセットが指定されない場合、
     <function>sybase_fetch_field</function>によりまだ取り込まれていな
     い次のフィールドが取り込まれます。
    </para>
    <para>
     オブジェクトのプロパティを以下に示します。
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       name - カラム名。そのカラムがある関数の結果である場合、
       このプロパティは、computed#N にセットされます。ただし、#N はシリアル
       ナンバーです。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       column_source - そのカラムが取り出されたテーブル
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       max_length - カラムの最大長
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       numeric - そのカラムが数値である場合に 1 
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       type - カラムのデータ型
      </simpara>
     </listitem> 
    </itemizedlist>
    <para>
     <function>sybase_field_seek</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-object">
   <refnamediv>
    <refname>sybase_fetch_object</refname>
    <refpurpose>行をオブジェクトとして取り込みます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_fetch_object</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     取り込まれた行に対するプロパティを有するオブジェクトを返します。
     また、行がもうない場合にfalseを返します。
    </para>
    <para> 
     <function>sybase_fetch_object</function>は、
     <function>sybase_fetch_array</function>に似ていますが、違いが一つ
     あります。それは、配列の代わりにオブジェクトを返すことです。
     間接的に、つまり、フィールド名によりデータにアクセスすることのみが
     可能で、そのオフセット値によりアクセスすることはできません。
     (数値は、プロパティ名としては無効です。)
    </para>
    <para>
     速度面では、この関数は<function>sybase_fetch_array</function>と同等であり、
     <function>sybase_fetch_row</function>とほとんど同じです。
     (違いはわずかです。)
    </para>
    <para> 
     <function>sybase_fetch-array</function>および
     <function>sybase_fetch-row</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-row">
   <refnamediv>
    <refname>sybase_fetch_row</refname>
    <refpurpose>行を配列として得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>sybase_fetch_row</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     取り込まれた行に対する配列、または、もう行がない場合は、flaseを
     返します。
    </para>
    <para>
     <function>sybase_fetch_row</function>は、指定された結果IDが指す
     結果から1行分のデータを取り込みます。行は配列として返されます。
     各結果カラムはオフセット0から始まる配列オフセットに保持されます。
    </para>
    <para>
     連続的に<function>sybase_fetch_rows</function>をコールした場合、
     結果セットにおける次の行が返されます。
     また、もう行がない場合はfalseが返されます。
    </para>
    <para>
     <function>sybase_fetch_array</function>、
     <function>sybase_fetch_object</function>、
     <function>sybase_data_seek</function>、
     <function>sybase_fetch_lengths</function>、
     <function>sybase_result</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-field-seek">
   <refnamediv>
    <refname>sybase_field_seek</refname>
    <refpurpose>フィールドオフセットを設定します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_field_seek</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
      <paramdef>int <parameter>field_offset</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定したフィールドオフセットに移動します。次にfield_offsetを指
     定しないで<function>sybase_fetch_field</function> をコールした場合、
     このフィールドが返されます。
    </para>
    <para>
     <function>sybase_fetch_field</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-free-result">
   <refnamediv>
    <refname>sybase_free_result</refname>
    <refpurpose>結果メモリを開放します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>sybase_free_result</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sybase_free_result</function>は、スクリプト実行時に大量
     のメモリを使用することが懸念される場合にのみコールする必要があります。
     結果メモリは、スクリプト終了時に自動的に開放されます。
     結果IDを引数として<function>sybase_freeresult</function>をコール
     することが可能で、関連する結果メモリは開放されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-get-last-message">
   <refnamediv>
    <refname>sybase_get_last_message</refname>
    <refpurpose>サーバーから直近のメッセージを返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>sybase_get_last_message</function></funcdef>
      <paramdef>void <parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>sybase_get_last_message</function> はサーバーから返された
     直近のメッセージを返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-min-client-severity">
   <refnamediv>
    <refname>sybase_min_client_severity</refname>
    <refpurpose>クライアントのseverityを最小に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>sybase_min_client_severity</function></funcdef>
      <paramdef>int <parameter>severity</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>sybase_min_client_severity</function> はクライアントの
     severityレベルを最小に設定します。
     <note>
      <para>
       この関数は、DBライブラリではなくCTライブラリインターフェースを
       使用した場合にのみ使用可能です。
      </para>
     </note>
    </para>
    <para> 
      <function>sybase_min_server_severity</function>も参照します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-min-error-severity">
   <refnamediv>
    <refname>sybase_min_error_severity</refname>
    <refpurpose>エラーのseverityを最小に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>sybase_min_error_severity</function></funcdef>
      <paramdef>int <parameter>severity</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>sybase_min_error_severity</function> はエラー severity
     レベルを最小に設定します。
    </para>
    <para> 
      <function>sybase_min_message_severity</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-min-message-severity">
   <refnamediv>
    <refname>sybase_min_message_severity</refname>
    <refpurpose>メッセージのチェックを最小に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>sybase_min_message_severity</function></funcdef>
      <paramdef>int <parameter>severity</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>sybase_min_message_severity</function> はメッセージの
     severity レベルを最小に設定します。
    </para>
    <para> 
     <function>sybase_min_error_severity</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-min-server-severity">
   <refnamediv>
    <refname>sybase_min_server_severity</refname>
    <refpurpose>サーバーチェックを最小に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>sybase_min_server_severity</function></funcdef>
      <paramdef>int <parameter>severity</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>sybase_min_server_severity</function> はサーバーの
     severityレベルを最小に設定する。
     <note>
      <para>
       この関数は、DBライブラリではなくCTライブラリインターフェースを
       使用している場合にのみ利用可能です。
      </para>
     </note>
    </para>
    <para> 
     <function>sybase_min_client_severity</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-num-fields">
   <refnamediv>
    <refname>sybase_num_fields</refname>
    <refpurpose>結果におけるフィールドの数を得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_num_fields</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>sybase_num_fields</function>は、結果セットにおけるフィー
     ルド数を返します。
    </para>
    <para> 
     <function>sybase_db_query</function>、
     <function>sybase_query</function>、
     <function>sybase_fetch_field</function>、
     <function>sybase_num_rows</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-num-rows">
   <refnamediv>
    <refname>sybase_num_rows</refname>
    <refpurpose>結果における行の数を得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_num_rows</function></funcdef>
      <paramdef>string <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sybase_num_rows</function>は、結果セットの行数を返します。
    </para>
    <para>
     <function>sybase_db_query</function>、
     <function>sybase_query</function> 、 
     <function>sybase_fetch_row</function>も返します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.sybase-pconnect">
   <refnamediv>
    <refname>sybase_pconnect</refname>
    <refpurpose>Sybaseの持続的な接続をオープンします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_pconnect</function></funcdef>
      <paramdef>string <parameter>servername</parameter></paramdef>
      <paramdef>string <parameter>username</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     成功時に正のSybase持続リンクIDを、エラー時にfalseを返します。
    </para>
    <para>
     <function>sybase_pconnect</function>は、2つの違いを除いて
     <function>sybase_connect</function>と全く同様に動作します。
    </para>
    <para> 
     まず、接続時にこの関数は最初同じホスト、ユーザー名、パスワードで
     オープンされた(持続的)リンクを見つけようとします。
     見つかった場合、新しい接続をオープンする代わりにこれに関する
     IDが返されます。
    </para>
    <para> 
     第二にSQL サーバーへの接続は、スクリプト実行終了時にクローズされません。
     代わりに、このリンクは将来的に使用するさめにオープンされたままに
     なります。(<function>sybase_close</function>は、
     <function>sybase_pconnect</function>により確立されたリンクを閉じま
     せん) 
    </para>
    <para> 
     このため、この型のリンクは'持続的'と呼ばれます。 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-query">
   <refnamediv>
    <refname>sybase_query</refname>
    <refpurpose>Sybase クエリーを送信します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_query</function></funcdef>
      <paramdef>string <parameter>query</parameter></paramdef>
      <paramdef>int <parameter>link_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     成功時に正のSybase結果IDを、エラーの時にfalseを返します。
    </para>
    <para> 
     <function>sybase_query</function>は、クエリーを指定されたリンクID
     が指すサーバー上で現在アクティブなデータベースに送信します。
     リンクIDが指定されない場合、最後にオープンされたリンクが指定されたと
     仮定されます。リンクがオープンされていない場合、この関数は、
     <function>sybase_connect</function>がコールされた時と同様にリンクを
     確立しようと試み、これを使用します。
    </para>
    <para>
     <function>sybase_db_query</function>、
     <function>sybase_select_db</function>、
     <function>sybase_connect</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-result">
   <refnamediv>
    <refname>sybase_result</refname>
    <refpurpose>結果データを得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_result</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
      <paramdef>int <parameter>row</parameter></paramdef>
      <paramdef>mixed <parameter>field</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     指定されたSybase結果セットにおいて、指定した行および
     オフセットにおけるセルの内容を返します。
    </para>
    <para>
     <function>sybase_result</function>は、Sybase結果セットからセルの
     内容を返します。引数fieldは、フィールドのオフセット、フィールド名、
     またはテーブル名.フィールド名とすることができます。カラム名のエイ
     リアスが定義されている場合('select foo as bar from...')、カラム名の
     代わりにエイリアスを使用して下さい。
    </para>
    <para>
     大きな結果セットを処理する際には、(以下に示す)
     行全体を取り込む関数の一つを使用することを考慮する必要があります。
     これらの関数は、一回の関数コールで複数のセルの内容を返すので、
     <function>sybase_result</function>よりも著しく高速です。
     また、field 引数において数値オフセットで指定するほうが、
     フィールド名やテーブル名.フィールド名で指定するよりも
     著しく高速であるということにも注意して下さい。
    </para>
    <para>
     推奨される高性能な代替案は次のようなものです:
     <function>sybase_fetch_row</function>、
     <function>sybase_fetch_array</function>、
     <function>sybase_fetch_object</function> 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-select-db">
   <refnamediv>
    <refname>sybase_select_db</refname>
    <refpurpose>Sybase データベースを選択します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_select_db</function></funcdef>
      <paramdef>string <parameter>database_name</parameter></paramdef>
      <paramdef>int <parameter>link_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     成功時にtrue、エラーの場合にfalseを返します。
    </para>
    <para>
     <function>sybase_select_db</function>は指定されたリンクIDが指すデー
     タベースをサーバー上の現在アクティブなデータベースに設定します。
     リンクIDが指定されない場合、最後にオープンされたリンクが指定されたと
     仮定されます。
     リンクがオープンされていない場合、この関数は、
     <function>sybase_connect</function>がコールされた時と同様に
     リンクを確立しようと試み、これを使用します。
    </para>
    <para>
     その後の<function>sybase_query</function>のコールは、
     このアクティブなデータベースにおいて行われます。
    </para>
    <para> 
     <function>sybase_connect</function>、
     <function>sybase_pconnect</function>、
     <function>sybase_query</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
