 <reference id="ref.dba">
  <title>(dbm型の)データベース・アブストラクション レイヤー関数</title>
  <titleabbrev>dba</titleabbrev>

  <partintro>
   <para>
    これらの関数は、Berkeley DB 型データベースへのアクセス用の基本関数を
    構成します。
   </para>
   <para>
    これらの関数は、複数のファイルベースのデータベース用のアブストラクション
    ・レイヤーです。その機能は、<ulink url="&url.sleepycat;">Sleepycat
    Software's DB2</ulink>サポートのような近代的なデータベースの機能の
    サブセットに制限されています。(IBMのソフトウエアDB2と混同しないで
    下さい。このデータベースは、<link linkend="ref.odbc">ODBC 関数
    </link>を通じてサポートされます。)
   </para>
   <para>
    各機能の動作は、使用するデータベースの実装に依存します。
    <function>dba_optimize</function> および <function>dba_sync</function> の
    ような関数は使用するデータベースに依存したことを行い、他のデータベース
    用の機能は実行しません。
   </para>
   <para>
    以下のハンドラのサポートを追加するには、PHPの configure にて指定さ
    れた --with configure スイッチを追加します。
    <itemizedlist>
     <listitem>
      <simpara>
       dbm は最も古い(元祖の)Berkeley DB 型データベースです。
       可能ならば使用しない方が良いでしょう。DB2 および gdbm に組み込まれている
       互換性を保つための関数は、サポートされません。
       これは、実装されているのがソースレベルの互換性のみであり、
       元の dbm フォーマットを処理することができないためです。(--with-dbm)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ndbm は、より新型であり、dbmよりも柔軟です。
       dbm 固有の制約の多くをまだ有しています。(そのため、不人気です。)
       (--with-ndbm)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       gdbmは、<ulink url="&url.gdbm;">GNUデータベースマネージャ</ulink>
       です。(--with-gdbm)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       db2 は、<ulink url="&url.sleepycat;">Sleepycat Software's DB2</ulink>
       です。これは、「スタンドアローンおよびクライアント/サーバー
       アプリケーションの両方で高性能な組込みデータベースサポートを提供する
       プログラム用ツールキット」として記述されています。(--with-db2)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       DB3 は、<ulink url="&url.sleepycat;">Sleepycat Softwareの
       DB3</ulink>です。(--with-db3)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       cdbは、固定データベースの作成・読込み用の高速で高信頼性の軽量型
       パッケージです。
       これは、qmailの作者によるものであり、<ulink url="&url.cdb;">ここ</ulink>
       にあります。固定であるため、読込み操作のみがサポートされます。
       (--with-cdb)
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    <example>
     <title>DBAの例</title>
     <programlisting role="php">
&lt;?php

$id = dba_open ("/tmp/test.db", "n", "db2");

if (!$id) {
    echo "dba_open failed\n";
    exit;
}

dba_replace ("key", "This is an example!", $id);

if (dba_exists ("key", $id)) {
    echo dba_fetch ("key", $id);
    dba_delete ("key", $id);
}

dba_close ($id);
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    DBAは、バイナリセーフでありいかなる制限も受けません。
    DBA は、使用するデータベースの実装による全ての制約を継承します。
   </para>
   <para>
    全てのファイルベースのデータベースは、完全に使用可能なものについて
    新規に作成されたデータベースのファイルモードを設定する手段を、
    提供する必要があります。
    ファイルモードは、通常 <function>dba_open</function> または
    <function>dba_popen</function> に4番目の引数として渡されます。
   </para>
   <para>
    <function>dba_firstkey</function> および <function>dba_nextkey</function>
    関数を用いて連続的に全てのエントリにアクセスすることができます。
    アクセスする際にデータベースを変更できない可能性があります。
   </para>
   <para>
    <example>
     <title>データベースに連続アクセス</title>
     <programlisting role="php">
&lt;?php

# ...データベースをオープンする...

$key = dba_firstkey ($id);
      
while ($key != false) {
    if (...) { # 他の操作を後で行うためにキーを記憶する
        $handle_later[] = $key;
    }
    $key = dba_nextkey ($id);
}

for ($i = 0; $i &lt; count($handle_later); $i++)
    dba_delete ($handle_later[$i], $id);

?&gt;
     </programlisting>
    </example>
   </para>
  </partintro>

  <refentry id="function.dba-close">
   <refnamediv>
    <refname>dba_close</refname>
    <refpurpose>データベースを閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>dba_close</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_close</function>は使用するデータベースを閉じ、
     <parameter>handle</parameter>により指定した全てのリソースを
     開放します。
    </para>
    <para>
     <parameter>handle</parameter>は、<function>dba_open</function>により
     返されたデータベースハンドルです。
    </para>
    <para>
     <function>dba_close</function>は値を返しません。
    </para>
    <para>
     <function>dba_open</function>、
     <function>dba_popen</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-delete">
   <refnamediv>
    <refname>dba_delete</refname>
    <refpurpose>キーが指すエントリを削除する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_delete</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_delete</function> は、<parameter>handle</parameter>
     が指すデータベースから <parameter>key</parameter> が指すエントリを
     削除します。
    </para>
    <para>
     <parameter>key</parameter>は削除するエントリのキーです。
    </para>
    <para>
     <parameter>handle</parameter> は、<function>dba_open</function>により
     返されたデータベースハンドルです。
    </para>
    <para>
     <function>dba_delete</function> は、エントリが削除または削除されない
     場合にそれぞれtrueまたはfalseを返します。
    </para>
    <para>
     <function>dba_exists</function>,
     <function>dba_fetch</function>,
     <function>dba_insert</function>,
     <function>dba_replace</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-exists">
   <refnamediv>
    <refname>dba_exists</refname>
    <refpurpose>キーが存在するかどうかを確認する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_exists</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_exists</function>は<parameter>handle</parameter>
     が指すデータベースに指定した
     <parameter>key</parameter>が存在するかどうかを確認します。
    </para>
    <para>
     <parameter>key</parameter>は確認を行うキーです。
    </para>
    <para>
     <parameter>handle</parameter>は、<function>dba_open</function>により
     返されたデータベースハンドルです。
    </para>
    <para>
     <function>dba_exists</function>はキーがある場合にtrue,見つからな
     い場合にfalseを返します。
    </para>
    <para>
     <function>dba_fetch</function>、
     <function>dba_delete</function>、
     <function>dba_insert</function>、
     <function>dba_replace</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-fetch">
   <refnamediv>
    <refname>dba_fetch</refname>
    <refpurpose>キーが指すデータを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_fetch</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_fetch</function>は、<parameter>handle</parameter>
     が指すデータベースから<parameter>key</parameter>が指すデータを取
     得します。
    </para>
    <para>
     <parameter>key</parameter>はデータを取得するキーです。
    </para>
    <para>
     <parameter>handle</parameter>は、<function>dba_open</function>により
     返されたデータベースハンドルです。
    </para>
    <para>
     <function>dba_fetch</function> はキー/データの組が見つかった場合に
     取得した文字列、見つからなかった場合にfalseを返します。
    </para>
    <para>
     <function>dba_exists</function>、
     <function>dba_delete</function>、
     <function>dba_insert</function>、
     <function>dba_replace</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-firstkey">
   <refnamediv>
    <refname>dba_firstkey</refname>
    <refpurpose>最初のキーを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_firstkey</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_firstkey</function>は、<parameter>handle</parameter>が
     指すデータベースの最初のキーを返し、内部キーポインタをリセットします。
     この関数によりデータベース全体を連続的にサーチすることが可能になります。
    </para>
    <para>
     <parameter>handle</parameter>は、<function>dba_open</function>により
     返されたデータベースハンドルです。
    </para>
    <para>
     <function>dba_firstkey</function>は成功した場合にキーを、失敗した場合に
     falseを返します。
    </para>
    <para>
     <function>dba_nextkey</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-insert">
   <refnamediv>
    <refname>dba_insert</refname>
    <refpurpose>エントリを挿入する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_insert</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_insert</function>は、<parameter>handle</parameter>
     が指すデータベースに<parameter>key</parameter> および
     <parameter>value</parameter>で記述されるエントリを挿入します。
     同じ<parameter>key</parameter>が既に存在する場合に失敗します。
    </para>
    <para>
     <parameter>key</parameter>は、挿入するエントリのキーです。
    </para>
    <para>
     <parameter>value</parameter>は、挿入するエントリの値です。
    </para>
    <para>
     <parameter>handle</parameter>は、<function>dba_open</function>に
     より返されたデータベースハンドルです。
    </para>
    <para>
     <function>dba_insert</function>は成功時にtrue、失敗した場合にfalseを
     返します。
    </para>
    <para>
     <function>dba_exists</function>
     <function>dba_delete</function>
     <function>dba_fetch</function>
     <function>dba_replace</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-nextkey">
   <refnamediv>
    <refname>dba_nextkey</refname>
    <refpurpose>次のキーを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_nextkey</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_nextkey</function> は、<parameter>handle</parameter>
     が指すデータベースのキーを返し、内部ポインタを進めます。
    </para>
    <para>
     <parameter>handle</parameter>は、<function>dba_open</function> により
     返されたデータベースハンドルです。
    </para>
    <para>
     <function>dba_nextkey</function> は成功時にキーを、失敗した場合に
     falseを返します。
    </para>
    <para>
     <function>dba_firstkey</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-popen">
   <refnamediv>
    <refname>dba_popen</refname>
    <refpurpose>データベースを持続的にオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dba_popen</function></funcdef>
      <paramdef>string <parameter>path</parameter></paramdef>
      <paramdef>string <parameter>mode</parameter></paramdef>
      <paramdef>string <parameter>handler</parameter></paramdef>
      <paramdef><parameter><optional>...</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_popen</function> は、 <parameter>handler</parameter>
     を用いて<parameter>mode</parameter>で<parameter>path</parameter>
     への持続的データベースインスタンスを確立します。
    </para>
    <para>
     <parameter>path</parameter> は、通常のファイルシステムのパスです。
    </para>
    <para>
     <parameter>mode</parameter> には、既存のデータベースにアクセスする
     際に読み込みアクセス用に "r"、読込み/書き込みアクセス用に"w"を、
     読み込み/書き込みアクセスおよび存在しない場合にデータベースの作成をする
     ために"c"を、作成、上書き、読込み/書き込みアクセス用に "n" を指定
     します。
    </para>
    <para>
     <parameter>handler</parameter> は、<parameter>path</parameter>を
     アクセスするために使用するハンドルの名前です。
     <function>dba_popen</function> に指定した全てのオプションパラメータを
     渡し、そのオプションの機能を用いることができます。
    </para>
    <para>
     <function>dba_popen</function> は、オープンに成功した場合に正の
     ハンドラID、失敗した場合にfalseを返します。
    </para>
    <para>
     <function>dba_open</function>、
     <function>dba_close</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-open">
   <refnamediv>
    <refname>dba_open</refname>
    <refpurpose>データベースをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dba_open</function></funcdef>
      <paramdef>string <parameter>path</parameter></paramdef>
      <paramdef>string <parameter>mode</parameter></paramdef>
      <paramdef>string <parameter>handler</parameter></paramdef>
      <paramdef><parameter><optional>...</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_open</function>は、<parameter>handler</parameter>を用いて
     <parameter>mode</parameter>を指定し、<parameter>path</parameter> 
     へのデータベースインスタンスを確立します。
    </para>
    <para>
     <parameter>path</parameter>は、ファイルシステムの通常のパスです。
    </para>
    <para>
     <parameter>mode</parameter>には、既存のデータベースにアクセスする
     際に読み込みアクセス用に "r"、読込み/書き込みアクセス用に"w"を、
     読み込み/書き込みアクセスおよび存在しない場合にデータベースの作成をする
     ために"c"を、作成、上書き、読込み/書き込みアクセス用に "n" を指定
     します。
    </para>
    <para>
     <parameter>handler</parameter> は、<parameter>path</parameter>を
     アクセスするために使用するハンドルの名前です。
     <function>dba_open</function> に指定した全てのオプションパラメータを
     渡し、そのオプションの機能を用いることができます。
    </para>
    <para>
     <function>dba_open</function> は、オープンに成功した場合に正の
     ハンドラID、失敗した場合にfalseを返します。
    </para>
    <para>
     <function>dba_popen</function>、
     <function>dba_close</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-optimize">
   <refnamediv>
    <refname>dba_optimize</refname>
    <refpurpose>データベースを最適化する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_optimize</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_optimize</function> は、<parameter>handle</parameter>
     により指定されたデータベースを最適化します。
    </para>
    <para>
     <parameter>handle</parameter> は、<function>dba_open</function> により
     返されたデータベースハンドルです。
    </para>
    <para>
     <function>dba_optimize</function> は、最適化に成功した場合にtrue,
     失敗した場合にfalseを返します。
    </para>
    <para>
     <function>dba_sync</function>も参照下さい。
    </para>
     
   </refsect1>
  </refentry>

  <refentry id="function.dba-replace">
   <refnamediv>
    <refname>dba_replace</refname>
    <refpurpose>エントリを置換または挿入する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_replace</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_replace</function> は、<parameter>handle</parameter>で
     指定したデータベースに<parameter>key</parameter> および
     <parameter>value</parameter>で記述されるエントリを置換または挿入
     します。
    </para>
    <para>
     <parameter>key</parameter>は挿入するエントリのキーです。
    </para>
    <para>
     <parameter>value</parameter> は挿入する値です。
    </para>
    <para>
     <parameter>handle</parameter> は、<function>dba_open</function>により
     返されたデータベースハンドルです。
    </para>
    <para>
     <function>dba_replace</function>は成功した場合にtrue,失敗した場合に
     falseを返します。
    </para>
    <para>
     <function>dba_exists</function>
     <function>dba_delete</function>
     <function>dba_fetch</function>
     <function>dba_insert</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-sync">
   <refnamediv>
    <refname>dba_sync</refname>
    <refpurpose>データベースを同期する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_sync</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_sync</function> は、<parameter>handle</parameter>で
     指定したデータベースを同期します。サポートされる場合には、おそらくディスク
     への物理的アクセスへのきっかけとなることでしょう。
    </para>
    <para>
     <parameter>handle</parameter> は、<function>dba_open</function> により
     返されたデータベースハンドルです。
    </para>
    <para>
     <function>dba_sync</function> は同期が成功した場合にtrue、失敗した場合に
     falseを返します。
    </para>
    <para>
     <function>dba_optimize</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>
 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->