 <reference id="ref.dbase">
  <title>dBase 関数</title>
  <titleabbrev>dBase</titleabbrev>

  <partintro>
   <simpara>
   これらの関数は、dBase 形式(dbf)のデータベースに保存されたレコードに
   アクセスすることを可能にします。</simpara>
   <simpara>
   これらの関数では、インデックスおよびメモフィールドのサポートは行われません。
   ロックのサポートも行われません。
   二つの Web サーバープロセスが同時に同じ dBase ファイルを修正しようとした場合、
   データベースはほぼ確実に駄目になってしまうでしょう。</simpara>
    <simpara>
    SQL データベースと異なり、dBase "databases" はデータベース定義を
    後で変更することが出来ません。
    検索を高速化したりデータを体系化するようなインデックスはありません。
    dBase ファイルは、簡単な固定レコード長の連続ファイルです。
    レコードはファイルの終端に付加され、削除されたレコードは
     <function>dbase_pack()</function> をコールするまで保持されています。</simpara>
    <simpara>
    商用データベースとして dBase ファイルを使用するべきではありません。
    本物の SQL サーバーを替わりに選んで下さい。通常、MySQL または Postgres
    が PHP で使用されています。
    dBase ファイルフォーマットは Windows の表計算ソフトや統合ソフトで
    通常サポートされているので、
    dBase サポートにより Web データベースとのデータのインポート/エクスポート
    が可能となります。
    dBase サポートが有用なのは、データのインポート/エクスポート機能に
    限定されるでしょう。</simpara>
  </partintro>

  <refentry id="function.dbase-create">
   <refnamediv>
    <refname>dbase_create</refname>
    <refpurpose>dBase データベースを作成します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbase_create</function></funcdef>
      <paramdef>string <parameter>ファイル名</parameter></paramdef>
      <paramdef>array <parameter>フィールド</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	<parameter>フィールド</parameter> パラメータは、配列の配列です。
	各配列は、データベースにおける一つのフィールドのフォーマット
	を記述します。
	各フィールドは、名前、フィールド型、長さ、精度を示す文字から構成されます。</para>
	<para>
	利用可能なフィールド型は次のようになります。
	<variablelist>
	 <varlistentry>
	  <term>L</term>
	  <listitem><simpara>
	   論理値。長さも精度もありません。</simpara></listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>M</term>
	  <listitem><simpara>
	   メモ。(PHP ではサポートされないことに注意して下さい。)
	   長さも精度もありません。</simpara></listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>D</term>
	  <listitem><simpara>
	   日付(Date) (YYYYMMDD という形式で保持されます)。
	   長さも精度もありません。</simpara></listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>N</term>
	  <listitem><simpara>
	   番号(Number)。長さおよび精度(小数点以下の桁数)を有します。</simpara></listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>C</term>
	  <listitem><simpara>
	   文字列。</simpara></listitem>
	 </varlistentry>
	</variablelist></para>
	<para>
	データベースの作成に成功した場合、dbase ID が返されます。
	失敗した場合は、false が返されます。
 
      <example>
       <title>dBase データベースファイルを作成する</title>
 <programlisting role="php">
 // データベース名
 $dbname = "/tmp/test.dbf";
 
 // データベースの定義
 $def =
     array(
         array("date",     "D"),
         array("name",     "C",  50),
         array("age",      "N",   3, 0),
         array("email",    "C", 128),
         array("ismember", "L")
     );
 
 // 作成
 if (!dbase_create($dbname, $def))
     print "&lt;strong>Error!&lt;/strong>";
 
 </programlisting>
      </example></para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-open">
   <refnamediv>
    <refname>dbase_open</refname>
    <refpurpose>dBase データベースをオープンします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbase_open</function></funcdef>
      <paramdef>string <parameter>ファイル名</parameter></paramdef>
      <paramdef>int <parameter>フラグ</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    フラグは、open() システムコールにおけるフラグに対応します。
	(通常、0 は読込のみ可、1 は書込のみ可、2 は読み書きを意味します)</para>
	<para>
	オープンされたデータベースの dbase ID を返します。
	データベースをオープンできなかった場合は、FALSE を返します。</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-close">
   <refnamediv>
    <refname>dbase_close</refname>
    <refpurpose>dBase データベースを閉じます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dbase_close</function></funcdef>
      <paramdef>int <parameter>dbase ID</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	<parameter>dbase ID</parameter>
	が指すデータベースを閉じます。</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-pack">
   <refnamediv>
    <refname>dbase_pack</refname>
    <refpurpose>dBase データベースをパックします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dbase_pack</function></funcdef>
      <paramdef>int <parameter>dbase ID</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    指定されたデータベースをパックします。
    (<function>dbase_delete_record</function> を用いて削除指定を
    行った全てのレコードの削除を実際に行います。)</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-add-record">
   <refnamediv>
    <refname>dbase_add_record</refname>
    <refpurpose>dBase データベースにレコードを追加します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dbase_add_record</function></funcdef>
      <paramdef>int <parameter>dbase ID</parameter></paramdef>
      <paramdef>array <parameter>レコード</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	<parameter>record </parameter> のデータを
	データベースに追加します。
	指定したレコード中の項目数が、データベース中のフィールド数と
	等しくない場合、処理は失敗し、FALSE が返されます。</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-replace-record">
   <refnamediv>
    <refname>dbase_replace_record</refname>
    <refpurpose>dBase データベースのレコードを置換する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dbase_replace_record</function></funcdef>
      <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
      <paramdef>array <parameter>record</parameter></paramdef>
      <paramdef>int <parameter>dbase_record_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
	データベースのレコード<parameter>record_number</parameter>が指すデータを
	<parameter>record</parameter>のデータで置換します。指定したレコードの
	項目数がデータベースのフィールド数に等しくない場合、操作は失敗し、
	FALSEが返されます。</simpara>
     
    <simpara>
     <parameter>dbase_record_number</parameter> は1からデータベースのレコード数
	までの範囲の整数となります。(
     <function>dbase_numrecords</function>により返されます)</simpara>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-delete-record">
   <refnamediv>
    <refname>dbase_delete_record</refname>
    <refpurpose>dBase データベースからレコードを削除します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dbase_delete_record</function></funcdef>
      <paramdef>int <parameter>dbase ID</parameter></paramdef>
      <paramdef>int <parameter>record</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	データベースから削除したいレコード <parameter>record</parameter> をマークします。
	実際に削除を行うには、
	<function>dbase_pack</function> をコールする必要があります。</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-get-record">
   <refnamediv>
    <refname>dbase_get_record</refname>
    <refpurpose>dBase データベースからレコードを得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>dbase_get_record</function></funcdef>
      <paramdef>int <parameter>dbase ID</parameter></paramdef>
      <paramdef>int <parameter>record</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	<parameter>record</parameter> からのデータが配列に返されます。
	配列の添字は 0から始まり、連想配列のメンバー 'deleted' を含んでいます。
	これには、そのレコードに削除指定が行われている場合に 1 がセットされます。
	(<function>dbase_delete_record</function> も参照下さい。)</para>
    <para>
      各フィールドは、適当な PHP 型に変換されます。
	(日付は、文字列に変換されます。)</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-get-record-with-names">
   <refnamediv>
    <refname>dbase_get_record_with_names</refname>
    <refpurpose>dBaseデータベースからレコードを連想配列として得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>dbase_get_record_with_names</function></funcdef>
      <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
      <paramdef>int <parameter>record</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	
	<parameter>record</parameter> からデータを連想配列として返します。
	配列は、レコードに削除のマークが付けられている場合は、連想配列に
	メンバー'deleted'が付加され、その値は1となります。
	(<function>dbase_delete_record</function>を参照下さい。)</para>
    <para>
        各フィールドは、適当な PHP 型に変換されます。
	(日付は、文字列に変換されます。)</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-numfields">
   <refnamediv>
    <refname>dbase_numfields</refname>
    <refpurpose>dBase データベースにおけるフィールド数を返します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbase_numfields</function></funcdef>
      <paramdef>int <parameter>dbase ID</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    指定したデータベースにおけるフィールド(カラム)数を返します。
    フィールド番号は 0 から dbase_numfields($db)-1 まで、
    レコード番号は 1 から dbase_numrecords($db) までです。
     <example>
      <title><function>dbase_numfields</function> の使用法</title>
      <programlisting>
 $rec = dbase_get_record($db, $recno);
 $nf  = dbase_numfields($db);
 for ($i=0; $i &lt; $nf; $i++) {
     print $rec[$i]."&lt;br>\n";
 }
 </programlisting></example></para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-numrecords">
   <refnamediv>
    <refname>dbase_numrecords</refname>
    <refpurpose>dBase データベースにおけるレコード数を返します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbase_numrecords</function></funcdef>
      <paramdef>int <parameter>dbase ID</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    指定したデータベースにレコード(行)数を返します。
    レコード番号は 1 から dbase_numrecords($db) まで、
    フィールド番号は 0 から dbase_numfields($db)-1 までです。</para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
