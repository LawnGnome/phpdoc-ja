<reference id="ref.var">
  <title>変数用の関数</title>
  <titleabbrev>変数</titleabbrev>

  <refentry id="function.doubleval">
   <refnamediv>
    <refname>doubleval</refname>
    <refpurpose>変数の double としての値を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>double <function>doubleval</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
    <parameter>var</parameter> の、double （浮動小数点数）
    としての値を返します。</simpara>

    <simpara>
    <parameter>var</parameter> はどんなスカラー型でもかまいません。
    <function>doubleval</function> には配列やオブジェクトは指定
    できません。</simpara>

    <simpara>
    <function>intval</function>,
     <function>strval</function>,
     <function>settype</function>,
     <link linkend="language.types.type-juggling">型のジャグリング</link>
     も参照下さい。</simpara>

   </refsect1>
  </refentry>

  <refentry id="function.empty">
   <refnamediv>
    <refname>empty</refname>
    <refpurpose>変数がセットされているかどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>empty</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    
    <simpara>
    <parameter>var</parameter> が設定され、かつ空でないかゼロでない値を
    有する場合に false を返し、そうでなければ true を返します。</simpara>

    <simpara>
    <function>isset</function> および <function>unset</function> も参照下さい。</simpara>

   </refsect1>
  </refentry>

  <refentry id="function.gettype">
   <refnamediv>
    <refname>gettype</refname>
    <refpurpose>変数の型を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>string <function>gettype</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
    PHP 変数 <parameter>var</parameter> の型を返します。</para>

    <para>
    返された文字列は、以下のいずれかの値を持ちます。
     <itemizedlist>
      <listitem><simpara>"integer"</simpara></listitem>
      <listitem><simpara>"double"</simpara></listitem>
      <listitem><simpara>"string"</simpara></listitem>
      <listitem><simpara>"array"</simpara></listitem>
      <listitem><simpara>"object"</simpara></listitem>
      <listitem><simpara>"unknown type"</simpara></listitem>
     </itemizedlist></para>

    <para>
    <function>settype</function> も参照下さい。</para>

   </refsect1>
  </refentry>


  <refentry id="function.intval">
   <refnamediv>
    <refname>intval</refname>
    <refpurpose>変数の整数としての値を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>intval</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
     <paramdef>int <parameter><optional>base</optional></parameter></paramdef>
    </funcsynopsis>

    <simpara>
    指定された値 base を基数（デフォルトは 10）とする、
    <parameter>var</parameter> の整数としての値を返します。</simpara>

    <simpara>
    <parameter>var</parameter> はどんなスカラー型でもかまいません。
    <function>intval</function> には配列やオブジェクトは指定
    できません。</simpara>

    <simpara>
    <function>doubleval</function>,
     <function>strval</function>,
     <function>settype</function>,
      <link linkend="language.types.type-juggling">型の相互変換(ジャグリング)</link>
     も参照下さい。</simpara>

   </refsect1>
  </refentry>

  <refentry id="function.is-array">
   <refnamediv>
    <refname>is_array</refname>
    <refpurpose>変数が配列かどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>is_array</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
    <parameter>var</parameter> が配列であれば TRUE を、
    そうでなければ FALSE を返します。</para>

    <para>
     <function>is_double</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_real</function>,
     <function>is_string</function>,
     <function>is_long</function>, 
     <function>is_object</function> も参照下さい。</para>

   </refsect1>
  </refentry>


  <refentry id="function.is-double">
   <refnamediv>
    <refname>is_double</refname>
    <refpurpose>変数が double かどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>is_double</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
    <parameter>var</parameter> が double であれば TRUE を、
    そうでなければ FALSE を返します。</para>

    <para>
     <function>is_array</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_real</function>,
     <function>is_string</function>,
     <function>is_long</function>, 
     <function>is_object</function> も参照下さい。</para>

   </refsect1>
  </refentry>


  <refentry id="function.is-float">
   <refnamediv>
    <refname>is_float</refname>
    <refpurpose>変数が float かどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>is_float</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
    この関数は <function>is_double</function> の別名です。</simpara>

    <simpara>
     <function>is_double</function>,
     <function>is_real</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_string</function>,
     <function>is_object</function>,
     <function>is_array</function>,
     <function>is_long</function> も参照下さい。</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.is-int">
   <refnamediv>
    <refname>is_int</refname>
    <refpurpose>変数が整数かどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>is_int</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
    この関数は <function>is_long</function> の別名です。</simpara>

    <simpara>
     <function>is_double</function>,
     <function>is_float</function>,
     <function>is_integer</function>,
     <function>is_string</function>,
     <function>is_real</function>,
     <function>is_object</function>,
     <function>is_array</function>,
     <function>is_long</function> も参照下さい。</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.is-integer">
   <refnamediv>
    <refname>is_integer</refname>
    <refpurpose>変数が整数かどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>is_integer</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
    この関数は <function>is_long</function> の別名です。</simpara>

    <simpara>
     <function>is_double</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_string</function>,
     <function>is_real</function>,
     <function>is_object</function>,
     <function>is_array</function>,
     <function>is_long</function> も参照下さい。</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.is-long">
   <refnamediv>
    <refname>is_long</refname>
    <refpurpose>変数が整数かどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>is_long</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
    <parameter>var</parameter> が整数(long)であれば TRUE を、
    そうでなければ FALSE を返します。</para>

    <para>
     <function>is_double</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_real</function>,
     <function>is_string</function>,
     <function>is_object</function>,
     <function>is_array</function>,
     <function>is_integer</function> も参照下さい。</para>

   </refsect1>
  </refentry>


  <refentry id="function.is-object">
   <refnamediv>
    <refname>is_object</refname>
    <refpurpose>変数がオブジェクトかどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>is_object</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
    <parameter>var</parameter> がオブジェクトであれば TRUE を、
    そうでなければ FALSE を返します。</para>

    <para>
     <function>is_long</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_float</function>,
     <function>is_double</function>,
     <function>is_real</function>,
     <function>is_string</function>,
     <function>is_array</function> も参照下さい。</para>

   </refsect1>
  </refentry>


  <refentry id="function.is-real">
   <refnamediv>
    <refname>is_real</refname>
    <refpurpose>変数が実数(real)かどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>is_real</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
    この関数は <function>is_double</function> の別名です。</simpara>

    <simpara>
     <function>is_long</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_float</function>,
     <function>is_double</function>,
     <function>is_object</function>,
     <function>is_string</function>,
     <function>is_array</function> も参照下さい。</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.is-string">
   <refnamediv>
    <refname>is_string</refname>
    <refpurpose>変数が文字列かどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>is_string</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
    <parameter>var</parameter> が文字列であれば TRUE を、
    そうでなければ FALSE を返します。</para>

    <para>
     <function>is_long</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_float</function>,
     <function>is_double</function>,
     <function>is_real</function>,
     <function>is_object</function>,
     <function>is_array</function> も参照下さい。</para>

   </refsect1>
  </refentry>


  <refentry id="function.isset">
   <refnamediv>
    <refname>isset</refname>
    <refpurpose>変数がセットされているかどうかを検査する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>isset</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    
    <simpara>
    <parameter>var</parameter> が存在すれば
    TRUE を返し、そうでなければ FALSE を返します。</simpara>

     <para>
     変数が、<function>unset</function> により割当を解除された場合、
     <function>isset</function> はもう TRUE とはなりません。
     <informalexample><programlisting>
 $a = "test";
 echo isset($a); // true
 unset($a);
 echo isset($a); // false
 </programlisting></informalexample></para>

    <simpara>
    <function>empty</function> および <function>unset</function> も参照下さい。</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.settype">
   <refnamediv>
    <refname>settype</refname>
    <refpurpose>変数の型をセットする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>settype</function></funcdef>
     <paramdef>string <parameter>var</parameter></paramdef>
     <paramdef>string <parameter>type</parameter></paramdef>
    </funcsynopsis>

    <para>
    変数 <parameter>var</parameter> の型を
    <parameter>type</parameter> にセットします。</para>

    <para>
    <parameter>type</parameter> の値は以下のいずれかです。

     <itemizedlist>
      <listitem><simpara>"integer"</simpara></listitem>
      <listitem><simpara>"double"</simpara></listitem>
      <listitem><simpara>"string"</simpara></listitem>
      <listitem><simpara>"array"</simpara></listitem>
      <listitem><simpara>"object"</simpara></listitem>
     </itemizedlist></para>

    <para>
    成功すれば TRUE を、そうでなければ FALSE を返します。</para>

    <para>
    <function>gettype</function> も参照下さい。</para>

    </refsect1>
   </refentry>
 
 
   <refentry id="function.strval">
    <refnamediv>
     <refname>strval</refname>
     <refpurpose>変数の文字列としての値を得ます</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
      <funcdef>string <function>strval</function></funcdef>
      <paramdef>mixed <parameter>var</parameter></paramdef>
     </funcsynopsis>
 
     <simpara>
     
      <parameter>var</parameter> の文字列としての値を返します。</simpara>
 
     <simpara>
      <parameter>var</parameter> は全てのスカラー型とすることができます。
      <function>strval</function> では、配列またはオブジェクトを 
      使用することはできません。</simpara>

     <simpara>
      <function>doubleval</function>,
      <function>intval</function>,
      <function>settype</function> , <link
     linkend="language.types.type-juggling">型の相互変換(ジャグリング)</link> を
     参照下さい。</simpara>
 
    </refsect1>
   </refentry>
 
 
   <refentry id="function.unset">
    <refnamediv>
     <refname>unset</refname>
     <refpurpose>指定した変数の割当を解除する</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
      <funcdef>int <function>unset</function></funcdef>
      <paramdef>mixed <parameter>var</parameter></paramdef>
     </funcsynopsis>
 
     <para>
      <function>unset</function> は指定した変数を破棄し、TRUE を返します。</para>
 
     <para>
      <example>
       <title><function>unset</function> の例</title>
       <programlisting>
 unset( $foo );
 unset( $bar['quux'] );
       </programlisting>
      </example></para>
 
     <para>
      <function>isset</function> 、<function>empty</function> も参照下さい。</para>
      
   </refsect1>
  </refentry>


</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
