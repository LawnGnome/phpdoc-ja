 <reference id="ref.odbc">
  <title>Unified ODBC 関数</title>
  <titleabbrev>ODBC</titleabbrev>
  <partintro>
   <simpara>
    通常のODBCサポートに加えて、PHPのUnified ODBC関数では、各々のAPIを
    実装するためにODBC APIのセマンティックスを借用する複数のデータベー
    スにアクセスすることが可能です。ほとんど同じ複数のデータベースドラ
    イバを維持管理する代わりに、これらのドライバは単一のODBC関数セットに
    統合されています。
   </simpara>
   <simpara>
    以下のデータベースがUnified ODBCでサポートされています。
    <ulink url="&url.adabas;">Adabas D</ulink>, <ulink
    url="&url.ibmdb2;">IBM DB2</ulink>, <ulink
    url="&url.iodbc;">iODBC</ulink>, <ulink
    url="&url.solid;">Solid</ulink>, <ulink
    url="&url.sybase;">Sybase SQL Anywhere</ulink>
   </simpara>
   <simpara>
    これらのデータベース用のPHPの設定に関する詳細な情報については、
    <link linkend="database-support-options">UNIXシステムへのインストー
    ル</link>の章を参照下さい。
   </simpara>
   <note>
    <simpara>
     上記のデータベースと接続する際にODBCは使用されません。関数はODBC
     関数として同じ名前と構文を共有していますが、これらのデータベース
     の専用APIを使用します。
    </simpara>
   </note>
  </partintro>

  <refentry id="function.odbc-autocommit">
   <refnamediv>
    <refname>odbc_autocommit</refname>
    <refpurpose>autocommitの動作をオンまたはオフにします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_autocommit</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>OnOff</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>OnOff</parameter>パラメータを指定しない場合、
     この関数は、<parameter>connection_id</parameter>に関する
      auto-commitステータスを返します。auto-commitがonの場合に
     true、offまたはエラーを生じた場合にfalseを返します。
    </para>
    <para>
     <parameter>OnOff</parameter>がtrueの場合はauto-commitが
     可能であり、falseの場合はauto-commitが使用不可となっています。
     成功時に<literal>true</literal>、失敗したときに 
     <literal>false</literal>となります。
    </para>
    <para>
     デフォルトで接続のauto-commitはonとなっています。auto-commitを使
     用不可にするのは、トランザクションを開始することと等価です。
    </para>
    <simpara>
     <function>odbc_commit</function>および
     <function>odbc_rollback</function>も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-binmode">
   <refnamediv>
    <refname>odbc_binmode</refname>
   <refpurpose>バイナリカラムデータを処理する</refpurpose>
  </refnamediv>
  <refsect1>
   <title>説明</title>
   <funcsynopsis>
     <funcprototype>
     <funcdef>int <function>odbc_binmode</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>int <parameter>mode</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (関係するODBC SQL型: BINARY, VARBINARY, LONGVARBINARY)
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       ODBC_BINMODE_PASSTHRU: BINARY データとして通過
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       ODBC_BINMODE_RETURN: そのまま返す
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ODBC_BINMODE_CONVERT: char に変換し返す
      </simpara>
     </listitem>
    </itemizedlist>
    <para>
     バイナリSQLデータが、文字データに変換される時、ソースデータの各バ
     イト(8ビット)は、2つのアスキー文字で表現されます。
     これらの文字は、16進表現で数値をアスキー文字で表現したものです。
     例えば、2進数000000001は<literal>"01"</literal>に変換され、
     11111111は、<literal>"FF"</literal>に変換されます。
     <table>
      <title>LONGVARBINARY処理</title>
      <tgroup cols="3">
       <thead>
	<row>
	 <entry>binmode</entry>
	 <entry>longreadlen</entry>
	 <entry>結果</entry>
	</row>
       </thead>
       <tbody>
	<row>
 	 <entry>ODBC_BINMODE_PASSTHRU</entry>
	 <entry>>0</entry>
	 <entry>通過</entry>
	</row>
	<row>
 	 <entry>ODBC_BINMODE_RETURN</entry>
	 <entry>>0</entry>
	 <entry>そのまま返す</entry>
	</row>
	<row>
 	 <entry>ODBC_BINMODE_CONVERT</entry>
	 <entry>>0</entry>
	 <entry>charとして返す</entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <function>odbc_fetch_into</function>を使用した場合、
     passthruは空文字列が対応するカラムに返されることを意味します。
    </para>
    <para>
     <parameter>result_id</parameter>に<literal>0</literal>を指定した
     場合、ここで設定した値は、新規の結果に関するデフォルト値として用
     いられます。
     <note>
      <simpara>
       longreadlenのデフォルト値は<literal>4096</literal>で、binmodeの
       デフォルト値は<literal>ODBC_BINMODE_RETURN</literal>です。バイ
       ナリロングカラムの処理は、<function>odbc_longreadlen</function> 
       の影響も受けます。
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-close">
   <refnamediv>
    <refname>odbc_close</refname>
    <refpurpose>ODBC 接続を閉じます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>odbc_close</function></funcdef>
      <paramdef>int <parameter>connection_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_close</function>は、指定された接続IDが指す
     データベースサーバーへの接続を閉じます。
     <note>
      <simpara>
       この関数の処理は、この接続に関してオープンされたトランザクションが
       ある場合に失敗します。この場合、接続はオープンされたままとなります。
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-close-all">
   <refnamediv>
    <refname>odbc_close_all</refname>
    <refpurpose>全てのODBC接続を閉じます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>odbc_close_all</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_close_all</function>は、データベースサーバーへの
     全ての接続を閉じます。
     <note>
      <simpara>
       この関数は、ある接続においてオープンされたトランザクションがある場合に
       失敗します。この場合、この接続はオープンされたままとなります。
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-commit">
   <refnamediv>
    <refname>odbc_commit</refname>
    <refpurpose>ODBCトランザクションをコミットします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_commit</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     返り値:   成功時に<literal>true</literal>、失敗の場合に
     <literal>false</literal>となります。
     <parameter>connection_id</parameter>に関する全ての実行中の
     トランザクションは、コミットされます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-connect">
   <refnamediv>
    <refname>odbc_connect</refname>
    <refpurpose>データソースに接続します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_connect</function></funcdef>
      <paramdef>string <parameter>dsn</parameter></paramdef>
      <paramdef>string <parameter>user</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>cursor_type</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ODBC接続IDまたはエラーの場合に0(<literal>false</literal>)を返しま
     す。
    </para>
    <simpara>
     この関数により返される接続IDは、他のODBC関数により使用されます。
     複数の接続を同時にオープンすることができます。
     オプションの4番目のパラメータは、この接続で使用されるカーソルの型を
     設定します。
     このパラメータは、通常は必要ありませんが、いくつかのODBCドライバ
     の問題に対処する際には有用です。
    </simpara>
    <simpara>
     いくつかのODBCドライバでは、複雑なストアド・プロシージャの
     実行時に次のようなエラーにより失敗する可能性があります。
     "Cannot open a cursor on a stored
     procedure that has anything other than a single select statement
     in it"
     SQL_CUR_USE_ODBCを使用することにより、このようなエラーを
     回避できる可能性があります。
     また、いくつかのドライバは、<function>odbc_fetch_row</function> 
     においてオプションのrow_numberパラメータをサポートしません。
     この場合でも、SQL_CUR_USE_ODBCにより解決できる可能性があります。
    </simpara>
    <simpara>
     次のような定数がカーソル型として定義されています。
    </simpara>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
	SQL_CUR_USE_IF_NEEDED
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	SQL_CUR_USE_ODBC
      </simpara>
      </listitem> 
      <listitem>
       <simpara>
	SQL_CUR_USE_DRIVER
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	SQL_CUR_DEFAULT
      </simpara>
      </listitem> 
     </itemizedlist>
    </para>
    <simpara>
     持続的な接続を行うには、<function>odbc_pconnect</function>を参照
     下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-cursor">
   <refnamediv>
    <refname>odbc_cursor</refname>
    <refpurpose>カーソル名を得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_cursor</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     odbc_cursorは、指定された接続ID(result_id)に関するカーソル名を返
     します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-do">
   <refnamediv>
    <refname>odbc_do</refname>
    <refpurpose><function>odbc_exec</function>の同義語</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_do</function></funcdef>
      <paramdef>int <parameter>conn_id</parameter></paramdef>
      <paramdef>string <parameter>query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_do</function>は、指定した接続においてクエリー
     (query)を実行します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-exec">
   <refnamediv>
    <refname>odbc_exec</refname>
    <refpurpose>SQL文を準備し、実行します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_exec</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>string <parameter>query_string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     エラー時には、<literal>false</literal>を返します。SQL コマンドの実行に
     成功した場合には、ODBC結果IDを返します。
    </para>
    <para>
     <function>odbc_exec</function>は、SQL 命令を
     <parameter>connection_id</parameter>で指定されたデータベースサーバーに
     送ります。このパラメータは、<function>odbc_connect</function>または
     <function>odbc_pconnect</function>より返された有効なIDでなければ
     なりません。
    </para>
    <simpara> 
     複数のSQL命令を実行するためには、
     <function>odbc_prepare</function>
     および<function>odbc_execute</function>も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-execute">
   <refnamediv>
    <refname>odbc_execute</refname>
    <refpurpose>準備された文を実行します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_execute</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>array
       <parameter>
	<replaceable><optional>parameters_array</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_prepare</function>で準備された命令を実行します。
     実行に成功した場合は<literal>true</literal> 、その他の場合は、
     <literal>false</literal>を返します。配列
     <parameter>parameters_array</parameter>は、
     命令の中にパラメータを有する場合にのみ指定する必要があります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-fetch-into">
   <refnamediv>
    <refname>odbc_fetch_into</refname>
    <refpurpose>1行文の結果を配列に取り込みます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_fetch_into</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>rownumber</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>array <parameter>result_array</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     結果におけるカラム番号を返します。また、エラーの場合に
     <literal>false</literal>を返します。
     <parameter>result_array</parameter>は参照渡しとする必要があります。
     しかし、このポインタは配列型に変換されるのでどんな型であっても
     構いません。この配列には、添字0から始まるカラム番号が代入されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-fetch-row">
   <refnamediv>
    <refname>odbc_fetch_row</refname>
    <refpurpose>行を取り込みます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_fetch_row</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>row_number</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_fetch_row</function>が成功した場合(行があった場合)、
     <literal>true</literal>が返されます。もう行がない場合、
     <literal>false</literal>が返されます。
    </para>
    <para>
     <function>odbc_fetch_row</function> は、<function>odbc_do</function> や 
     <function>odbc_exec</function> から返された行データ?ϖり込みます。
     <function>odbc_fetch_row</function> がコールされた後、
     この行のフィールドは、
     <function>odbc_result</function> でアクセス可能となります。
    </para>
    <para>
     <parameter>row_number</parameter>が指定されない場合、
     <function>odbc_fetch_row</function>は、結果セットにおける
     次の行を取り込もうと試みます。<parameter>row_number</parameter>を
     指定した<function>odbc_fetch_row</function> のコールと指定しない
     コールを混用することができます。
    </para>
    <para>
     結果を複数回走査したい場合、<function>odbc_fetch_row</function> を
     <parameter>row_number</parameter>に1を指定してコールし、
     続いて結果を再度見るために
     <parameter>row_number</parameter>を指定せずに
     <function>odbc_fetch_row</function> を実行しつづけます。
     ドライバが、行を番号で取り込むことをサポートしていない場合、
     <parameter>row_number</parameter> パラメータは無視されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-name">
   <refnamediv>
    <refname>odbc_field_name</refname>
    <refpurpose>カラム名を得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_field_name</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>int <parameter>field_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_field_name</function>は、指定されたODBC 結果IDにおいて
     指定されたカラム番号にあるフィールドの名前を返します。
     フィールド番号は、1から始まります。エラーの場合、
     <literal>false</literal> を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-num">
   <refnamediv>
    <refname>odbc_field_num</refname>
    <refpurpose>カラム番号を返します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_field_num</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>string <parameter>field_name</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_field_num</function> は、指定したODBC結果IDにおけ
     るフィールド名に対応するカラムスロットの数を返します。
     フィールド番号は、1から始まります。エラーの場合、
     <literal>false</literal>を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-type">
   <refnamediv>
    <refname>odbc_field_type</refname>
    <refpurpose>フィールドのデータ型を返します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_field_type</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>int <parameter>field_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_field_type</function>は、指定されたODBC結果IDに
     おいて指定番号で参照されるフィールドのSQL型を返します。
     フィールド番号は1から始まります。
    </para>
   </refsect1>
  </refentry>

   <refentry id="function.odbc-field-len">
    <refnamediv>
     <refname>odbc_field_len</refname>
     <refpurpose>フィールドの長さを得る</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
     <funcprototype>
       <funcdef>string <function>odbc_field_len</function></funcdef>
       <paramdef>int <parameter>result_id</parameter></paramdef>
       <paramdef>int <parameter>field_number</parameter></paramdef>
     </funcprototype>
     </funcsynopsis>
     <para>
     <function>odbc_field_len</function>は、指定したODBC 結果
     ID(result_id)の番号で参照されるフィールドの長さを返します。
     フィールド番号は、1から始まります。
    </para>
    <simpara>
     浮動小数点の精度を得るには、<function>odbc_field_scale</function>
     も参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-precision">
   <refnamediv>
    <refname>odbc_field_precision</refname>
    <refpurpose><function>odbc_field_len</function>の同義語</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_field_precision</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>int <parameter>field_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_field_precision</function>は、指定したODBC結果IDに
     おいて番号で指定されたフィールドの精度を返します。
    </para>
    <para>
     浮動小数点の精度を得るには、<function>odbc_field_scale</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-scale">
   <refnamediv>
    <refname>odbc_field_scale</refname>
    <refpurpose>フィールドの精度を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_field_scale</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>int <parameter>field_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_field_precision</function>は指定したODBC結果IDの番
     号で指定したフィールドの精度を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-free-result">
   <refnamediv>
    <refname>odbc_free_result</refname>
    <refpurpose>結果を保持するリソースを開放します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_free_result</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     常に<literal>true</literal>を返します。
    </para>
    <para>
     <function>odbc_free_result</function>は、スクリプトのメモリ消費量
     が多すぎることが懸念される場合にのみコールする必要があります。
     全ての結果保持用メモリは、スクリプト実行が終了した際に自動的に
     開放されます。しかし、結果データをスクリプトでもはや必要としない
     ことが確実な場合、<function>odbc_free_result</function>をコールし
     て、<parameter>result_id</parameter> が指すメモリを開放することが
     できます。
    </para>
    <para>
     <note>
      <simpara>
       自動コミット(auto-commit)が無効(<function>odbc_autocommit</function>を
       参照下さい)な時にコミットの前に
       <function>odbc_free_result</function>をコールすると、全ての未解決
       のトランザクションは、ロールバックされます。
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-longreadlen">
   <refnamediv>
    <refname>odbc_longreadlen</refname>
   <refpurpose>LONGカラムを処理します</refpurpose>
  </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_longreadlen</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>int <parameter>length</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (影響する ODBC SQL 型: LONG, LONGVARBINARY)
     PHPに返されるバイト数は、パラメータlengthにより制御されます。
     これを0をセットした場合、ロングカラムデータは、クライアントに
     そのまま渡されます。
    </para>
    <note>
     <simpara>
      LONGVARBINARYカラムの処理は、<function>odbc_binmode</function>に
      も影響を受けます。
     </simpara>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-num-fields">
   <refnamediv>
    <refname>odbc_num_fields</refname>
    <refpurpose>結果のカラム数を返します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_num_fields</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_num_fields</function>は、ODBC 結果におけるフィールド
     (カラム)の数を返します。この関数は、エラー時に-1を返します。
     引数は、<function>odbc_exec</function>より返された有効な結果ID
     です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-pconnect">
   <refnamediv>
    <refname>odbc_pconnect</refname>
    <refpurpose>持続的なデータベース接続を開きます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_pconnect</function></funcdef>
      <paramdef>string <parameter>dsn</parameter></paramdef>
      <paramdef>string <parameter>user</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>cursor_type</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ODBC接続IDまたはエラー時に0(<literal>false</literal>)を返します。
     この関数は、スクリプトが終了した時に接続が閉じられないということ以外は
     <function>odbc_connect</function>に非常に似ています。
     同じ<parameter>dsn</parameter>、<parameter>user</parameter>、
     <parameter>password</parameter>の組み合わせ
     (<function>odbc_connect</function>および
     <function>odbc_pconnect</function>による)接続の場合は、
     持続的な接続を再利用することが可能です。
    </para>
    <para>
     <note>
      <simpara>
       持続的な接続は、PHPがCGIプログラムとして使用される場合は、
       使用できません。
      </simpara>
     </note>
    </para>
    <para>
     オプションのcursor_typeパラメータに関する情報については、
    <function>odbc_connect</function>関数を参照下さい。
     持続的接続に関する更に詳細な情報については、PHP FAQを参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-prepare">
   <refnamediv>
    <refname>odbc_prepare</refname>
    <refpurpose>実行用に文を準備します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_prepare</function></funcdef>
      <paramdef>int <parameter>connection_identifier</parameter></paramdef>
      <paramdef>string <parameter>query_string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     エラー時には、<literal>false</literal>を返します。
    </para>
    <para>
     SQLコマンドの実行に成功した場合は、ODBC結果IDを返します。
     結果IDは、この後、<function>odbc_execute</function>で命令を実行す
     る際に使用することができます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-num-rows">
   <refnamediv>
    <refname>odbc_num_rows</refname>
    <refpurpose>結果における行数を返します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_num_rows</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_num_rows</function>は、ODBC 結果における行の数を
     返します。この関数は、エラー時に-1を返します。
     INSERT、UPDATEおよびDELETE命令に関しては、
     <function>odbc_num_rows</function>は、変更された行の数を返します。
     SELECT文の場合、この関数は利用可能な行の数を返します。
    </para>
    <para>
     注意: SELECT の後に利用可能な行の数を定義するために
     <function>odbc_num_rows</function>を使用した場合、
     多くのドライバにおいて、-1が返されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-result">
   <refnamediv>
    <refname>odbc_result</refname>
    <refpurpose>結果データを得ます</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>odbc_result</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>mixed <parameter>field</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     フィールドの内容を返します。
    </para>
    <para>
     <parameter>field</parameter>には、取得するフィールドのカラム番号
     を表す整数またはフィールド名を表す文字列のどちらを指定できます。
     例えば次のようにします。
     <informalexample>
      <programlisting role="php">
$item_3 = odbc_result ($Query_ID, 3 );
$item_val = odbc_result ($Query_ID, "val");
      </programlisting>
     </informalexample>
    </para>
     <para>
     最初の<function>odbc_result</function>コールにより、クエリー結果
     の現在のレコードにおける3番目のフィールドの値が返されます。
     2番目の<function>odbc_result</function>コールにより、クエリーの結
     果の現在のレコードにおける"val"というフィールド名のフィールドの値
     を返します。あるフィールドのカラム番号パラメータが1より小さいか
     現在のレコードのカラム(またはフィールド)の数を超える場合、
     エラーを生じます。同様に、クエリーを行ったテーブルのフィールド名には
     ない名前をフィールドとして指定した場合にもエラーを生じます。
    </para>
    <para>
     フィールドインデックスは、1から始まります。
     バイナリまたはロングカラムデータの返し方に関しては、
     <function>odbc_binmode</function>および 
     <function>odbc_longreadlen</function>を参照下さい。

<!--

要求されたフィールドが、バイナリデータまたは 4096 バイト以上の LONG データ型
を有している場合、その内容は返されません。代わりに、
その内容はクライアントに直接送られます。
ヒント: バイナリデータを返す必要がある場合、
フィールドの内容を 16 進数で得るために SQL 関数
HEX() を使用してください。
例えば、
"SELECT HEX(binary_col) FROM mytable"
-->
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-result-all">
   <refnamediv>
    <refname>odbc_result_all</refname>
    <refpurpose>HTML テーブルとして結果を出力します</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_result_all</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>format</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     成功の場合に結果の行数、エラーの場合に <literal>false</literal>を
     返します。
    </para>
    <para>
     <function>odbc_result_all</function>は、
     <function>odbc_exec</function>により作成された結果IDから全ての行を
     出力します。結果は、HTMLテーブル形式で出力されます。
     オプションの<parameter>フォーマット</parameter>文字列により、
     テーブルのあらゆるフォーマット指定が可能です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-rollback">
   <refnamediv>
    <refname>odbc_rollback</refname>
    <refpurpose>トランザクションをロールバックします</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_rollback</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>connection_id</parameter>における全ての未解決の命令を
     ロールバックします。成功時に<literal>true</literal>を失敗の時には
     <literal>false</literal>を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-setoption">
   <refnamediv>
    <refname>odbc_setoption</refname> 
    <refpurpose>
     ODBCの設定を茣Dます。エラーが発生した場合にfalse、
     その他の場合にtrueを返します。
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>int <function>odbc_setoption</function></funcdef>
       <paramdef>int <parameter>id</parameter></paramdef>
       <paramdef>int <parameter>function</parameter></paramdef>
       <paramdef>int <parameter>option</parameter></paramdef>
       <paramdef>int <parameter>param</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数により特定の接続またはクエリー結果に関するODBCオプション
     を変更することが可能となります。この関数は、気まぐれなODBCドライ
     バの問題に対処する際の道具として作成されたものです。自分がODBCプ
     ログラマであり、様々なオプションが有する効果を理解している場合に
     のみこの関数を使用するべきでしょう。
     使用可能な全てのオプションおよび値を理解するためには、良いODBCリ
     ファレンスが必要です。ドライバーのバージョンが違うと、サポートさ
     れるオプションも異なります。
    </para>
    <para>
     この関数の効果はODBCドライバに依存する可能性があるので、
     この関数を一般に公開するスクャ×トで使用することは、
     必ず避けるべきです。
     また、いくつかのODBCオプションはこの関数では利用できません。
     それは、これらを接続の確立またはクエリーの準備の前に設定する
     必要があるからです。
     しかし、特定の業務において自分の上司が商用製品の使用を指示しなかった
     ために、PHPを使用する場合、このことは実際的な問題となります。
    </para>
    <para>
     <parameter>Id</parameter>は設定を変更する接続IDまたは
      結果IDです。SQLSetConnectOption()の場合、これは接続IDです。
     SQLSetStmtOption()の場合、これは結果IDです。
    </para>
    <para>
     <parameter>function</parameter>は使用するODBC関数です。
      値はSQLSetConnectOption()の場合1、
      SQLSetStmtOption()の場合2である必要があります。
    </para>
    <para>
     パラメータ<parameter>option</parameter>は設定するオプションです。
    </para>
    <para>
     パラメータ<parameter>param</parameter>は指定した
     <parameter>option</parameter>の値です。
     <example>
      <title>ODBC Setoption の例</title>
      <programlisting role="php">
// 1. SQLSetConnectOption() のオプション 102 は SQL_AUTOCOMMIT です。
//    SQL_AUTOCOMMIT の値 1 は SQL_AUTOCOMMIT_ON です。
//    この例は odbc_autocommit($conn, true); と同じ結果
//    となります。

odbc_setoption ($conn, 1, 102, 1);

// 2. SQLSetStmtOption() のオプション 0 は SQL_QUERY_TIMEOUT です。
//    この例は 30 秒後に時間切れとなるクエリーを設定します。

$result = odbc_prepare ($conn, $sql);
odbc_setoption ($result, 2, 0, 30);
odbc_execute ($result);
       </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-tables">
   <refnamediv>
    <refname>odbc_tables</refname>
    <refpurpose>
     指定したデータソースに保存されたテーブルの名前のリストを取得し、
     その情報を有する結果IDを返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_tables</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>qualifier</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>owner</optional></replaceable>
       </parameter>
      </paramdef> 
      <paramdef>string 
       <parameter>
	<replaceable><optional>name</optional></replaceable>
       </parameter>
      </paramdef> 
      <paramdef>string 
       <parameter>
	<replaceable><optional>types</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定した範囲の全てのテーブルリストを得ます。ODBC結果IDまたは失敗
     した際に<literal>false</literal>を返します。
    </para>
    <para>
     結果は以下のカラムを有します。
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem> 
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>TABLE_TYPE</simpara></listitem>
      <listitem><simpara>REMARKS</simpara></listitem>
     </itemizedlist> 
    </para>
    <simpara>
     結果は、TABLE_TYPE、TABLE_QUALIFIER、TABLE_OWNER、TABLE_NAMEの順
     番になります。
    </simpara>
    <para>
     引数<parameter>owner</parameter>および<parameter>name</parameter>
     には、検索パターン(ゼロ以上の文字にマッチする'%'や単一の文字にマッ
     チする'_')を指定可能です。
    </para>
    <para>
     限定子、所有者、テーブル名を数えるために、
     <parameter>qualifier</parameter>、<parameter>owner</parameter>、
     <parameter>name</parameter>、<parameter>table_type</parameter>に
     ついて以下のような特別な記号が使用可能です。
     <itemizedlist>
      <listitem>
       <simpara>
	<parameter>qualifier</parameter>がパーセント記号(%)のみで、
	<parameter>owner</parameter>および<parameter>name</parameter>
	が空文字列であった場合、結果にはそのデータソースに関する
	有効な限定子のリスト(NULLを有するTABLE_QUALIFIERカラム以外の全てのカ
	ラム)が含まれます。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<parameter>owner</parameter>がパーセント記号(%)のみで、
	<parameter>qualifier</parameter>および
	<parameter>name</parameter>が空文字列の場合、結果にはそのデータソー
	スに関する有効な所有者のリスト(NULLを有するTABLE_OWNERカラム以外
	の全てのカラム)が含まれます。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<parameter>table_type</parameter>がパーセント記号(%)のみで、
	<parameter>qualifier</parameter>、<parameter>owner</parameter>、
	<parameter>name</parameter>が空文字列の場合、結果にはそのデータソー
	スに関する有効なテーブル型のリスト(NULLを有するTABLE_TYPEカラ
	ム以外の全てのカラム)が含まれます。
       </simpara>
      </listitem>
     </itemizedlist> 
    </para>
    <para>
     <parameter>table_type</parameter>が空の文字列ではない場合、検索す
     る型についてカンマで区切った値のリストを指定する必要があります。
     各値は、シングルクオート(')で括るかまたは括らない形で指定可能です。
     例えば、"'TABLE','VIEW'"または"TABLE, VIEW"となります。データソー
     スが指定したテーブル型をサポートしていない場合、
     <function>odbc_tables</function>はその型についていかなる結果も返
     しません。
    </para>
    <simpara>
     関連する権限の取得については、
     <function>odbc_tableprivileges</function>を参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-tableprivileges">
   <refnamediv>
    <refname>odbc_tableprivileges</refname>
    <refpurpose>
     各テーブルのリストおよび関連する権限のリストを取得する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_tableprivileges</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>qualifier</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>owner</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>name</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定した範囲にあるテーブルおよび各テーブルに関連する権限のリスト
     を取得します。ODBC結果IDまたは、失敗した場合に
     <literal>false</literal>を返します。
    </para>
    <para>
     結果は次のカラムを有します。
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem>
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>GRANTOR</simpara></listitem>
      <listitem><simpara>GRANTEE</simpara></listitem>
      <listitem><simpara>PRIVILEGE</simpara></listitem>
      <listitem><simpara>IS_GRANTABLE</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     結果は、TABLE_QUALIFIER、TABLE_OWNER、TABLE_NAMEの順番になります。
    </simpara>
    <para>
     引数<parameter>owner</parameter>および<parameter>name</parameter>
     には検索パターン(ゼロ以上の文字にマッチする'%'や単一の文字にマッ
     チする'_')を使用可能です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-columns">
   <refnamediv>
    <refname>odbc_columns</refname>
    <refpurpose>
     指定したテーブルにあるカラム名のリストを取得し、その情報を有する
     結果IDを返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_columns</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>qualifier</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>owner</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>table_name</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>column_name</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定した範囲の全てのカラムのリストを取得します。ODBC結果IDまたは
     失敗した場合に<literal>false</literal>を返します。
    </para>
    <para>
     結果は以下のカラムを有しています。
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem>
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>COLUMN_NAME</simpara></listitem>
      <listitem><simpara>DATA_TYPE</simpara></listitem>
      <listitem><simpara>TYPE_NAME</simpara></listitem>
      <listitem><simpara>PRECISION</simpara></listitem>
      <listitem><simpara>LENGTH</simpara></listitem>
      <listitem><simpara>SCALE</simpara></listitem>
      <listitem><simpara>RADIX</simpara></listitem>
      <listitem><simpara>NULLABLE</simpara></listitem>
      <listitem><simpara>REMARKS</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     結果は、TABLE_QUALIFIER、TABLE_OWNER、TABLE_NAMEでソートされます。
    </simpara>
    <para>
     引数<parameter>owner</parameter>、<parameter>table_name</parameter>、
     <parameter>column_name</parameter>には検索パターン(ゼロ以上の文字
     にマッチする'%'や単一の文字にマッチする'_')を使用可能です。
    </para>
    <simpara>
     付随する権限を取得するには
     <function>odbc_columnprivileges</function>を参照下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-columnprivileges">
   <refnamediv>
    <refname>odbc_columnprivileges</refname>
    <refpurpose>
     カラムおよび付随する権限のリストを取得する際に使用する結果IDを返
     す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_columnprivileges</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>qualifier</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>owner</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>table_name</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>column_name</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定したテーブルに関するカラムおよび付随する権限のリストを取得し
     ます。ODBC結果IDまたは失敗した場合に<literal>false</literal>を返
     します。
    </para>
    <para>
     結果は以下のカラムを有します。
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem>
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>GRANTOR</simpara></listitem>
      <listitem><simpara>GRANTEE</simpara></listitem>
      <listitem><simpara>PRIVILEGE</simpara></listitem>
      <listitem><simpara>IS_GRANTABLE</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     結果は、TABLE_QUALIFIER、TABLE_OWNER、TABLE_NAMEでソートされます。
    </simpara>
    <para>
     引数<parameter>column_name</parameter>には検索パターン(ゼロ以上の文字
     にマッチする'%'や単一の文字にマッチする'_')を使用可能です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-gettypeinfo">
   <refnamediv>
    <refname>odbc_gettypeinfo</refname>
    <refpurpose>
     データソースによりサポートされるデータ型に関する情報を有する結果
     IDを返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_gettypeinfo</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>data_type</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     データソースによりサポートされるデータ型に関する情報を取得します。
     ODBC結果IDまたは失敗した場合に<literal>false</literal>を返します。
     オプションの引数<parameter>data_type</parameter>は
     単一のデータ型に情報を制限するために使用することが可能です。
    </para>
    <para>
     結果は以下のカラムを有します。
     <itemizedlist>
      <listitem><simpara>TYPE_NAME</simpara></listitem>
      <listitem><simpara>DATA_TYPE</simpara></listitem>
      <listitem><simpara>PRECISION</simpara></listitem>
      <listitem><simpara>LITERAL_PREFIX</simpara></listitem>
      <listitem><simpara>LITERAL_SUFFIX</simpara></listitem>
      <listitem><simpara>CREATE_PARAMS</simpara></listitem>
      <listitem><simpara>NULLABLE</simpara></listitem>
      <listitem><simpara>CASE_SENSITIVE</simpara></listitem>
      <listitem><simpara>SEARCHABLE</simpara></listitem>
      <listitem><simpara>UNSIGNED_ATTRIBUTE</simpara></listitem>
      <listitem><simpara>MONEY</simpara></listitem>
      <listitem><simpara>AUTO_INCREMENT</simpara></listitem>
      <listitem><simpara>LOCAL_TYPE_NAME</simpara></listitem>
      <listitem><simpara>MINIMUM_SCALE</simpara></listitem>
      <listitem><simpara>MAXIMUM_SCALE</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     結果は、DATA_TYPEおよびTYPE_NAMEでソートされます。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-primarykeys">
   <refnamediv>
    <refname>odbc_primarykeys</refname>
    <refpurpose>
     テーブルの主キーを有するカラムの名前を取得する際に使用可能な結果
     IDを返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_primarykeys</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>string <parameter>qualifier</parameter></paramdef>
      <paramdef>string <parameter>owner</parameter></paramdef>
      <paramdef>string <parameter>table</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     テーブルの主キーを有するカラムの名前を返します。ODBC結果IDまたは
     失敗した場合に<literal>false</literal>を返します。
    </para>
    <para>
     結果は以下のカラムを有します。
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem>
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>COLUMN_NAME</simpara></listitem>
      <listitem><simpara>KEY_SEQ</simpara></listitem>
      <listitem><simpara>PK_NAME</simpara></listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-foreignkeys">
   <refnamediv>
    <refname>odbc_foreignkeys</refname>
    <refpurpose>
     指定したテーブルの外部キーのリストまたは指定したテーブルの主キー
     を参照する他のテーブル外部キーのリストを返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_foreignkeys</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>string <parameter>pk_qualifier</parameter></paramdef>
      <paramdef>string <parameter>pk_owner</parameter></paramdef>
      <paramdef>string <parameter>pk_table</parameter></paramdef>
      <paramdef>string <parameter>fk_qualifier</parameter></paramdef>
      <paramdef>string <parameter>fk_owner</parameter></paramdef>
      <paramdef>string <parameter>fk_table</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>odbc_foreignkeys</function>外部キーに関する情報を取得し
     ます。ODBC結果IDまたは失敗した場合に<literal>false</literal>を返します。
    </para>
    <para>
     結果は以下のカラムを有します。
     <itemizedlist>
      <listitem><simpara>PKTABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>PKTABLE_OWNER</simpara></listitem>
      <listitem><simpara>PKTABLE_NAME</simpara></listitem>
      <listitem><simpara>PKCOLUMN_NAME</simpara></listitem>
      <listitem><simpara>FKTABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>FKTABLE_OWNER</simpara></listitem>
      <listitem><simpara>FKTABLE_NAME</simpara></listitem>
      <listitem><simpara>FKCOLUMN_NAME</simpara></listitem>
      <listitem><simpara>KEY_SEQ</simpara></listitem>
      <listitem><simpara>UPDATE_RULE</simpara></listitem>
      <listitem><simpara>DELETE_RULE</simpara></listitem>
      <listitem><simpara>FK_NAME</simpara></listitem>
      <listitem><simpara>PK_NAME</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     <parameter>pk_table</parameter>がテーブル名を有している場合、
     <function>odbc_foreignkeys</function>は指定したテーブルの主キーお
     よびそのキーを参照する全ての外部キーのリストを結果として返します。
    </simpara>
    <simpara>
     <parameter>fk_table</parameter>がテーブル名を有している場合、
     <function>odbc_foreignkeys</function>は指定したテーブルにある全て
     の外部キーおよびそのキーが参照する(他のテーブルの)主キーのリスト
     を結果として返します。
    </simpara>
    <simpara>
     <parameter>pk_table</parameter>および
     <parameter>fk_table</parameter>が共にテーブル名を有している場合、
     <function>odbc_foreignkeys</function>は
     <parameter>pk_table</parameter>で指定されたテーブルの主キーを参照
     する<parameter>fk_table</parameter>で指定されたテーブルの外部キー
     を返します。返されるキーは最大でも一つだけです。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-procedures">
   <refnamediv>
    <refname>odbc_procedures</refname>
    <refpurpose>
     指定したデータソースに保存されているプロシージャのリストを取得し、
     その情報を有する結果IDを返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_procedures</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>qualifier</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>owner</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>name</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     指定した範囲の全てのプロシージャのリストを取得します。ODBC結果ID
     または失敗した場合に<literal>false</literal>を返します。
    </para>
    <para>
     結果は以下のカラムを有します。
     <itemizedlist>
      <listitem><simpara>PROCEDURE_QUALIFIER</simpara></listitem>
      <listitem><simpara>PROCEDURE_OWNER</simpara></listitem>
      <listitem><simpara>PROCEDURE_NAME</simpara></listitem>
      <listitem><simpara>NUM_INPUT_PARAMS</simpara></listitem>
      <listitem><simpara>NUM_OUTPUT_PARAMS</simpara></listitem>
      <listitem><simpara>NUM_RESULT_SETS</simpara></listitem>
      <listitem><simpara>REMARKS</simpara></listitem>
      <listitem><simpara>PROCEDURE_TYPE</simpara></listitem>
     </itemizedlist>
    </para>
    <para>
     引数<parameter>owner</parameter>および<parameter>name</parameter>
     には検索パターン(ゼロ以上の文字にマッチする'%'や単一の文字にマッ
     チする'_')を使用可能です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-procedurecolumns">
   <refnamediv>
    <refname>odbc_procedurecolumns</refname>
    <refpurpose>
     プロシージャへのパラメータに関する情報を取得する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_procedurecolumns</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>qualifier</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>owner</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>proc</optional></replaceable>
       </parameter>
      </paramdef>
      <paramdef>string 
       <parameter>
	<replaceable><optional>column</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定したプロシージャに関して入出力パラメータのリストとその結果を
     構成するカラムを返します。ODBC結果IDまたは失敗した場合に
     <literal>false</literal>を返します。
    </para>
    <para>
     結果は以下のカラムを有します。
     <itemizedlist>
      <listitem><simpara>PROCEDURE_QUALIFIER</simpara></listitem>
      <listitem><simpara>PROCEDURE_OWNER</simpara></listitem>
      <listitem><simpara>PROCEDURE_NAME</simpara></listitem>
      <listitem><simpara>COLUMN_NAME</simpara></listitem>
      <listitem><simpara>COLUMN_TYPE</simpara></listitem>
      <listitem><simpara>DATA_TYPE</simpara></listitem>
      <listitem><simpara>TYPE_NAME</simpara></listitem>
      <listitem><simpara>PRECISION</simpara></listitem>
      <listitem><simpara>LENGTH</simpara></listitem>
      <listitem><simpara>SCALE</simpara></listitem>
      <listitem><simpara>RADIX</simpara></listitem>
      <listitem><simpara>NULLABLE</simpara></listitem>
      <listitem><simpara>REMARKS</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     結果は、PROCEDURE_QUALIFIER、PROCEDURE_OWNER、
     PROCEDURE_NAME、COLUMN_TYPEでソートされます。
    </simpara>
    <para>
     引数<parameter>owner</parameter>、<parameter>proc</parameter>、
     <parameter>column</parameter>には検索パターン(ゼロ以上の文字
     にマッチする'%'や単一の文字にマッチする'_')を使用可能です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-specialcolumns">
   <refnamediv>
    <refname>odbc_specialcolumns</refname>
    <refpurpose>
     テーブルのレコードを特定する最適なカラムの組合せまたはレコードの
     値がトランザクションにより更新される際に自動的に更新されるカラム
     を返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_specialcolumns</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>int <parameter>type</parameter></paramdef>
      <paramdef>string <parameter>qualifier</parameter></paramdef>
      <paramdef>string <parameter>owner</parameter></paramdef>
      <paramdef>string <parameter>table</parameter></paramdef>
      <paramdef>int <parameter>scope</parameter></paramdef>
      <paramdef>int <parameter>nullable</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     引数typeがSQL_BEST_ROWIDの場合、
     <function>odbc_specialcolumns</function>はテーブルの各レコードを
     特定するカラムを返します。
    </simpara>
    <simpara>
     引数typeがSQL_ROWVERの場合、
     <function>odbc_specialcolumns</function>はカラムから値を取得する
     ことにより指定したテーブルでレコードを特定できる最適なカラムまた
     はカラムの組を返します。
    </simpara>
    <simpara>
     ODBC結果IDまたは失敗した場合に<literal>false</literal>を返します。
    </simpara>
    <para>
     結果は以下のカラムを有します。
     <itemizedlist>
      <listitem><simpara>SCOPE</simpara></listitem>
      <listitem><simpara>COLUMN_NAME</simpara></listitem>
      <listitem><simpara>DATA_TYPE</simpara></listitem>
      <listitem><simpara>TYPE_NAME</simpara></listitem>
      <listitem><simpara>PRECISION</simpara></listitem>
      <listitem><simpara>LENGTH</simpara></listitem>
      <listitem><simpara>SCALE</simpara></listitem>
      <listitem><simpara>PSEUDO_COLUMN</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     結果はSCOPEでソートされます。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-statistics">
   <refnamediv>
    <refname>odbc_statistics</refname>
    <refpurpose>テーブルに関する統計情報を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>odbc_statistics</function></funcdef>
      <paramdef>int <parameter>connection_id</parameter></paramdef>
      <paramdef>string <parameter>qualifier</parameter></paramdef>
      <paramdef>string <parameter>owner</parameter></paramdef>
      <paramdef>string <parameter>table_name</parameter></paramdef>
      <paramdef>int <parameter>unique</parameter></paramdef>
      <paramdef>int <parameter>accuracy</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     テーブルおよびインデックスに関する統計情報を取得します。ODBC結果
     IDまたは失敗した場合に<literal>false</literal>を返します。
    </para>
    <para>
     結果は以下のカラムを有します。
     <itemizedlist>
      <listitem><simpara>TABLE_QUALIFIER</simpara></listitem>
      <listitem><simpara>TABLE_OWNER</simpara></listitem>
      <listitem><simpara>TABLE_NAME</simpara></listitem>
      <listitem><simpara>NON_UNIQUE</simpara></listitem>
      <listitem><simpara>INDEX_QUALIFIER</simpara></listitem>
      <listitem><simpara>INDEX_NAME</simpara></listitem>
      <listitem><simpara>TYPE</simpara></listitem>
      <listitem><simpara>SEQ_IN_INDEX</simpara></listitem>
      <listitem><simpara>COLUMN_NAME</simpara></listitem>
      <listitem><simpara>COLLATION</simpara></listitem>
      <listitem><simpara>CARDINALITY</simpara></listitem>
      <listitem><simpara>PAGES</simpara></listitem>
      <listitem><simpara>FILTER_CONDITION</simpara></listitem>
     </itemizedlist>
    </para>
    <simpara>
     結果は、NON_UNIQUE、TYPE、INDEX_QUALIFIER、
     INDEX_NAME、SEQ_IN_INDEXでソートされます。
    </simpara>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->



