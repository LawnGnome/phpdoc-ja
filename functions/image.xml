<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.30 $ -->
  <reference id="ref.image">
  <title>イメージ関数(image)</title>
  <titleabbrev>イメージ</titleabbrev>

  <partintro>
   <simpara>
    PHPのイメージ関数により<acronym>JPEG</acronym>、
    <acronym>GIF</acronym>、<acronym>PNG</acronym>、
    <acronym>SWF</acronym>画像の大きさを知ることができます。また、
    <acronym>GD</acronym>ライブラリ( <ulink
    url="&url.gd;">&url.gd;</ulink>で取得可能)があれば、画像の作成と操
    作を行なうこともできます。
   </simpara>
   <simpara>
    操作できるイメージのフォーマットは、インストールされているgdと
    これらのイメージフォーマットにアクセスするためにgdが必要とするその
    他のライブラリに依存します。gd-1.6より前のバージョンのgdは、gifイ
    メージ画像をサポートしていますが、pngはサポートしていません。
    一方、gd-1.6以降のバージョンはpngをサポートし、gifはサポートしてい
    ません。
   </simpara>
   <simpara>
    jpegフォーマットのイメージを読み書きするためには、
    jpeg-6b (<ulink url="&url.jpeg;">&url.jpeg;</ulink>)を取得/インス
    トールした後、jpeg-6bを使用するようにgdを再コンパイルする必要があ
    ります。PHPを
    <option role="configure">--with-jpeg-dir=/path/to/jpeg-6b</option>
    を付けて再コンパイルする必要もあります。
   </simpara>
   <simpara>
    Type 1 フォントのサポートを追加するには、t1lib
    (<ulink url="&url.t1lib;">&url.t1lib;</ulink>で取得可能)をインストー
    ルし、<option role="configure">--with-t1lib[=dir]</option>を追加す
    る必要があります。
   </simpara>
  </partintro>

  <refentry id="function.getimagesize">
   <refnamediv>
    <refname>GetImageSize</refname>
    <refpurpose>JPEG、GIF、PNG、SWF画像の大きさを取得する</refpurpose>    
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>getimagesize</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam><type>array</type><parameter>
	<replaceable><optional>imageinfo</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>GetImageSize</function>関数は、任意の<acronym>GIF</acronym>、
     <acronym>JPG</acronym>、<acronym>PNG</acronym>、<acronym>SWF</acronym>
     ファイルの大きさを定義し、
     ファイルの型と <acronym>HTML</acronym><sgmltag>IMG</sgmltag>
     タグ中で通常使用される高さと幅からなる寸法を表す文字列を返します。
    </para>
    <para>
     返り値は、4つの要素からなる配列です。0番目の要素は、ピクセル単位
     での画像の幅です。1番目の要素は高さです。2番目の要素は画像の種類を
     示すフラグです。1 = GIF、2 = JPG、3 = PNG、4 = SWFです。
     3番目の要素はIMGタグで直接利用できる文字列 "height=xxx width=xxx"
     です。
     <example>
      <title>GetImageSize (ファイル)</title>
      <programlisting role="php">
<![CDATA[
<?php $size = GetImageSize ("img/flag.jpg"); ?>
<IMG SRC="img/flag.jpg" <?php echo $size[3]; ?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>GetImageSize (URL)</title>
      <programlisting role="php">
<![CDATA[
<?php $size = GetImageSize ("http://www.php.net/gifs/logo.gif"); ?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     オプションの <parameter>imageinfo</parameter> パラメータにより
     画像ファイルから何らかの拡張情報を引き出すことが可能です。
     現在、この変数には<acronym>JPG</acronym>ファイルについて
     異なった複数のAPPマーカーが連想配列として返されます。いくつかのプログラムは、
     これらのAPPマーカーを画像の中の埋込テキストの情報として使用します。
     最も一般的な例は、マーカーAPPl3に埋込<acronym>IPTC</acronym>  
     <ulink url="&url.iptc;">&url.iptc;</ulink>情報が返されることです。
     バイナリ形式のマーカーAPP13を読むことができるよう処理するために
     <function>iptcparse</function> 関数を使用することができます。
     <example>
       <title>IPTC を返す GetImageSize</title>
      <programlisting>
<![CDATA[
<?php
    $size = GetImageSize ("testimg.jpg",&$info);
    if (isset ($info["APP13"])) {
        $iptc = iptcparse ($info["APP13"]);
        var_dump ($iptc);
    }
?>
]]>
      </programlisting>
     </example>
     <note>
      <simpara>
       この関数は、GD画像ライブラリを必要としません。
      </simpara>
     </note>
     <note>
      <simpara>
       URL のサポートは PHP 4.0.5 で追加されました。
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.image2wbmp">
   <refnamediv>
    <refname>Image2WBMP</refname>
    <refpurpose>ブラウザまたはファイルにイメージを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>image2WBMP</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>threshold</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>Image2WBMP</function>は、イメージ
     <parameter>im</parameter>からfilenameに<acronym>WBMP</acronym>ファ
     イルを作成します。<parameter>im</parameter>引数は、
     <function>ImageCreate</function>から返されます。
    </para>
    <para>
     引数filenameはオプションで、省略された場合には、生のイメージスト
     リームが直接出力されます。<function>header</function>を用いて
     <acronym>image/vnd.wap.wbmp</acronym> content-typeを送信すること
     により、WBMPイメージに直接出力するPHPスクリプトを生成可能です。
    </para>
    <note>
     <para>
      WBMPサポートは、GD-1.8以降でPHPをコンパイルされた場合のみ利用可能
      です。
     </para>
    </note>
    <para>
     <function>ImageWBMP</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagealphablending">
   <refnamediv>
    <refname>ImageAlphaBlending</refname>
    <refpurpose>イメージをblendingモードに設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagealphablending</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>bool</type><parameter>blendmode</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageAlphaBlending</function> によりTrueColorイメージに
     二つの異なる描画モードを使用可能となります。blendingモードでは、
     全ての描画関数に指定される色のalphaチャネル要素として使用され、
     例えば<function>ImageSetPixel</function>では背景色の透過割合を定
     義します。結果として、gd は描画色に関してその点に存在する色を自動
     的にブレンドし、イメージに結果を保存します。結果のピクセルは、透
     明になります。ブレンドモードでない場合、描画色は形式的にそのアル
     ファチャネル情報にコピーされ、出力ピクセルを置換します。ブレンド
     モードは、パレットイメージを描画している際には使用できません。
     <parameter>blendmode</parameter> が&true;の場合、blendingモードが有
     効になり、そうでない場合は無効となります。
    </para>
    <note>
     <para>
      この関数は、PHP 4.0.6で追加され、GD 2.0.1を必要をします。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagearc">
   <refnamediv>
    <refname>ImageArc</refname>
    <refpurpose>部分楕円の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagearc</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>cx</parameter></methodparam>
      <methodparam><type>int</type><parameter>cy</parameter></methodparam>
      <methodparam><type>int</type><parameter>w</parameter></methodparam>
      <methodparam><type>int</type><parameter>h</parameter></methodparam>
      <methodparam><type>int</type><parameter>s</parameter></methodparam>
      <methodparam><type>int</type><parameter>e</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageArc</function>は、imで示す画像上に
     <parameter>cx</parameter>、<parameter>cy</parameter>を中心(左上が
     0,0)とする部分楕円を描画します。<parameter>w</parameter>と
     <parameter>h</parameter>はそれぞれ楕円の幅と高さを指定します。一
     方、始点と終点は引数<parameter>s</parameter>と
     <parameter>e</parameter>により度(deg)で指定します。
    </para>
    <para>
     <function>ImageEllipse</function>,
     <function>ImageFilledEllipse</function>,
     <function>ImageFilledArc</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilledarc">
   <refnamediv>
    <refname>ImageFilledArc</refname>
    <refpurpose>部分楕円を描画し、塗りつぶす</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagefilledarc</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>cx</parameter></methodparam>
      <methodparam><type>int</type><parameter>cy</parameter></methodparam>
      <methodparam><type>int</type><parameter>w</parameter></methodparam>
      <methodparam><type>int</type><parameter>h</parameter></methodparam>
      <methodparam><type>int</type><parameter>s</parameter></methodparam>
      <methodparam><type>int</type><parameter>e</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
      <methodparam><type>int</type><parameter>style</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageFilledArc</function> は、
     <parameter>im</parameter>で表したイメージに
     <parameter>cx</parameter>,<parameter>cy</parameter> (左上が0,0)を
     中心とした部分楕円を描画します。<parameter>w</parameter> と
     <parameter>h</parameter> はそれぞれ楕円の幅と高さを指定します。
     また、開始点と終点は、引数<parameter>s</parameter>および
     <parameter>e</parameter>で度単位で指定されます。
     <parameter>style</parameter> は次の選択肢のビット和です。
     <orderedlist>
      <listitem><simpara>IMG_ARC_PIE</simpara></listitem>
      <listitem><simpara>IMG_ARC_CHORD</simpara></listitem>
      <listitem><simpara>IMG_ARC_NOFILL</simpara></listitem>
      <listitem><simpara>IMG_ARC_EDGED</simpara></listitem>
     </orderedlist>
     IMG_ARC_PIE および IMG_ARC_CHORD は相反します。IMG_ARC_CHORD は、
     開始角と終了角を直線で結ぶだけですが、IMG_ARC_PIEは、角を丸めます。
     IMG_ARC_NOFILL は、弧と弦が縁どられ塗りつぶされないことを指定しま
     す。IMG_ARC_EDGEDは、IMG_ARC_NOFILLと共に指定することにより、
     開始角と終端角は中心と結ばれます。これは、(塗りつぶすよりも)「パ
     イの切れ端」を縁どる良い方法です。
    </para>
    <note>
     <para>
      この関数はPHP 4.0.6で追加され、GD 2.0.1を必要とします。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imageellipse">
   <refnamediv>
    <refname>ImageEllipse</refname>
    <refpurpose>楕円を描画する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imageellipse</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>cx</parameter></methodparam>
      <methodparam><type>int</type><parameter>cy</parameter></methodparam>
      <methodparam><type>int</type><parameter>w</parameter></methodparam>
      <methodparam><type>int</type><parameter>h</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageEllipse</function> は、<parameter>im</parameter>で
     表したイメージに
     <parameter>cx</parameter>,<parameter>cy</parameter> (左上が0,0)を
     中心とした楕円を描画します。<parameter>w</parameter> と
     <parameter>h</parameter> は、それぞれ楕円の幅と高さを指定します。
     楕円の色を<parameter>col</parameter>で指定します。
    </para>
    <note>
     <para>
      この関数はPHP 4.0.6で追加され、GD 2.0.1以降を必要とします。
     </para>
    </note>
    <para>
     <function>ImageArc</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilledellipse">
   <refnamediv>
    <refname>ImageFilledEllipse</refname>
    <refpurpose>塗りつぶされた楕円を描画する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagefilledellipse</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>cx</parameter></methodparam>
      <methodparam><type>int</type><parameter>cy</parameter></methodparam>
      <methodparam><type>int</type><parameter>w</parameter></methodparam>
      <methodparam><type>int</type><parameter>h</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageFilledEllipse</function> は、
     <parameter>im</parameter>で表したイメージに
     <parameter>cx</parameter>, <parameter>cy</parameter> (左上が0, 0)
     を中心とした楕円を描画します。<parameter>w</parameter> および
     <parameter>h</parameter> で楕円の幅と高さをそれぞれ指定します。楕
     円は、<parameter>col</parameter>で塗りつぶされます。
    </para>
    <note>
     <para>
      この関数はPHP 4.0.6で追加され、GD 2.0.1以降を必要とします。
     </para>
    </note>
    <para>
     <function>ImageFilledArc</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagechar">
   <refnamediv>
    <refname>ImageChar</refname>
    <refpurpose>水平に文字を描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagechar</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>string</type><parameter>c</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageChar</function>は、画像<parameter>im</parameter>上
     の座標<parameter>x</parameter>,<parameter>y</parameter>(左上が
     0,0) に <parameter>col</parameter>色で<parameter>c</parameter>の
     最初の文字を描画します。
     font が、1, 2, 3, 4 , 5 の場合は組込みフォントが使用されます。
     (より大きな数字はより大きなフォントに対応します)
    </para>
    <para>
     <function>imageloadfont</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecharup">
   <refnamediv>
    <refname>ImageCharUp</refname>
    <refpurpose>垂直に文字を描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecharup</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>string</type><parameter>c</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageCharUp</function>は、画像<parameter>im</parameter>
     の座標(<parameter>x</parameter>,<parameter>y</parameter>)(左上が0,0)から
     <parameter>col</parameter>色で
     <parameter>c</parameter>の最初の文字を垂直に描画します。
     fontが 1, 2, 3, 4 , 5の場合は、組込みフォントが使用されます。
    </para>
    <para> 
     <function>imageloadfont</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorallocate">
   <refnamediv>
    <refname>ImageColorAllocate</refname>
    <refpurpose>画像で使用する色を作成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolorallocate</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>red</parameter></methodparam>
      <methodparam><type>int</type><parameter>green</parameter></methodparam>
      <methodparam><type>int</type><parameter>blue</parameter></methodparam>
     </methodsynopsis>
     <para>
      <function>ImageColorAllocate</function>は、指定した<acronym>RGB</acronym>
      を配色とする色の色IDを返します。
      引数<parameter>im</parameter>は<function>imagecreate</function>関数から
      返されたものです。
      <function>ImageColorAllocate</function>は<parameter>im</parameter>で表される
      画像上で使用される各々の色を作成する際にコールする必要があります。
     <informalexample>
      <programlisting role="php">
<![CDATA[
$white = ImageColorAllocate ($im, 255, 255, 255);
$black = ImageColorAllocate ($im, 0, 0, 0);
]]>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolordeallocate">
   <refnamediv>
    <refname>ImageColorDeAllocate</refname>
    <refpurpose>
     イメージの色リソースを開放する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolordeallocate</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>index</parameter></methodparam>
     </methodsynopsis>
    <para>
     関数<function>ImageColorDeAllocate</function>は、関数
     <function>ImageColorAllocate</function>で確保された色を開放します。
     <informalexample>
      <programlisting role="php">
<![CDATA[
$white = ImageColorAllocate($im, 255, 255, 255);
ImageColorDeAllocate($im, $white);
]]>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorat">
   <refnamediv>
    <refname>ImageColorAt</refname>
    <refpurpose>ピクセルの色のインデックスを取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolorat</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
     </methodsynopsis>
    <para>
     画像上の特定位置にあるピクセルの色のインデックスを返します。
    </para>
    <para>
     <function>imagecolorset</function>および
     <function>imagecolorsforindex</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorclosest">
   <refnamediv>
    <refname>ImageColorClosest</refname>
    <refpurpose>
     指定した色に最も近い色のインデックスを取得する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolorclosest</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>red</parameter></methodparam>
      <methodparam><type>int</type><parameter>green</parameter></methodparam>
      <methodparam><type>int</type><parameter>blue</parameter></methodparam>
     </methodsynopsis>
    <para>
     指定した<acronym>RGB</acronym>値に「近い」画像パレット中の色のインデックス
     が返されます。
    </para>
    <para>
     指定した色とパレット上の各色の「距離」は、
     <acronym>RGB</acronym>値が3次元空間上の点の座標を表すと考えて計算します。
    </para>
    <para>
     <function>imagecolorexact</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorclosestalpha">
   <refnamediv>
    <refname>ImageColorClosestAlpha</refname>
    <refpurpose>
     指定した色+アルファ値に最も近い色のIDを取得
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolorclosestalpha</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>red</parameter></methodparam>
      <methodparam><type>int</type><parameter>green</parameter></methodparam>
      <methodparam><type>int</type><parameter>blue</parameter></methodparam>
      <methodparam><type>int</type><parameter>alpha</parameter></methodparam>
     </methodsynopsis>
    <para>
     Returns the index of the color in the palette of the image which
     is "closest" to the specified <acronym>RGB</acronym> value and <parameter>alpha</parameter> level.
    </para>
    <para>
     See also <function>imagecolorexactalpha</function>.
    </para>
    <note>
     <para>
      この関数はPHP 4.0.6で追加され、GD 2.0.1を必要とします。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id='function.imagecolorclosesthwb'>
   <refnamediv>
    <refname>ImageColorClosestThwb</refname>
    <refpurpose>
     指定した色に最も近いhue、白、黒を有する色のインデックスを得る
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolorclosesthwb</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>red</parameter></methodparam>
      <methodparam><type>int</type><parameter>green</parameter></methodparam>
      <methodparam><type>int</type><parameter>blue</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry> 

  <refentry id="function.imagecolorexact">
   <refnamediv>
    <refname>ImageColorExact</refname>
    <refpurpose>指定した色のインデックスを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolorexact</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>red</parameter></methodparam>
      <methodparam><type>int</type><parameter>green</parameter></methodparam>
      <methodparam><type>int</type><parameter>blue</parameter></methodparam>
     </methodsynopsis>
    <para>
     画像パレット中の特定の色のインデックスを返します。
    </para>
    <para>
     画像パレット中に色が存在しない場合は、-1を返します。
    </para>
    <para>
     <function>imagecolorclosest</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorexactalpha">
   <refnamediv>
    <refname>ImageColorExactAlpha</refname>
    <refpurpose>指定した色+アルファ値のIDを取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolorexactalpha</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>red</parameter></methodparam>
      <methodparam><type>int</type><parameter>green</parameter></methodparam>
      <methodparam><type>int</type><parameter>blue</parameter></methodparam>
      <methodparam><type>int</type><parameter>alpha</parameter></methodparam>
     </methodsynopsis>
    <para>
     イメージのパレットで指定した色+アルファ値のIDを返します。
    </para>
    <para>
     指定した色がイメージのパレットに存在しない場合、-1が返されます。
    </para>
    <para>
     <function>imagecolorclosestalpha</function>も参照下さい。
    </para>
    <note>
     <para>
      この関数はPHP 4.0.6で追加され、GD 2.0.1以降を必要とします。
     </para>
    </note>
   </refsect1>
  </refentry>

   <refentry id="function.imagecolorresolve">
    <refnamediv>
     <refname>ImageColorResolve</refname>
     <refpurpose>
      指定した色または出来るだけ近い色のインデックスを得る
     </refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <methodsynopsis>
       <type>int</type><methodname>imagecolorresolve</methodname>
       <methodparam><type>int</type><parameter>im</parameter></methodparam>
       <methodparam><type>int</type><parameter>red</parameter></methodparam>
       <methodparam><type>int</type><parameter>green</parameter></methodparam>
       <methodparam><type>int</type><parameter>blue</parameter></methodparam>
     </methodsynopsis>
     <para>
     この関数は、指定した色に関するインデックスを常に返します。
     その色そのものまたは出来るだけ近い色へのインデックスが返されます。
    </para>
    <para>
     <function>imagecolorclosest</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorresolvealpha">
   <refnamediv>
    <refname>ImageColorResolveAlpha</refname>
    <refpurpose>
     指定した色+アルファ値または最も近い色のIDを取得する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolorresolvealpha</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>red</parameter></methodparam>
      <methodparam><type>int</type><parameter>green</parameter></methodparam>
      <methodparam><type>int</type><parameter>blue</parameter></methodparam>
      <methodparam><type>int</type><parameter>alpha</parameter></methodparam>
     </methodsynopsis>
    <para>
     この関数は、指定した色の色IDを必ず返します。そうでない場合、正確
     な色または最も近い別の色のどちらかを返します。
    </para>
    <para>
     <function>imagecolorclosestalpha</function>も参照下さい。
    </para>
    <note>
     <para>
      この関数はPHP 4.0.6で追加され、GD 2.0.1を必要とします。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagegammacorrect">
   <refnamediv>
    <refname>ImageGammaCorrect</refname>
    <refpurpose>
     GDイメージにガンマ補正を適用する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagegammacorrect</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>float</type><parameter>inputgamma</parameter></methodparam>
      <methodparam><type>float</type><parameter>outputgamma</parameter></methodparam>
     </methodsynopsis>
    <para>
     関数<function>ImageGammaCorrect</function>は、gdイメージストリー
     ム(<parameter>im</parameter>)にガンマ補正を適用します。この関数に
     は、入力ガンマ値、パラメータ<parameter>inputgamma</parameter>およ
     び出力ガンマ値、パラメータ<parameter>outputgamma</parameter>を指
     定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorset">
   <refnamediv>
    <refname>ImageColorSet</refname>
    <refpurpose>指定したパレットインデックスの色を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>bool</type><methodname>imagecolorset</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>index</parameter></methodparam>
      <methodparam><type>int</type><parameter>red</parameter></methodparam>
      <methodparam><type>int</type><parameter>green</parameter></methodparam>
      <methodparam><type>int</type><parameter>blue</parameter></methodparam>
     </methodsynopsis>
    <para>
     この関数は、パレット上で指定したインデックス index を
     指定した色 color に設定します。
     実際にぬりつぶしを実行するオーバーヘッドなしに
     パレット上の色を使用する画像をぬりつぶしたような効果を得る
     ことができ、便利です。
    </para>
    <para>
     <function>imagecolorat</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorsforindex">
   <refnamediv>
    <refname>ImageColorsForIndex</refname>
    <refpurpose>カラーインデックスからカラーの取得</refpurpose>   
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>imagecolorsforindex</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>index</parameter></methodparam>
     </methodsynopsis>
    <para>
     指定したカラーインデックス index に対して適当な値からなる
     red、green、blue をキーとする連想配列を返します。
    </para>
    <para>
     <function>imagecolorat</function>および
     <function>imagecolorexact</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorstotal">
   <refnamediv>
    <refname>ImageColorsTotal</refname>
    <refpurpose>画像パレットの色数の検出</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolorstotal</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
     </methodsynopsis>
    <para>
     指定した画像パレットの色数を返します。
    </para>
    <para>
     <function>imagecolorat</function>および
     <function>imagecolorsforindex</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolortransparent">
   <refnamediv>
    <refname>ImageColorTransparent</refname>
    <refpurpose>透明色の定義</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecolortransparent</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>col</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageColorTransparent</function>は、イメージ
     <parameter>im</parameter>上の透明色を<parameter>col</parameter>に
     設定します。<parameter>im</parameter>は
     <function>imagecreate</function>によって返されたイメージIDで、
     <parameter>col</parameter>は
     <function>imagecolorallocate</function>によって返された色IDです。
    </para>
    <para>
     新しい(指定されない場合は現在の)透明色のIDが返されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecopy">
   <refnamediv>
    <refname>ImageCopy</refname>
    <refpurpose>
     画像の一部をコピーする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>ImageCopy</methodname>
      <methodparam><type>int</type><parameter>dst_im</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_im</parameter></methodparam>
      <methodparam><type>int</type><parameter>dst_x</parameter></methodparam>
      <methodparam><type>int</type><parameter>dst_y</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_x</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_y</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_w</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_h</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>src_im</parameter>の一部、つまり、x,y座標
     <parameter>src_x</parameter>, <parameter>src_y</parameter>
     を基準として幅<parameter>src_w</parameter>、高さ
     <parameter>src_h</parameter>の領域を<parameter>dst_im</parameter>
     にコピーします。指定された領域は、x,y座標
     <parameter>dst_x</parameter>,<parameter>dst_y</parameter>にコピー
     されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecopymerge">
   <refnamediv>
    <refname>ImageCopyMerge</refname>
    <refpurpose>
     イメージの一部をコピー、マージする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>ImageCopyMerge</methodname>
      <methodparam><type>int</type><parameter>dst_im</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_im</parameter></methodparam>
      <methodparam><type>int</type><parameter>dst_x</parameter></methodparam>
      <methodparam><type>int</type><parameter>dst_y</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_x</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_y</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_w</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_h</parameter></methodparam>
      <methodparam><type>int</type><parameter>pct</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>src_im</parameter>の<parameter>src_x</parameter>,
     <parameter>src_y </parameter> で始まる幅
     <parameter>src_w</parameter>、高さ<parameter>src_h</parameter>の
     領域をx,y座標で指定した <parameter>dst_im</parameter>にコピーしま
     す。定義された部分は、x,y座標、<parameter>dst_x</parameter>、
     <parameter>dst_y</parameter>にコピーされます。二つのイメージは、
     0から100の範囲で指定した <parameter>pct</parameter>に基づきマージ
     されます。<parameter>pct</parameter> = 0 の時は、何も行われません。
     100の場合、この関数の動作は、<function>ImageCopy</function>と同じ
     となります。
    </para>
    <note>
     <para>
      この関数はPHP 4.0.6で追加されました。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagecopymergegray">
   <refnamediv>
    <refname>ImageCopyMergeGray</refname>
    <refpurpose>
     グレースケールでイメージの一部をコピー、マージする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>ImageCopyMergeGray</methodname>
      <methodparam><type>int</type><parameter>dst_im</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_im</parameter></methodparam>
      <methodparam><type>int</type><parameter>dst_x</parameter></methodparam>
      <methodparam><type>int</type><parameter>dst_y</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_x</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_y</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_w</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_h</parameter></methodparam>
      <methodparam><type>int</type><parameter>pct</parameter></methodparam>
     </methodsynopsis>
    <para>
     この関数は <function>ImageCopyMerge</function> と同じですが、マー
     ジをする際に、コピー前にコピー先のピクセルをグレースケールに変換
     することにより、コピー先のピクセルをコピー元の色相を維持するとこ
     ろが異なります。
    </para>
    <para>
     <parameter>src_im</parameter> の X,Y座標
     <parameter>src_x</parameter>, <parameter>src_y </parameter> から
     始まる幅<parameter>src_w</parameter>、高さ
     <parameter>src_h</parameter> の領域を
     <parameter>dst_im</parameter>にコピーします。
     定義された部分は、x、y座標<parameter>dst_x</parameter>、
     <parameter>dst_y</parameter>にコピーされます。二つのイメージは、
     <parameter>pct</parameter> に基づきマージされます。この値の範囲は
     0から100までです。<parameter>pct</parameter> = 0の場合、何も処理
     は行われません。100の場合、この関数は、
     <function>ImageCopy</function>と同じ処理を行います。
    </para>
    <para>
     この関数は、<function>ImageCopyMerge</function>と同じですが、
     マージを行う際、コピー処理を行う前にコピー先の画素をグレースケー
     ルに変換することにより、コピー元の色彩を維持するところが異なりま
     す。
    </para>
    <note>
     <para>
      この関数は、PHP 4.0.6で追加されました。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagecopyresized">
   <refnamediv>
    <refname>ImageCopyResized</refname>
    <refpurpose>画像の一部の複製とサイズ変更</refpurpose>    
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecopyresized</methodname>
      <methodparam><type>int</type><parameter>dst_im</parameter></methodparam>
      <methodparam><type>int</type><parameter>src_im</parameter></methodparam>
      <methodparam><type>int</type><parameter>dstX</parameter></methodparam>
      <methodparam><type>int</type><parameter>dstY</parameter></methodparam>
      <methodparam><type>int</type><parameter>srcX</parameter></methodparam>
      <methodparam><type>int</type><parameter>srcY</parameter></methodparam>
      <methodparam><type>int</type><parameter>dstW</parameter></methodparam>
      <methodparam><type>int</type><parameter>dstH</parameter></methodparam>
      <methodparam><type>int</type><parameter>srcW</parameter></methodparam>
      <methodparam><type>int</type><parameter>srcH</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageCopyResized</function>は指定した画像の矩形部分を別
     の画像へコピーします。<parameter>dst_im</parameter>はコピー先のイ
     メージID、<parameter>src_im</parameter>はコピー元のイメージIDです。
     コピー先とコピー元の座標、幅、高さが異なった場合、画像の一部が適
     当に伸縮されます。座標の原点は左上です。(仮に、
     <parameter>dst_im</parameter>と<parameter>src_im</parameter>が同
     一であれば)関数は領域のコピーに使うことができますが、領域が重なっ
     たときの結果は予測できません。
    </para>
    <para>    
     <function>ImageCopyResampled</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecopyresampled">
   <refnamediv>
    <refname>ImageCopyResampled</refname>
    <refpurpose>
     再サンプリングを行いイメージの一部をコピー、伸縮する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecopyresampled</methodname>
      <methodparam><type>resource</type><parameter>dst_im</parameter></methodparam>
      <methodparam><type>resource</type><parameter>src_im</parameter></methodparam>
      <methodparam><type>int</type><parameter>dstX</parameter></methodparam>
      <methodparam><type>int</type><parameter>dstY</parameter></methodparam>
      <methodparam><type>int</type><parameter>srcX</parameter></methodparam>
      <methodparam><type>int</type><parameter>srcY</parameter></methodparam>
      <methodparam><type>int</type><parameter>dstW</parameter></methodparam>
      <methodparam><type>int</type><parameter>dstH</parameter></methodparam>
      <methodparam><type>int</type><parameter>srcW</parameter></methodparam>
      <methodparam><type>int</type><parameter>srcH</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageCopyResampled</function> は、イメージの矩形の部分
     を別のイメージにコピーします。同時にピクセル値を滑らかに補間を行
     い、このため、特にサイズを小さくした場合には鮮明さが維持されます。
     <parameter>dst_im</parameter> は、コピー先のイメージで、
     <parameter>src_im</parameter> はコピー元のイメージIDです。コピー
     元とコピー先の座標、幅、高さが異なる場合には、適当なイメージ伸縮
     が行われます。座標は、左上を基準とします。この関数は、同じイメー
     ジ内の領域にコピーする場合にも使用可能です。
     (<parameter>dst_im</parameter>が <parameter>src_im</parameter>と
     同じ場合。)しかし、領域が重なる場合の結果は予測できません。
    </para>
    <para>    
     <function>ImageCopyResized</function>も参照下さい。
    </para>
    <note>
     <para>
      この関数はPHP 4.0.6で追加され、GD 2.0.1以降を必要とします。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreate">
   <refnamediv>
    <refname>ImageCreate</refname>
    <refpurpose>パレットを使用する新規画像の作成</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreate</methodname>
      <methodparam><type>int</type><parameter>x_size</parameter></methodparam>
      <methodparam><type>int</type><parameter>y_size</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageCreate</function>は、<parameter>x_size</parameter>
     対<parameter>y_size</parameter>の空の画像を表わす画像IDを返します。
    </para>
    <example>
     <title>
      新規にGDイメージストリームを作成し、イメージを出力します。
     </title>
     <programlisting role="php">
<![CDATA[
<?php
header ("Content-type: image/png");
$im = @ImageCreate (50, 100)
    or die ("Cannot Initialize new GD image stream");
$background_color = ImageColorAllocate ($im, 255, 255, 255);
$text_color = ImageColorAllocate ($im, 233, 14, 91);
ImageString ($im, 1, 5, 5,  "A Simple Text String", $text_color);
ImagePng ($im);
?>
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatetruecolor">
   <refnamediv>
    <refname>ImageCreateTrueColor</refname>
    <refpurpose>TrueColorイメージを新規に作成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>resource</type><methodname>imagecreatetruecolor</methodname>
      <methodparam><type>int</type><parameter>x_size</parameter></methodparam>
      <methodparam><type>int</type><parameter>y_size</parameter></methodparam>
     </methodsynopsis>
    <para> 
     <function>ImageCreateTrueColor</function> は、
     <parameter>x_size</parameter>×<parameter>y_size</parameter> の大
     きさの黒のイメージを表すイメージIDを返します。
    </para>
    <note>
     <para>
      この関数はPHP 4.0.6で追加され、GD 2.0.1以降を必要とします。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagetruecolortopalette">
   <refnamediv>
    <refname>ImageTrueColorToPalette</refname>
    <refpurpose>TrueColorイメージをパレットイメージに変換する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>void</type><methodname>imagetruecolortopalette</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>bool</type><parameter>dither</parameter></methodparam>
      <methodparam><type>int</type><parameter>ncolors</parameter></methodparam>
     </methodsynopsis>
    <para> 
     <function>ImageTrueColorToPalette</function> は、TrueColorイメー
     ジをパレットイメージに変換します。この関数のコードは、元々
     Independent JPEG Groupライブラリ用に書かれたもので、素晴らしいも
     のです。このコードは、色をできる限り維持することに加えて、アルファ
     チャネルに関する情報を出力されるパレットにおいてできるだけ維持す
     るように修正されています。これは、期待通りにうまくいきません。通
     常は、最高の出力品質が保障されるTrueColor出力イメージを単に出力す
     るのが最良の方法です。
    </para>
    <para>
     <parameter>dither</parameter> は、イメージにディザーをかけること
     を指定します。これが、&true;の場合、ディザーが行われ、出力はぼやけ
     ますが、色の近似はより良くなります。
    </para>
    <para>
     <parameter>ncolors</parameter> には、パレットに保持される最大の色
     数を設定します。
    </para>
    <note>
     <para>
      この関数はPHP 4.0.6で追加され、GD 2.0.1を必要とします。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id='function.imagecreatefromgd'>
   <refnamediv>
    <refname>ImageCreateFromGD</refname>
    <refpurpose>
     GDファイルまたはURLから新規イメージを生成する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreatefromgd</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.imagecreatefromgd2'>
   <refnamediv>
    <refname>ImageCreateFromGD2</refname>
    <refpurpose>
     GD2ファイルまたはURLから新規イメージを生成する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreatefromgd2</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.imagecreatefromgd2part'>
   <refnamediv>
    <refname>ImageCreateFromGD2Part</refname>
    <refpurpose>
     GD2ファイルまたはURLの指定した部分から新規イメージを生成する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreatefromgd2part</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam><type>int</type><parameter>srcX</parameter></methodparam>
      <methodparam><type>int</type><parameter>srcY</parameter></methodparam>
      <methodparam><type>int</type><parameter>width</parameter></methodparam>
      <methodparam><type>int</type><parameter>height</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatefromgif">
   <refnamediv>
    <refname>ImageCreateFromGif</refname>
    <refpurpose>ファイルまたはURLから新規画像を作成</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreatefromgif</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageCreateFromGif</function>は指定したfilename
     かゥ?られた画像をあらわす画像IDを返します。
    </para>
    <para> 
     <function>imagecreatefromgif</function> は、エラー時に空の文字列を
     返します。また、エラーメッセージも出力しますが、不幸な事に
     ブラウザでは壊れたリンクとして表示されてしまいます。
     デバッグを簡単にするために次の例では、エラー表示用GIFを生成しています。
     <example>
      <title>
       作成時のエラーを処理する例 (vic@zymsys.com による)
      </title>
      <programlisting role="php">
<![CDATA[
function LoadGif ($imgname) {
   $im = @imagecreatefromgif ($imgname); /* オープンを行う */
   if (!$im) { /* 失敗したかどうかを調べる */
     $im = ImageCreate (150,30); /* 空の画像を作成 */
     $bgc = ImageColorAllocate ($im,255,255,255);
     $tc  = ImageColorAllocate ($im,0,0,0);
     ImageFilledRectangle ($im,0,0,150,30,$bgc);
     /* errmsg を出力 */
     ImageString ($im,1,5,5,"Error loading $imgname",$tc); 
   }
   return $im;
 }
]]>
      </programlisting>
     </example>
     <note>
      <para>
       GD ライブラリバーjション1.6以降でGIFサポートが完全に削除されたので、
       該当する版のGDライブラリではこの関数を使用することはできません。
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatefromjpeg">
   <refnamediv>
    <refname>ImageCreateFromJPEG</refname>
    <refpurpose>ファイル又はURLから新規JPEG画像を作成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreatefromjpeg</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageCreateFromJPEG</function>は引数filenameから得られ
     る画像を表すイメージIDを返します。
    </para>
    <para> 
     <function>imagecreatefromjpeg</function>はエラー時に空の文字列を
     返します。エラーメッセージも出力されますが、この場合、残念なこと
     にブラウザ上のリンクは壊れてしまいます。デバッグを簡単にするため
     に以下の例ではエラー表示用JPEGを出力しています。
     <example>
      <title>
       作成時のエラーを処理する例 (vic@zymsys.comによる)
      </title>
      <programlisting role="php">
<![CDATA[
function LoadJpeg ($imgname) {
  $im = @imagecreatefromjpeg ($imgname); /* オープンを試みる */
  if (!$im) { /* オープンに失敗した場合 */
    $im = ImageCreate (150,30); /* 空の画像を作成 */
    $bgc = ImageColorAllocate ($im,255,255,255);
    $tc  = ImageColorAllocate ($im,0,0,0);
    ImageFilledRectangle ($im,0,0,150,30,$bgc);
    ImageString ($im,1,5,5,"Error loading $imgname",$tc); /* エラーメッセージを出力 */
  }
  return $im;
}
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatefrompng">
   <refnamediv>
    <refname>ImageCreateFromPNG</refname>
    <refpurpose>ファイルまたはURLから新規PNG画像を作成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreatefrompng</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>imagecreatefrompng</function>は引数filenameから得られる画像
     を表す画像IDを返します。
    </para>
    <para> 
     <function>ImageCreateFromPNG</function>はエラー時に空の文字列を
     返します。エラーメッセージも出力されますが、この場合、残念なことに
     ブラウザ上のリンクは壊れてしまいます。
     デバッグを簡単にするために以下の例ではエラー表示用<acronym>PNG</acronym>
     を出力しています。
    <example>
     <title>
      作成時のエラーを処理する例(vic@zymsys.comによる)
     </title>
     <programlisting role="php">
<![CDATA[
function LoadPNG ($imgname) {
  $im = @imagecreatefrompng ($imgname); /* オープンを試みる */
  if (!$im) { /* 失敗した場合 */
    $im = ImageCreate (150,30); /* 空の画像を作成 */
    $bgc = ImageColorAllocate ($im,255,255,255);
    $tc  = ImageColorAllocate ($im,0,0,0);
    ImageFilledRectangle ($im,0,0,150,30,$bgc);
    ImageString ($im,1,5,5,"Error loading $imgname",$tc); /* エラーメッセージを出力 */
  }
  return $im;
}
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatefromwbmp">
   <refnamediv>
    <refname>ImageCreateFromWBMP</refname>
    <refpurpose>
     ファイルまたはURLから新規イメージをWindowsビットマップ形式のイメー
     ジを作成する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreatefromwbmp</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageCreateFromWBMP</function> は、指定したファイル名か
     ら得られたイメージを表すイメージIDを返します。
    </para>
    <para> 
     <function>ImageCreateFromWBMP</function> は、エラー時に空の文字列
     を返します。エラーメッセージも出力しますが、不幸にしてブラウザに
     壊れたリンクとして表示されてしまいます。デバッグを容易にするため
     に次の例ではエラーを表示する <acronym>WBMP</acronym> を作成してい
     ます。
     <example>
      <title>
       作成時のエラーを処理する例 (vic@zymsys.com による)
      </title>
      <programlisting role="php">
<![CDATA[
function LoadWBMP ($imgname) {
    $im = @ImageCreateFromWBMP ($imgname); /* オープンする */
    if (!$im) { /* 失敗したかどうか判定 */
        $im  = ImageCreate (20, 20); /* 空のイメージを作成する */
        $bgc = ImageColorAllocate ($im, 255, 255, 255);
        $tc  = ImageColorAllocate ($im, 0, 0, 0);
        ImageFilledRectangle ($im, 0, 0, 10, 10, $bgc);
        /* errmsg を出力する */
        ImageString ($im, 1, 5, 5, "Error loading $imgname", $tc); 
    }
    return $im;
}
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      WBMPサポートは、GD-1.8以降でコンパイルされたPHPでのみ利用可能で
      す。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatefromstring">
   <refnamediv>
    <refname>ImageCreateFromString</refname>
    <refpurpose>
     文字列の中のイメージストリームから新規イメージを作成する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreatefromstring</methodname>
      <methodparam><type>string</type><parameter>image</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageCreateFromString</function> は、指定した文字列から
     得られたイメージを表すイメージIDを返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatefromxbm">
   <refnamediv>
    <refname>ImageCreateFromXBM</refname>
    <refpurpose>ファイル又はURLから新規イメージを生成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreatefromxbm</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageCreateFromXBM</function>は、指定したfilenameから得
     られたイメージを表すイメージIDを返します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagecreatefromxpm">
   <refnamediv>
    <refname>ImageCreateFromXPM</refname>
    <refpurpose>ファイルまたはURLから新規イメージを生成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagecreatefromxpm</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageCreateFromXPM</function>は、指定したfilenameから得
     られたイメージを表すイメージIDを返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagedashedline">
   <refnamediv>
    <refname>ImageDashedLine</refname>
    <refpurpose>ダッシュライン(破線)の描画</refpurpose>    
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagedashedline</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x1</parameter></methodparam>
      <methodparam><type>int</type><parameter>y1</parameter></methodparam>
      <methodparam><type>int</type><parameter>x2</parameter></methodparam>
      <methodparam><type>int</type><parameter>y2</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>    
     これは古い関数です。替わりに<function>ImageSetStyle</function>と
     <function>ImageLine</function>の組み合せを使用して下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagedestroy">
   <refnamediv>
    <refname>ImageDestroy</refname>
    <refpurpose>画像の消去</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagedestroy</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
     </methodsynopsis>
    <para>    
     <function>ImageDestroy</function>は画像<parameter>im</parameter>
     を保持するメモリを解放します。<parameter>im</parameter>は、
     <function>ImageCreate</function>関数が返す画像IDです。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefill">
   <refnamediv>
    <refname>ImageFill</refname>
    <refpurpose>塗り潰し</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagefill</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para> 
     <function>ImageFill</function>は、画像<parameter>im</parameter>に
     おいて座標<parameter>x</parameter>, <parameter>y</parameter>(左上
     が0,0)から色<parameter>col</parameter>で領域を塗りつぶします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilledpolygon">
   <refnamediv>
    <refname>ImageFilledPolygon</refname>
    <refpurpose>塗りつぶした多角形の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagefilledpolygon</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>array</type><parameter>points</parameter></methodparam>
      <methodparam><type>int</type><parameter>num_points</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageFilledPolygon</function>は画像
     <parameter>im</parameter>上に塗りつぶした多角形を生成します。
     <parameter>points</parameter>はPHPの配列で、多角形の頂点、すなわ
     ち、points[0] = x0, points[1] = y0, points[2] = x1,
     points[3] = y1などという具合になっています。
     <parameter>num_points</parameter>は頂点の総数です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilledrectangle">
   <refnamediv>
    <refname>ImageFilledRectangle</refname>
    <refpurpose>塗りつぶした矩形の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagefilledrectangle</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x1</parameter></methodparam>
      <methodparam><type>int</type><parameter>y1</parameter></methodparam>
      <methodparam><type>int</type><parameter>x2</parameter></methodparam>
      <methodparam><type>int</type><parameter>y2</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageFilledRectangle</function>は、画像
     <parameter>im</parameter>上に左上の座標を
     (<parameter>x1</parameter>, <parameter>y1</parameter>)、右下の座
     標を(<parameter>x2</parameter>, <parameter>y2</parameter>)とする
     矩形を描画します。左上隅が座標(0,0)となります。矩形は
     <function>col</function>色で塗りつぶされます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilltoborder">
   <refnamediv>
    <refname>ImageFillToBorder</refname>
    <refpurpose>特定色での塗りつぶし</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagefilltoborder</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>border</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageFillToBorder</function>は、
     <parameter>border</parameter>で指定した色を境界色として塗りつぶし
     を行います。(<parameter>x</parameter>,<parameter>y</parameter>)が
     塗りつぶしの始点(左上が0, 0)で、領域内を
     <parameter>col</parameter>色で塗りつぶします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefontheight">
   <refnamediv>
    <refname>ImageFontHeight</refname>
    <refpurpose>フォントの高さの取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagefontheight</methodname>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
     </methodsynopsis>
    <para>
     フォントfontの文字の高さをピクセル単位で返します。
    </para>
    <para>
     <function>imagefontwidth</function>および
     <function>imageloadfont</function>も参考にしてください。    
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefontwidth">
   <refnamediv>
    <refname>ImageFontWidth</refname>
    <refpurpose>フォントの幅の取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagefontwidth</methodname>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
     </methodsynopsis>
    <para>
     フォントfontの文字の幅をピクセル単位で返します。
    </para>
    <para>
     <function>imagefontheight</function>および
     <function>imageloadfont</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.imagegd'>
   <refnamediv>
    <refname>ImageGD</refname>
    <refpurpose>
     GDイメージをブラウザまたはファイルに出力する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagegd</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.imagegd2'>
   <refnamediv>
    <refname>ImageGD2</refname>
    <refpurpose>
     GD2イメージをブラウザまたはファイルに出力する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagegd2</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagegif">
   <refnamediv>
    <refname>ImageGif</refname>
    <refpurpose>ブラウザーまたはファイルへ画像を出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagegif</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>string</type><parameter>
	<replaceable><optional>filename</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>imagegif</function>は画像<parameter>im</parameter>
     から<acronym>GIF</acronym>ファイルfilenameを作成します。
     引数<parameter>im</parameter>は<function>imagecreate</function>関数
     から返されたものです。
    </para>
    <para>
     画像フォーマットは、<function>imagecolortransparent</function>を
     用いて画像を透明化しない限り<acronym>GIF87a</acronym>となります。
     透明化した場合の画像フォーマットは<acronym>GIF89a</acronym>となります。
    </para>
    <para>
     引数filenameはオプションで、省略した場合は、未加工の画像
     ストリームが直接出力されます。<function>header</function>関数を
     用いて content-type image/gif を送出すれば、直接<acronym>GIF</acronym>
     画像を出力するPHPスクリプトを作成することができます。
     <note>
      <para>
       <acronym>GD</acronym>ライブラリバージョン1.6以降で
       <acronym>GIF</acronym>サポートが完全に削除されたので、該当する
       版の<acronym>GD</acronym>ライブラリではこの関数を使用することは
       できません。
      </para>
      <para>
       以下の短いコードにより利用可能なGDサポートの型を自動検出し、
       汎用性のあるPHPアプリケーションを書くことが可能です。
       <literal>Header("Content-type:
       image/gif");ImageGIF($im);</literal>の部分をこのより柔軟性のあ
       るコードに置換して下さい。
       <informalexample>
	<programlisting role="php">
<![CDATA[
<?php
  if (function_exists("imagegif")) {
    Header("Content-type: image/gif");
    ImageGIF($im);
  }
  elseif (function_exists("imageJpeg")) {
    Header("Content-type: image/jpeg");
    ImageJPEG($im, "", 0.5);
  }
  elseif (function_exists("imagePng")) {
    Header("Content-type: image/png");
    ImagePNG($im);
  }
  elseif (function_exists("imagewbmp")) {
    Header("Content-type: image/vnd.wap.wbmp");
    ImageWBMP($im);
  }
  else {
    die("このPHPサーバーではイメージはサポートされていません");
  }
?>
]]>
	</programlisting>
       </informalexample>
      </para>
     </note>
     <note>
      <para>
       バージョン4.0.2以降および3.0.18以降では、種々のイメージ関数のサ
       ポートを調べるために <function>function_exists</function> の代
       わりに関数 <function>imagetypes</function> を使用することが可能
       です。
       <informalexample>
        <programlisting role="php">
<![CDATA[
if (ImageTypes() & IMG_GIF) {
    Header("Content-type: image/gif");
    ImageGif($im);
}
elseif (ImageTypes() & IMG_JPG) {
... 等。
]]>
	</programlisting>
       </informalexample>
      </para>
     </note>
    </para>
    <para>
     <function>ImagePNG</function>, <function>ImageWBMP</function>,
     <function>ImageJPEG</function>, <function>ImageTypes</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepng">
   <refnamediv>
    <refname>ImagePNG</refname>
    <refpurpose>
     PNGイメージをブラウザまたはファイルに出力する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagepng</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>string</type><parameter>
	<replaceable><optional>filename</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImagePNG</function>は、GDイメージストリーム
     (<parameter>im</parameter>)をPNGフォーマットで標準出力(通常はブラ
     ウザ)に出力します。<parameter>filename</parameter>を指定した場合
     はそのファイルにイメージを出力します。
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
$im = ImageCreateFromPng("test.png");
ImagePng($im);
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     <function>ImageGIF</function>, <function>ImageWBMP</function>,
     <function>ImageJPEG</function>, <function>ImageTypes</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagejpeg">
   <refnamediv>
    <refname>ImageJPEG</refname>
    <refpurpose>画像をブラウザまたはファイルに出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagejpeg</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>string</type><parameter>
	<replaceable><optional>filename</optional></replaceable>
       </parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>quality</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageJPEG</function>は画像<parameter>im</parameter>から
     <acronym>JPEG</acronym>ファイルfilenameを作成します。引数
     <parameter>im</parameter>は関数<function>imagecreate</function>
     の返り値です。
    </para>
    <para>
     引数filenameはオプションで、指定を省略した場合、画像は標準出力に
     そのまま出力されます。引数qualityを指定する際に引数filenameの指定
     を省略するには、単に空の文字列''を指定して下さい。
     <function>header</function>関数でimage/jpeg content-typeを送信す
     ることにより、JPEG画像を直接出力するPHPスクリプトを作成することが
     可能です。
     <note>
      <para>
       JPEGサポートはPHPがGD-1.8以降を用いてコンパイルされた場合のみ
       利用可能です。
      </para>
     </note>
    </para>
    <para>
     <parameter>quality</parameter> はオプションであり、0(品質は最低で
     すが、ファイルはより小さい)から100(品質は最高ですが、ファイルは最
     大)の範囲で指定します。デフォルトは100です。
    </para>
    <para>
     <function>ImagePNG</function>, <function>ImageGIF</function>,
     <function>ImageWBMP</function>, <function>ImageTypes</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry> 

  <refentry id="function.imagewbmp">
   <refnamediv>
    <refname>ImageWBMP</refname>
    <refpurpose>ブラウザまたはファイルにイメージを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imageWBMP</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>string</type><parameter>
	<replaceable><optional>filename</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageWBMP</function> は、イメージ
     <parameter>im</parameter>から filename に
     <acronym>WBMP</acronym> ファイルを作成します。引数
     <parameter>im</parameter> は、<function>ImageCreate</function> 関
     数の返り値です。
    </para>
    <para>
     引数 filename はオプションであり、省略された場合には、イメージス
     トリームがそのまま直接出力されます。<function>header</function>
     関数により、content-type <acronym>image/vnd.wap.wbmp</acronym> を
     送信することにより、WBMPイメージを直接出力するPHPスクリプトを作成
     することが可能です。
     <note>
      <para>
       WBMP サポートは、PHPをGD-1.8以降と組み合わせてコンパイルした場
       合にのみ利用可能です。
      </para> 
     </note>
    </para>
    <para>
     <function>ImagePNG</function>, <function>ImageGIF</function>, 
     <function>ImageJPEG</function>, <function>ImageTypes</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imageinterlace">
   <refnamediv>
    <refname>ImageInterlace</refname>
    <refpurpose>インターレースを有効もしくは無効にする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imageinterlace</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>interlace</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageInterlace</function> は、インターレースビットをon
     またはoffに切り替えます。interlaceが1の場合、イメージ im はインター
     レースとなり、0 であればインターレースビットはoffになります。
    </para>
    <para>
     この関数は、その画像のインタレースビットがセットされているかどう
     かを返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imageline">
   <refnamediv>
    <refname>ImageLine</refname>
    <refpurpose>直線の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imageline</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x1</parameter></methodparam>
      <methodparam><type>int</type><parameter>y1</parameter></methodparam>
      <methodparam><type>int</type><parameter>x2</parameter></methodparam>
      <methodparam><type>int</type><parameter>y2</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageLine</function>は、画像<parameter>im</parameter>上に
     <parameter>col</parameter>色で
     (<parameter>x1</parameter>, <parameter>y1</parameter>)から
     (<parameter>x2</parameter>, <parameter>y2</parameter>)に
     直線を描画します。(左上が(0, 0)です。)
    </para>
    <para>
     <function>imagecreate</function>および
     <function>imagecolorallocate</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imageloadfont">
   <refnamediv>
    <refname>ImageLoadFont</refname>
    <refpurpose>新規フォントのロード</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imageloadfont</methodname>
      <methodparam><type>string</type><parameter>file</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageLoadFont</function>はユーザが定義したビットマップ
     フォントをロードし、フォントID(通常は5より大きいので、組込みフォ
     ントとは競合しません)を返します。
    </para>
    <para>
     フォントファイル形式は現在はバイナリで、アーキクチャに依存します。
     このため、PHPを実行するマシーンと同一の型のCPU上でフォントファイ
     ルを生成する必要があります。
    </para>
    <para>
     <table>
      <title>フォントファイルのフォーマット</title>
      <tgroup cols="3">
       <thead>
    <row>
     <entry>バイト位置</entry>
     <entry>C 言語のデータ型</entry>
     <entry>説明</entry>
    </row>
       </thead>
       <tbody>
    <row>
     <entry>0-3 バイト目</entry>
     <entry>int</entry>
     <entry>フォント中の文字の数</entry>
    </row>
    <row>
     <entry>4-7 バイト目</entry>
     <entry>int</entry>
     <entry>
       フォント中の最初の文字の値(しばしば 空白を表す 32 となります)
      </entry>
    </row>
    <row>
     <entry>8-11 バイト目</entry>
     <entry>int</entry>
     <entry>各文字のピクセル幅</entry>
    </row>
    <row>
     <entry>12-15 バイト目</entry>
     <entry>int</entry>
     <entry>各文字のピクセル高さ</entry>
    </row>
    <row>
     <entry>16 バイト目から</entry>
     <entry>char</entry>
     <entry>
       文字データの配列、各文字のピクセルにつき1バイトで、
       総数は(文字数*幅*高さ)バイトです。
      </entry>
    </row>

       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <function>ImageFontWidth</function>および
     <function>ImageFontHeight</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepalettecopy">
   <refnamediv>
    <refname>ImagePaletteCopy</refname>
    <refpurpose>
     あるイメージから他のイメージにパレットをコピーする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagepalettecopy</methodname>
      <methodparam><type>resource</type><parameter>destination</parameter></methodparam>
      <methodparam><type>resource</type><parameter>source</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>imagepalettecopy</function>は、
     <parameter>source</parameter>イメージから
     <parameter>destination</parameter>イメージにパレットをコピーしま
     す。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepolygon">
   <refnamediv>
    <refname>ImagePolygon</refname>
    <refpurpose>多角形の描画</refpurpose>
  </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagepolygon</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>array</type><parameter>points</parameter></methodparam>
      <methodparam><type>int</type><parameter>num_points</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImagePolygon</function>は、画像<parameter>im</parameter>上に
     多角形を生成します。
     <parameter>points</parameter>は多角形の頂点からなるPHPの配列で、
     points[0] = x0, points[1] = y0,
     points[2] = x1, points[3] = y1という風になっています。
     <parameter>num_oints</parameter>は頂点の総数です。
    </para>
    <para>
     <function>imagecreate</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsbbox">
   <refnamediv>
    <refname>ImagePSBBox</refname>
    <refpurpose>
     PostScript Type1 フォントを用いてテキスト矩形のバウンディングボックス
     を指定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>imagepsbbox</methodname>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>space</optional></replaceable>
       </parameter></methodparam>
      <methodparam><type>int</type><parameter>
	<replaceable><optional>tightness</optional></replaceable>
       </parameter></methodparam>
      <methodparam><type>float</type><parameter>
	<replaceable><optional>angle</optional></replaceable>
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>size</parameter> はピクセル単位で表されます。
    </para>
    <para>
     <parameter>space</parameter> によりフォントが占める空間のデフォル
     ト値を変更することが可能です。この値が元の値に付加されます。また、
     負の値とすることも可能です。
    </para>
    <para>
     <parameter>tightness</parameter> により文字間の空白の量を制御でき
     ます。この量は元の文字幅に追加され、負の値とすることも可能です。
    </para>
    <para>
     <parameter>angle</parameter> は度で表されます。
    </para>
    <para>
     パラメータ <parameter>space</parameter> および
     <parameter>tightness</parameter> は文字間隔の単位、つまり、1単位
     が文字矩形の 1/1000 で表されます。
    </para>
    <para>
     パラメータ <parameter>space</parameter>,
     <parameter>tightness</parameter>, <parameter>angle</parameter>
     はオプションです。
    </para>
    <para>
     バウンディングボックスは文字メトリックスから得られる情報を用いて
     計算されますが、残念なことに実際に描画される文字列の描画結果とは
     わずかに異なる傾向があります。角度が0度の場合、全ての方向に1ピク
     セル分多く必要であると予想することができます。
    </para>
    <para>
     この関数は、次の要素を有する配列を返します。
     <informaltable>
      <tgroup cols="2">
       <tbody>
 	<row>
 	 <entry>0</entry>
 	 <entry>左下の x 座標</entry>
 	</row>
 	<row>
 	 <entry>1</entry>
 	 <entry>左下の y 座標</entry>
 	</row>
 	<row>
 	 <entry>2</entry>
 	 <entry>右上の x 座標</entry>
 	</row>
 	<row>
 	 <entry>3</entry>
 	 <entry>右上の y 座標</entry>
 	</row>
       </tbody>
      </tgroup>
      </informaltable>
    </para>
    <para>
      <function>imagepstext</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>
  

<!-- この関数が使用する t1lib の関数にはバグがあるようです。現在、
解決策が見つかるまでドキュメント及びソースではコメントアウト
しています。

  <refentry id="function.imagepscopyfont">
   <refnamediv>
    <refname>ImagePSCopyFont</refname>
    <refpurpose>
     後で修正するためにロード済みのフォントのコピーを作成する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagepscopyfont</methodname>
      <methodparam><type>int</type><parameter>fontindex</parameter></methodparam>
     </methodsynopsis>
    <para>
    拡大・縮小、傾斜、文字エンコードベクトルの変更のようにフォントを
    後で修正する必要があるが、同時に元のフォントも保存しておく必要があ
    る場合には、この関数を使用して下さい。
    コピーするフォントは、コピーされたフォントではなく、
    <function>imagepsloadfont</function> を用いて得られたフォントであ
    る必要があることに注意してください。コピーする前に元のフォントの修
    正を行うことが可能です。
   </para>
   <para>
    この関数を使用する場合、この手法で得たフォントを逆順に解放する必要
    があります。
    さもないとスクリプトはハングする可能性があります。
    </para>
    <para>
    全てが正常に動作した場合、有効なフォントIDが返され、後で使用するこ
    とが可能です。
    それ以外の場合は&false;を返し、エラー個所を示すメッセージが出力されます。
    </para>
    <para>
     <function>imageploadpsfont</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>
-->

  <refentry id="function.imagepsencodefont">
   <refnamediv>
    <refname>ImagePSEncodeFont</refname>
    <refpurpose>フォントの文字エンコードベクトルを変更する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagepsencodefont</methodname>
      <methodparam><type>int</type><parameter>font_index</parameter></methodparam>
      <methodparam><type>string</type><parameter>encodingfile</parameter></methodparam>
     </methodsynopsis>
    <para>
     ファイルから文字エンコードベクトルをロードし、変更します。
     PostScript フォントのデフォルトベクトルは、127以上の位置には文字
     がほとんどないので、英語以外の言語を使用する場合には恐らくこの部
     分を変更したいと思うことでしょう。このファイルの正しいフォーマッ
     トは、T1libs のドキュメントに記述されています。T1libs にはすぐに
     使用できるファイルとして IsoLatin1.enc および IsoLatin2.enc が
     含まれています。
    </para>
    <para>
     この関数を頻繁に用いている場合には、ずっと優れた方法として
     <link linkend="configuration.file">設定ファイル</link> で
     ps.default_encoding が正しいエンコードファイルを指すようにして
     エンコード法を定義する方法があります。この場合、自動的にロードさ
     れる全てのフォントは、正しいエンコードとなります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsfreefont">
   <refnamediv>
    <refname>ImagePSFreeFont</refname>
    <refpurpose>PostScript Type 1 フォント用メモリを解放する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>void</type><methodname>imagepsfreefont</methodname>
      <methodparam><type>int</type><parameter>fontindex</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>imagepsloadfont</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsloadfont">
   <refnamediv>
    <refname>ImagePSLoadFont</refname>
    <refpurpose>ファイルから PostScript Type 1 フォントをロードする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagepsloadfont</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     全て正常に処理された場合、有効なフォントIDが返され、後で使用するこ
     とができます。それ以外の場合、この関数は&false;を返し、問題のある部
     分を示すメッセージを出力します。
    </para>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
Header ("Content-type: image/jpeg");
$im = ImageCreate (350, 45);
$black = ImageColorAllocate ($im, 0, 0, 0);
$white = ImageColorAllocate ($im, 255, 255, 255);
$font=ImagePsLoadFont("bchbi.pfb");
// or locate your .pfb files on your machine
ImagePsText($im, "Testing... It worked!",
$font, 32, $white, $black, 32, 32);
ImagePsFreeFont($font); 
ImageJpeg($im, "", 100);//for best quality... your mileage may vary
ImageDestroy ($im);
?>
]]>
     </programlisting>
    </para>
    <para>
     <function>imagepsfreefont</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsextendfont">
   <refnamediv>
    <refname>ImagePsExtendFont</refname>
    <refpurpose>フォントを展開または圧縮する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>bool</type><methodname>imagepsextendfont</methodname>
      <methodparam><type>int</type><parameter>font_index</parameter></methodparam>
      <methodparam><type>float</type><parameter>extend</parameter></methodparam>
     </methodsynopsis>
    <para>
     フォント(<parameter>font_index</parameter>)を展開または圧縮します。
     パラメータ<parameter>extend</parameter>の値が1より小さい場合、
     フォントの圧縮が行われます。
    </para>
    </refsect1>
  </refentry>
  
  <refentry id="function.imagepsslantfont">
   <refnamediv>
    <refname>ImagePsSlantFont</refname>
    <refpurpose>フォントを傾ける</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>bool</type><methodname>imagepsslantfont</methodname>
      <methodparam><type>int</type><parameter>font_index</parameter></methodparam>
      <methodparam><type>float</type><parameter>slant</parameter></methodparam>
     </methodsynopsis>
    <para>
     パラメータ<parameter>font_index</parameter>で指定したフォント
     パラメータ<parameter>slant</parameter>を傾斜の値として傾けます。
    </para>
    </refsect1>
  </refentry>

  <refentry id="function.imagepstext">
   <refnamediv>
    <refname>ImagePSText</refname>
    <refpurpose>
     PostScript Type1 フォントを用いて画像の上に文字列を描く
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>imagepstext</methodname>
      <methodparam><type>int</type><parameter>image</parameter></methodparam>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam><type>int</type><parameter>foreground</parameter></methodparam>
      <methodparam><type>int</type><parameter>background</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>space</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>tightness</parameter></methodparam>
      <methodparam choice="opt"><type>float</type><parameter>angle</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>antialias_steps</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>size</parameter> はピクセル単位で表されます。
    </para>
    <para>
     <parameter>foreground</parameter> は、テキストが描画される色です。
     <parameter>background</parameter> は、アンチエイリアス時にフェー
     ドアウトする色です。<parameter>background</parameter> 色のピクセ
     ルは描画されないので、背景画像が無地である必要はありません。
    </para>
    <para>
     <parameter>x</parameter>, <parameter>y</parameter> で指定される座
     標は、最初の文字の原点(または参照点)を定義します(おおよそ文字の左
     下隅)。これは、<function>ImageString</function> 関数で、x,y が最
     初の文字の右上隅を定義するのとは異なっています。動作に関して不明
     な場合は、フォント及びその測り方に関する PostScipt ドキュメントを
     参照下さい。
    </para>
    <para>
     <parameter>space</parameter> によりフォントが占める空間のデフォル
     ト値を変更することが可能です。この値が元の値に付加されます。また、
     負の値とすることも可能です。
    </para>
    <para>
     <parameter>tightness</parameter> により文字間の空白の量を制御でき
     ます。この量は元の文字幅に追加され、負の値とすることも可能です。
    </para>
    <para>
     <parameter>angle</parameter> は度で表されます。
    </para>
    <para>
     <parameter>antialias_steps</parameter> によりアンチエイリアスを行
     うテキストの色数を制御することが可能です。指定できるのは 4 および
     16 です。 20 より小さな大きさのテキストには、見易くするために大き
     い方を推奨します。より大きなフォントでは、計算負荷がより少ない 4
     を使用して下さい。
    </para>
    <para>
     パラメータ <parameter>space</parameter> および
     <parameter>tightness</parameter> は文字間隔の単位、つまり、1単位
     が文字矩形の 1/1000 で表されます。
    </para>
    <para>
     パラメータ <parameter>space</parameter>,
     <parameter>tightness</parameter>, <parameter>angle</parameter>
     ,<parameter>antialias</parameter> はオプションです。
    </para>
    <para>
     この関数は次の要素を有する配列を返します。
     <informaltable>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>0</entry>
	 <entry>左下の x 座標</entry>
	</row>
	<row>
	 <entry>1</entry>
	 <entry>左下の y 座標</entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>右上の x 座標</entry>
	</row>
	<row>
	 <entry>3</entry>
	 <entry>右上の y 座標</entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     <function>imagepsbbox</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.imagerectangle">
   <refnamediv>
    <refname>ImageRectangle</refname>
    <refpurpose>矩形の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagerectangle</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x1</parameter></methodparam>
      <methodparam><type>int</type><parameter>y1</parameter></methodparam>
      <methodparam><type>int</type><parameter>x2</parameter></methodparam>
      <methodparam><type>int</type><parameter>y2</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageRectangle</function>は、画像
     <parameter>im</parameter>上に<parameter>col</parameter>色で左上を
     (<parameter>x1</parameter>,<parameter>y1</parameter>)、右下を
     (<parameter>x2</parameter>,<parameter>y2</parameter>)とする矩形を
     描画します。画像の左上角は(0,0)です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagesetpixel">
   <refnamediv>
    <refname>ImageSetPixel</refname>
    <refpurpose>点の生成</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagesetpixel</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageSetPixel</function>は画像<parameter>im</parameter>
     上に <parameter>col</parameter>色で座標
     (<parameter>x</parameter>,<parameter>y</parameter>) (左上が0, 0)
     に点を描画します。
    </para>
    <para>  
     <function>imagecreate</function>および
     <function>imagecolorallocate</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagesetbrush">
   <refnamediv>
    <refname>ImageSetBrush</refname>
    <refpurpose>線の描画用にブラシイメージを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagesetbrush</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>resource</type><parameter>brush</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageSetBrush</function> は、特別な色
     IMG_COLOR_BRUSHED または IMG_COLOR_STYLEDBRUSHED で描画される際に 
     (<function>ImageLine</function>や
     <function>ImagePolygon</function>のような) 全ての線描画関数で使用
     されるブラシイメージを設定します。
    </para> 
    <note>
     <para>
      ブラシの使用が終った際には、特別な処理は不要ですが、ブラシイメー
      ジを破棄する場合には、新たにブラシイメージを設定するまでは、色
      IMG_COLOR_BRUSHED または IMG_COLOR_STYLEDBRUSHED を使用するべき
      ではありません。
     </para>
    </note>
    <note>
     <para>
      この関数は、PHP 4.0.6 で追加されました。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagesetstyle">
   <refnamediv>
    <refname>ImageSetStyle</refname>
    <refpurpose>線描画用のスタイルを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagesetstyle</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>array</type><parameter>style</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageSetStyle</function>は、特別な
     <literal>IMG_COLOR_STYLED</literal>または色を有するイメージの線
     <literal>IMG_COLOR_STYLEDBRUSHED</literal>を描画する際に
     (<function>ImageLine</function>と
     <function>ImagePolygon</function>のような)
     全ての線描画関数で使用されるスタイルを設定します。
    </para>
    <para>
     パラメータ<parameter>style</parameter>はピクセルの配列です。以下
     の例は、キャンバスの左上から右下隅に破線を描画するスクリプトです。
     <example>
      <title>ImageSetStyle</title>
      <programlisting role="php">
<![CDATA[
<?php
Header ("Content-type: image/png");
$im  = imagecreate (100, 100);
$w   = ImageColorAllocate ($im, 255, 255, 255);
$red = ImageColorAllocate ($im, 255, 0, 0);
     
/* Draw a dashed line, 5 red pixels, 5 white pixels */
$style=array($red,$red,$red,$red,$red,$w,$w,$w,$w,$w);
ImageSetStyle($im, $style);
ImageLine($im, 0, 0, 100, 100, IMG_COLOR_STYLED);

/* Draw a line of happy faces using ImageSetBrush() with ImageSetStyle */
$style=array($w,$w,$w,$w,$w,$w,$w,$w,$w,$w,$w,$w,$red);
ImageSetStyle($im, $style);

$brush=ImageCreateFromPng("http://www.libpng.org/pub/png/images/smile.happy.png");
ImageColorTransparent($brush, $w);
ImageSetBrush($im, $brush);
ImageLine($im, 100, 0, 0, 100, IMG_COLOR_STYLEDBRUSHED);

ImagePng($im);
ImageDestroy ($im);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <function>ImageSetBrush</function>,
     <function>ImageLine</function>も参照下さい。
    </para>
    <note>
     <para>
      この関数は、PHP 4.0.6で追加されました。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagesettile">
   <refnamediv>
    <refname>ImageSetTile</refname>
    <refpurpose>塗りつぶし用のイメージを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagesettile</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>resource</type><parameter>tile</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageSetTile</function> は、特別な色
     IMG_COLOR_TILED を指定して塗りつぶされた場合に、
     (<function>ImageFill</function>や
     <function>ImageFilledPolygon</function>のような) 
     領域塗りつぶし関数で使用されるタイルイメージを設定します。
    </para> 
    <para>
     タイルは、領域を塗りつぶすために繰り返し使用されるイメージです。
     全てのGDイメージをタイルとして使用可能で、
     <function>ImageColorTransparent</function>によりタイルの透過色ID
     を設定することにより、その一部から下の部分が透けて見えるようなタ
     イルを作成することが可能です。
    </para>
    <note>
     <para>
      タイルの使用が終った際には、特別な処理は不要ですが、タイルイメー
      ジを破棄する場合には、新たにタイルイメージを設定するまでは、色
      IMG_COLOR_TILEDを使用するべきません。
     </para>
    </note>
    <note>
     <para>
      この関数は、PHP 4.0.6で追加されました。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagesetthickness">
   <refnamediv>
    <refname>ImageSetThickness</refname>
    <refpurpose>線描画用の線幅を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>void</type><methodname>imagesetthickness</methodname>
      <methodparam><type>resource</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>thickness</parameter></methodparam>
     </methodsynopsis>
    <para> 
     <function>ImageSetThickness</function> は、長方形、多角形、楕円等
     を描画する際の線幅を<parameter>thickness</parameter>ピクセルに設
     定します。
    </para> 
    <note>
     <para>
      この関数は PHP 4.0.6 で追加され、GD 2.0.1 以降を必要とします。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagestring">
   <refnamediv>
    <refname>ImageString</refname>
    <refpurpose>文字列を水平に描画する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagestring</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageString</function>は、画像<parameter>im</parameter>
     に <parameter>col</parameter>色で座標(<parameter>x</parameter>,
     <parameter>y</parameter>) (左上が0, 0)に文字列
     <parameter>s</parameter>を描画します。<parameter>font</parameter>
     が1, 2, 3, 4, 5 の場合、組込みフォントが使用されます。
    </para>
    <para>
     <function>imageloadfont</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagestringup">
   <refnamediv>
    <refname>ImageStringUp</refname>
    <refpurpose>文字列を垂直に描画する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagestringup</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>string</type><parameter>s</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageStringUp</function>は、画像
     <parameter>im</parameter>上に座標(<parameter>x</parameter>,
     <parameter>y</parameter>)から (左上が0, 0)、
     <parameter>col</parameter>色で垂直に文字列
     <parameter>s</parameter> を描画します。
     <parameter>font</parameter>が1, 2, 3, 4, 5の場合は組込みフォント
     が使用されます。
    </para>
    <para>
     <function>imageloadfont</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagesx">
   <refnamediv>
    <refname>ImageSX</refname>
    <refpurpose>画像の幅を取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagesx</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageSX</function>は<parameter>im</parameter>をIDとする
     画像の幅を返します。
    </para>
    <para>
     <function>imagecreate</function>および
     <function>imagesy</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagesy">
   <refnamediv>
    <refname>ImageSY</refname>
    <refpurpose>画像の高さを取得する</refpurpose>    
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagesy</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ImageSY</function>は<parameter>im</parameter>で識別される
     画像の高さを返します。
    </para>
    <para>
     <function>imagecreate</function>および
     <function>imagesx</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagettfbbox">
   <refnamediv>
    <refname>ImageTTFBBox</refname>
    <refpurpose>
     TypeTypeフォントを使用したテキストのbounding boxの生成
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>ImageTTFBBox</methodname>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam><type>int</type><parameter>angle</parameter></methodparam>
      <methodparam><type>string</type><parameter>fontfile</parameter></methodparam>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
     </methodsynopsis>
    <para>
     この関数はTrueTypeテキストのbounding boxをピクセル単位で計算して
     返します。
     <variablelist>
      <varlistentry>
       <term>
	<parameter>text</parameter>
       </term>
       <listitem>
	<simpara>測定する文字列。</simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
	<parameter>size</parameter>
       </term>
       <listitem>
	<simpara>ピクセル単位のフォントの大きさ。</simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
	<parameter>fontfile</parameter>
       </term>
       <listitem>
	<simpara>TrueTypeフォントファイルの名称。(URLも可。)
	</simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
	<parameter>angle</parameter>
       </term>
       <listitem>
	<simpara>
	 測定する<parameter>text</parameter>の角度(度単位)。
	</simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     <function>ImageTTFBBox</function>は、テキストのbounding boxを
     作成するための4点を表現する8個の要素からなる配列を返します。
     <informaltable>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>0</entry>
	 <entry>左下角のX座標</entry>
	</row>
	<row>
	 <entry>1</entry>
	 <entry>左下角のY座標</entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>右下角のX座標</entry>
	</row>
	<row>
	 <entry>3</entry>
	 <entry>右下角のY座標</entry>
	</row>
	<row>
	 <entry>4</entry>
	 <entry>右上角のX座標</entry>
	</row>
	<row>
	 <entry>5</entry>
	 <entry>右上角のY座標</entry>
	</row>
	<row>
	 <entry>6</entry>
	 <entry>左上角のX座標</entry>
	</row>
	<row>
	 <entry>7</entry>
	 <entry>左上角のY座標</entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable>
     4点の座標は、角度によらず<emphasis>text</emphasis>に関する
     相対位置で表わされます。
     つまり、"左上"はテキストを水平に見た場合の左上の角を意味します。
    </para>
    <para>
     本関数はGDライブラリとFreetypeライブラリの両方が必要です。
    </para>
    <para>
     <function>ImageTTFText</function>も参考にしてください。
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.imageftbbox'>
   <refnamediv>
    <refname>ImageFtBBox</refname>
    <refpurpose>
     freetype2によるフォントを用いたテキストを囲む箱を取得する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>imageftbbox</methodname>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam><type>int</type><parameter>angle</parameter></methodparam>
      <methodparam><type>string</type><parameter>font_file</parameter></methodparam>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>extrainfo</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagettftext">
   <refnamediv>
    <refname>ImageTTFText</refname>
    <refpurpose>TrueTypeフォントを使用したテキストの出力</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>ImageTTFText</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam><type>int</type><parameter>angle</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
      <methodparam><type>string</type><parameter>fontfile</parameter></methodparam>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
     </methodsynopsis>
    <para>
     ImageTTFTextは画像 <parameter>im</parameter>上に
     座標(<parameter>x,y</parameter>)(左上が(0, 0))から
     角度<parameter>angle</parameter>、色
     <parameter>col</parameter>で文字列<parameter>text</parameter>を
     描画します。TrueTypeフォントを<parameter>fontfile</parameter>で
     指定します。
    </para>
    <para>
     (<parameter>x</parameter>,<parameter>y</parameter>)で指定する
     座標は、最初の文字のベースポイント(ほぼ文字の左下角)を定義します。
     この仕様は、(x,y)が最初の文字の右上角を定義する
     <function>ImageString</function> と異なっています。
    </para>
    <para>
     <parameter>angle</parameter>の単位は角度で、0度は左から
     右にテキストを読む方向(3時の方向)になります。
     0より大きな値は、反時計廻りの回転を表現します。
     (即ち、90という値は下から上にテキストを読む方向になります。)
    </para>
    <para>
     <parameter>fontfile</parameter>は、使用する TrueType
     フォントのパスです。
    </para>
    <para>
     <parameter>text</parameter> はテキスト文字列であり、
     フォントの 255 番目までの文字をアクセスするために 
     (&amp;#123; という形式の) UTF-8 文字列を使うことができます。
    </para>
    <para>
     <parameter>col</parameter> はカラーインデックスです。
     カラー¤ンデックスに負の数を使用した場合、アンチエイリアス機能が
     オフになります。
    </para>
    <para>
     <function>ImageTTFText</function>は、text のbounding boxを
     構成する4点を表す8個の要素を有する配列を返します。
     返される点は左上、右上、右下、左下の順番となります。
     点の座標は、角度によらず text に関する相対座標として表されます。
     つまり、"左上"は、text を水平に見た場合の左上の隅を表します。
    </para>
    <para>
     以下の例題スクリプトは、400x30ピクセルの黒地に Arialフォントを
     用いて、白字で"Testing..."と書かれたGIFを作成します。
     <example>
      <title>ImageTTFText</title>
      <programlisting>
<![CDATA[
<?php
Header ("Content-type: image/gif");
$im = imagecreate (400, 30);
$black = ImageColorAllocate ($im, 0, 0, 0);
$white = ImageColorAllocate ($im, 255, 255, 255);
ImageTTFText ($im, 20, 0, 10, 20, $white, "/path/arial.ttf",
              "Testing... Omega: &#937;");
ImageGif ($im);
ImageDestroy ($im);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     この関数はGDライブラリと<ulink url="&url.freetype;">FreeType</ulink>
     ライブラリの両方が必要です。
    </para>
    <para>
     <function>ImageTTFBBox</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.imagefttext'>
   <refnamediv>
    <refname>ImageFtText</refname>
    <refpurpose>
     FreeType 2によるフォントを用いてイメージにテキストを描画する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>imagefttext</methodname>
      <methodparam><type>int</type><parameter>im</parameter></methodparam>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam><type>int</type><parameter>angle</parameter></methodparam>
      <methodparam><type>int</type><parameter>x</parameter></methodparam>
      <methodparam><type>int</type><parameter>y</parameter></methodparam>
      <methodparam><type>int</type><parameter>col</parameter></methodparam>
      <methodparam><type>string</type><parameter>font_file</parameter></methodparam>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>extrainfo</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagetypes">
   <refnamediv>
    <refname>ImageTypes</refname>
    <refpurpose>
     使用中のPHPの実行ファイルでサポートされているイメージの型を返す
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>imagetypes</methodname>
      <void/>
     </methodsynopsis>
    <para>
     この関数は、PHPにリンクされているGDのバージョンでサポートされてい
     るイメージの形式に対応するビットフィールドを返します。次のビッ
     トが返されます。<literal>IMG_GIF</literal> |
     <literal>IMG_JPG</literal> | <literal>IMG_PNG</literal> |
     <literal>IMG_WBMP</literal> 例えば、PNGのサポートを確認するには、
     次のようにします。
     <example>
      <title>ImageTypes</title>
      <programlisting role="php">
<![CDATA[
<?php
if(ImageTypes() & IMG_PNG) {
       echo "PNG サポートが有効です";
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.jpeg2wbmp">
   <refnamediv>
    <refname>JPEG2WBMP</refname>
    <refpurpose>
     JPEGイメージファイルからWBMPイメージファイルに変換する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>jpeg2wbmp</methodname>
      <methodparam><type>string</type><parameter>jpegname</parameter></methodparam>
      <methodparam><type>string</type><parameter>wbmpname</parameter></methodparam>
      <methodparam><type>int</type><parameter>d_height</parameter></methodparam>
      <methodparam><type>int</type><parameter>d_width</parameter></methodparam>
      <methodparam><type>int</type><parameter>threshold</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>jpegname</parameter> JPEGファイルからWBMPフォーマット
     に変換し、<parameter>wbmpname</parameter>として保存します。
     <parameter>d_height</parameter>と<parameter>d_width</parameter>を
     指定すると、出力イメージの高さと幅を指定します。
    </para>
    <para>
     <note>
      <para>
       WBMPサポートは、GD-1.8以降でコンパイルしたPHPでのみ利用可能です。
      </para>
     </note>
    </para>
    <para>
     <function>png2wbmp</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.png2wbmp">
   <refnamediv>
    <refname>PNG2WBMP</refname>
    <refpurpose>
     PNGイメージファイルからWBMPイメージファイルに変換する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>png2wbmp</methodname>
      <methodparam><type>string</type><parameter>pngname</parameter></methodparam>
      <methodparam><type>string</type><parameter>wbmpname</parameter></methodparam>
      <methodparam><type>int</type><parameter>d_height</parameter></methodparam>
      <methodparam><type>int</type><parameter>d_width</parameter></methodparam>
      <methodparam><type>int</type><parameter>threshold</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>pngname</parameter> PNGファイルからWBMPフォーマット
     に変換し、<parameter>wbmpname</parameter>として保存します。
     <parameter>d_height</parameter>と<parameter>d_width</parameter>を
     指定すると、出力イメージの高さと幅を指定します。
    </para>
    <para>
     <note>
      <para>
       WBMPサポートは、GD-1.8以降でコンパイルしたPHPでのみ利用可能です。
      </para>
     </note>
    </para>
    <para>
     <function>jpeg2wbmp</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.read-exif-data">
   <refnamediv>
    <refname>read_exif_data</refname>
    <refpurpose>JPEGからEXIFヘッダを読み込む</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>read_exif_data</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     関数<function>read_exif_data</function>は、JPEGイメージファイルか
     らEXIFヘッダを読み込みます。添字がEXIFヘッダ名、その値が各EXIFヘッ
     ダに関連する値である連想配列を返します。EXIFヘッダは、デジタルカ
     メラにより生成されたJPEGイメージに使用されている場合があります。
     しかし、残念なことに、デジタルカメラの各メーカー毎にイメージへのタ
     グの付け方に関しての考え方が異なるために、常に指定したEXIFヘッダ
     が存在することを前提にすることはできません。
     <example>
      <title>read_exif_data</title>
      <programlisting role="php">
<![CDATA[
<?php
 $exif = read_exif_data ('p0001807.jpg');
 while(list($k,$v)=each($exif)) {
   echo "$k: $v<br>\n";
 }
?>

Output:
FileName: p0001807.jpg
FileDateTime: 929353056
FileSize: 378599
CameraMake: Eastman Kodak Company
CameraModel: KODAK DC265 ZOOM DIGITAL CAMERA (V01.00)
DateTime: 1999:06:14 01:37:36
Height: 1024
Width: 1536
IsColor: 1
FlashUsed: 0
FocalLength:  8.0mm
RawFocalLength: 8
ExposureTime:  0.004 s (1/250)
RawExposureTime: 0.0040000001899898
ApertureFNumber: f/ 9.5
RawApertureFNumber: 9.5100002288818
FocusDistance: 16.66m
RawFocusDistance: 16.659999847412
Orientation: 1
ExifVersion: 0200
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <note>
      <simpara>
       この関数は、--enable-exifを使用してコンパイルしたPHP 4でのみ利用
       可能です。
      </simpara>
      <simpara>
       この関数は、GDイメージライブラリを必要としません。
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.iptcembed'>
   <refnamediv>
    <refname>iptcembed</refname>
    <refpurpose>
     バイナリIPTCデータをJPEGイメージに埋めこむ
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>iptcembed</methodname>
      <methodparam><type>string</type><parameter>iptcdata</parameter></methodparam>
      <methodparam><type>string</type><parameter>jpeg_file_name</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>spool</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>
  
 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->


