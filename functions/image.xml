  <reference id="ref.image">
  <title>イメージ関数</title>
  <titleabbrev>グラフィックス</titleabbrev>

  <partintro>
   <simpara>
    PHPの画像関数を使って、JPEG、GIF、PNG画像の大きさを
    知ることができます。また、GDライブラリ( <ulink url="&url.gd;">&url.gd;
	</ulink> で手に入ります)があれば、GIF画像の作成と操作を行なうことも
	できます。</simpara>
  </partintro>

  <refentry id="function.getimagesize">
   <refnamediv>
    <refname>GetImageSize</refname>
    <refpurpose>JPEG、GIFあるいはPNG画像の大きさを入手</refpurpose>    
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>array <function>getimagesize</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>array <parameter><optional>imageinfo</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>GetImageSize</function>関数は、任意の
	 <acronym>GIF</acronym>、<acronym>JPG</acronym>もしくは
     <acronym>PNG</acronym>ファイルの大きさを定義し、
     ファイルの型と <acronym>HTML</acronym><sgmltag>IMG</sgmltag>
     タグ中で通常使用される高さと幅からなる寸法を表す文字列を返します。</para>
    <para>
     返り値は、4つの要素からなる配列です。0番目の要素は、ピクセル単位
     での画像の幅です。1番目の要素は高さです。2番目の要素は画像の種類を
     示すフラグです。1ならGIF、2ならJPGそして3ならPNGです。
     3番目の要素はIMGタグで直接利用できる文字列 "height=xxx width=xxx"
     です。
     <example>
      <title>GetImageSize</title>
      <programlisting>
&lt;?php $size = GetImageSize("img/flag.jpg"); ?>
&lt;IMG SRC="img/flag.jpg" &lt;?php echo $size[3]; ?>>
</programlisting></example></para>

     <para>
     オプションの <parameter>imageinfo</parameter> パラメータにより
     画像ファイルから何らかの拡張情報を引き出すことが可能です。
     現在、この変数には別の <acronym>JPG</acronym> APP 指標が連想配列として
     返されます。          
     いくつかのプログラムは、
     これらの APP 指標を画像の中の埋込テキストの情報として使用します。
     最も一般的な例は、APPl3 指標に埋込 IPTC  
     <ulink url="&url.iptc;">&url.iptc;</ulink> 
     情報が返されることです。
     バイナリ APP13 指標を読むことができるよう処理するために
     <function>iptcparse</function> 関数を使用することができます。
      <example>
       <title>IPTC を返す GetImageSize</title>
 	 <programlisting>
 &lt;?php 
     $size = GetImageSize("testimg.jpg",&$info);
     if (isset($info["APP13"])) {
         $iptc = iptcparse($info["APP13"]);
         var_dump($iptc);
     }
 ?>
 </programlisting></example>
 
     <note><simpara>
       この関数は、GD画像ライブラリを必要としません。
      </simpara></note></para>

   </refsect1>
  </refentry>

  <refentry id="function.imagearc">
   <refnamediv>
    <refname>ImageArc</refname>
    <refpurpose>部分楕円の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagearc</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>cx</parameter></paramdef>
     <paramdef>int <parameter>cy</parameter></paramdef>
     <paramdef>int <parameter>w</parameter></paramdef>
     <paramdef>int <parameter>h</parameter></paramdef>
     <paramdef>int <parameter>s</parameter></paramdef>
     <paramdef>int <parameter>e</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageArc は、imで示す画像上に cx、cyを中心(左上が0,0)とする部分楕円
	 を描画します。wとhはそれぞれ楕円の幅と高さを指定します。一方、
     始点と終点は、引数 sとe を使い、角度で指定します。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagechar">
   <refnamediv>
    <refname>ImageChar</refname>
    <refpurpose>水平に文字を描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagechar</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>font</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageChar は、画像<parameter>im</parameter>上の
     座標 <parameter>x</parameter>,<parameter>y</parameter>(左上が0,0) に
     <parameter>col</parameter> 色で
     <parameter>c</parameter>  の最初の文字を描画します。
     font が、1, 2, 3, 4 , 5 の場合は組込みフォントが使用されます。
      (より大きな数字はより大きなフォントに対応します)</para>
    <para>
    <function>imageloadfont</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecharup">
   <refnamediv>
    <refname>ImageCharUp</refname>
    <refpurpose>垂直に文字を描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagecharup</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>font</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageCharUp は、画像 im の座標 (x,y)(左上が0,0)からcol色で
     cの最初の文字を垂直に描画します。
     fontが 1, 2, 3, 4 , 5の場合は、組込みフォントが使用されます。</para>
    <para> 
     <function>imageloadfont</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorallocate">
   <refnamediv>
    <refname>ImageColorAllocate</refname>
    <refpurpose>画像上の色の生成</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagecolorallocate</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>red</parameter></paramdef>
     <paramdef>int <parameter>green</parameter></paramdef>
     <paramdef>int <parameter>blue</parameter></paramdef>
    </funcsynopsis>
     <para>
      ImageColorAllocate は、RGBで配色を表す画像 ID を返します。
      引き数 im は<function>imagecreate</function>関数から返されます。
      ImageColorAllocate は、im で表される画像上で使用される
      各々の色を作成する際にコールする必要があります。
     <informalexample><programlisting>
$white = ImageColorAllocate($im, 255,255,255);
$black = ImageColorAllocate($im, 0,0,0);
</programlisting></informalexample></para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorat">
   <refnamediv>
    <refname>ImageColorAt</refname>
    <refpurpose>ピクセルの色のインデックスを取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagecolorat</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
    </funcsynopsis>
    <para>
     画像上の特定位置にあるピクセルの色のインデックスを返します。</para>
    <para>
     <function>imagecolorset</function>および
	 <function>imagecolorsforindex</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorclosest">
   <refnamediv>
    <refname>ImageColorClosest</refname>
    <refpurpose>特定の色に最も近い色のインデックスの入手</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagecolorclosest</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>red</parameter></paramdef>
     <paramdef>int <parameter>green</parameter></paramdef>
     <paramdef>int <parameter>blue</parameter></paramdef>
    </funcsynopsis>
    <para>
     指定したRGB値に「近い」画像パレット中の色のインデックスが返されます。</para>
    <para>
     指定した色とパレット上の各色の「距離」は、
     RGB値が3次元空間上の点の座標を表すと考えて計算します。</para>
    <para>
     <function>imagecolorexact</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorexact">
   <refnamediv>
    <refname>ImageColorExact</refname>
    <refpurpose>特定の色のインデックスを取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagecolorexact</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>red</parameter></paramdef>
     <paramdef>int <parameter>green</parameter></paramdef>
     <paramdef>int <parameter>blue</parameter></paramdef>
    </funcsynopsis>
    <para>
     画像パレット中の特定の色のインデックスを返します。</para>
    <para>
     画像パレット中に色が存在しない場合は、-1を返します。</para>
     <para>
      <function>imagecolorclosest</function> も参照下さい。</para>
    </refsect1>
   </refentry>

   <refentry id="function.imagecolorresolve">
    <refnamediv>
     <refname>ImageColorResolve</refname>
     <refpurpose>指定した色または出来るだけ近い色のインデックスを得る</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
      <funcdef>int <function>imagecolorresolve</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcsynopsis>
     <para>
     この関数は、指定した色に関するインデックスを常に返します。
     その色そのものまたは出来るだけ近い色へのインデックスが返されます。</para>
    <para>
     <function>imagecolorclosest</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorset">
   <refnamediv>
    <refname>ImageColorSet</refname>
    <refpurpose>指定したパレットインデックスの色を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>bool <function>imagecolorset</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>index</parameter></paramdef>
     <paramdef>int <parameter>red</parameter></paramdef>
     <paramdef>int <parameter>green</parameter></paramdef>
     <paramdef>int <parameter>blue</parameter></paramdef>
    </funcsynopsis>
    <para>
     この関数は、パレット上で指定したインデックス index を
     指定した色 color に設定します。
     実際にぬりつぶしを実行するオーバーヘッドなしに
     パレット上の色を使用する画像をぬりつぶしたような効果を得る
     ことができ、便利です。</para>
    <para>
     <function>imagecolorat</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorsforindex">
   <refnamediv>
    <refname>ImageColorsForIndex</refname>
    <refpurpose>カラーインデックスからカラーの取得</refpurpose>   
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>array <function>imagecolorsforindex</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>index</parameter></paramdef>
    </funcsynopsis>
    <para>
     指定したカラーインデックス index に対して適当な値からなる
     red、green、blue をキーとする連想配列を返します。</para>
    <para>
     <function>imagecolorat</function>および
	 <function>imagecolorexact</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorstotal">
   <refnamediv>
    <refname>ImageColorsTotal</refname>
    <refpurpose>画像パレットの色数の検出</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagecolorstotal</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
    </funcsynopsis>
    <para>
     指定した画像パレットの色数を返します。</para>
    <para>
     <function>imagecolorat</function>および
	 <function>imagecolorsforindex</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolortransparent">
   <refnamediv>
    <refname>ImageColorTransparent</refname>
    <refpurpose>透明色の定義</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagecolortransparent</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter><optional>col</optional></parameter></paramdef>
    </funcsynopsis>
     <para>
      ImageColorTransparentは、画像im上の透明色をcolに設定します。
      im は<function>imagecreate</function>によって返された画像 ID で、
      colは<function>imagecolorallocate</function>によって返された
      色 ID です。</para>
     <para>
     新しい(指定されない場合は現在の)透明色の ID が返されます。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecopyresized">
   <refnamediv>
    <refname>ImageCopyResized</refname>
    <refpurpose>画像の一部の複製とサイズ変更</refpurpose>    
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagecopyresized</function></funcdef>
     <paramdef>int <parameter>dst_im</parameter></paramdef>
     <paramdef>int <parameter>src_im</parameter></paramdef>
     <paramdef>int <parameter>dstX</parameter></paramdef>
     <paramdef>int <parameter>dstY</parameter></paramdef>
     <paramdef>int <parameter>srcX</parameter></paramdef>
     <paramdef>int <parameter>srcY</parameter></paramdef>
     <paramdef>int <parameter>dstW</parameter></paramdef>
     <paramdef>int <parameter>dstH</parameter></paramdef>
     <paramdef>int <parameter>srcW</parameter></paramdef>
     <paramdef>int <parameter>srcH</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageCopyResizedは、ある画像の矩形部分を別の画像へコピーします。
     <parameter>dst_im</parameter>はコピー先の画像 ID、
	 <parameter>src_im</parameter>はコピー元の画像 ID です。
     コピー先とコピー元の座標、幅そして高さが異なれば、画像の一部が適当に
     伸縮されます。座標の原点は左上です。(仮に、
     <parameter>dst_im</parameter>と<parameter>src_im</parameter>が
     同一であれば)関数は領域のコピーに使うことができますが、
     領域が重なったときの結果は予測できません。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreate">
   <refnamediv>
    <refname>ImageCreate</refname>
    <refpurpose>新規画像の作成</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagecreate</function></funcdef>
     <paramdef>int <parameter>x_size</parameter></paramdef>
     <paramdef>int <parameter>y_size</parameter></paramdef>
    </funcsynopsis>
     <para>
      ImageCreateは、x_size対y_sizeの空の画像を表わす画像 ID を
      返します。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatefromgif">
   <refnamediv>
    <refname>ImageCreateFromGif</refname>
    <refpurpose>ファイルまたはURLから新規画像を作成</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagecreatefromgif</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
     <para>
      <function>imagecreatefromgif</function>は指定したfilename
	から得られた画像をあらわす画像IDを返します。</para>
     <para> 
      <function>imagecreatefromgif</function> は、エラー時に空の文字列を
      返します。また、エラーメッセージも出力しますが、不幸な事に
      ブラウザでは壊れたリンクとして表示されてしまいます。
      デバッグを簡単にするために次の例では、エラー表示用GIFを生成しています。
     <example>
      <title>作成時のエラーを処理する例 (vic@zymsys.com による)</title>
      <programlisting role="php">
 function LoadGif($imgname)
 {
   $im = @imagecreatefromgif($imgname); /* オープンを行う */
   if ($im == "") { /* 失敗したかどうかを調べる */
     $im = ImageCreate(150,30); /* 空の画像を作成 */
     $bgc = ImageColorAllocate($im,255,255,255);
     $tc  = ImageColorAllocate($im,0,0,0);
     ImageFilledRectangle($im,0,0,150,30,$bgc);
     ImageString($im,1,5,5,"Error loading $imgname",$tc); /* errmsg を出力 */
   }
   return $im;
 }
 </programlisting></example>
     <note>
      <para>
      GD ライブラリ 1.6版から GIF サポートが完全に削除されたので、
      該当する版のGDライブラリではこの関数を使用することはできません。</para>
     </note></para>
   </refsect1>
  </refentry>

  <refentry id="function.imagedashedline">
   <refnamediv>
    <refname>ImageDashedLine</refname>
    <refpurpose>ダッシュライン(破線)の描画</refpurpose>    
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagedashedline</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>    
    ImageLineは、col色のx1,y1からx2,y2(左上が0,0)に
      破線を描画します。</para>
     <para>
      <function>imageline</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagedestroy">
   <refnamediv>
    <refname>ImageDestroy</refname>
    <refpurpose>画像の消去</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagedestroy</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
    </funcsynopsis>
    <para>    
    ImageDestroyは画像imを保持するメモリを解放します。 imは、
      <function>imagecreate</function>関数が返す画像 ID です。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefill">
   <refnamediv>
    <refname>ImageFill</refname>
    <refpurpose>塗り潰し</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagefill</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
     <para> 
      ImageFillは、画像im上で、色colで座標x, y(左上が0,0)から
      塗り潰しをおこないます。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilledpolygon">
   <refnamediv>
    <refname>ImageFilledPolygon</refname>
    <refpurpose>塗りつぶした多角形の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagefilledpolygon</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>array <parameter>points</parameter></paramdef>
     <paramdef>int <parameter>num_points</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
     <para>
      ImageFilledPolygonは画像im上に塗りつぶした多角形を生成します。
      pointsは、PHPの配列で、多角形の頂点、すなわち、
      points[0] = x0, points[1] = y0, points[2] = x1,
      points[3] = y1などという具合になっています。
      num_pointsは頂点の総数です。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilledrectangle">
   <refnamediv>
    <refname>ImageFilledRectangle</refname>
    <refpurpose>塗りつぶした矩形の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagefilledrectangle</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
     <para>
      ImageFilledRectangleは、画像im上に
      左上の座標を (x1, y1)、右下の座標を(x2, y2)とする矩形を
      描画します。矩形はcol色で塗りつぶされます。
      左上隅が座標(0,0)となります。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilltoborder">
   <refnamediv>
    <refname>ImageFillToBorder</refname>
    <refpurpose>特定色での塗りつぶし</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagefilltoborder</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>border</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
     <para>
      ImageFillToBorderは、色borderを境界として塗りつぶしを行います。
      (x, y)が塗りつぶしの始点(左上が0, 0)で、領域内を
      色colで塗りつぶします。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefontheight">
   <refnamediv>
    <refname>ImageFontHeight</refname>
    <refpurpose>フォントの高さの取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagefontheight</function></funcdef>
     <paramdef>int <parameter>font</parameter></paramdef>
    </funcsynopsis>
     <para>
      font中の文字の高さをピクセル単位で返します。</para>
     <para>
      <function>imagefontwidth</function>および
      <function>imageloadfont</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefontwidth">
   <refnamediv>
    <refname>ImageFontWidth</refname>
    <refpurpose>フォントの幅の取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagefontwidth</function></funcdef>
     <paramdef>int <parameter>font</parameter></paramdef>
    </funcsynopsis>
     <para>
      font中の文字の幅をピクセル単位で返します。</para>
     <para>
      <function>imagefontheight</function>および
      <function>imageloadfont</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagegif">
   <refnamediv>
    <refname>ImageGif</refname>
    <refpurpose>ブラウザーもしくはファイルへの画像の出力</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagegif</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
     <para>
      <function>imagegif</function>は画像 <parameter>im</parameter>
      からGIFファイルfilenameを作成します。
      引数<parameter>im</parameter>は<function>imagecreate</function>関数
      から返されたものです。</para>
     <para>
      画像フォーマットは、<function>imagecolortransparent</function>を
      用いて画像を透明化しない限り、GIF87aとなります。
      透明化した場合の画像フォーマットは、GIF89aとなります。</para>
     <para>
      引数 filename はオプションで、省略した場合は、未加工の画像
      ストリームが直接出力されます。<function>header</function>関数を
      用いて content-type image/gif を送出すれば、直接GIF画像を出力する
      PHPスクリプトを作成することができます。
    <note>
     <para>
      GD ライブラリ 1.6版から GIF サポートが完全に削除されたので、
      該当する版のGDライブラリではこの関数を使用することはできません。</para>
    </note></para>
   </refsect1>
  </refentry>

  <refentry id="function.imageinterlace">
   <refnamediv>
    <refname>ImageInterlace</refname>
    <refpurpose>インターレースを有効もしくは無効にする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imageinterlace</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter><optional>interlace</optional></parameter></paramdef>
    </funcsynopsis>
     <para>
      ImageInterlaceは、インターレースビットのオンオフを切り替えます。
      interlaceが1の場合に画像 im はインターレースとなり、0 であれば
      インターレースビットは消えます。</para>
     <para>
      この関数は、その画像のインタレースビットがセットされているかどうかを
      返します。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imageline">
   <refnamediv>
    <refname>ImageLine</refname>
    <refpurpose>直線の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imageline</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageLineは、画像im上に色colで(x1, y1)から(x2, y2)に
     直線を描画します。(左上が(0, 0)です。)</para>
    <para>
     <function>imagecreate</function>および
	 <function>imagecolorallocate</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imageloadfont">
   <refnamediv>
    <refname>ImageLoadFont</refname>
    <refpurpose>新規フォントのロード</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imageloadfont</function></funcdef>
     <paramdef>string <parameter>file</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageLoadFontはユーザが定義したビットマップフォントをロードし、
     フォント ID (通常は5より大きいので、組込みフォント
     とは競合しません)を返します。</para>
    <para>
     フォントファイル形式は現在はバイナリーで、アーキクチャに依存します。
     このため、PHP を実行するマシーンと同一の型の CPU 上で
     フォントファイルを生成する必要があります。</para>

    <para>
     <table>
      <title>フォントファイルのフォーマット</title>
      <tgroup cols="3">
       <thead>
    <row>
     <entry>バイト位置</entry>
     <entry>C 言語のデータ型</entry>
     <entry>説明</entry>
    </row>
       </thead>
       <tbody>
    <row>
     <entry>0-3 バイト目</entry>
     <entry>int</entry>
     <entry>フォント中の文字の数</entry>
    </row>
    <row>
     <entry>4-7 バイト目</entry>
     <entry>int</entry>
     <entry>
       フォント中の最初の文字の値(しばしば 空白を表す 32 となります)
      </entry>
    </row>
    <row>
     <entry>8-11 バイト目</entry>
     <entry>int</entry>
     <entry>各文字のピクセル幅</entry>
    </row>
    <row>
     <entry>12-15 バイト目</entry>
     <entry>int</entry>
     <entry>各文字のピクセル高さ</entry>
    </row>
    <row>
     <entry>16 バイト目から</entry>
     <entry>char</entry>
     <entry>
       文字データの配列、各文字のピクセルにつき1バイトで、
       総数は(文字数*幅*高さ)バイトです。
      </entry>
    </row>

       </tbody>
      </tgroup>
     </table></para>

    <para>
     <function>ImageFontWidth</function>および
     <function>ImageFontHeight</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepolygon">
   <refnamediv>
    <refname>ImagePolygon</refname>
    <refpurpose>多角形の描画</refpurpose>
  </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagepolygon</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>array <parameter>points</parameter></paramdef>
     <paramdef>int <parameter>num_points</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImagePolygonは、画像id上に多角形を生成します。pointsは
     多角形の頂点からなるPHPの配列で、points[0] = x0, points[1] = y0,
     points[2] = x1, points[3] = y1という風になっています。
     num_pointsは頂点の総数です。</para>
    <para>
     <function>imagecreate</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

   <refentry id="function.imagepsbbox">
    <refnamediv>
     <refname>ImagePSBBox</refname>
     <refpurpose>PostScript Type1 フォントを用いてテキスト矩形のバウンディングボックス
     を指定する</refpurpose>
    </refnamediv>
    <refsect1>
     <title>説明</title>
     <funcsynopsis>
      <funcdef>array <function>imagepsbbox</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>size</parameter></paramdef>
      <paramdef>int <parameter>space</parameter></paramdef>
      <paramdef>int <parameter>width</parameter></paramdef>
      <paramdef>float <parameter>angle</parameter></paramdef>
     </funcsynopsis>
     <para>
      <parameter>size</parameter> はピクセル単位で表されます。</para>
     <para>
    <parameter>space</parameter> によりフォントが占める空間のデフォルト値を変更することが
     可能です。
     この値が元の値に付加されます。また、負の値とすることも可能です。</para>
    <para>
     <parameter>tightness</parameter> により文字間の空白の量を制御できます。
     この量は元の文字幅に追加され、負の値とすることも可能です。</para>
    <para>
     <parameter>angle</parameter> は度で表されます。</para>
    <para>
     パラメータ <parameter>space</parameter> および <parameter>tightness</parameter>
     は文字間隔の単位、つまり、1単位が文字矩形の 1/1000 で表されます。</para>
    <para>
     パラメータ <parameter>space</parameter>, <parameter>tightness</parameter>,
     <parameter>angle</parameter>  はオプションです。</para>
     <para>
     バウンディングボックスは文字メトリックスから得られる情報を用いて計算されますが、。
     残念なことに実際に描画される文字列の描画結果とはわずかに異なる傾向があります。
     角度が 0 度の場合、全ての方向に1ピクセル分多く必要であると 予想することができます。</para>
     <para>
     この関数は次の要素を有する配列を返します。
      <informaltable>
       <tgroup cols="2">
        <tbody>
 	<row>
 	 <entry>0</entry>
 	 <entry>左下の x 座標</entry>
 	</row>
 	<row>
 	 <entry>1</entry>
 	 <entry>左下の y 座標</entry>
 	</row>
 	<row>
 	 <entry>2</entry>
 	 <entry>右上の x 座標</entry>
 	</row>
 	<row>
 	 <entry>3</entry>
 	 <entry>右上の y 座標</entry>
 	</row>
        </tbody>
       </tgroup>
      </informaltable></para>
     <para>
      <function>imagepstext</function>も参照下さい。</para>
   </refsect1>
  </refentry>


<!-- この関数が使用する t1lib の関数にはバグがあるようです。現在、
解決策が見つかるまでドキュメント及びソースではコメントアウト
しています。

  <refentry id="function.imagepscopyfont">
   <refnamediv>
    <refname>ImagePSCopyFont</refname>
    <refpurpose>後で修正するためにロード済みのフォントのコピーを作成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagepscopyfont</function></funcdef>
     <paramdef>int <parameter>fontindex</parameter></paramdef>
    </funcsynopsis>
    <para>
    拡大・縮小、傾斜、文字エンコードベクトルの変更のようにフォントを
    後で修正する必要があるが、同時に元のフォントも保存しておく必要がある場合には、
    この関数を使用して下さい。
    コピーするフォントは、コピーされたフォントではなく、<function>imagepsloadfont</function> 
    を用いて得られたフォントである必要があることに注意してください。
    コピーする前に元のフォントの修正を行うことが可能です。</para>
    <para>
    この関数を使用する場合、この手法で得たフォントを逆順に解放する必要があります。
    さもないとスクリプトはハングする可能性があります。</para>
    <para>
    全てが正常に動作した場合、有効なフォントIDが返され、後で使用することが可能です。
    それ以外の場合はFALSEを返し、エラー個所を示すメッセージが出力されます。</para>
    <para>
     <function>imageploadpsfont</function> も参照下さい。</para>
   </refsect1>
  </refentry>
-->

  <refentry id="function.imagepsencodefont">
   <refnamediv>
    <refname>ImagePSEncodeFont</refname>
    <refpurpose>フォントの文字エンコードベクトルを変更する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagepsencodefont</function></funcdef>
     <paramdef>string <parameter>encodingfile</parameter></paramdef>
    </funcsynopsis>
    
    <para>
    ファイルから文字エンコードベクトルをロードし、変更します。
    PostScript フォントのデフォルトベクトルは、127以上の位置には文字がほとんど
    ないので、英語以外の言語を使用する場合には恐らくこの部分を変更したいと
    思うことでしょう。
    このファイルの正しいフォーマットは、T1libs のドキュメントに記述されています。
    T1libs にはすぐに使用できるファイルとして IsoLatin1.enc および IsoLatin2.enc が
    含まれています。</para>
    <para>
    この関数を頻繁に用いている場合には、ずっと優れた方法として
     <link linkend="configuration.file">設定ファイル</link> で
    ps.default_encoding が正しいエンコードファイルを指すようにして
    エンコード法を定義する方法があります。
    この場合、自動的にロードされる全てのフォントは、正しいエンコードとなります。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsfreefont">
   <refnamediv>
    <refname>ImagePSFreeFont</refname>
    <refpurpose>PostScript Type 1 フォント用メモリを解放する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>void <function>imagepsfreefont</function></funcdef>
     <paramdef>int <parameter>fontindex</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>imagepsloadfont</function> も参照下さい。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsloadfont">
   <refnamediv>
    <refname>ImagePSLoadFont</refname>
    <refpurpose>ファイルから PostScript Type 1 フォントをロードする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagepsloadfont</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
    全て正常に処理された場合、有効なフォントIDが返され、後で使用することが
    できます。
    それ以外の場合、この関数はFALSEを返し、問題のある部分を示すメッセージを出力します。</para>
    <para>
     <function>imagepsfreefont</function> も参照下さい。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepstext">
   <refnamediv>
    <refname>ImagePSText</refname>
    <refpurpose>PostScript Type1 フォントを用いて画像の上に文字列を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>array <function>imagepstext</function></funcdef>
     <paramdef>int <parameter>image</parameter></paramdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>int <parameter>font</parameter></paramdef>
     <paramdef>int <parameter>size</parameter></paramdef>
     <paramdef>int <parameter>foreground</parameter></paramdef>
     <paramdef>int <parameter>background</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>space</parameter></paramdef>
     <paramdef>int <parameter>tightness</parameter></paramdef>
     <paramdef>float <parameter>angle</parameter></paramdef>
     <paramdef>int <parameter>antialias_steps</parameter></paramdef>
    </funcsynopsis>
    <para>
     <parameter>size</parameter> はピクセル単位で表されます。</para>
    <para>
     <parameter>foreground</parameter> は、テキストが描画される色です。
     <parameter>background</parameter> は、アンチエイリアス時にフェードアウトする
     色です。
     <parameter>background</parameter> 色のピクセルは描画されないので、
     背景画像が無地である必要はありません。</para>
    <para>
    <parameter>x</parameter>, <parameter>y</parameter> で指定される座標は、
    最初の文字の原点(または参照点)を定義します(おおよそ文字の左下隅)。
    これは、<function>ImageString</function> 関数で、
    x,y が最初の文字の右上隅を定義するのとは異なっています。
    動作に関して不明な場合は、フォント及びその測り方に関する PostScipt ドキュメントを
    参照下さい。</para>
    <para>
     <parameter>space</parameter> によりフォントが占める空間のデフォルト値を変更することが
     可能です。
     この値が元の値に付加されます。また、負の値とすることも可能です。</para>
    <para>
     <parameter>tightness</parameter> により文字間の空白の量を制御できます。
     この量は元の文字幅に追加され、負の値とすることも可能です。</para>
    <para>
     <parameter>angle</parameter> は度で表されます。</para>
    <para>
     <parameter>antialias_steps</parameter> によりアンチエイリアスを行うテキスト
     の色数を制御することが可能です。指定できるのは 4 および 16 です。 
     20 より小さな大きさのテキストには、見易くするために大きい方を推奨します。
     より大きなフォントでは、計算負荷がより少ない 4 を使用して下さい。</para>
    <para>
     パラメータ <parameter>space</parameter> および <parameter>tightness</parameter>
     は文字間隔の単位、つまり、1単位が文字矩形の 1/1000 で表されます。</para>
    <para>
     パラメータ <parameter>space</parameter>, <parameter>tightness</parameter>,
     <parameter>angle</parameter> ,<parameter>antialias</parameter> はオプションです。</para>
    <para>
    この関数は次の要素を有する配列を返します。
     <informaltable>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>0</entry>
	 <entry>左下の x 座標</entry>
	</row>
	<row>
	 <entry>1</entry>
	 <entry>左下の y 座標</entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>右上の x 座標</entry>
	</row>
	<row>
	 <entry>3</entry>
	 <entry>右上の y 座標</entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable></para>
    <para>
      <function>imagepsbbox</function>も参照下さい。</para>
    </refsect1>
   </refentry>
 
  <refentry id="function.imagerectangle">
   <refnamediv>
    <refname>ImageRectangle</refname>
    <refpurpose>矩形の描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagerectangle</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
    ImageRectangleは、画像im上にcol色で左上を(x1,y1)、右下を(x2,y2)とする
    矩形を描画します。画像の左上角は(0,0)です。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagesetpixel">
   <refnamediv>
    <refname>ImageSetPixel</refname>
    <refpurpose>点の生成</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagesetpixel</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageSetPixelは画像im上にcol色で座標(x,y)(左上が0, 0)に点を
     描画します。</para>
    <para>  
     <function>imagecreate</function>および
     <function>imagecolorallocate</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagestring">
   <refnamediv>
    <refname>ImageString</refname>
    <refpurpose>文字列の水平描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagestring</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>font</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>s</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageString は、画像imにcol色で座標(x, y)
     (左上が0, 0)に文字列sを描画します。
     fontが1, 2, 3, 4, 5 の場合、組込みフォントが使用されます。</para>
    <para>
     <function>imageloadfont</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagestringup">
   <refnamediv>
    <refname>ImageStringUp</refname>
    <refpurpose>文字列の垂直描画</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagestringup</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>font</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>s</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageStringUp は、画像 im 上に座標(x, y)から
     (左上が0, 0)、col色で垂直に文字列sを描画します。
     fontが1, 2, 3, 4, 5の場合は組込みフォントが
     使用されます。</para>
     <para>
      <function>imageloadfont</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagesx">
   <refnamediv>
    <refname>ImageSX</refname>
    <refpurpose>画像の幅を取得</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagesx</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageSX は im を ID とする画像の幅を返します。</para>
    <para>
     <function>imagecreate</function>および
     <function>imagesy</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagesy">
   <refnamediv>
    <refname>ImageSY</refname>
    <refpurpose>画像の高さの取得</refpurpose>    
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>int <function>imagesy</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageSYはimで識別される画像の高さを返します。</para>
    <para>
    <function>imagecreate</function>および
    <function>imagesx</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagettfbbox">
   <refnamediv>
    <refname>ImageTTFBBox</refname>
    <refpurpose>TypeTypeフォントを使用したテキストのbounding boxの生成</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>array <function>ImageTTFBBox</function></funcdef>
     <paramdef>int <parameter>size</parameter></paramdef>
     <paramdef>int <parameter>angle</parameter></paramdef>
     <paramdef>string <parameter>fontfile</parameter></paramdef>
     <paramdef>string <parameter>text</parameter></paramdef>
    </funcsynopsis>
    <para>
     本関数はTrueTypeテキストのピクセル単位でのbounding boxを
     計算し返します。
     <variablelist>
      <varlistentry>
       <term><parameter>text</parameter></term>
       <listitem><simpara>測定する文字列。</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>size</parameter></term>
       <listitem><simpara>フォントの大きさ。</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>fontfile</parameter></term>
       <listitem><simpara>TrueTypeフォントファイルの名称。  (URLも可。)</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>angle</parameter></term>
       <listitem><simpara>測定する<parameter>text</parameter>の
         角度(度単位)。</simpara></listitem>
      </varlistentry>
     </variablelist>
     <function>ImageTTFBBox</function>は、テキストのbounding boxを
     作成するための4点を表現する8個の要素からなる配列を返します。
     <informaltable>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>0</entry>
	 <entry>左下角のX座標</entry>
	</row>
	<row>
	 <entry>1</entry>
	 <entry>左下角のY座標</entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>右下角のX座標</entry>
	</row>
	<row>
	 <entry>3</entry>
	 <entry>右下角のY座標</entry>
	</row>
	<row>
	 <entry>4</entry>
	 <entry>右上角のX座標</entry>
	</row>
	<row>
	 <entry>5</entry>
	 <entry>右上角のY座標</entry>
	</row>
	<row>
	 <entry>6</entry>
	 <entry>左上角のX座標</entry>
	</row>
	<row>
	 <entry>7</entry>
	 <entry>左上角のY座標</entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable>
     4点の座標は、角度によらず<emphasis>text</emphasis>に関する
     相対位置で表わされます。
     つまり、"左上"はテキストを水平に見た場合の左上の角を意味します。</para>
    <para>
     本関数はGDライブラリとFreetypeライブラリの両方が必要です。</para>
    <para>
     <function>ImageTTFText</function>も参考にしてください。</para>
   </refsect1>
  </refentry>

  <refentry id="function.imagettftext">
   <refnamediv>
    <refname>ImageTTFText</refname>
    <refpurpose>TrueTypeフォントを使用したテキストの出力</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcdef>array <function>ImageTTFText</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>size</parameter></paramdef>
     <paramdef>int <parameter>angle</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
     <paramdef>string <parameter>fontfile</parameter></paramdef>
     <paramdef>string <parameter>text</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageTTFTextは画像 <parameter>im</parameter>上に
     座標(<parameter>x,y</parameter>)(左上が(0, 0))から
     角度<parameter>angle</parameter>、色
     <parameter>col</parameter>で文字列<parameter>text</parameter>を
     描画します。TrueTypeフォントを<parameter>fontfile</parameter>で
     指定します。</para>
    <para>
     (<parameter>x</parameter>,<parameter>y</parameter>)で指定する
     座標は、最初の文字のベースポイント(ほぼ文字の左下角)を定義します。
     この仕様は、(x,y)が最初の文字の右上角を定義する
     <function>ImageString</function> と異なっています。</para>
     
    <para>
     <parameter>angle</parameter>の単位は角度で、0度は左から
     右にテキストを読む方向(3時の方向)になります。
     0より大きな値は、反時計廻りの回転を表現します。
     (即ち、90という値は下から上にテキストを読む方向になります。)</para>

    <para>
     <parameter>fontfile</parameter>は、使用する TrueType
     フォントのパスです。</para>
     <para>
      <parameter>text</parameter> はテキスト文字列であり、
      フォントの 255 番目までの文字をアクセスするために 
      (&amp;#123; という形式の) UTF-8 文字列を使うことができます。</para>
     <para>
      <parameter>col</parameter> はカラーインデックスです。
      カラーインデックスに負の数を使用した場合、アンチエイリアス機能が
      オフになります。</para>
    <para>
     <function>ImageTTFText</function>は、text のbounding boxを
     構成する4点を表す8個の要素を有する配列を返します。
     返される点は左上、右上、右下、左下の順番となります。
     点の座標は、角度によらず text に関する相対座標として表されます。
     つまり、"左上"は、text を水平に見た場合の左上の隅を表します。</para>
    <para>
     以下の例題スクリプトは、400x30ピクセルの黒地に Arialフォントを
     用いて、白字で"Testing..."と書かれたGIFを作成します。
     <example>
      <title>ImageTTFText</title>
      <programlisting>
&lt;?php
Header("Content-type: image/gif");
$im = imagecreate(400,30);
$black = ImageColorAllocate($im, 0,0,0);
$white = ImageColorAllocate($im, 255,255,255);
ImageTTFText($im, 20, 0, 10, 20, $white, "/path/arial.ttf", "Testing... Omega: &amp;#937;");
ImageGif($im);
ImageDestroy($im);
?&gt;
</programlisting></example></para>

    <para>
     この関数はGDライブラリと
 <ulink url="&url.freetype;">FreeType</ulink>
ライブラリの両方が必要です。</para>
    <para>
     <function>ImageTTFBBox</function>も参照下さい。</para>
   </refsect1>
  </refentry>

 
 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

