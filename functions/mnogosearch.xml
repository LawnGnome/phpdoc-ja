<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.9 $ -->
 <reference id="ref.mnogo">
  <title>mnoGoSearch 関数</title>
  <titleabbrev>mnoGoSearch</titleabbrev>
  <partintro>
   <simpara>
    ここで示す関数により、フリーの検索エンジン mnoGoSearch (旧名は
    UdmSearch)へアクセスすることが可能となります。これらの関数を利用可
    能とするためには、オプション<link
    linkend="install.configure.with-mnogosearch"><option
    role="configure">--with-mnogosearch</option></link>により
    mnogosearchサポートを指定してPHPをコンパイルする必要があります。
    mnogosearchのパスを指定せずにこのオプションを使用した場合、PHPはデ
    フォルトでmnogosearchが/usr/local/mnogosearchにあるものとして検索
    を行います。mnogosearchを他の場所にインストールしている場合には、
    <link linkend="install.configure.with-mnogosearch"><option
    role="configure">--with-mnogosearch=DIR</option></link>のようにそ
    のパスを指定する必要があります。
   </simpara>
   <para>
    mnoGoSearchは、イントラネットおよびインターネットサーバ用の多機能
    な検索エンジンソフトウエアであり、GNUライセンスのもとで配布されて
    います。mnoGoSearchは、サイト内の検索から料理レシピまたは新聞検索、
    ftpアーカイブ検索、新聞記事検索といった特定の検索システムといった
    広い範囲のアプリケーションを構築する等といったユニークないくつかの
    機能を有しています。mnoGoSearchによりHTML、PDF、テキストドキュメン
    トに関する全文テキストインデックス作成と検索が可能になります。
    mnoGoSearch は二つの部分から構成されます。最初の部分は、インデック
    ス機構(indexer)です。indexerは、HTTP, FTP, NEWS サーバまたはローカ
    ルファイルにアクセスし、再帰的に全てのドキュメントを取得して、その
    ドキュメントに関するメタデータを優れた効率的な手法でSQLデータベー
    スに保存します。各ドキュメントがその対応するURLで参照された後、
    indexerにより収集されたメタデータが後で検索処理において使用されま
    す。検索は、Webインターフェースにより行われます。C CGI、PHP、Perl
    用の検索フロントエンドが含まれています。
   </para>
   <note>
    <para>
     PHPには、MySQLとの接続ライブラリが組み込まれており、MySQLにアクセ
     スすることが可能です。mnoGoSearchは、この組み込みライブラリと互換
     性がなく、通常のMySQLライブラリとの組合せでのみ動作します。このた
     め、mnoGoSearchをMySQLと組み合わせて使用する際には、PHPの
     configureにMySQLをインストールしたディレクトリを指定する必要が
     あります。これは、mnoGoSearchに関する設定で使用され、例えば、次の
     ようになります。
     <link linkend="install.configure.with-mnogosearch"><option role="configure">
       --with-mnogosearch --with-mysql=/usr</option></link>
    </para>
   </note>
   <simpara>
    これらの関数を使用するには、3.1.10以降のバージョンのmnoGoSearchが
    インストールされている必要があります。
   </simpara>
   <simpara>
    mnoGoSearchに関するより詳細な情報は、<ulink
    url="&url.mnogo;">&url.mnogo;</ulink>にあります。
   </simpara>
  </partintro>

  <refentry id="function.udm-add-search-limit">
   <refnamediv>
    <refname>udm_add_search_limit</refname>
    <refpurpose>種々の検索の制約を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_add_search_limit</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>int</type><parameter>var</parameter></methodparam>
      <methodparam><type>string</type><parameter>val</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_add_search_limit</function> は、成功時に
     &true;、エラー時に&false;を返し
     ます。検索の制約を追加します。
    </para>
    <para>
     <parameter>agent</parameter> -
     <function>udm_alloc_agent</function>から返されたエージェントへの
     リンク
    </para>
    <para>
     <parameter>var</parameter> - パラメータを定義、制限を示す。
    </para>
    <para>
     <parameter>val</parameter> - カレントのパラメータの値を定義
    </para>
     <para>
     使用可能な<parameter>var</parameter>の値は次のようになります。
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       UDM_LIMIT_URL - データベースのサブセクションにおける検索を制限
       するためにドキュメントURLに制限を課します。この機能は、SQL の %
       および _ LIKE ワイルドカードをサポートします。ただし、% は、(ゼ
       ロを含む)任意の数の文字の並びで、 _ は1文字だけにマッチします。
       例えば、http://my.domain.__/catalog は
       http://my.domain.ru/catalog および http://my.domain.ua/catalog
       を表すことが可能です。
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       UDM_LIMIT_TAG - サイトTAG制約を定義します。indexer-confにおいて特
       定のTAGを様々なサイトやあるサイトの一部に割り付けることが可能です。
       mnoGoSearch 3.1.x のタグは複数行とすることが可能で、メタ記号 %
       および _ を含むことが可能です。メタ記号は、タグ集合により中から
       の検索が可能となります。例えば、ABCDおよびABCEを有するリンクが
       あり、検索の制約がABC_であるとすると、この検索は両方のタグにつ
       いて行われます。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_LIMIT_LANG - ドキュメントの言語に関する制限を定義します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_LIMIT_CAT - ドキュメントのカテゴリに関する制限を定義します。
       カテゴリはタグ機能に似ていますが、ネストすることが可能です。こ
       のため、あるカテゴリの中に他のカテゴリを有するといったことが可
       能です。各レベルについて2つの文字を使用する必要があります。0-F
       の16進数または0-Zの36進数を使用して下さい。この場合、'Auto'のよ
       うな最上位のカテゴリは01になります。このカテゴリが'Ford'のよう
       なサブカテゴリを有している場合、トップカテゴリが01(親カテゴリ)、
       'Ford'が01となります。この結果をまとめると0101となります。'
       Auto'が'VW'という名前の他のサブカテゴリを有している場合、
       'Ford'カテゴリに属しているためにそのIDは01になるかもしれません
       が、通常は次のカテゴリであるために02になります。このため、その
       IDは0102となるでしょう。VWが'Engine'という名前のサブカテゴリを
       有している場合には、そのIDは再び01になり、'VW'がID02を有してお
       り、'Auto'のIDが01であるので、まとめると、010201となります。こ
       のカテゴリに関してサイトの検索を行う場合には、URLに cat=010201
       を指定します。
      </simpara>
     </listitem>
    </itemizedlist>
   </refsect1>
  </refentry>
  
  <refentry id="function.udm-alloc-agent">
   <refnamediv>
    <refname>udm_alloc_agent</refname>
    <refpurpose>mnoGoSearch セッションを確保する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_alloc_agent</methodname>
      <methodparam><type>string</type><parameter>dbaddr</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>dbmode</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_alloc_agent</function> は、成功時にmnogosearchエー
     ジェントID、エラー時に&false;を返します。この関数は、データベース
     パラメータを有するセッションを生成します。
    </para>
    <para>
     <parameter>dbaddr</parameter> - URL形式のデータベース名。SQLデー
     タベースへ接続する際のオプション(型、ホスト、データベース名、ポー
     ト、ユーザ、パスワード)。
     組み込みのテキストファイルサポートには関係ありません。フォーマッ
     ト: DBAddr DBType:[//[DBUser[:DBPass]@]DBHost[:DBPort]]/DBName/
     現在、サポートされている DBType の値は次のものです。: mysql,
     pgsql, msql, solid, mssql, oracle, ibase
     実際、ネーティブなライブラリのサポートは重要ではありません。しかし、
     ODBCユーザは、サポートされる値の一つを指定する必要があります。使
     用するデータベース型がサポートされていない場合、"unknown"を代わり
     に使用することも可能です。
    </para>
    <para>
     <parameter>dbmode</parameter> - 単語の記憶用SQLデータベースモー
     ドを選択可能です。"single"を指定した場合、全ての単語は、同じテー
     ブルに保存されます。"multi"を選択した場合、単語はその長さに応じて
     別々のテーブルに保存されます。"multi"モードの方が通常高速ですが、
     データベース上でより多くのテーブルを必要とします。"crc"モードが選
     択された場合、mnoGoSearch は、単語の代わりにCRC32アルゴリズムで計
     算された32ビット整数の単語IDを保存します。このモードで必要なディ
     スク容量はより小さいですが、"single"および"multi"モードと比較して
     より高速です。"crc-multi" は、"crc"モードと同じ記憶構造を使用しま
     すが、"multi"モードのように単語長に応じて別々のデータベースに単語
     を保存します。フォーマット: DBMode single/multi/crc/crc-multi
    </para>
    <note>
     <para>
     <parameter>dbaddr</parameter> および
     <parameter>dbmode</parameter> は、インデックス作成時に使用される
     これらの選択子に一致している必要があります。
     </para>
    </note>
    <note>
     <para>
      実際、これらの関数はデータベースへの接続をオープンする必要はなく、
      よって、ログイン名やパスワードを確認しません。実際のデータベース
      への接続およびログイン/パスワード認証は、
      <function>udm_find</function>で行われます。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.udm-api-version">
   <refnamediv>
    <refname>udm_api_version</refname>
    <refpurpose>mnoGoSearch APIバージョンを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_api_version</methodname>
      <void/>
     </methodsynopsis>
    <para>
     <function>udm_api_version</function>は、mnoGoSearch APIバージョン
     番号を返します。例えば、mnoGoSearch 3.1.10 APIを使用している場合、
     この関数は、<literal>30110</literal>を返します。
    </para>
    <para>
     この関数により利用可能なAPI関数をユーザが調べることが可能となりま
     す。例えば、<function>udm_get_doc_count</function>関数は
     mnoGoSearch 3.1.11以降でのみ利用可能です。
    </para>
    <simpara>例:</simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
   if (udm_api_version() >= 30111) {
   print  "Total number of urls in database: ".udm_get_doc_count($udm)."<br>\n";
   }
]]>
     </programlisting>
    </informalexample>
   </refsect1>
  </refentry>

  <refentry id="function.udm-cat-path">
   <refnamediv>
    <refname>udm_cat_path</refname>
    <refpurpose>カレントのカテゴリへのパスを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>udm_cat_path</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>string</type><parameter>category</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_cat_path</function>は、ツリールートからカレントのカ
     テゴリへのカテゴリツリーの中の既述パスを含む配列を返します。
    </para>
    <para>
     <parameter>agent</parameter> - エージェントリンクID。
    </para>
    <para>
     <parameter>category</parameter> - カレントのカテゴリ - パスを得よ
     うとするカテゴリ。
    </para>
    <para>
     以下の形式の配列を返します。
    </para>
    <para>
     組から構成される配列。偶数添字番号の要素にはカテゴリパス、奇数要
     素には、対応するカテゴリ名が含まれます。
    </para>
    <para>
     例えば、<literal>$array=udm_cat_path($agent, '02031D');</literal>
     とコールすると、以下の配列が返されます。
    </para>
    <literallayout>
<![CDATA[
$array[0] will contain ''
$array[1] will contain 'Root'
$array[2] will contain '02'
$array[3] will contain 'Sport'
$array[4] will contain '0203'
$array[5] will contain 'Auto'
$array[4] will contain '02031D'
$array[5] will contain 'Ferrari'
]]>
    </literallayout>
    <example>
     <title>
      カレントのカテゴリへのパスは以下の形式で指定します。
     '&gt; Root &gt; Sport &gt; Auto &gt; Ferrari'
     </title>
     <programlisting role="php">
<![CDATA[
<?php
  $cat_path_arr = udm_cat_path($udm_agent,$cat);
  $cat_path = '';
  for ($i=0; $i<count($cat_path_arr); $i+=2) {
    $path = $cat_path_arr[$i];
    $name = $cat_path_arr[$i+1];
    $cat_path .= " > <a href=\"$PHP_SELF?cat=$path\">$name</a> ";
  }
?>
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>
 
  <refentry id="function.udm-cat-list">
   <refnamediv>
    <refname>udm_cat_list</refname>
    <refpurpose>
     カレントのカテゴリと同じレベルのカテゴリを全て取得する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>array</type><methodname>udm_cat_list</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>string</type><parameter>category</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_cat_list</function>は、カテゴリツリーの中のカレント
     カテゴリと同じレベルの全てのカテゴリの一覧を配列として返します。
    </para>
    <para>
     この関数は、カテゴリツリーのブラウザを開発する際に有用です。
    </para>
    <para>
     以下の形式で配列を返します。
    </para>
    <para>
     組から構成される配列。偶数添字番号の要素にはカテゴリパス、奇数要
     素には、対応するカテゴリ名が含まれます。
    </para>
    <literallayout>
<![CDATA[
$array[0] will contain '020300'
$array[1] will contain 'Audi'
$array[2] will contain '020301'
$array[3] will contain 'BMW'
$array[4] will contain '020302'
$array[5] will contain 'Opel'
...
etc.
]]>
    </literallayout>
    <literallayout>
     以下は、カレントのレベルのリンクをこの形式で表示する例です。
  Audi
  BMW
  Opel
  ...
    </literallayout>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
 $cat_list_arr = udm_cat_list($udm_agent,$cat);
 $cat_list = '';
 for ($i=0; $i<count($cat_list_arr); $i+=2) {
   $path = $cat_list_arr[$i];
   $name = $cat_list_arr[$i+1];
   $cat_list .= "<a href=\"$PHP_SELF?cat=$path\">$name</a><br>";
 }
?>
]]>
     </programlisting>
    </informalexample>
   </refsect1>
  </refentry>

  <refentry id="function.udm-clear-search-limits">
   <refnamediv>
    <refname>udm_clear_search_limits</refname>
    <refpurpose>
     mnoGoSearch 検索に関する全ての制約をクリアする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_clear_search_limits</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_clear_search_limits</function> は、検索に関する制約
     をリセットし、&true;を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.udm-errno">
   <refnamediv>
    <refname>udm_errno</refname>
    <refpurpose>mnoGoSearch エラー番号を取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_errno</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_errno</function> は、mnoGoSearch エラー番号を返しま
     す。エラーがない場合にゼロを返します。
    </para>
    <para>
     <parameter>agent</parameter> -
     <function>udm_alloc_agent</function>へのコールから返されるエージェ
     ントIDへのリンク
    </para>
    <para>
     数字でエージェントエラーコードを返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.udm-error">
   <refnamediv>
    <refname>udm_error</refname>
    <refpurpose>mnoGoSearch エラーメッセージを得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>udm_error</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_error</function> は、mnoGoSearch エラーメッセージを
     返します。エラーがない場合には、空の文字列を返します。
    </para>
    <para>
     <parameter>agent</parameter> は、エージェントIDへのリンクであり、
     <function>udm_alloc_agent</function>をコールした際に得られたもの
     です。
    </para>
    <para>
     エージェントエラーメッセージを得ます。
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.udm-find">
   <refnamediv>
    <refname>udm_find</refname>
    <refpurpose>検索を実行する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_find</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_find</function> は成功時に結果リンクID、エラー時に
      &false; を返します。
    </para>
     <para>
     検索を行います。最初の引数はセッション、次の引数はクエリ本体です。
     検索の実行は、探す単語を入力し、投稿ボタンを押すだけで可能です。
     例えば、"mysql odbc"。この例で引用符は他のテキストから区別するた
     めに使用されており、クエリに引用符 " を使用する必要はありません。
     mnoGoSearchは、単語"mysql" かつ/または単語"odbc"を含む全ての文書
     を見付けます。最も大きな重みを有する文書が最初に表示されます。検
     索モードにALLを使用している場合、検索は入力した単語(とその他の単
     語)を共に含む文書を返します。モードANYを使用している場合、検索は、
     入力した単語のどれかを含む文書のリストを返します。より高度な結果
     を得たい場合には、クエリ言語を使用することも可能です。この場合は、
     検索フォームで検索モード"bool"を選択する必要があります。
    </para>
    <simpara>
     mnoGoSearch では次の演算子が使用可能です。
    </simpara>
    <simpara>
     &amp; - 論理積。例えば、&quot;mysql &amp;
     odbc&quot;。 mnoGoSearch は、単語 &quot;mysql&quot; および単語
     &quot;odbc&quot; を含む全てのURLを見付けます。
    </simpara>
    <simpara>
     | - 論理和。例えば、&quot;mysql|odbc&quot;。 mnoGoSearch は、単語
     &quot;mysql&quot; または単語 &quot;odbc&quot;を含む全てのURLを見
     付けます。
    </simpara>
    <simpara>
     ~ - 論理否定。例えば、&quot;mysql &amp; ~odbc&quot;。
     mnoGoSearch は、単語 &quot;mysql&quot; を含み、同時に単語
     &quot;odbc&quot; を含まない全てのURLを探します。~は、指定した単語
     を結果から除外するだけであることに注意して下さい。クエリ
     &quot;~odbc&quot; は何も見付けません!
    </simpara>
    <simpara>
     () - より複雑なクエリを作成するためのグループ化コマンド。例えば、
     &quot;(mysql | msql) &amp; ~postgres&quot;。クエリ言語は、簡単で
     あり、同時に強力です。クエリは通常の論理式と同等と考えて下さい。
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.udm-free-agent">
   <refnamediv>
    <refname>udm_free_agent</refname>
    <refpurpose>mnoGoSearch セッションを開放する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_free_agent</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_free_agent</function> は成功時に
     &true;、エラー時に&false;を返し
     ます。
    </para>
    <para>
     <parameter>agent</parameter> -
     <function>udm_alloc_agent</function>から返されたエージェントIDへ
     のリンク。
    </para>
    <para>
     エージェントセッション用に確保されたメモリを開放します。
    </para>
   </refsect1>
  </refentry>

 <refentry id="function.udm-free-ispell-data">
  <refnamediv>
   <refname>udm_free_ispell_data</refname>
   <refpurpose>ispellデータ用に確保されたメモリを解放する</refpurpose>
  </refnamediv>
  <refsect1>
   <title>説明</title>
    <methodsynopsis>
     <type>int</type><methodname>udm_free_ispell_data</methodname>
     <methodparam><type>int</type><parameter>agent</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>udm_free_ispell_data</function>は、常に&true;を返します。
   </para>
   <para>
    <parameter>agent</parameter> -
    <function>udm_alloc_agent</function>により得られるエージェントリン
    クID。
   </para>
   <note>
    <para>
     この関数は、mnoGoSearchバージョン3.1.12以降でサポートされた関数で、
     これ以前のバージョンではサポートされていません。
    </para>
   </note>
  </refsect1>
 </refentry>

 <refentry id="function.udm-free-res">
  <refnamediv>
   <refname>udm_free_res</refname>
   <refpurpose>mnoGoSearch 結果を開放する</refpurpose>
  </refnamediv>
  <refsect1>
   <title>説明</title>
    <methodsynopsis>
     <type>int</type><methodname>udm_free_res</methodname>
     <methodparam><type>int</type><parameter>res</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>udm_free_res</function> は成功時に
     &true;、エラー時に&false;を返し
    ます。
   </para>
   <para>
    <parameter>res</parameter> - <function>udm_find</function>から返
    された結果IDへのリンク。
   </para>
   <para>
    結果用に確保されたメモリを開放します。
   </para>
  </refsect1>
 </refentry>

 <refentry id="function.udm-get-doc-count">
  <refnamediv>
   <refname>udm_get_doc_count</refname>
   <refpurpose>Get total number of documents in database.</refpurpose>
  </refnamediv>
  
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>udm_get_doc_count</methodname>
     <methodparam><type>int</type><parameter>agent</parameter></methodparam>
    </methodsynopsis>
   
   <para>
    <function>udm_get_doc_count</function> returns number of documents in database.
   </para>
   
   <para>
    <parameter>agent</parameter> - link to agent identifier, received after 
    call to <function>udm_alloc_agent</function>.
   </para>
   
   <note>
    <simpara>
     This function is supported only in mnoGoSearch 3.1.11 or later.
    </simpara>
   </note>
   
  </refsect1>
 </refentry>

 <refentry id="function.udm-get-res-field">
  <refnamediv>
   <refname>udm_get_res_field</refname>
   <refpurpose>mnoGoSearch 結果フィールドを取得する</refpurpose>
  </refnamediv>
  <refsect1>
   <title>説明</title>
    <methodsynopsis>
     <type>string</type><methodname>udm_get_res_field</methodname>
     <methodparam><type>int</type><parameter>res</parameter></methodparam>
     <methodparam><type>int</type><parameter>row</parameter></methodparam>
     <methodparam><type>int</type><parameter>field</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>udm_get_res_field</function> は、成功時に結果フィールド、
    エラー時に&false;を返します。
   </para>
   <para>
    <parameter>res</parameter> - <function>udm_find</function>から返
    された結果IDへのリンク。
   </para>
   <para>
    <parameter>row</parameter> - カレントページのリンク番号。0から
    <parameter>UDM_PARAM_NUM_ROWS</parameter>までの番号。
   </para>
   <para>
    <parameter>field</parameter> - フィールドID。次の値のどれか。
    </para>
   <itemizedlist>
    <listitem>
     <simpara>
      UDM_FIELD_URL - ドキュメントURLフィールド
     </simpara>
    </listitem> 
    <listitem>
     <simpara>
      UDM_FIELD_CONTENT - ドキュメントContent-typeフィールド (例えば、
      text/html)
     </simpara>
     </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_TITLE - ドキュメントのtitleフィールド。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
       UDM_FIELD_KEYWORDS - ドキュメントkeywordsフィールド(META
      KEYWORDSタグから)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_DESC - ドキュメントdescriptionフィールド (META
      DESCRIPTIONタグから)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_TEXT - ドキュメント body テキスト (最初の数行でドキュ
      メントの内容に関するアイデアを示す)。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_SIZE - ドキュメントのサイズ。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_URLID - リンクへのユニークなURL ID。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_RATING  - (mnoGoSearchで計算された)ページのレーティン
      グ。 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_MODIFIED - unixtime形式のlast-modifiedフィールド。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_ORDER - 見つかったドキュメントの中のカレントのドキュ
      メントの数
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_CRC - ドキュメントCRC。
     </simpara>
    </listitem>
   </itemizedlist>
  </refsect1>
 </refentry>


 <refentry id="function.udm-get-res-param">
   <refnamediv>
    <refname>udm_get_res_param</refname>
    <refpurpose>mnoGoSearch 結果パラメータを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>string</type><methodname>udm_get_res_param</methodname>
      <methodparam><type>int</type><parameter>res</parameter></methodparam>
      <methodparam><type>int</type><parameter>param</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_get_res_param</function> は成功時に結果パラメータを
     返します。エラー時に&false;を返します。
    </para>
    <para>
     <parameter>res</parameter> - <function>udm_find</function>から返
     された結果IDへのリンク。
    </para>
    <para>
     <parameter>param</parameter> - パラメータIDであり、次の値のどれか
     となります。
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       UDM_PARAM_NUM_ROWS - カレントのページで見付かったリンクの数。
       全ての検索ページでの最後のページでのUDM_PARAM_PAGE_SIZE、残りの
       リンクに等しい。
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       UDM_PARAM_FOUND - クエリにマッチする結果の合計の数
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_WORDINFO - 見付かった単語に関する情報。例えば、"a
       good book" に関するクエリは "a: stopword, good:5637, book: 120"
       を返します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_SEARCHTIME - 秒単位の検索時間。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_FIRST_DOC - カレントのページに表示される最初のドキュ
       メントの数。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_LAST_DOC - カレントのページに表示される最後のドキュメ
       ントの数。
      </simpara>
     </listitem>
    </itemizedlist>
   </refsect1>
  </refentry>

  <refentry id="function.udm-load-ispell-data">
   <refnamediv>
    <refname>udm_load_ispell_data</refname>
    <refpurpose>ispellデータを読み込む</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_load_ispell_data</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>int</type><parameter>var</parameter></methodparam>
      <methodparam><type>string</type><parameter>val1</parameter></methodparam>
      <methodparam><type>string</type><parameter>val2</parameter></methodparam>
      <methodparam><type>int</type><parameter>flag</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_load_ispell_data</function>は、ispellデータをロード
     します。成功時に&true;、エラー時に&false;を返します。
    </para>
    <para>
     <parameter>agent</parameter> - agent link identifier, received after call 
     to <function>udm_alloc_agent</function>.
    </para>
    <para>
     <parameter>var</parameter> - parameter, indicating the source for ispell 
     data. May have the following values:
    </para>
     <para>
     After using this function to free memory allocated for ispell data, please 
     use <function>udm_free_ispell_data</function>, even if you use
     UDM_ISPELL_TYPE_SERVER mode.
    </para>
    <para>
     The fastest mode is UDM_ISPELL_TYPE_SERVER. UDM_ISPELL_TYPE_TEXT is slower
     and UDM_ISPELL_TYPE_DB is the slowest. The above pattern is &true; for 
     mnoGoSearch 3.1.10 - 3.1.11. It is planned to speed up DB mode in future 
     versions and it is going to be faster than TEXT mode.
    </para>
     <itemizedlist>
      <listitem>
       <simpara>
      UDM_ISPELL_TYPE_DB - indicates that ispell data should be loaded from SQL. 
      In this case, parameters <parameter>val1</parameter> and <parameter>val2</parameter>
      are ignored and should be left blank. <parameter>flag</parameter> 
      should be equal to <literal>1</literal>.
       </simpara>
      <note>
       <para>
        <parameter>flag</parameter> indicates that after loading ispell data 
        from defined source it sould be sorted (it is necessary for correct 
        functioning of ispell). In case of loading ispell data from files 
        there may be several calls to <function>udm_load_ispell_data</function>, 
        and there is no sense to sort data after every call, but only after 
        the last one. Since in db mode all the data is loaded by one call, 
        this parameter should have the value <literal>1</literal>. In this mode 
        in case of error, e.g. if ispell tables are absent, the function will 
        return &false; and code and error message will be accessible through 
      <function>udm_error</function> and <function>udm_errno</function>.
      </para>
     </note>
     
     <simpara>Example:</simpara>
     <informalexample>
      <programlisting role="php">
if (! udm_load_ispell_data($udm,UDM_ISPELL_TYPE_DB,'','',1)) {
  printf("Error #%d: '%s'\n", udm_errno($udm), udm_error($udm));
  exit;
}
      </programlisting>
     </informalexample>
    </listitem>
    <listitem>
     <para>
      UDM_ISPELL_TYPE_AFFIX - indicates that ispell data should be loaded from 
      file and initiates loading affixes file. In this case <parameter>val1</parameter>
      defines double letter language code for which affixes are loaded,
      and <parameter>val2</parameter> - file path. Please note, that if 
      a relative path entered, the module looks for the file not in UDM_CONF_DIR, 
      but in relation to current path, i.e. to the path where the script is executed.
      In case of error in this mode, e.g. if file is absent, the function will return 
      &false;, and an error message will be displayed. Error message text cannot be 
      accessed through <function>udm_error</function> and <function>udm_errno</function>, 
      since those functions can only return messages associated with SQL. Please, 
      see <parameter>flag</parameter> parameter description in UDM_ISPELL_TYPE_DB.
     </para>
     
     <simpara>Example:</simpara>
     <informalexample>
      <programlisting role="php">
     if ((! udm_load_ispell_data($udm,UDM_ISPELL_TYPE_AFFIX,'en','/opt/ispell/en.aff',0)) ||
        (! udm_load_ispell_data($udm,UDM_ISPELL_TYPE_AFFIX,'ru','/opt/ispell/ru.aff',0)) ||
        (! udm_load_ispell_data($udm,UDM_ISPELL_TYPE_SPELL,'en','/opt/ispell/en.dict',0)) ||
        (! udm_load_ispell_data($udm,UDM_ISPELL_TYPE_SPELL,'ru','/opt/ispell/ru.dict',1))) {
     exit;
     }
      </programlisting>
     </informalexample>
     <note>
      <para>
       <parameter>flag</parameter> is equal to <literal>1</literal> only in the last call.
      </para>
     </note>
    </listitem>
    <listitem>
     <para>
      UDM_ISPELL_TYPE_SPELL - indicates that ispell data should be loaded from 
      file and initiates loading of ispell dictionary file. In this case 
      <parameter>val1</parameter> defines double letter language code for which 
      affixes are loaded,
      and <parameter>val2</parameter> - file path. Please note, that if a relative 
      path entered, the module looks for the file not in UDM_CONF_DIR, but in 
      relation to current path, i.e. to the path where the script is executed.
      In case of error in this mode, e.g. if file is absent, the function will 
      return &false;, and an error message will be displayed. Error message text 
      cannot be accessed through <function>udm_error</function> and 
      <function>udm_errno</function>, since those functions can only return messages 
      associated with SQL. Please, see <parameter>flag</parameter> parameter 
      description in UDM_ISPELL_TYPE_DB.
     </para>
     <informalexample>
      <programlisting role="php">
     if ((! udm_load_ispell_data($udm,UDM_ISPELL_TYPE_AFFIX,'en','/opt/ispell/en.aff',0)) ||
        (! udm_load_ispell_data($udm,UDM_ISPELL_TYPE_AFFIX,'ru','/opt/ispell/ru.aff',0)) ||
        (! udm_load_ispell_data($udm,UDM_ISPELL_TYPE_SPELL,'en','/opt/ispell/en.dict',0)) ||
        (! udm_load_ispell_data($udm,UDM_ISPELL_TYPE_SPELL,'ru','/opt/ispell/ru.dict',1))) {
      exit;
      }
      </programlisting>
     </informalexample>
     
     <note>
      <para>
       <parameter>flag</parameter> is equal to <literal>1</literal> only in the last call.
      </para>
     </note>
    </listitem>
    <listitem>
     <para>
      UDM_ISPELL_TYPE_SERVER - enables spell server support. 
      <parameter>val1</parameter> parameter indicates
      address of the host running spell server. <parameter>val2</parameter> `
      is not used yet, but in future releases it is going to indicate number 
      of port used by spell server. <parameter>flag</parameter> parameter in 
      this case is not needed since ispell data is stored
      on spellserver already sorted.
     </para>
     <para>
      Spelld server reads spell-data from a separate configuration file
      (/usr/local/mnogosearch/etc/spelld.conf by default), sorts it and stores in
      memory. With clients server communicates in two ways: to indexer all the
      data is transferred (so that indexer starts faster), from search.cgi server
      receives word to normalize and then passes over to client (search.cgi) list
      of normalized word forms. This allows fastest, compared to db and text modes
      processing of search queries (by omitting loading and sorting all the spell data).
     </para>
     <para>
      <function>udm_load_ispell_data</function> function in UDM_ISPELL_TYPE_SERVER 
      mode does not actually load ispell data, but only defines server address. 
      In fact, server is automatically used by <function>udm_find</function> 
      function when performing search. In case of errors, e.g. if spellserver
      is not running or invalid host indicated, there are no messages returned 
      and ispell conversion does not work.
     </para>
     
     <note>
      <para>
       この関数は、mnoGoSearch 3.1.12以降でのみ利用可能です。
      </para>
     </note>
     <simpara>例:</simpara>
     <informalexample>
      <programlisting role="php">
<![CDATA[
if (!udm_load_ispell_data($udm,UDM_ISPELL_TYPE_SERVER,'','',1)) {
    printf("Error loading ispell data from server<br>\n");
    exit;
}
]]>
       </programlisting>
      </informalexample>
     </listitem>
    </itemizedlist>
   </refsect1>
  </refentry>
 
  <refentry id="function.udm-set-agent-param">
   <refnamediv>
    <refname>udm_set_agent_param</refname>
    <refpurpose>
     mnoGoSearch エージェントのセッションパラメータを設定する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_set_agent_param</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>int</type><parameter>var</parameter></methodparam>
      <methodparam><type>string</type><parameter>val</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>udm_set_agent_param</function> は成功時に
     &true;、エラー時に&false;を返し
     ます。mnoGoSearch セッションパラメータを定義します。
    </para>
    <simpara>
     以下のパラメータおよびそれらの値が利用可能です。
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       UDM_PARAM_PAGE_NUM - はページ番号を検索結果とするために使用さ
       れます。(結果は、ページ毎にUDM_PARAM_PAGE_SIZE個の結果を有する0
       から始まるページで返されます)
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       UDM_PARAM_PAGE_SIZE - は一ページに表示される検索結果の数。
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       UDM_PARAM_SEARCH_MODE - 検索モード。次の値が利用可能です。: 
       UDM_MODE_ALL - 全ての単語を検索します。; 
       UDM_MODE_ANY - 全ての単語で検索する; 
       UDM_MODE_PHRASE - 熟語検索;
       UDM_MODE_BOOL - 論理値検索。論理値検索に関する詳細については
       <function>udm_find</function> を参照下さい。
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       UDM_PARAM_CACHE_MODE - 検索結果のキャッシュモードをオンまたはオ
       フにします。有効の場合、検索エンジンは検索結果をディスクに保存
       します。似たような検索が後で実行された場合、エンジンはより高速
       にキャッシュから結果を得ることが可能です。
       利用可能な値: UDM_CACHE_ENABLED, UDM_CACHE_DISABLED.
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       UDM_PARAM_TRACK_MODE - クエリ追跡モードをオンまたはオフにします。
       バージョン3.1.2以降、mnoGoSearch はクエリ追跡モードをサポートし
       ています。追跡はSQLバージョンにのみ実装されており、組み込みデー
       タベースでは利用できません。追跡を使用するには、テーブルを追跡
       サポート用に作成する必要があります。MySQLの場合、
       create/mysql/track.txtを使用して下さい。検索実行時に、フロント
       エンドはクエリ単語、見つけたドキュメントの数、カレントの秒単位
       のUNIXタイムスタンプを保存するためにこれらのテーブルを使用しま
       す。
       利用可能な値: UDM_TRACK_ENABLED, UDM_TRACK_DISABLED.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_PHRASE_MODE - 熟語を用いたインデックスデータベースか
       どうかを定義します。(indexer.confにおける"phrase" パラメータ)
       使用可能な値: UDM_PHRASE_ENABLED および UDM_PHRASE_DISABLED。
       熟語検索が有効な場合(UDM_PHRASE_ENABLED)でも、全てのモード
       (ANY、ALL、BOOL、PHRASE)で検索が可能であることに注意して下さい。
       mnoGoSearchのバージョン3.1.10で熟語検索がSQLと組み込みデータベー
       スモードでのみサポートされました。一方、3.1.11で熟語がcachemode
       でもサポートされ始めました。
      </simpara>
      <simpara>
       熟語検索の例:
      </simpara>
      <simpara>
       "Arizona desert" - このクエリは、"Arizona desert"を熟語として含
       む全てのドキュメントを返します。熟語の前後に二重引用符が必要で
       あることに注意して下さい。
      </simpara>
     </listitem>  
     <listitem>
      <simpara>
       UDM_PARAM_CHARSET - ローカルなcharsetを定義します。利用可能な値:
       mnoGoSearchによりサポートされるcharsetの組,
       例えば、koi8-r, cp1251, ...
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       UDM_PARAM_STOPFILE - stopfileの名前とパスを定義します。
       (mnoGoSearchと若干違いがあります。つまり、mnoGoSearchにおいては、
       相対パスまたはパスが入力されなかった場合、UDM_CONF_DIRに関して
       このファイルが探されます。モジュールは、このファイルをカレント
       のパス(すなわち、PHPスクリプトが実行されるパス)で探します。
      </simpara>
     </listitem>
     <listitem>
       <simpara>
       UDM_PARAM_STOPTABLE - 指定したSQLテーブルから停止単語をロードし
       ます。複数のStopwordTableコマンドを使用可能です。このコマンドは、
       SQLデータベースサポートを有効にせずにコンパイルした場合は使用で
       きません。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_WEIGHT_FACTOR - 指定したドキュメント部分の重み係数を
       表します。現在、body, title, keywords, description, urlがサポー
       トされています。この機能を有効にするには、indexer.confの*Weight
       コマンドに2の累乗を指定して下さい。ここで次のような重みを指定し
       た場合を考えてみましょう。
      </simpara>
     <literallayout>
  URLWeight     1
  BodyWeight    2
  TitleWeight   4
  KeywordWeight 8
  DescWeight    16
     </literallayout>
      <simpara>
       同じドキュメントにいくつかの単語が複数回現れる場合、
       indexerが単語の重みにOR演算子を使用するので、異なったドキュメン
       トの部分に単語が現れる回数を検出可能です。ボディーにのみ現れる
       単語は、(2進標記で)重み集合00000010を有します。全てのドキュメン
       ト部分で使用される単語は、重み集合 00011111 を有します。
      </simpara>
      <simpara>
       このパラメータの値は、16進数文字列 ABCDE です。各桁は、単語重み
       の対応するビットの因子です。上で指定した重み設定は次のようにな
       ります。
      </simpara>
      <literallayout>
   E is a factor for weight 1  (URL Weight bit)
   D is a factor for weight 2  (BodyWeight bit)
   C is a factor for weight 4  (TitleWeight bit)
   B is a factor for weight 8  (KeywordWeight bit)
   A is a factor for weight 16 (DescWeight bit)
      </literallayout>
      <simpara>
       例:
      </simpara>
      <simpara>
       UDM_PARAM_WEIGHT_FACTOR=00001 は、URLのみを検索します。
      </simpara>	
      <simpara>
       UDM_PARAM_WEIGHT_FACTOR=00100 は、Titleのみを検索します。
      </simpara>	
      <simpara>
       UDM_PARAM_WEIGHT_FACTOR=11100 は、Title,Keywords,Desctriptionを
       検索しますが、URL と Bodyは検索しません。
      </simpara>
      <simpara>
       UDM_PARAM_WEIGHT_FACTOR=F9421 は、次の検索を行います。
      </simpara>
      <literallayout>
    Description with factor 15  (F hex)
    Keywords with factor 9
    Title with factor  4
    Body with factor 2
    URL with factor 1
      </literallayout>
      <simpara>
       UDM_PARAM_WEIGHT_FACTOR 変数が省略された場合、元の重みの値はソー
       ト結果から引き出されます。上記で指定した重み設定の場合、ドキュ
       メントのDescriptionは、最大重み16を有するドキュメントの
       descriptionを意味します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_WORD_MATCH - 単語にマッチ。このパラメータを単語検索型
       を選択する際に使用可能です。この機能は、"single"および"multi"モー
       ドでSQLデータベースおよび組み込みのデータベースを使用する場合に
       のみ動作します。この機能は、cachemodeおよび他のモードでは動作し
       ません。これは、これらのモードが、単語CRCを使用しており、部分文
       字列検索をサポートしていないからです。
       利用可能な値は次のようになります。
      </simpara>
      <simpara>UDM_MATCH_BEGIN - 単語の始めにマッチ</simpara>
      <simpara>UDM_MATCH_END - 単語の終りにマッチ</simpara>
      <simpara>UDM_MATCH_WORD - 単語全体にマッチ</simpara>
      <simpara>UDM_MATCH_SUBSTR - 単語の部分文字列にマッチ</simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_MIN_WORD_LEN - 単語の最短長を定義します。
       この制限より短い単語は、stopwordとみなされます。このパラメータ
       はその値自身も範囲に含むことに注意して下さい。つまり、
       UDM_PARAM_MIN_WORD_LEN=3 の場合、3文字の長さの単語はstopwordと
       見なされませんが、2文字の単語はstopwordとみなされます。デフォル
       トは1です。
      </simpara>
     </listitem>    
     <listitem>
      <simpara>
       UDM_PARAM_ISPELL_PREFIXES - Possible values: UDM_PREFIXES_ENABLED and 
       UDM_PREFIXES_DISABLED, that respectively enable or disable using prefixes.
       E.g. if a word "tested" is in search query, also words like "test", 
       "testing", etc. Only suffixes are supported by default. Prefixes usually
       change word meanings, for example if somebody is searching for the word "tested"
       one hardly wants "untested"  to be found. Prefixes support may also be 
       found useful for site's spelling checking purposes. In order to enable 
       ispell, you have to load ispell data with
       <function>udm_load_ispell_data</function>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_CROSS_WORDS - enables or disables crosswords support.
       Possible values: UDM_CROSS_WORDS_ENABLED and UDM_CROSS_WORDS_DISABLED.
      </simpara>
      <simpara>
       The corsswords feature allows to assign words between &lt;a
       href="xxx"&gt; and &lt;/a&gt; also to a document this link
       leads to. It works in SQL database mode and is not supported in
       built-in database and Cachemode.
      </simpara>
      <note>
       <simpara>
        Crosswords are supported only in mnoGoSearch 3.1.11 or later.
       </simpara>
      </note>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_VARDIR - specifies a custom path to directory where indexer 
       stores data when using built-in database and in cache mode.
       By default <literal>/var</literal> directory of
       <application>mnoGoSearch</application> installation is used. Can have 
       only string values. The parameter is available in PHP 4.1.0 or later.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_VARDIR - specifies a custom path to directory where indexer 
       stores data when using built-in database and in cache mode.
       By default <literal>/var</literal> directory of
       <application>mnoGoSearch</application> installation is used. Can have 
       only string values. The parameter is available in PHP 4.1.0 or later.
      </simpara>
     </listitem>
    </itemizedlist>
    </refsect1>
  </refentry>
  
  <refentry id='function.udm-check-charset'>
   <refnamediv>
    <refname>udm_check_charset</refname>
    <refpurpose>
     指定したcharsetをmnogosearchで認識されるかどうか調べる
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_check_charset</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>string</type><parameter>charset</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>
  
  <refentry id='function.udm-check-stored'>
   <refnamediv>
    <refname>udm_check_stored</refname>
    <refpurpose>
     保存された接続を調べる
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_check_stored</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>int</type><parameter>link</parameter></methodparam>
      <methodparam><type>string</type><parameter>doc_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.udm-close-stored'>
   <refnamediv>
    <refname>udm_close_stored</refname>
    <refpurpose>
     保存した接続を閉じる
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_close_stored</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>int</type><parameter>link</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.udm-crc32'>
   <refnamediv>
    <refname>udm_crc32</refname>
    <refpurpose>
     指定した文字列のCRC32チェックサムを計算する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_crc32</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id='function.udm-open-stored'>
   <refnamediv>
    <refname>udm_open_stored</refname>
    <refpurpose>
     保存した接続をオープンする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
     <methodsynopsis>
      <type>int</type><methodname>udm_open_stored</methodname>
      <methodparam><type>int</type><parameter>agent</parameter></methodparam>
      <methodparam><type>string</type><parameter>storedaddr</parameter></methodparam>
     </methodsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

 </reference>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

