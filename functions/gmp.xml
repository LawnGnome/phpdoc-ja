 <reference id="ref.gmp">
  <title>GMP 関数</title>
  <titleabbrev>GMP</titleabbrev>
  <partintro>
   <simpara>
    以下の関数により、GNU <acronym>MP</acronym> ライブラリを使用して任
    意長の整数を使用することが可能になります。これらの関数を利用可能と
    するには、オプション <option role="configure">--with-gmp</option> 
    を使用することにより <acronym>GMP</acronym>サポートを有効にしてPHP
    をコンパイルする必要があります。
   </simpara>
   <simpara>
    <ulink url="&url.gmp;">&url.gmp;</ulink> から
    <acronym>GMP</acronym> ライブラリをダウンロード可能です。このサイ
    トでは、<acronym>GMP</acronym> のマニュアルも入手可能です。
   </simpara>
   <simpara>
    これらの関数を使用するには、GMP バージョン 2 以降が必要です。いく
   つかの関数はより新しいバージョンの GMP ライブラリを必要とする可能性
   があります。
   </simpara>
   <simpara>
    これらの関数は、PHP 4.0.4 で追加されました。
   </simpara>
   <note>
    <para>
     多くの GMP 関数は、<literal>resource</literal> で定義されたGMP 数
     を引数としてとります。しかし、これらの関数の多くは、数値と文字列
     の両方を引数として指定可能で、後者は数値に変換することが可能です。
     また、整数引数を使用して処理を行うより高速な関数がある場合には、
     指定された引数が整数である場合により低速となる関数の代わりに使用
     されます。これは透過的に行われるため、結果的にGMP数値を引数とする
     全ての関数について整数を使用することが可能です。関数
     <function>gmp_init</function> も参照下さい。
    </para>
   </note>
   <para>
    <example>
     <title>GMP を使用した階乗関数</title>
     <programlisting role="php">
&lt;?php
function fact($x) {
  if($x &lt;= 1) 
        return 1;
  else
        return gmp_mul($x,fact($x-1));
}

print gmp_strval(fact(1000))."\n";
?>
     </programlisting>
    </example>
    この例は、1000の階乗(非常に大きな数です)を非常に高速に計算します。 
   </para>
  </partintro>
  
  <refentry id="function.gmp-init">
   <refnamediv>
    <refname>gmp_init</refname>
    <refpurpose>GMP 数を作成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_init</function></funcdef>
      <paramdef>mixed <parameter>number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     整数または文字列からGMP数を生成します。文字列表現には、10進数また
     は16進数を使用可能です。後者の場合、文字列は
     <literal>0x</literal> で始まる必要があります。
    </para>
    <para>
     <example>
      <title>GMP 数を生成する</title>
      <programlisting role="php">
&lt;?php
  $a = gmp_init(123456);
  $b = gmp_init("0xFFFFDEBACDFEDF7200");
?>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      <function>gmp_add</function> のようなGMP関数においてGMP数を指定
      するところに整数または文字列を使用したい場合には、この関数をコー
      ルする必要はありません。この場合、変換が必要な場合には、
      <function>gmp_init</function> と同様の方法で関数の引数は自動的に
      GMP数に変換されます。
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-intval">
   <refnamediv>
    <refname>gmp_intval</refname>
    <refpurpose>GMP 数を整数に変換する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gmp_intval</function></funcdef>
      <paramdef>resource <parameter>gmpnumber</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数により、GMP数を整数に変換することが可能になります。
     <warning>
      <simpara>
       この関数は、数値が実際にPHP整数に適合する場合(すなわち、符号付
       きlong型)にのみ有用な結果を返します。単にGMP数を出力したい場合
       には、<function>gmp_strval</function> を使用して下さい。
      </simpara>
     </warning>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-strval">
   <refnamediv>
    <refname>gmp_strval</refname>
    <refpurpose>GMP 数を文字列に変換する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gmp_strval</function></funcdef>
      <paramdef>resource <parameter>gmpnumber</parameter></paramdef>
      <paramdef>int
       <parameter>
	<replaceable><optional>base</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     GMP数を<parameter>base</parameter> を基底とする文字列表現に変換し
     ます。デフォルトの基底は10です。基底(base)として使用可能な値は、2
     から36までです。
    </para>
    <para>
     <example>
      <title>GMP 数を文字列に変換する</title>
      <programlisting role="php">
&lt;?php
  $a = gmp_init("0x41682179fbf5");
  printf("Decimal: %s, 36-based: %s", gmp_strval($a), gmp_strval($a,36));
?>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-add">
   <refnamediv>
    <refname>gmp_add</refname>
    <refpurpose>数値の加算</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_add</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     GMP数を加算します。返り値は、引数を合計を表すGMP数です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-sub">
   <refnamediv>
    <refname>gmp_sub</refname>
    <refpurpose>数値の減算</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_sub</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> から <parameter>b</parameter> を引いて結
     果を返します。
   </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-mul">
   <refnamediv>
    <refname>gmp_mul</refname>
    <refpurpose>数値の乗算</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_mul</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> と <parameter>b</parameter> をかけ、結果
     を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-div-q">
   <refnamediv>
    <refname>gmp_div_q</refname>
    <refpurpose>数値の割算</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_div_q</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>b</parameter></paramdef>
      <paramdef>int
       <parameter>
	<replaceable><optional>round</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> を <parameter>b</parameter> で割り、結果
     を整数で返します。結果の丸め方は、<parameter>round</parameter>で
     指定し、次の値を指定可能です。
     <itemizedlist>
      <listitem>
       <simpara>
        <parameter>GMP_ROUND_ZERO</parameter>: 結果は 0 の方に丸められ
	ます。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>GMP_ROUND_PLUSINF</parameter>: 結果は、
        <literal>+infinity</literal> の方に丸められます。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>GMP_ROUND_MINUSINF</parameter>: 結果は、
        <literal>-infinity</literal> の方に丸められます。
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <simpara>
     この関数は、<function>gmp_div</function> のようにコールすることも
     可能です。
    </simpara>
    <para>
     <function>gmp_div_r</function>, <function>gmp_div_qr</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-div-r">
   <refnamediv>
    <refname>gmp_div_r</refname>
    <refpurpose>割算の余り</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_div_r</function></funcdef>
      <paramdef>resource <parameter>n</parameter></paramdef>
      <paramdef>resource <parameter>d</parameter></paramdef>
      <paramdef>int
       <parameter>
	<replaceable><optional>round</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>n</parameter> を <parameter>d</parameter> で整数として
     割った際の余りを計算します。余りは、引数 <parameter>n</parameter>
     がゼロでないばあいに、これと同じ符号を有します。
    </para>
    <para>
     引数 <parameter>round</parameter> の説明については、関数
     <function>gmp_div_q</function> を参照下さい。
    </para>
    <para>
     <function>gmp_div_q</function>, <function>gmp_div_qr</function>
     も参照下さい。
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.gmp-div-qr">
   <refnamediv>
    <refname>gmp_div_qr</refname>
    <refpurpose>割算を行い、商と余りを得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>gmp_div_qr</function></funcdef>
      <paramdef>resource <parameter>n</parameter></paramdef>
      <paramdef>resource <parameter>d</parameter></paramdef>
      <paramdef>int
       <parameter>
	<replaceable><optional>round</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、<parameter>n</parameter> を <parameter>d</parameter>
     で割り、配列を返します。配列の最初の要素は
     <literal>[n/d]</literal> (割算の結果の整数値)、2番目の要素は、
     <literal>(n - [n/d] * d)</literal> (割算の余り)です。
    </para>
    <para>
     引数 <parameter>round</parameter> の説明については、
     <function>gmp_div_q</function> 関数を参照下さい。
    </para>
    <para>
     <example>
      <title>GMP 数の割算</title>
      <programlisting role="php">
&lt;?php
  $a = gmp_init("0x41682179fbf5");
  $res = gmp_div_qr($a, "0xDEFE75");
  printf("Result is: q - %s, r - %s", gmp_strval($res[0]), gmp_strval($res[1]));
?>
      </programlisting>
     </example>
    </para>
    <para>
     <function>gmp_div_q</function>, <function>gmp_div_r</function> も
     参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-div">
   <refnamediv>
    <refname>gmp_div</refname>
    <refpurpose>割算を行う</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_div</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数は、<function>gmp_div_q</function> へのエイリアスです。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.gmp-mod">
   <refnamediv>
    <refname>gmp_mod</refname>
    <refpurpose>モジュロ演算</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_mod</function></funcdef>
      <paramdef>resource <parameter>n</parameter></paramdef>
      <paramdef>resource <parameter>d</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>d</parameter> を法として <parameter>n</parameter> 
     を計算します。結果は常に非負であり、
     <parameter>d</parameter> の符号は無視されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-divexact">
   <refnamediv>
    <refname>gmp_divexact</refname>
    <refpurpose>正確な割算</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_divexact</function></funcdef>
      <paramdef>resource <parameter>n</parameter></paramdef>
      <paramdef>resource <parameter>d</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     高速な "exact division" アルゴリズムを使用して
     <parameter>d</parameter> で <parameter>n</parameter> を割ります。
     この関数は、<parameter>n</parameter> を <parameter>d</parameter>
     で割った数が既知の場合にのみ正確な結果を出力します。
    </para>
   </refsect1>
  </refentry>

   <refentry id="function.gmp-cmp">
   <refnamediv>
    <refname>gmp_cmp</refname>
    <refpurpose>数を比較する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gmp_cmp</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <literal>a > b</literal> の場合に正の値、<literal>a = b</literal>
     の場合にゼロ、<literal>a &lt; b</literal> の場合に負の値を返しま
     す。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-neg">
   <refnamediv>
    <refname>gmp_neg</refname>
    <refpurpose>符号を反転する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_neg</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     -<parameter>a</parameter> を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-abs">
   <refnamediv>
    <refname>gmp_abs</refname>
    <refpurpose>絶対値</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_abs</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> の絶対値を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-sign">
   <refnamediv>
    <refname>gmp_sign</refname>
    <refpurpose>数の符号</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gmp_sign</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> の符号、つまり、
     <parameter>a</parameter> が正の場合に1、負の場合に -1 を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-fact">
   <refnamediv>
    <refname>gmp_fact</refname>
    <refpurpose>階乗</refpurpose>
   </refnamediv>
   <refsect1>
    <title>謦؎</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_fact</function></funcdef>
      <paramdef>int <parameter>a</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> の階乗 (<literal>a!</literal>) を計算し
     ます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-sqrt">
   <refnamediv>
    <refname>gmp_sqrt</refname>
    <refpurpose>平方根</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_sqrt</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> の平方根を計算します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.gmp-sqrtrm">
   <refnamediv>
    <refname>gmp_sqrtrm</refname>
    <refpurpose>余りと平方根</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>gmp_sqrtrm</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     最初の引数が <parameter>a</parameter>の整数平方根
     (<function>gmp_sqrt</function>も参照下さい)、2番目の引数が
     余り(すなわち、<parameter>a</parameter>と最初の引数の2乗の差)
     であるような配列を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-perfect-square">
   <refnamediv>
    <refname>gmp_perfect_square</refname>
    <refpurpose>平方数かどうかを調べる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>gmp_perfect_square</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> が平方数の場合に&true;、その他の場合に
     &false;を返します。
    </para>
    <para>
     <function>gmp_sqrt</function>,<function>gmp_sqrtrm</function> も
     参照下さい。
    </para>	
   </refsect1>
  </refentry>

  <refentry id="function.gmp-pow">
   <refnamediv>
    <refname>gmp_pow</refname>
    <refpurpose>累乗</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_pow</function></funcdef>
      <paramdef>resource <parameter>base</parameter></paramdef>
      <paramdef>int <parameter>exp</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>base</parameter> の <parameter>exp</parameter> 乗を計
     算します。0^0 の場合は、1となります。<parameter>exp</parameter>を
     負とすることはできません。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-powm">
   <refnamediv>
    <refname>gmp_powm</refname>
    <refpurpose>累乗とモジュロ</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_powm</function></funcdef>
      <paramdef>resource <parameter>base</parameter></paramdef>
      <paramdef>resource <parameter>exp</parameter></paramdef>
      <paramdef>resource <parameter>mod</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>mod</parameter> を法として(<parameter>base</parameter>
     の<parameter>exp</parameter>乗)を計算します。
     <parameter>exp</parameter> が負の場合、結果は未定義(undefined)と
     なります。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.gmp-prob-prime">
   <refnamediv>
    <refname>gmp_prob_prime</refname>
    <refpurpose>数が"ほぼ素数"であるかどうかを調べる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gmp_prob_prime</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>int 
       <parameter>
	<replaceable><optional>reps</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この関数が0を返す場合、<parameter>a</parameter> は確実に素数では
     ありません。1を返す場合、<parameter>a</parameter> は恐らく素数で
     す。2を返す場合、<parameter>a</parameter> は確実に素数です。
     <parameter>reps</parameter> の値(デフォルトは10)の適当な値は、5か
     ら10までです。より大きい値を指定すると、素数でない数を"ほぼ"素数
     である誤認識する可能性が小さくなります。
    </para>
    <para>
     この関数は、Miller-Rabin の予測テストを使用します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.gmp-gcd">
   <refnamediv>
    <refname>gmp_gcd</refname>
    <refpurpose>最大公約数を計算する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_gcd</function></funcdef>
     <paramdef>resource <parameter>a</parameter></paramdef>
     <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> と <parameter>b</parameter> の最大公約数
     を計算します。引数のどちらかまたは両方が負の場合でも結果は常に正
     となります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-gcdext">
   <refnamediv>
    <refname>gmp_gcdext</refname>
    <refpurpose>最大公約数と乗数を計算する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>gmp_gcdext</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <literal>a*s + b*t = g = gcd(a,b)</literal> となるような
     g, s, t を計算します。ただし、gcd は最大公約数です。g, s, t を要
     素とする配列を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-invert">
   <refnamediv>
    <refname>gmp_invert</refname>
    <refpurpose>法による逆</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_invert</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>b</parameter>を法として <parameter>a</parameter> の逆
     を計算します。逆が存在しない場合に &false; を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-legendre">
   <refnamediv>
    <refname>gmp_legendre</refname>
    <refpurpose>ルジェンドル記号</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gmp_legendre</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>p</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> と <parameter>p</parameter> の
     <ulink
     url="http://www.utm.edu/research/primes/glossary/LegendreSymbol.html">ルジェンドル記号</ulink>
     を計算します。<parameter>p</parameter> は、奇数でかつ正である必要
     があります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-jacobi">
   <refnamediv>
    <refname>gmp_jacobi</refname>
    <refpurpose>ヤコビ記号</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gmp_jacobi</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>p</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> および <parameter>p</parameter> の
     <ulink
     url="http://www.utm.edu/research/primes/glossary/JacobiSymbol.html">ヤコビ記号</ulink>
     を計算します。<parameter>p</parameter> は奇数で正である必要があり
     ます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-random">
   <refnamediv>
    <refname>gmp_random</refname>
    <refpurpose>乱数</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_random</function></funcdef>
      <paramdef>int <parameter>limiter</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     乱数を生成します。数の長さは、最大 <parameter>limiter</parameter>
     ワードとなります。<parameter>limiter</parameter> が負の場合、負の
     数が生成されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-and">
   <refnamediv>
    <refname>gmp_and</refname>
    <refpurpose>論理演算 AND</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_and</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     2つのGMP数の論理積を計算します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-or">
   <refnamediv>
    <refname>gmp_or</refname>
    <refpurpose>論理演算 OR</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_or</function></funcdef>
     <paramdef>resource <parameter>a</parameter></paramdef>
     <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     2つのGMP数の論理和を計算します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-xor">
   <refnamediv>
    <refname>gmp_xor</refname>
    <refpurpose>論理演算 XOR</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_xor</function></funcdef>
     <paramdef>resource <parameter>a</parameter></paramdef>
     <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     2つのGMP数の排他的論理和(XOR)を計算します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-setbit">
   <refnamediv>
    <refname>gmp_setbit</refname>
    <refpurpose>ビットを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_setbit</function></funcdef>
      <paramdef>resource <parameter>&amp;a</parameter></paramdef>
      <paramdef>int <parameter>index</parameter></paramdef>
      <paramdef>bool 
       <parameter>
	<replaceable><optional>set_clear</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> のビット <parameter>index</parameter> を
     設定します。<parameter>set_clear</parameter> はそのビットを0また
     は1のどちらにするかを定義します。デフォルトで、ビットは1に設定さ
     れます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-clrbit">
   <refnamediv>
    <refname>gmp_clrbit</refname>
    <refpurpose>ビットをクリアする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>gmp_clrbit</function></funcdef>
      <paramdef>resource <parameter>&amp;a</parameter></paramdef>
      <paramdef>int <parameter>index</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> のビット<parameter>index</parameter>をク
     リア(0に設定)します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-scan0">
   <refnamediv>
    <refname>gmp_scan0</refname>
    <refpurpose>0を探す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gmp_scan0</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>int <parameter>start</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ビット <parameter>start</parameter> から最上位ビットの方に最初の
     クリアビットが見付かるまで <parameter>a</parameter> をスキャンし
     ます。見付かったビットの番号を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-scan1">
   <refnamediv>
    <refname>gmp_scan1</refname>
    <refpurpose>1 を探す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gmp_scan1</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>int <parameter>start</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ビット <parameter>start</parameter>から、最上位ビットの方に最初の
     ビット組が見付かるまで、<parameter>a</parameter> を探します。見付
     かったビットのインデックスを返します。
    </para>
   </refsect1>
  </refentry>

   <refentry id="function.gmp-popcount">
   <refnamediv>
    <refname>gmp_popcount</refname>
    <refpurpose>カウントを増やす</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gmp_popcount</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> を一つ増やした数を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmp-hamdist">
   <refnamediv>
    <refname>gmp_hamdist</refname>
    <refpurpose>ハミング距離</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>gmp_hamdist</function></funcdef>
      <paramdef>resource <parameter>a</parameter></paramdef>
      <paramdef>resource <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>a</parameter> と <parameter>b</parameter> の間のハミン
     グ距離を返します。オペランドは共に非負とする必要があります。
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

