 <reference id="ref.pdf">
  <title>pdf 関数</title>
  <titleabbrev>pdf</titleabbrev>

  <partintro>
   <sect1 id="pdf.intro">
    <title>導入</title>   
    <simpara>
     Thomas Merzによるpdfライブラリをインストールしている場合、PHPで
     pdfファイルを作成するために pdf 関数を使用することができます。
     (<ulink url = "&url.pdf;">&url.pdf;</ulink> で取得可能です。)コンパ
     イルには<ulink url="&url.jpeg;">JPEGライブラリ</ulink>および
     <ulink url="&url.tiff;">TIFFライブラリ</ulink>も必要です。
     これら2つのライブラリは、PHP の configure を実行する際にもしばしば
     問題を発生します。問題を修正するには、configureのメッセージに従っ
     て下さい。
    </simpara>
    <simpara>
     pdflibのソース配布ファイルと共に配布されているpdflibに関する素晴
     らしいドキュメントを参照して下さい。この文書は、pdflib の機能に関
     する概要を良くまとめています。pdflibのほとんどの関数とPHPモジュー
     ル内の関数の名前は共通になっています。パラメータも同じです。
     このモジュールを効率的に使用するには、pdfまたはPostscriptの
     おおよその考え方も理解しておく必要があります。全ての長さと座標は
     Postscriptのポイント数で計られます。通常、1インチ当たり
     72 Postscript ポイントですが、これは、出力解像度に依存します。
    </simpara>
    <simpara> 
     <ulink url="&url.fastio;">FastIO</ulink>が作成した
     Clibpdfを使用したpdfドキュメント作成用の別のPHPモジュールがあります。
     このライブラリのAPIは、やや異なっています。詳細は、
     <link linkend="ref.cpdf">Clibpdf 関数</link>の節をご覧下さい。 
    </simpara>
    <simpara> 
     pdfモジュールは、1種類の変数型を導入します。これは、
     <parameter>pdfdoc</parameter>です。<parameter>pdfdoc</parameter>
     は、pdf ドキュメントへのポインタであり、最初のパラメータとしてほ
     ぼ全ての関数に必要です。
    </simpara>
   </sect1>
   <sect1 id="pdf.oldlibs.confusion">
    <title>古いバージョンのpdflibとの混乱</title>
    <simpara>
     PHPにおいてpdfサポートが開始されたのは、&mdash; pdflib 0.6
     &mdash; からであるため、特にPDFLIB APIにおいて多くの変更が行われ
     ています。これらの変更の多くは、PHPによりなんとか対応されてきまし
     たが、いくつかの変更については、PHP APIの変更が必要でした。PDFLIB
     3.x のAPIは安定しているようなので、PHP 4では、このバージョン以降が
     pdfサポートについて必要としています。結果的に多くの関数が消えたり、
     他の関数により置換されたりしています。PDFLIB 0.6のサポートは、完
     全に諦められています。次の表には、PHP 4.0.2で廃止され、新しいバー
     ジョンの関数に置換する必要がある関数全てのリストを示しています。
    </simpara>
    <para>
     <table>
      <title>廃止された関数と代替関数</title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>古い関数</entry>
         <entry>代替関数</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><function>pdf_put_image</function></entry>
         <entry>もう、不要です。</entry>
        </row>
        <row>
         <entry><function>pdf_get_font</function></entry>
         <entry>
	  <function>pdf_get_value</function> は、
	  <literal>"font"</literal> を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_fontsize</function></entry>
         <entry>
	  <function>pdf_get_value</function> は、
	  <literal>"fontsize"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_fontname</function></entry>
         <entry>
	  <function>pdf_get_parameter</function>は、
	  <literal>"fontname"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_creator</function></entry>
         <entry>
	  <function>pdf_set_info</function>は、
	  <literal>"Creator"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_title</function></entry>
         <entry>
	  <function>pdf_set_info</function>は、
	  <literal>"Title"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_subject</function></entry>
         <entry>
	  <function>pdf_set_info</function>は、
	  <literal>"Subject"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_author</function></entry>
         <entry>
	  <function>pdf_set_info</function>は、
	  <literal>"Author"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_keywords</function></entry>
         <entry>
	  <function>pdf_set_info</function>は、
	  <literal>"Keywords"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_leading</function></entry>
         <entry>
	  <function>pdf_set_value</function>は、
         <literal>"leading"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_text_rendering</function></entry>
         <entry>
	  <function>pdf_set_value</function>は、
	  <literal>"textrendering"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_text_rise</function></entry>
         <entry>
	  <function>pdf_set_value</function>は、
	  <literal>"textrise"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_horiz_scaling</function></entry>
         <entry><function>pdf_set_value</function>は、
         <literal>"horizscaling"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_text_matrix</function></entry>
         <entry>もう利用出来ません</entry>
        </row>
        <row>
         <entry><function>pdf_set_char_spacing</function></entry>
         <entry>
	  <function>pdf_set_value</function>は、
	  <literal>"charspacing"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_word_spacing</function></entry>
         <entry>
	  <function>pdf_set_value</function>は、
	  <literal>"wordspacing"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_transition</function></entry>
         <entry>
	  <function>pdf_set_parameter</function>は、
	  <literal>"transition"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_duration</function></entry>
         <entry>
	  <function>pdf_set_value</function>は、
	  <literal>"duration"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_gif</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>は、
	  <literal>"gif"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_jpeg</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>は、
	  <literal>"jpeg"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_tiff</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>は、
	  <literal>"tiff"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_png</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>は、
	  <literal>"png"</literal>を2番目の引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_imagewidth</function></entry>
         <entry>
	  <function>pdf_get_value</function>は、
	  <literal>"imagewidth"</literal>を2番目の引数、imageを3番目の
	  引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_imageheight</function></entry>
         <entry>
	  <function>pdf_get_value</function>は、
	  <literal>"imageheight"</literal>を2番目の引数、imageを3番目の
	  引数として渡します。
	 </entry>
        </row>
        <row>
         <entry><function></function></entry>
         <entry><function></function></entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </sect1>
   <sect1 id="pdf.install.pdflib">
    <title>pdflib 3.xのインストールに関するヒント</title>
    <simpara>
     PDFLIBのバージョン3.0以降では、オプション
     <literal>--enable-shared-pdflib</literal>を付けてPDFLIBの
     configureを行う必要があります。
    </simpara>
   </sect1>
   <sect1 id="pdf.oldlibs.hints">
    <title>pdflibの古いバージョンに関する問題</title>
    <simpara>
     PDFLIB 2.01を使用している場合、ライブラリがどのようにインストール
     されているかを確認して下さい。ファイルlibpdf.soまたはそのファイル
     へのリンクが存在している必要があります。バージョン2.01は、
     libpdf2.01.soという名前のライブラリを作成するだけなので、
     configure のテストプログラムをリンクする際に見付けることができま
     せん。libpdf.soからlibpdf2.01.soへのシンボリックリンクを作成する
     必要があります。
    </simpara>
    <simpara>
     PDFLIBのバージョン 2.20 では、APIの更なる変更が行われ、中国語と日
     本語のフォントがサポートされました。残念なことに、これにより、
     (PHP 3ではなく)PHP 4のpdfモジュールにいくつかの変更が生じています。
     PDFLIB 2.20 を使用している場合には、pdfドキュメントのメモリ内での
     生成を処理する際に注意が必要です。
     <function>pdf_set_font</function>のパラメータencodingは、文字列に
     変更されています。これは、例えば、4の代わりに'winansi'を使用しな
     ければならないことを意味します。
    </simpara>
    <simpara>
     PDFLIB 2.30 を使用している場合、
     <function>pdf_set_text_matrix</function>は廃止されています。
     この関数はもうサポートされていません。一般にPDFLIBで生じた変更に
     関しては、使用するバージョンのPDFLIBのリリースノートを参照下さい。
    </simpara>
    <simpara>
     2000/3/9以降のバージョンのPHP 4では、3.0より前のバージョンのPDFLIB
     をサポートしていません。他方、PHP 3では 2.01より新しいバージョンで
     使用されているこはできません。(訳注：パッチをあてればPHP 3でも
     PDFLIB3を使用可能です。)
    </simpara>
   </sect1>
   <sect1 id="pdf.examples">
    <title>例</title>
    <simpara>
     多くの関数の使用法は簡単です。最も困難なのは、非常に簡単なpdfドキュ
     メントを作成する場合でしょう。次の例は、入門の際の助けとなるはず
     です。この例では、1ページを有するファイル
     <filename>test.pdf</filename>が作成されます。このページは、30ポイ
     ントのアウトラインフォントでテキスト"Times-Roman"を有しています。
     テキストには下線も引かれます。
    </simpara>
    <para>
     <example>
      <title>PDFLIBでpdfドキュメントを作成する</title>
      <programlisting role="php">
&lt;?php
$fp = fopen("test.pdf", "w");
$pdf = pdf_open($fp);
pdf_set_info($pdf, "Author", "Uwe Steinmann");
pdf_set_info($pdf, "Title", "Test for PHP wrapper of pdflib 2.0");
pdf_set_info($pdf, "Creator", "See Author");
pdf_set_info($pdf, "Subject", "Testing");
pdf_begin_page($pdf, 595, 842);
pdf_add_outline($pdf, "Page 1");
pdf_set_font($pdf, "Times-Roman", 30, "host");
pdf_set_value($pdf, "textrendering", 1);
pdf_show_xy($pdf, "Times Roman outlined", 50, 750);
pdf_moveto($pdf, 50, 740);
pdf_lineto($pdf, 330, 740);
pdf_stroke($pdf);
pdf_end_page($pdf);
pdf_close($pdf);
fclose($fp);
echo "&lt;A HREF=getpdf.php>finished&lt;/A>";
?>
      </programlisting>
      <simpara>
       以下のスクリプト<filename>getpdf.php</filename>はpdfドキュメン
       トを返すだけのものです。
      </simpara>
      <informalexample>
       <programlisting role="php">
&lt;?php
$fp = fopen("test.pdf", "r");
header("Content-type: application/pdf");
fpassthru($fp);
fclose($fp);
?>
       </programlisting>
      </informalexample>
     </example>
    </para>
    <para>
     PDFLIB配布ファイルには、アナログクロックで本格的なページを作成す
     るより複雑な例が含まれています。この例をPDFLIBを使用してPHPに変換
     すると、次に示すようになります。(<link linkend="ref.cpdf">clibpdf
     モジュール)</link>のドキュメントにも同じ例があります。)
    </para>
    <para>
     <example>
      <title>pdflib配布ファイル中の pdfclockの例</title>
      <programlisting role="php">
&lt;?php
$radius = 200;
$margin = 20;
$pagecount = 10;

$pdf = PDF_new();

if (!PDF_open_file($pdf, "")) {
    print error;
    exit;
};

PDF_set_parameter($pdf, "warning", "true");

PDF_set_info($pdf, "Creator", "pdf_clock.php");
PDF_set_info($pdf, "Author", "Uwe Steinmann");
PDF_set_info($pdf, "Title", "Analog Clock");

while($pagecount-- > 0) {
    PDF_begin_page($pdf, 2 * ($radius + $margin), 2 * ($radius + $margin));

    PDF_set_parameter($pdf, "transition", "wipe");
    PDF_set_value($pdf, "duration", 0.5);
  
    PDF_translate($pdf, $radius + $margin, $radius + $margin);
    PDF_save($pdf);
    PDF_setrgbcolor($pdf, 0.0, 0.0, 1.0);

    /* 1分刻みの目盛 */
    PDF_setlinewidth($pdf, 2.0);
    for ($alpha = 0; $alpha &lt; 360; $alpha += 6) {
        PDF_rotate($pdf, 6.0);
        PDF_moveto($pdf, $radius, 0.0);
        PDF_lineto($pdf, $radius-$margin/3, 0.0);
        PDF_stroke($pdf);
    }

    PDF_restore($pdf);
    PDF_save($pdf);

    /* 5分刻みの目盛 */
    PDF_setlinewidth($pdf, 3.0);
    for ($alpha = 0; $alpha &lt; 360; $alpha += 30) { 
        PDF_rotate($pdf, 30.0);
        PDF_moveto($pdf, $radius, 0.0);
        PDF_lineto($pdf, $radius-$margin, 0.0);
        PDF_stroke($pdf);
    }

    $ltime = getdate();

    /* 時針を描画 */
    PDF_save($pdf);
    PDF_rotate($pdf,-(($ltime['minutes']/60.0)+$ltime['hours']-3.0)*30.0);
    PDF_moveto($pdf, -$radius/10, -$radius/20);
    PDF_lineto($pdf, $radius/2, 0.0);
    PDF_lineto($pdf, -$radius/10, $radius/20);
    PDF_closepath($pdf);
    PDF_fill($pdf);
    PDF_restore($pdf);

    /* 分針を描画 */
    PDF_save($pdf);
    PDF_rotate($pdf,-(($ltime['seconds']/60.0)+$ltime['minutes']-15.0)*6.0);
    PDF_moveto($pdf, -$radius/10, -$radius/20);
    PDF_lineto($pdf, $radius * 0.8, 0.0);
    PDF_lineto($pdf, -$radius/10, $radius/20);
    PDF_closepath($pdf);
    PDF_fill($pdf);
    PDF_restore($pdf);

    /* 秒針を描画 */
    PDF_setrgbcolor($pdf, 1.0, 0.0, 0.0);
    PDF_setlinewidth($pdf, 2);
    PDF_save($pdf);
    PDF_rotate($pdf, -(($ltime['seconds'] - 15.0) * 6.0));
    PDF_moveto($pdf, -$radius/5, 0.0);
    PDF_lineto($pdf, $radius, 0.0);
    PDF_stroke($pdf);
    PDF_restore($pdf);

    /* 中心に小さな円を描画 */
    PDF_circle($pdf, 0, 0, $radius/30);
    PDF_fill($pdf);

    PDF_restore($pdf);

    PDF_end_page($pdf);

    # 変化を見るために待つ
    sleep(1);
}

PDF_close($pdf);

$buf = PDF_get_buffer($pdf);
$len = strlen($buf);

header("Content-type: application/pdf");
header("Content-Length: $len");
header("Content-Disposition: inline; filename=foo.pdf");
print $buf;

PDF_delete($pdf);
?>
      </programlisting>
     </example>
    </para>
   </sect1>
  </partintro>

  <refentry id="function.pdf-add-annotation">
   <refnamediv>
    <refname>PDF_add_annotation</refname>
    <refpurpose>古い関数: 注記を追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     <function>PDF_add_outline</function> は、
     <function>PDF_add_note</function>に置換されました。
    </para>
    <para>
     <function>PDF_add_note</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-bookmark">
   <refnamediv>
    <refname>PDF_add_bookmark</refname>
    <refpurpose>ブックマークをカレントのページに追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_add_bookmark</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>parent</optional></parameter>
      </paramdef>
      <paramdef>int 
       <parameter><optional>open</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>parent</parameter>以下または
     <parameter>parent</parameter> = 0の場合に、新規にトップレベルのブッ
     クマーク以下にブックマーク階層を追加します。ブックマーク記述子が
     返されますが、これは、これ以降にブックマーク階層を追加する際に、
     親として使用することが可能です。
     open = 1の場合、子ブックマークは展開され、open = 0の場合は隠され
     ます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-launchlink">
   <refnamediv>
    <refname>PDF_add_launchlink</refname>
    <refpurpose>カレントのページに起動用注記を追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_add_launchlink</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (任意のファイル型のターゲットへの)起動用の注記を追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-locallink">
   <refnamediv>
    <refname>PDF_add_locallink</refname>
    <refpurpose>カレントのページにリンク注記を追加</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_add_locallink</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>int <parameter>page</parameter></paramdef>
      <paramdef>string <parameter>dest</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのPDFファイルの中にターゲットへのリンク注記を追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-note">
   <refnamediv>
    <refname>PDF_add_note</refname>
    <refpurpose>カレントのページに注記を追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_add_note</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>string <parameter>contents</parameter></paramdef>
      <paramdef>string <parameter>title</parameter></paramdef>
      <paramdef>string <parameter>icon</parameter></paramdef>
      <paramdef>int <parameter>open</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     注記を追加します。iconvは、"comment, "insert", "note",
      "paragraph", "newparagraph", "key", "help"のどれかとなります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-outline">
   <refnamediv>
    <refname>pdf_add_outline</refname>
    <refpurpose>古い関数: カレントのページにブックマークを追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
   <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_add_bookmark</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-pdflink">
   <refnamediv>
    <refname>PDF_add_pdflink</refname>
    <refpurpose>カレントページにリンク注記を追加</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_add_pdflink</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>int <parameter>page</parameter></paramdef>
      <paramdef>string <parameter>dest</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (PDFターゲットに)リンク注記を追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-weblink">
   <refnamediv>
    <refname>PDF_add_weblink</refname>
    <refpurpose>カレントのページにWebリンクを追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_add_weblink</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>string <parameter>url</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Web上のターゲットURLへのWebリンクを追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-arc">
   <refnamediv>
    <refname>pdf_arc</refname>
    <refpurpose>円弧を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_arc</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
      <paramdef>double <parameter>r</parameter></paramdef>
      <paramdef>double <parameter>alpha</parameter></paramdef>
      <paramdef>double <parameter>beta</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     反時計周りにalpha度からbeta度まで円弧を描画します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-begin-page">
   <refnamediv>
    <refname>pdf_begin_page</refname>
    <refpurpose>新規ページを開始する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_begin_page</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
      <paramdef>double <parameter>height</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     新規ページをドキュメントに追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-circle">
   <refnamediv>
    <refname>pdf_circle</refname>
    <refpurpose>円を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_circle</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
      <paramdef>double <parameter>r</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (x, y) を中心として半径rの円を描く。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-clip">
   <refnamediv>
    <refname>pdf_clip</refname>
    <refpurpose>カレントのパスに切り取る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_clip</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのパスをクリッピングのパスとして使用します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-close">
   <refnamediv>
    <refname>pdf_close</refname>
    <refpurpose>pdf ドキュメントを閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_close</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     生成されたPDFファイルを閉じ、ドキュメントの関係する全てのリソース
     を開放します。
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.pdf-closepath">
   <refnamediv>
    <refname>pdf_closepath</refname>
    <refpurpose>パスを閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_closepath</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのパスを閉じます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-closepath-fill-stroke">
   <refnamediv>
    <refname>pdf_closepath_fill_stroke</refname>
    <refpurpose>カレントのパスを閉じ、塗りつぶし、輪郭を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_closepath_fill_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     パスを閉じ、塗りつぶし、輪郭を描きます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-closepath-stroke">
   <refnamediv>
    <refname>pdf_closepath_stroke</refname>
    <refpurpose>パスを閉じ、パスに沿って線を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_closepath_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     パスを閉じ、その輪郭を描きます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-close-image">
   <refnamediv>
    <refname>pdf_close_image</refname>
    <refpurpose>画像を閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_close_image</function></funcdef>
      <paramdef>int <parameter>image</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>PDF_open_image*</function>関数のどれかから取得された
     <parameter>image</parameter>を閉じます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-concat">
   <refnamediv>
    <refname>PDF_concat</refname>
    <refpurpose>行列をCTMに追加</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_concat</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>a</parameter></paramdef>
      <paramdef>double <parameter>b</parameter></paramdef>
      <paramdef>double <parameter>c</parameter></paramdef>
      <paramdef>double <parameter>d</parameter></paramdef>
      <paramdef>double <parameter>e</parameter></paramdef>
      <paramdef>double <parameter>f</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     行列をCTMに追加します。
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.pdf-continue-text">
   <refnamediv>
    <refname>pdf_continue_text</refname>
    <refpurpose>次の行にテキストを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_continue_text</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     次の行にtextを出力します。行間の空白は、パラメータ
     <parameter>leading</parameter> で定義されます。
      Print text at the next line. The spacing between lines is determined 
      by the <parameter>leading</parameter> parameter.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-curveto">
   <refnamediv>
    <refname>pdf_curveto</refname>
    <refpurpose>曲線を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_curveto</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x1</parameter></paramdef>
      <paramdef>double <parameter>y1</parameter></paramdef>
      <paramdef>double <parameter>x2</parameter></paramdef>
      <paramdef>double <parameter>y2</parameter></paramdef>
      <paramdef>double <parameter>x3</parameter></paramdef>
      <paramdef>double <parameter>y3</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     3つの制御点を使用して現在の点からベジエ曲線を描画します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-delete">
   <refnamediv>
    <refname>PDF_delete</refname>
    <refpurpose>PDFオブジェクトを削除</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_delete</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     PDFオブジェクトを削除し、内部リソースを全て開放します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-end-page">
   <refnamediv>
    <refname>pdf_end_page</refname>
    <refpurpose>ページを終了する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_end_page</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ページを終了します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-endpath">
   <refnamediv>
    <refname>pdf_endpath</refname>
    <refpurpose>古い関数: カレントのパスを終了する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_endpath</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     古い関数であるため、代わりにstroke、fill、clip関数を使用して下さ
     い。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-fill">
   <refnamediv>
    <refname>pdf_fill</refname>
    <refpurpose>カレントのパスを塗りつぶす</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_fill</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     パスの内部をカレントの塗りつぶし色で塗りつぶします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-fill-stroke">
   <refnamediv>
    <refname>pdf_fill_stroke</refname>
    <refpurpose>カレントのパスを塗りつぶし、パスの輪郭を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_fill_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのパスの内部をカレントの塗りつぶし色で塗りつぶし、カレン
     トのパスの輪郭を輪郭色で描画します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-findfont">
   <refnamediv>
    <refname>PDF_findfont</refname>
    <refpurpose>
     後で<function>PDF_setfont</function>で使用するフォントを準備する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_findfont</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>fontname</parameter></paramdef>
      <paramdef>string <parameter>encoding^</parameter></paramdef>
      <paramdef>int <parameter>embed</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この後、<function>PDF_setfont</function>で使用するフォントを準備
     します。このフォントのメトリックがロードされ、embedがゼロでない場
     合、フォントファイルがチェックされますが、ロードはまだ行われませ
     ん。encodingは、"builtin", "macroman", "winansi", "host" またはユー
     ザが定義したエンコーディング名またはCMapの名前のどれかとなります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-buffer">
   <refnamediv>
    <refname>PDF_get_buffer</refname>
    <refpurpose>
     生成されたPDFデータを含むバッファを取得する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>PDF_get_buffer</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     PDF出力バッファの内容を取得します。この結果は、この他のPDFlib関数
     をコールする前にクライアントで使用済である必要があります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-font">
   <refnamediv>
    <refname>PDF_get_font</refname>
    <refpurpose>古い関数: フォント処理</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_get_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-fontname">
   <refnamediv>
    <refname>PDF_get_fontname</refname>
    <refpurpose>古い関数: フォント処理</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_get_parameter</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-fontsize">
   <refnamediv>
    <refname>PDF_get_fontsize</refname>
    <refpurpose>古い関数: フォント処理</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_get_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-image-height">
   <refnamediv>
    <refname>pdf_get_image_height</refname>
    <refpurpose>古い関数: イメージの高さを返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>pdf_get_image_height</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>image</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>pdf_get_image_height</function>は、古い関数です。
     代わりに<function>PDF_get_value</function>を使用して下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-image-width">
   <refnamediv>
    <refname>pdf_get_image_width</refname>
    <refpurpose>古い関数: イメージの幅を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>pdf_get_image_width</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>image</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>pdf_get_image_width</function>は古い関数です。代わりに
     <function>PDF_get_value</function>を使用して下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-parameter">
   <refnamediv>
    <refname>pdf_get_parameter</refname>
    <refpurpose>パラメータを得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>pdf_get_parameter</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>double 
       <parameter><optional>modifier</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     いくつかのPDFLIBパラメータの内容を文字列として取得します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-value">
   <refnamediv>
    <refname>pdf_get_value</refname>
    <refpurpose>数値を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>double <function>pdf_get_value</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>double 
       <parameter>
	<replaceable><optional>modifier</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     いくつかのPDFLIBパラメータをfloat型で取得します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-lineto">
   <refnamediv>
    <refname>pdf_lineto</refname>
    <refpurpose>線を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_lineto</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの点から座標 (<parameter>x</parameter>, <parameter>y</parameter>)
     まで線を描画します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-moveto">
   <refnamediv>
    <refname>pdf_moveto</refname>
    <refpurpose>現在の位置を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_moveto</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの点を設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-new">
   <refnamediv>
    <refname>PDF_new</refname>
    <refpurpose>Creates a new pdf object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_new</function></funcdef>
      <paramdef><parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Create a new PDF object, using default error handling
      and memory management.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open">
   <refnamediv>
    <refname>pdf_open</refname>
    <refpurpose>古い関数: 新規の pdfオブジェクトをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_open</function></funcdef>
      <paramdef>int <parameter>file</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>pdf_open</function>関数は、古い関数であるため、
     <function>PDF_new</function> と
     <function>PDF_open_file</function>を代わりに使用して下さい。
    </para>
    <para>
     <function>PDF_new</function>,
     <function>PDF_open_file</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.pdf-open-ccitt">
   <refnamediv>
    <refname>PDF_open_CCITT</refname>
    <refpurpose>
     生のCCITTデータから新規イメージファイルをオープンします
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_open</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>int <parameter>width</parameter></paramdef>
      <paramdef>int <parameter>height</parameter></paramdef>
      <paramdef>int <parameter>BitReverse</parameter></paramdef>
      <paramdef>int <parameter>k</parameter></paramdef>
      <paramdef>int <parameter>Blackls1</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     生のCCITTイメージをオープンします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-file">
   <refnamediv>
    <refname>PDF_open_file</refname>
    <refpurpose>新規PDFオブジェクトをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_open_file</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>filename</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     新規のPDFファイルを指定したファイル名で作成します。
     <parameter>filename</parameter> が空の場合、PDFドキュメントはファ
     イルではなくメモリ上に作成されます。結果は、
     <function>PDF_get_buffer</function>関数によりクライアント側で取得
     可能です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-gif">
   <refnamediv>
    <refname>pdf_open_gif</refname>
    <refpurpose>古い関数: GIFイメージをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_open_image</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-image">
   <refnamediv>
    <refname>PDF_open_image</refname>
    <refpurpose>イメージ読み込み関数</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_open_image</function></funcdef>
      <paramdef>int <parameter>PDF-document</parameter></paramdef>
      <paramdef>string <parameter>imagetype</parameter></paramdef>
      <paramdef>string <parameter>source</parameter></paramdef>
      <paramdef>string <parameter>data</parameter></paramdef>
      <paramdef>long <parameter>length</parameter></paramdef>
      <paramdef>int <parameter>width</parameter></paramdef>
      <paramdef>int <parameter>height</parameter></paramdef>
      <paramdef>int <parameter>components</parameter></paramdef>
      <paramdef>int <parameter>bpc</parameter></paramdef>
      <paramdef>string <parameter>params</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     複数のデータソースからのイメージデータを使用します。サポートさ
     れているイメージ型は、"jpeg", "ccitt", "raw" です。サポートされて
     いるソースは、"memory", "fileref", "url" です。len は type="raw"
     の場合にのみ使用可能です。params は type="ccitt" の場合にのみ使用
     可能です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-image-file">
   <refnamediv>
    <refname>pdf_open_image_file</refname>
    <refpurpose>ファイルからイメージを読み込む</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
    <funcdef>int <function>PDF_open_image_file</function></funcdef>
      <paramdef>int <parameter>PDF-document</parameter></paramdef>
      <paramdef>string <parameter>imagetype</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>stringparam</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>intparam</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     イメージファイルをオープンします。サポートされている型は、
     "jpeg", "tiff", "gif", "png"です。
     <parameter>stringparam</parameter> は、"", "mask", "masked",
     "page"のどれかです。<parameter>intparam</parameter> は、0、適用し
     たマスクまたはページのイメージIDのどれかです。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-jpeg">
   <refnamediv>
    <refname>PDF_open_jpeg</refname>
    <refpurpose>古い関数: JPEGイメージをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_open_image</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-open-png">
   <refnamediv>
    <refname>PDF_open_png</refname>
    <refpurpose>
     古い関数: PNGイメージをオープンする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_open_image</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-open-tiff">
   <refnamediv>
    <refname>PDF_open_tiff</refname>
    <refpurpose>古い関数: TIFFイメージをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_open_tiff</function></funcdef>
      <paramdef>int <parameter>PDF-document</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_open_image</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-place-image">
   <refnamediv>
    <refname>pdf_place_image</refname>
    <refpurpose>イメージをページ上に置く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_place_image</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>image</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
      <paramdef>double <parameter>scale</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     イメージをそのイメージの左下隅を(<parameter>x</parameter>,
     <parameter>y</parameter>) に合わせるように置き、サイズを変更しま
     す。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-rect">
   <refnamediv>
    <refname>pdf_rect</refname>
    <refpurpose>長方形を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_rect</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
      <paramdef>double <parameter>height</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (<parameter>x</parameter>, <parameter>y</parameter>) を左下隅とし、
     幅を <parameter>width</parameter>、高さを
     <parameter>height</parameter>とする長方形を描画します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-restore">
   <refnamediv>
    <refname>pdf_restore</refname>
    <refpurpose>以前保存された環境を復元する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_restore</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     直近に保存された描画状態を復元します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-rotate">
   <refnamediv>
    <refname>pdf_rotate</refname>
    <refpurpose>回転を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_rotate</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>phi</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     座表系をphi度回転します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-save">
   <refnamediv>
    <refname>pdf_save</refname>
    <refpurpose>現在の環境を保存する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_save</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの描画状態を保存します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-scale">
   <refnamediv>
    <refname>pdf_scale</refname>
    <refpurpose>スケールを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_scale</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x-scale</parameter></paramdef>
      <paramdef>double <parameter>y-scale</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     座表系のスケールを設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setdash">
   <refnamediv>
    <refname>pdf_setdash</refname>
    <refpurpose>破線パターンを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setdash</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>w</parameter></paramdef>
      <paramdef>double <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのダッシュパターンを黒および白単位で設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setflat">
   <refnamediv>
    <refname>pdf_setflat</refname>
    <refpurpose>平面度を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setflat</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>flatness</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     平面度を 0 から 100 の間の値に設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setfont">
   <refnamediv>
    <refname>PDF_setfont</refname>
    <refpurpose>カレントのフォントを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_setfont</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>double <parameter>size</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>PDF_findfont</function>から返された
     <parameter>font</parameter>ハンドルを使用して指定したサイズでカレ
     ントのフォントを設定します。
    </para>
   </refsect1>
  </refentry>

  
  <refentry id="function.pdf-setgray">
   <refnamediv>
    <refname>pdf_setgray</refname>
    <refpurpose>描画および塗りつぶし色をグレー値に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setgray</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>gray</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの塗りつぶしおよび輪郭描画色を設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setgray-fill">
   <refnamediv>
    <refname>pdf_setgray_fill</refname>
    <refpurpose>塗りつぶし色をグレー値に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setgray_fill</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>gray</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの塗りつぶし色を0から1までのグレー値に設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-setgray-stroke">
   <refnamediv>
    <refname>pdf_setgray_stroke</refname>
    <refpurpose>描画色をグレー値に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setgray_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>gray</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの輪郭描画色を0から1までのグレー値に設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setlinecap">
   <refnamediv>
    <refname>pdf_setlinecap</refname>
    <refpurpose>linecap パラメータを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setlinecap</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>linecap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>linecap</parameter>パラメータを0から2までの値に設定し
     ます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setlinejoin">
   <refnamediv>
    <refname>PDF_setlinejoin</refname>
    <refpurpose>linejoinパラメータを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_setlinejoin</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>long <parameter>linejoin</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     line joinパラメータを0から2までの値に設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setlinewidth">
   <refnamediv>
    <refname>PDF_setlinewidth</refname>
    <refpurpose>線幅を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_setlinewidth</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの線幅をwidthに設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setmiterlimit">
   <refnamediv>
    <refname>PDF_setmiterlimit</refname>
    <refpurpose>miter limitを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_setmiterlimit</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>miter</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     miter limitを1以上の値に設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setpolydash">
   <refnamediv>
    <refname>PDF_setpolydash</refname>
    <refpurpose>複雑な破線パターンを設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_setpolydash</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double *<parameter>dasharray</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     配列で定義されるより複雑な破線のパターンを設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setrgbcolor">
   <refnamediv>
    <refname>PDF_setrgbcolor</refname>
    <refpurpose>描画色および塗りつぶし色をRGBカラー値で設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_setrgbcolor</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>red value</parameter></paramdef>
      <paramdef>double <parameter>green value</parameter></paramdef>
      <paramdef>double <parameter>blue value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの塗りつぶし色と輪郭色を指定したRGB値に設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-setrgbcolor-fill">
   <refnamediv>
    <refname>PDF_setrgbcolor_fill</refname>
    <refpurpose>塗りつぶし色をRGBカラー値に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_setrgbcolor_fill</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>red value</parameter></paramdef>
      <paramdef>double <parameter>green value</parameter></paramdef>
      <paramdef>double <parameter>blue value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの塗りつぶし色を指定したRGB値に設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-setrgbcolor-stroke">
   <refnamediv>
    <refname>PDF_setrgbcolor_stroke</refname>
    <refpurpose>描画色をRGBカラー値に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_setrgbcolor_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>red value</parameter></paramdef>
      <paramdef>double <parameter>green value</parameter></paramdef>
      <paramdef>double <parameter>blue value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの輪郭色を指定したRGB値に設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-set-border-color">
   <refnamediv>
    <refname>PDF_set_border_color</refname>
    <refpurpose>リンクや注記の周りの境界色を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_set_border_color</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>red</parameter></paramdef>
      <paramdef>double <parameter>green</parameter></paramdef>
      <paramdef>double <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     全ての種類の注記の境界色を設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-border-dash">
   <refnamediv>
    <refname>PDF_set_border_dash</refname>
    <refpurpose>リンクおよび注記の周りの境界の破線形式を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_set_border_dash</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>black</parameter></paramdef>
      <paramdef>double <parameter>white</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     全ての種類の注記の境界の破線形式を設定します。
     <function>PDF_setdash</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-border-style">
   <refnamediv>
    <refname>PDF_set_border_style</refname>
    <refpurpose>
     リンクおよび注記の周りの境界の形式を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_set_border_style</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>style</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     全ての種類の注記の境界の形式を設定します。
     <parameter>style</parameter> は、"solid" または "dashed" です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-char-spacing">
   <refnamediv>
    <refname>PDF_set_char_spacing</refname>
    <refpurpose>古い関数: 文字間隔を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_set_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-duration">
   <refnamediv>
    <refname>pdf_set_duration</refname>
    <refpurpose>古い関数: ページ間隔を設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_set_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-font">
   <refnamediv>
    <refname>PDF_set_font</refname>
    <refpurpose>古い関数: フォントの形式とサイズを選択</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。<function>PDF_findfont</function> と
     <function>PDF_setfont</function> を代わりに使用する必要があります。
    </para>
    <para>
     <function>PDF_findfont</function>,
     <function>PDF_setfont</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-horiz-scaling">
   <refnamediv>
    <refname>PDF_set_horiz_scaling</refname>
    <refpurpose>古い関数: テキストの横方向倍率を設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_set_horiz_scaling</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>scale</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_set_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-info">
   <refnamediv>
    <refname>PDF_set_info</refname>
    <refpurpose>ドキュメント情報のフィールドを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_set_info</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ドキュメント情報フィールドkeyにvalueを設定します。
     <parameter>key</parameter> は、"Subject", "Title", "Creator",
      "Author", "Keywords", またはユーザが定義したキーのどれかです。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-leading">
   <refnamediv>
    <refname>PDF_set_leading</refname>
    <refpurpose>古い関数: テキストの行間を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_set_value</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-parameter">
   <refnamediv>
    <refname>PDF_set_parameter</refname>
    <refpurpose>パラメータを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_set_parameter</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     いくつかのPDFlibパラメータを文字列型で設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-text-pos">
   <refnamediv>
    <refname>PDF_set_text_pos</refname>
    <refpurpose>テキストの位置を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_set_text_pos</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     テキストの出力位置を設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-text-rendering">
   <refnamediv>
    <refname>PDF_set_text_rendering</refname>
    <refpurpose>古い関数: テキストの描画方法を設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_set_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-text-rise">
   <refnamediv>
    <refname>pdf_set_text_rise</refname>
    <refpurpose>古い関数: テキストの傾きを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_set_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-transition">
   <refnamediv>
    <refname>pdf_set_text_matrix</refname>
    <refpurpose>古い関数: テキストのマトリックスを設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     <function>PDF_set_paramter</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-value">
   <refnamediv>
    <refname>PDF_set_value</refname>
    <refpurpose>数値を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_set_value</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>double <parameter>value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     PDFlibパラメータの値をfloat型で設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-word-spacing">
   <refnamediv>
    <refname>pdf_set_word_spacing</refname>
    <refpurpose>古い関数: 単語間の空白を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>PDF_set_value</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-show">
   <refnamediv>
    <refname>PDF_show</refname>
    <refpurpose>カレントの位置にテキストを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_show</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの位置にカレントのフォントとサイズでテキストを出力します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-show-boxed">
   <refnamediv>
    <refname>PDF_show_boxed</refname>
    <refpurpose>ボックスにテキストを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_show_boxed</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>double <parameter>left</parameter></paramdef>
      <paramdef>double <parameter>top</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
      <paramdef>double <parameter>height</parameter></paramdef>
      <paramdef>string <parameter>hmode</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>feature</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定したフォーマットモードに基づき指定したテキストボックスにカレ
     ントのフォントとサイズでテキストを出力します。フォーマットモード
     は、"left", "right", "center", "justify", "fulljustify"のどれかと
     する必要があります。width および height が 0の場合、リクエストモー
     ドの左上の点に最初の行のみが置かれます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-show-xy">
   <refnamediv>
    <refname>PDF_show_xy</refname>
    <refpurpose>指定した位置にテキストを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_show_xy</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (x, y)にカレントのフォントでテキストを出力します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-skew">
   <refnamediv>
    <refname>PDF_skew</refname>
    <refpurpose>座標系を歪ませる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_skew</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>alpha</parameter></paramdef>
      <paramdef>double <parameter>beta</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     座標系をxおよびy方向にそれぞれalpha度、beta度歪ませます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-stringwidth">
   <refnamediv>
    <refname>PDF_stringwidth</refname>
    <refpurpose>カレントフォントを用いた際のテキスト幅を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>double <function>PDF_stringwidth</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>text</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>text</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     任意のフォントでテキストの幅を返します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-stroke">
   <refnamediv>
    <refname>PDF_stroke</refname>
    <refpurpose>パスに沿って線を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの色および線幅で、パスの輪郭を描画し、パスをクリアします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-translate">
   <refnamediv>
    <refname>PDF_translate</refname>
    <refpurpose>座標系の原点を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>PDF_translate</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>tx</parameter></paramdef>
      <paramdef>double <parameter>ty</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     座標系の原点を変更します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-memory-image">
   <refnamediv>
    <refname>PDF_open_memory_image</refname>
    <refpurpose>
     PHPのイメージ関数で作成されたイメージをオープンする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>PDF_open_memory_image</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>image</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>PDF_open_memory_image</function>は、PHPのイメージ関
     数で作成されたイメージを入力とし、PDFオブジェクトで利用可能としま
     す。関数は、PDFのイメージIDを返します。
     <example>
      <title>メモリイメージの読み込み</title>
      <programlisting role="php">
&lt;?php
$im = ImageCreate(100, 100);
$col = ImageColorAllocate($im, 80, 45, 190);
ImageFill($im, 10, 10, $col);
$pim = PDF_open_memory_image($pdf, $im);
ImageDestroy($im);
PDF_place_image($pdf, $pim, 100, 100, 1);
PDF_close_image($pdf, $pim);
?>
      </programlisting>
     </example>
    </para>
    <para>
     <function>PDF_close_image</function>,
     <function>PDF_place_image</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
