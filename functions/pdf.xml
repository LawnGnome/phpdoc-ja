<?xml version="1.0" encoding="utf-8"?>
 <reference id="ref.pdf">
  <title>pdf 関数</title>
  <titleabbrev>pdf</titleabbrev>

  <partintro>
   <sect1 id="pdf.intro">
    <title>導入</title>   
    <simpara>
     PHPのPDF関数は、<ulink url="&url.pdflib.merz;">Thomas
     Merz</ulink>により作成されたPDFlibライブラリを使用してPDFファイル
     を作成することが可能です。PDFlibは、<ulink
     url="&url.pdf;">&url.pdf;</ulink> でダウンロード可能ですが、商用
     で使用する場合はライセンスを購入する必要があります。この拡張モジュー
     ルをコンパイルするには、<ulink url="&url.jpeg;">JPEG</ulink>およ
     び<ulink url="&url.tiff;">TIFF</ulink> が必要です。PHPにPDFサポー
     トを組み込む際のより詳細な情報については、<link
     linkend="install.configure.with-pdflib">PDFlib インストール</link>
     の節を参照下さい。
    </simpara>
    <simpara>
     本節のドキュメントは、PDFlibライブラリで利用可能な関数の概要のみ
     を説明することを意図しています。ここで扱う各関すの完全で詳細な説
     明については、PDFlibのソース配布ファイルと共に配布されているドキュ
     メントを参照下さい。このドキュメントは、PDFlib の機能に関
     する概要を非常に良くまとめており、全ての関数に関する最新のドキュ
     メントが含まれています。
    </simpara>
    <simpara>
     PDFlibのほとんどの関数とPHPモジュール内の関数の名前とパラメータは
     共通になっています。このモジュールを効率的に使用するには、PDFまた
     はPostScriptに関する基本的な考え方も理解しておく必要があります。
     全ての長さと座標は、Postscriptのポイント数で計られます。通常、1イ
     ンチ当たり72 Postscript ポイントですが、これは、出力解像度に依存
     します。使用する座表系に関するより詳細な説明については、PDFlibの
     ソース配布に含まれるPDFlibドキュメントを参照下さい。
    </simpara>
    <simpara> 
     ほとんど全てのPDF関数は、最初の引数パラメータとして
     <parameter>pdf object</parameter> を必要とすることに注意して下さ
     い。より詳細な情報については以下の例を参照下さい。
    </simpara>
    <note>
     <para>
      PDFドキュメントを作成するための別のPHPモジュールとして
      <ulink url="&url.cpdf;">FastIO's</ulink> ClibPDFが利用可能です。
      詳細については、<link linkend="ref.cpdf">ClibPDF</link>の節を参
      照下さい。<link linkend="ref.cpdf">ClibPDF</link> はPDFlibとはや
      や異なるAPIを使用していることに注意して下さい。
     </para>
    </note>
   </sect1>

   <sect1 id="pdf.oldlibs.confusion">
    <title>古いバージョンのPDFlibとの混乱</title>
    <simpara>  
     PHP v4.0.5以降、PHPlib用のPHP拡張モジュールは、PDFlib GmbH から正
     式にサポートされています。これにより、PDFlibマニュアル(バージョン
     3.00以降)に記述された全ての関数がPHP4で全く同じ意味、同じパラメー
     タでサポートされています。返り値のみは、エラーの場合に
     &false;を返すというPHPの流儀に合わせるために
     PDFlibマニュアルと異なっていることがあります。互換性を保つために
     PDFlibサポート関数ではまだ古い関数もサポートしていますが、上記の
     ように新しいバージョンに置換される予定です。PDFlib GmbH は、これら
     の古い関数を使用した場合に生じた際に生じた問題に関してはサポートを
     行いません。
    </simpara>
    <para>
     <table>
      <title>古い関数と代替関数</title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>古い関数</entry>
         <entry>代替関数</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><function>pdf_put_image</function></entry>
         <entry>もう不要です。</entry>
        </row> 
        <row>
         <entry><function>pdf_execute_image</function></entry>
         <entry>もう不要です。</entry>
        </row> 
        <row>
         <entry><function>pdf_get_annotation</function></entry>
         <entry>
	  同じパラメータで<function>pdf_get_bookmark</function>を使用。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_font</function></entry>
         <entry>
	  <function>pdf_get_value</function> に2番目のパラメータとして
	  <literal>"font"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_fontsize</function></entry>
         <entry>
	  <function>pdf_get_value</function> に2番目のパラメータとして
	  <literal>"fontsize"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_fontname</function></entry>
         <entry>
	  <function>pdf_get_parameter</function>に2番目のパラメータとして
	  <literal>"fontname"</literal> を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_creator</function></entry>
         <entry>
	  <function>pdf_set_info</function>に2番目のパラメータとして
	  <literal>"Creator"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_title</function></entry>
         <entry>
	  <function>pdf_set_info</function>に2番目のパラメータとして
	  <literal>"Title"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_subject</function></entry>
         <entry>
	  <function>pdf_set_info</function>に2番目のパラメータとして
	  <literal>"Subject"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_author</function></entry>
         <entry>
	  <function>pdf_set_info</function>に2番目のパラメータとして
	  <literal>"Author"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_info_keywords</function></entry>
         <entry>
	  <function>pdf_set_info</function>に2番目のパラメータとして
	  <literal>"Keywords"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_leading</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"leading"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_text_rendering</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"textrendering"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_text_rise</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"textrise"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_horiz_scaling</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"horizscaling"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_text_matrix</function></entry>
         <entry>もう使用できません。</entry>
        </row>
        <row>
         <entry><function>pdf_set_char_spacing</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"charspacing"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_word_spacing</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"wordspacing"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_transition</function></entry>
         <entry>
	  <function>pdf_set_parameter</function>に2番目のパラメータとして
	  <literal>"transition"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open</function></entry>
         <entry>
	  <function>pdf_new</function>の後に
	  <function>pdf_open_file</function>をコールする。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_font</function></entry>
         <entry>
	  <function>pdf_findfont</function>の後に
	  <function>pdf_setfont</function>をコールする。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_set_duration</function></entry>
         <entry>
	  <function>pdf_set_value</function>に2番目のパラメータとして
	  <literal>"duration"</literal>を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_gif</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>に2番目のパラメータとして
	  <literal>"gif"</literal> を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_jpeg</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>に2番目のパラメータとして
	  <literal>"jpeg"</literal> を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_tiff</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>に2番目のパラメータとして
	  <literal>"tiff"</literal> を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_open_png</function></entry>
         <entry>
	  <function>pdf_open_image_file</function>に2番目のパラメータとして
	  <literal>"png"</literal> を渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_image_width</function></entry>
         <entry>
	  <function>pdf_get_value</function>に2番目のパラメータとして
	  <literal>"imagewidth"</literal>、3番目のパラメータとして
	  imageを渡す。
	 </entry>
        </row>
        <row>
         <entry><function>pdf_get_image_height</function></entry>
         <entry>
	  <function>pdf_get_value</function>に2番目のパラメータとして
	  <literal>"imageheight"</literal>、3番目のパラメータとして
	  imageを渡す。
	 </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </sect1>

   <sect1 id="pdf.install.pdflib">
    <title>PDFlib 3.xのインストールに関するヒント</title>
    <simpara>
     PDFlibのバージョン3.0以降では、オプション
     <literal>--enable-shared-pdflib</literal>を付けてPDFlibの
     configureを行う必要があります。
    </simpara>
   </sect1>
   <sect1 id="pdf.oldlibs.hints">
    <title>PDFlibの過去のバージョンに関する問題</title>
    <simpara>
     2000/3/9以降のバージョンのPHP 4は、3.0より前のバージョンのPDFlib
     はサポートしていません。
    </simpara>
    <simpara>
     一方、PHP 3 では 2.01 より新しいバージョンを使用するべきではあり
     ません。ただし、php3/functions/pdf.c (PHP 3.0.19) のリビジョン
     1.61 以降では、PDFlib 3.0 以降を使用可能です。
    </simpara>
   </sect1>

   <sect1 id="pdf.examples">
    <title>例</title>
    <simpara>
     多くの関数の使用法は簡単です。最も困難なのは、非常に簡単なpdfドキュ
     メントを作成する場合でしょう。次の例は、入門の際の助けとなるはず
     です。この例では、1ページを有するファイル
     <filename>test.pdf</filename>が作成されます。このページには、30ポ
     イントのアウトラインフォントでテキスト"Times-Roman outlined"が描
     かれます。このテキストには、下線も引かれます。
    </simpara>
    <para>
     <example>
      <title>PDFlibでPDFドキュメントを作成する</title>
      <programlisting role="php">
&lt;?php
$pdf = pdf_new();
pdf_open_file($pdf, "test.pdf");
pdf_set_info($pdf, "Author", "Uwe Steinmann");
pdf_set_info($pdf, "Title", "Test for PHP wrapper of PDFlib 2.0");
pdf_set_info($pdf, "Creator", "See Author");
pdf_set_info($pdf, "Subject", "Testing");
pdf_begin_page($pdf, 595, 842);
pdf_add_outline($pdf, "Page 1");
pdf_set_font($pdf, "Times-Roman", 30, "host");
pdf_set_value($pdf, "textrendering", 1);
pdf_show_xy($pdf, "Times Roman outlined", 50, 750);
pdf_moveto($pdf, 50, 740);
pdf_lineto($pdf, 330, 740);
pdf_stroke($pdf);
pdf_end_page($pdf);
pdf_close($pdf);
pdf_delete($pdf);
echo "&lt;A HREF=getpdf.php>完了しました&lt;/A>";
?>
      </programlisting>
      <simpara>
       以下のスクリプト<filename>getpdf.php</filename>は、PDFドキュメ
       ントを返すだけのものです。
      </simpara>
      <informalexample>
       <programlisting role="php">
&lt;?php
$len = filesize($filename);
header("Content-Length: $len");
header("Content-type: application/pdf");
header("Content-Disposition: inline; filename=foo.pdf");
readfile($filename);
?&gt;
       </programlisting>
      </informalexample>
     </example>
    </para>
    <para>
     PDFlibの配布ファイルには、アナログクロックで本格的なページを作成す
     るより複雑な例が含まれています。ここでは、PDFlibのメモリ内作成機
     能を使用しており、このため、テンポラリファイルは不要です。この例
     をPHPからPDFlibを使用するように変換すると以下のようになります。
     (<link linkend="ref.cpdf">CLibPDFモジュール)</link>のドキュメント
     にも同じ例があります。)
    </para>
    <para>
     <example>
      <title>PDFlib配布ファイル中の pdfclockの例</title>
      <programlisting role="php">
&lt;?php
$radius = 200;
$margin = 20;
$pagecount = 10;

$pdf = pdf_new();

if (!pdf_open_file($pdf, "")) {
    print error;
    exit;
};

pdf_set_parameter($pdf, "warning", "true");

pdf_set_info($pdf, "Creator", "pdf_clock.php");
pdf_set_info($pdf, "Author", "Uwe Steinmann");
pdf_set_info($pdf, "Title", "Analog Clock");

while($pagecount-- > 0) {
    pdf_begin_page($pdf, 2 * ($radius + $margin), 2 * ($radius + $margin));

    pdf_set_parameter($pdf, "transition", "wipe");
    pdf_set_value($pdf, "duration", 0.5);
  
    pdf_translate($pdf, $radius + $margin, $radius + $margin);
    pdf_save($pdf);
    pdf_setrgbcolor($pdf, 0.0, 0.0, 1.0);

    /* 1分刻みの目盛 */
    pdf_setlinewidth($pdf, 2.0);
    for ($alpha = 0; $alpha &lt; 360; $alpha += 6) {
        pdf_rotate($pdf, 6.0);
        pdf_moveto($pdf, $radius, 0.0);
        pdf_lineto($pdf, $radius-$margin/3, 0.0);
        pdf_stroke($pdf);
    }

    pdf_restore($pdf);
    pdf_save($pdf);

    /* 5分刻みの目盛 */
    pdf_setlinewidth($pdf, 3.0);
    for ($alpha = 0; $alpha &lt; 360; $alpha += 30) { 
        pdf_rotate($pdf, 30.0);
        pdf_moveto($pdf, $radius, 0.0);
        pdf_lineto($pdf, $radius-$margin, 0.0);
        pdf_stroke($pdf);
    }

    $ltime = getdate();

    /* 時針を描画 */
    pdf_save($pdf);
    pdf_rotate($pdf,-(($ltime['minutes']/60.0)+$ltime['hours']-3.0)*30.0);
    pdf_moveto($pdf, -$radius/10, -$radius/20);
    pdf_lineto($pdf, $radius/2, 0.0);
    pdf_lineto($pdf, -$radius/10, $radius/20);
    pdf_closepath($pdf);
    pdf_fill($pdf);
    pdf_restore($pdf);

    /* 分針を描画 */
    pdf_save($pdf);
    pdf_rotate($pdf,-(($ltime['seconds']/60.0)+$ltime['minutes']-15.0)*6.0);
    pdf_moveto($pdf, -$radius/10, -$radius/20);
    pdf_lineto($pdf, $radius * 0.8, 0.0);
    pdf_lineto($pdf, -$radius/10, $radius/20);
    pdf_closepath($pdf);
    pdf_fill($pdf);
    pdf_restore($pdf);

    /* 秒針を描画 */
    pdf_setrgbcolor($pdf, 1.0, 0.0, 0.0);
    pdf_setlinewidth($pdf, 2);
    pdf_save($pdf);
    pdf_rotate($pdf, -(($ltime['seconds'] - 15.0) * 6.0));
    pdf_moveto($pdf, -$radius/5, 0.0);
    pdf_lineto($pdf, $radius, 0.0);
    pdf_stroke($pdf);
    pdf_restore($pdf);

    /* 中心に小さな円を描画 */
    pdf_circle($pdf, 0, 0, $radius/30);
    pdf_fill($pdf);

    pdf_restore($pdf);

    pdf_end_page($pdf);

    /* 変化を見るために待つ */
    sleep(1);
}

pdf_close($pdf);

$buf = pdf_get_buffer($pdf);
$len = strlen($buf);

header("Content-type: application/pdf");
header("Content-Length: $len");
header("Content-Disposition: inline; filename=foo.pdf");
print $buf;

pdf_delete($pdf);
?&gt;
      </programlisting>
     </example>
    </para>
   </sect1>
  </partintro>

  <refentry id="function.pdf-add-annotation">
   <refnamediv>
    <refname>pdf_add_annotation</refname>
    <refpurpose>古い関数: 注記を追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     <function>pdf_add_outline</function> は、
     <function>pdf_add_note</function>に置換されました。
    </para>
    <para>
     <function>pdf_add_note</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-bookmark">
   <refnamediv>
    <refname>pdf_add_bookmark</refname>
    <refpurpose>ブックマークをカレントのページに追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_add_bookmark</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>parent</optional></parameter>
      </paramdef>
      <paramdef>int 
       <parameter><optional>open</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>parent</parameter>以下または
     <parameter>parent</parameter> = 0の場合に、新規にトップレベルのブッ
     クマーク以下にブックマーク階層を追加します。ブックマーク記述子が
     返されますが、これは、これ以降にブックマーク階層を追加する際に、
     親として使用することが可能です。
     open = 1の場合、子ブックマークは展開され、open = 0の場合は隠され
     ます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-launchlink">
   <refnamediv>
    <refname>pdf_add_launchlink</refname>
    <refpurpose>カレントのページに起動用注記を追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_add_launchlink</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (任意のファイル型のターゲットへの)起動用の注記を追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-locallink">
   <refnamediv>
    <refname>pdf_add_locallink</refname>
    <refpurpose>カレントのページにリンク注記を追加</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_add_locallink</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>int <parameter>page</parameter></paramdef>
      <paramdef>string <parameter>dest</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのPDFファイルの中にターゲットへのリンク注記を追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-note">
   <refnamediv>
    <refname>pdf_add_note</refname>
    <refpurpose>カレントのページに注記を追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_add_note</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>string <parameter>contents</parameter></paramdef>
      <paramdef>string <parameter>title</parameter></paramdef>
      <paramdef>string <parameter>icon</parameter></paramdef>
      <paramdef>int <parameter>open</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     注記を追加します。iconvは、"comment, "insert", "note",
      "paragraph", "newparagraph", "key", "help"のどれかとなります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-outline">
   <refnamediv>
    <refname>pdf_add_outline</refname>
    <refpurpose>古い関数: カレントのページにブックマークを追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
   <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_add_bookmark</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-pdflink">
   <refnamediv>
    <refname>pdf_add_pdflink</refname>
    <refpurpose>カレントページにリンク注記を追加</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_add_pdflink</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>int <parameter>page</parameter></paramdef>
      <paramdef>string <parameter>dest</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (PDFターゲットに)リンク注記を追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-thumbnail">
   <refnamediv>
    <refname>pdf_add_thumbnail</refname>
    <refpurpose>カレントのページにサムネールを追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_add_thumbnail</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>image</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのページにサムネールとして既存のイメージを追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-add-weblink">
   <refnamediv>
    <refname>pdf_add_weblink</refname>
    <refpurpose>カレントのページにWebリンクを追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_add_weblink</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>string <parameter>url</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Web上のターゲットURLへのWebリンクを追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-arc">
   <refnamediv>
    <refname>pdf_arc</refname>
    <refpurpose>(反時計回りに)円弧を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_arc</function></funcdef>
      <paramdef>resource <parameter>pdf object</parameter></paramdef>
      <paramdef>float <parameter>x</parameter></paramdef>
      <paramdef>float <parameter>y</parameter></paramdef>
      <paramdef>float <parameter>r</parameter></paramdef>
      <paramdef>float <parameter>alpha</parameter></paramdef>
      <paramdef>float <parameter>beta</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     反時計周りにalpha度からbeta度まで円弧を描画します。
    </para>
    <para>
     <function>pdf_arcn</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-arcn">
   <refnamediv>
    <refname>pdf_arcn</refname>
    <refpurpose>(時計回りに)円弧を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_arc</function></funcdef>
      <paramdef>resource <parameter>pdf object</parameter></paramdef>
      <paramdef>float <parameter>x</parameter></paramdef>
      <paramdef>float <parameter>y</parameter></paramdef>
      <paramdef>float <parameter>r</parameter></paramdef>
      <paramdef>float <parameter>alpha</parameter></paramdef>
      <paramdef>float <parameter>beta</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     alpha度からbeta度まで円弧を時計周りに描きます。
    </para>
    <para>
     <function>pdf_arc</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-attach-file">
   <refnamediv>
    <refname>pdf_attach_file</refname>
    <refpurpose>カレントのページに添付ファイルを追加する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_attach_file</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>llx</parameter></paramdef>
      <paramdef>double <parameter>lly</parameter></paramdef>
      <paramdef>double <parameter>urx</parameter></paramdef>
      <paramdef>double <parameter>ury</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>string <parameter>description</parameter></paramdef>
      <paramdef>string <parameter>author</parameter></paramdef>
      <paramdef>string <parameter>mimetype</parameter></paramdef>
      <paramdef>string <parameter>icon</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     添付ファイル注記を追加します。iconは、"graph, "paperclip",
     "pushpin", "tag" のどれかです。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-begin-page">
   <refnamediv>
    <refname>pdf_begin_page</refname>
    <refpurpose>新規ページを開始する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_begin_page</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
      <paramdef>double <parameter>height</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     新規ページをドキュメントに追加します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-begin-pattern">
   <refnamediv>
    <refname>pdf_begin_pattern</refname>
    <refpurpose>新規パターンを開始する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_begin_pattern</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
      <paramdef>double <parameter>height</parameter></paramdef>
      <paramdef>double <parameter>xstep</parameter></paramdef>
      <paramdef>double <parameter>ystep</parameter></paramdef>
      <paramdef>int <parameter>painttype</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     新規パターンの定義を開始し、パターンのハンドルを返します。
     <parameter>width</parameter>および<parameter>height</parameter>は
     パターンのバウンディングボックスを定義します。
     <parameter>xstep</parameter>と<parameter>ystep</parameter>は、
     パターン繰り返しのオフセットを指定します。
      <parameter>painttype</parameter>=1 は、このパターンが固有の色設
     定を有することを意味し、一方、2は、このパターンが適用される際にカ
     レントの色が使用されることを意味します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-begin-template">
   <refnamediv>
    <refname>pdf_begin_template</refname>
    <refpurpose>新規テンプレートを開始する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_begin_template</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
      <paramdef>double <parameter>height</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     新規テンプレートの定義を開始します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-circle">
   <refnamediv>
    <refname>pdf_circle</refname>
    <refpurpose>円を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_circle</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
      <paramdef>double <parameter>r</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (x, y) を中心として半径rの円を描く。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-clip">
   <refnamediv>
    <refname>pdf_clip</refname>
    <refpurpose>カレントのパスに切り取る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_clip</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのパスをクリッピングのパスとして使用します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-close">
   <refnamediv>
    <refname>pdf_close</refname>
    <refpurpose>pdf ドキュメントを閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_close</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     生成されたPDFファイルを閉じ、ドキュメントの関係する全てのリソース
     を開放します。
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.pdf-closepath">
   <refnamediv>
    <refname>pdf_closepath</refname>
    <refpurpose>パスを閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_closepath</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのパスを閉じます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-closepath-fill-stroke">
   <refnamediv>
    <refname>pdf_closepath_fill_stroke</refname>
    <refpurpose>カレントのパスを閉じ、塗りつぶし、輪郭を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_closepath_fill_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     パスを閉じ、塗りつぶし、輪郭を描きます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-closepath-stroke">
   <refnamediv>
    <refname>pdf_closepath_stroke</refname>
    <refpurpose>パスを閉じ、パスに沿って線を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_closepath_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     パスを閉じ、その輪郭を描きます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-close-image">
   <refnamediv>
    <refname>pdf_close_image</refname>
    <refpurpose>画像を閉じる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_close_image</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>image</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>pdf_open_image*</function>関数のどれかから取得された
     <parameter>image</parameter>を閉じます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-close-pdi">
   <refnamediv>
    <refname>pdf_close_pdi</refname>
    <refpurpose>
     PDFドキュメント入力(PDI)を閉じる
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_close_pdi</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>dochandle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     全てのオープンされたページハンドルをクローズし、PDFドキュメント入
     力(PDI)を閉じます。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-close-pdi-page">
   <refnamediv>
    <refname>pdf_close_pdi_page</refname>
    <refpurpose>
     ページハンドルを閉じる
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_close_pdi_page</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>pagehandle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ページハンドルを閉じ、そのページに関係する全てのリソースを開放し
     ます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-concat">
   <refnamediv>
    <refname>pdf_concat</refname>
    <refpurpose>行列をCTMに追加</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_concat</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>a</parameter></paramdef>
      <paramdef>double <parameter>b</parameter></paramdef>
      <paramdef>double <parameter>c</parameter></paramdef>
      <paramdef>double <parameter>d</parameter></paramdef>
      <paramdef>double <parameter>e</parameter></paramdef>
      <paramdef>double <parameter>f</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     行列をCTMに追加します。
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.pdf-continue-text">
   <refnamediv>
    <refname>pdf_continue_text</refname>
    <refpurpose>次の行にテキストを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_continue_text</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     次の行にtextを出力します。行間の空白は、パラメータ
     <parameter>leading</parameter> で定義されます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-curveto">
   <refnamediv>
    <refname>pdf_curveto</refname>
    <refpurpose>曲線を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_curveto</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x1</parameter></paramdef>
      <paramdef>double <parameter>y1</parameter></paramdef>
      <paramdef>double <parameter>x2</parameter></paramdef>
      <paramdef>double <parameter>y2</parameter></paramdef>
      <paramdef>double <parameter>x3</parameter></paramdef>
      <paramdef>double <parameter>y3</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     3つの制御点を使用して現在の点からベジエ曲線を描画します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-delete">
   <refnamediv>
    <refname>pdf_delete</refname>
    <refpurpose>PDFオブジェクトを削除</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_delete</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     PDFオブジェクトを削除し、内部リソースを全て開放します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-end-page">
   <refnamediv>
    <refname>pdf_end_page</refname>
    <refpurpose>ページを終了する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_end_page</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ページを終了します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-endpath">
   <refnamediv>
    <refname>pdf_endpath</refname>
    <refpurpose>古い関数: カレントのパスを終了する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_endpath</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     古い関数であるため、代わりにstroke、fill、clip関数を使用して下さ
     い。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-end-pattern">
   <refnamediv>
    <refname>pdf_end_pattern</refname>
    <refpurpose>パターンを終了する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_end_pattern</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     パターンの定義を終了します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-end-template">
   <refnamediv>
    <refname>pdf_end_template</refname>
    <refpurpose>テンプレートを終了する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_end_template</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     テンプレートの定義を終了します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-fill">
   <refnamediv>
    <refname>pdf_fill</refname>
    <refpurpose>カレントのパスを塗りつぶす</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_fill</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     パスの内部をカレントの塗りつぶし色で塗りつぶします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-fill-stroke">
   <refnamediv>
    <refname>pdf_fill_stroke</refname>
    <refpurpose>カレントのパスを塗りつぶし、パスの輪郭を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_fill_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのパスの内部をカレントの塗りつぶし色で塗りつぶし、カレン
     トのパスの輪郭を輪郭色で描画します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-findfont">
   <refnamediv>
    <refname>pdf_findfont</refname>
    <refpurpose>
     後で<function>pdf_setfont</function>で使用するフォントを準備する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_findfont</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>fontname</parameter></paramdef>
      <paramdef>string <parameter>encoding^</parameter></paramdef>
      <paramdef>int <parameter>embed</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     この後、<function>pdf_setfont</function>で使用するフォントを準備
     します。このフォントのメトリックがロードされ、embedがゼロでない場
     合、フォントファイルがチェックされますが、ロードはまだ行われませ
     ん。encodingは、"builtin", "macroman", "winansi", "host" またはユー
     ザが定義したエンコーディング名またはCMapの名前のどれかとなります。
    </para>
    <para>
     <function>pdf_findfont</function> はフォントのハンドルまたはエラー
     の場合に&false;を返します。
    </para>
    <para>
     <example>
      <title><function>pdf_findfont</function> の例</title>
      <programlisting role="php">
&lt;php

$font = pdf_findfont($pdf, "Times New Roman", "winansi", 1);
if ($font) {
    pdf_setfont($pdf, $font, 10);
}

?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-buffer">
   <refnamediv>
    <refname>pdf_get_buffer</refname>
    <refpurpose>
     生成されたPDFデータを含むバッファを取得する
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>pdf_get_buffer</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     PDF出力バッファの内容を取得します。この結果は、この他のPDFlib関数
     をコールする前にクライアントで使用する必要があります。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-font">
   <refnamediv>
    <refname>pdf_get_font</refname>
    <refpurpose>古い関数: フォント処理</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_get_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-fontname">
   <refnamediv>
    <refname>pdf_get_fontname</refname>
    <refpurpose>古い関数: フォント処理</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_get_parameter</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-fontsize">
   <refnamediv>
    <refname>pdf_get_fontsize</refname>
    <refpurpose>古い関数: フォント処理</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_get_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-image-height">
   <refnamediv>
    <refname>pdf_get_image_height</refname>
    <refpurpose>古い関数: イメージの高さを返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>pdf_get_image_height</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>image</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>pdf_get_image_height</function>は、古い関数です。
     代わりに<function>pdf_get_value</function>を使用して下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-image-width">
   <refnamediv>
    <refname>pdf_get_image_width</refname>
    <refpurpose>古い関数: イメージの幅を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>pdf_get_image_width</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>image</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>pdf_get_image_width</function>は古い関数です。代わりに
     <function>pdf_get_value</function>を使用して下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-parameter">
   <refnamediv>
    <refname>pdf_get_parameter</refname>
    <refpurpose>パラメータを得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>pdf_get_parameter</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>double 
       <parameter><optional>modifier</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     いくつかのPDFlibパラメータの内容を文字列として取得します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-pdi-parameter">
   <refnamediv>
    <refname>pdf_get_pdi_parameter</refname>
    <refpurpose>PDF文字列パラメータを得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>pdf_get_pdi_parameter</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>doc</parameter></paramdef>
      <paramdef>int <parameter>page</parameter></paramdef>
      <paramdef>int <parameter>index</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     文字列型のPDIドキュメントパラメータの内容を取得します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-pdi-value">
   <refnamediv>
    <refname>pdf_get_pdi_value</refname>
    <refpurpose>数値型のPDIパラメータを取得する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>pdf_get_pdi_value</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>doc</parameter></paramdef>
      <paramdef>int <parameter>page</parameter></paramdef>
      <paramdef>int <parameter>index</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     数値型を有するPDIドキュメントパラメータの内容を取得します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-get-value">
   <refnamediv>
    <refname>pdf_get_value</refname>
    <refpurpose>数値を得る</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>double <function>pdf_get_value</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>double 
       <parameter>
	<replaceable><optional>modifier</optional></replaceable>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     いくつかのPDFlibパラメータをfloat型で取得します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-initgraphics">
   <refnamediv>
    <refname>pdf_initgraphics</refname>
    <refpurpose>描画状態をリセットする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_initgraphics</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     暗黙的な色および描画状態パラメータを全てデフォルト値にリセットし
     ます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-lineto">
   <refnamediv>
    <refname>pdf_lineto</refname>
    <refpurpose>線を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_lineto</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの点から座標 (<parameter>x</parameter>,
     <parameter>y</parameter>)まで線を描画します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-makespotcolor">
   <refnamediv>
    <refname>pdf_makespotcolor</refname>
    <refpurpose>スポット色を作成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_makespotcolor</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>spotname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの色から名前付きのスポット色を作成します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-moveto">
   <refnamediv>
    <refname>pdf_moveto</refname>
    <refpurpose>現在の位置を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_moveto</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの点を設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-new">
   <refnamediv>
    <refname>pdf_new</refname>
    <refpurpose>新規PDFオブジェクトを作成する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_new</function></funcdef>
      <paramdef><parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     デフォルトのエラー処理およびメモリ管理機構を使用して、新規にPDFオ
     ブジェクトを作成します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open">
   <refnamediv>
    <refname>pdf_open</refname>
    <refpurpose>古い関数: 新規の pdfオブジェクトをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_open</function></funcdef>
      <paramdef>int <parameter>file</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>pdf_open</function>関数は、古い関数であるため、
     <function>pdf_new</function> と
     <function>pdf_open_file</function>を代わりに使用して下さい。
    </para>
    <para>
     <function>pdf_new</function>,
     <function>pdf_open_file</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.pdf-open-ccitt">
   <refnamediv>
    <refname>pdf_open_CCITT</refname>
    <refpurpose>
     生のCCITTデータから新規イメージファイルをオープンする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_open_ccitt</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>int <parameter>width</parameter></paramdef>
      <paramdef>int <parameter>height</parameter></paramdef>
      <paramdef>int <parameter>BitReverse</parameter></paramdef>
      <paramdef>int <parameter>k</parameter></paramdef>
      <paramdef>int <parameter>Blackls1</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     生のCCITTイメージをオープンします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-file">
   <refnamediv>
    <refname>pdf_open_file</refname>
    <refpurpose>新規PDFオブジェクトをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_open_file</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>filename</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     新規のPDFファイルを指定したファイル名で作成します。
     <parameter>filename</parameter> が空の場合、PDFドキュメントはファ
     イルではなくメモリ上に作成されます。結果は、
     <function>pdf_get_buffer</function>関数によりクライアント側で取得
     可能です。
    </para>
    <para>
     PDFドキュメントをメモリ内に作成し、正しく出力する方法を示す例を以
     下に示します。
     <example>
      <title>PDFドキュメントをメモリ内に作成する</title>
      <programlisting role="php">
&lt;?php

$pdf = pdf_new();

pdf_open_file($pdf);
pdf_begin_page($pdf, 595, 842);
pdf_set_font($pdf, "Times-Roman", 30, "host");
pdf_set_value($pdf, "textrendering", 1);
pdf_show_xy($pdf, "A PDF document created in memory!", 50, 750);
pdf_end_page($pdf);
pdf_close($pdf);

$data = pdf_get_buffer($pdf);

header("Content-type: application/pdf");
header("Content-disposition: inline; filename=test.pdf");
header("Content-length: " . strlen($data));

echo $data;

?>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-gif">
   <refnamediv>
    <refname>pdf_open_gif</refname>
    <refpurpose>古い関数: GIFイメージをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_open_image</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-image">
   <refnamediv>
    <refname>pdf_open_image</refname>
    <refpurpose>イメージ読み込み関数</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_open_image</function></funcdef>
      <paramdef>int <parameter>PDF-document</parameter></paramdef>
      <paramdef>string <parameter>imagetype</parameter></paramdef>
      <paramdef>string <parameter>source</parameter></paramdef>
      <paramdef>string <parameter>data</parameter></paramdef>
      <paramdef>long <parameter>length</parameter></paramdef>
      <paramdef>int <parameter>width</parameter></paramdef>
      <paramdef>int <parameter>height</parameter></paramdef>
      <paramdef>int <parameter>components</parameter></paramdef>
      <paramdef>int <parameter>bpc</parameter></paramdef>
      <paramdef>string <parameter>params</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     複数のデータソースからのイメージデータを使用します。サポートさ
     れているイメージ型は、"jpeg", "ccitt", "raw" です。サポートされて
     いるソースは、"memory", "fileref", "url" です。len は type="raw"
     の場合にのみ使用可能です。params は type="ccitt" の場合にのみ使用
     可能です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-image-file">
   <refnamediv>
    <refname>pdf_open_image_file</refname>
    <refpurpose>ファイルからイメージを読み込む</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
    <funcdef>int <function>pdf_open_image_file</function></funcdef>
      <paramdef>int <parameter>PDF-document</parameter></paramdef>
      <paramdef>string <parameter>imagetype</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>stringparam</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>intparam</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     イメージファイルをオープンします。サポートされている型は、
     "jpeg", "tiff", "gif", "png"です。
     <parameter>stringparam</parameter> は、"", "mask", "masked",
     "page"のどれかです。<parameter>intparam</parameter> は、0、適用し
     たマスクまたはページのイメージIDのどれかです。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-jpeg">
   <refnamediv>
    <refname>pdf_open_jpeg</refname>
    <refpurpose>古い関数: JPEGイメージをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_open_image</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-pdi">
   <refnamediv>
    <refname>pdf_open_pdi</refname>
    <refpurpose>PDFファイルをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_open_pdi</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>string <parameter>stringparam</parameter></paramdef>
      <paramdef>int <parameter>intparam</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     後で使用するために既存のPDFドキュメントをオープンします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-pdi-page">
    <refnamediv>
    <refname>pdf_open_pdi_page</refname>
    <refpurpose>ページを準備する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_open_pd_pagei</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>dochandle</parameter></paramdef>
      <paramdef>int <parameter>pagenumber</parameter></paramdef>
      <paramdef>string <parameter>pagelabel</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>pdf_place_image</function>で後で使用するようにページを
     準備します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-open-png">
   <refnamediv>
    <refname>pdf_open_png</refname>
    <refpurpose>
     古い関数: PNGイメージをオープンする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_open_image</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-open-tiff">
   <refnamediv>
    <refname>pdf_open_tiff</refname>
    <refpurpose>古い関数: TIFFイメージをオープンする</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_open_tiff</function></funcdef>
      <paramdef>int <parameter>PDF-document</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_open_image</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-place-image">
   <refnamediv>
    <refname>pdf_place_image</refname>
    <refpurpose>イメージをページ上に置く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_place_image</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>image</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
      <paramdef>double <parameter>scale</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     イメージをそのイメージの左下隅を(<parameter>x</parameter>,
     <parameter>y</parameter>) に合わせるように置き、サイズを変更しま
     す。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-place-pdi-page">
   <refnamediv>
    <refname>pdf_place_pdi_page</refname>
    <refpurpose>ページにイメージを置く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_place_pdi_page</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>page</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
      <paramdef>double <parameter>sx</parameter></paramdef>
      <paramdef>double <parameter>sy</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     あるページの左下PDFを(<parameter>x</parameter>,
     <parameter>y</parameter>) とする位置にイメージを配置し、定数倍
     します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-rect">
   <refnamediv>
    <refname>pdf_rect</refname>
    <refpurpose>長方形を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_rect</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
      <paramdef>double <parameter>height</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (<parameter>x</parameter>, <parameter>y</parameter>) を左下隅とし、
     幅を <parameter>width</parameter>、高さを
     <parameter>height</parameter>とする長方形を描画します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-restore">
   <refnamediv>
    <refname>pdf_restore</refname>
    <refpurpose>以前保存された環境を復元する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_restore</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     直近に保存された描画状態を復元します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-rotate">
   <refnamediv>
    <refname>pdf_rotate</refname>
    <refpurpose>回転を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_rotate</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>phi</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     座表系をphi度回転します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-save">
   <refnamediv>
    <refname>pdf_save</refname>
    <refpurpose>現在の環境を保存する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_save</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの描画状態を保存します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-scale">
   <refnamediv>
    <refname>pdf_scale</refname>
    <refpurpose>スケールを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_scale</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x-scale</parameter></paramdef>
      <paramdef>double <parameter>y-scale</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     座表系のスケールを設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setcolor">
   <refnamediv>
    <refname>pdf_setcolor</refname>
    <refpurpose>塗りつぶし色および輪郭色をCMYKで設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setcolor</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>type</parameter></paramdef>
      <paramdef>string <parameter>colorspace</parameter></paramdef>
      <paramdef>double <parameter>c1</parameter></paramdef>
      <paramdef>double 
       <parameter><optional>c2</optional></parameter>
      </paramdef>
      <paramdef>double 
       <parameter><optional>c3</optional></parameter>
      </paramdef>
      <paramdef>double 
       <parameter><optional>c4</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのカラースペースと色を設定します。パラメータ
     <parameter>type</parameter>は、"fill", "stroke", "both" のどれか
     とすることができ、それぞれ、塗りつぶし、輪郭描画、輪郭描画および
     塗りつぶしを表します。パラメータ
     <parameter>colorspace</parameter>は、
      <literal>gray</literal>, <literal>rgb</literal>,
      <literal>cmyk</literal>, <literal>spot</literal>,
      <literal>pattern</literal>をすることができます。パラメータ
      <parameter>c1</parameter>, <parameter>c2</parameter>,
      <parameter>c3</parameter>, <parameter>c4</parameter>は、
     <parameter>colorspace</parameter>で指定された色空間の色要素を表し
     ます。<literal>gray</literal>の場合には、
     <parameter>c1</parameter>のみが使用されます。
     <literal>rgb</literal>の場合、パラメータ
      <parameter>c1</parameter>, <parameter>c2</parameter>, 
      <parameter>c3</parameter>によりそれぞれ赤、緑、青の値を指定しま
     す。<literal>cmyk</literal> の場合、パラメータ
     <parameter>c1</parameter>, <parameter>c2</parameter>,
     <parameter>c3</parameter>, <parameter>c4</parameter> によりそれぞ
     れシアン、マゼンダ、黄色、黒の値を指定します。
     <literal>spot</literal>の場合、<parameter>c1</parameter> に
     <function>pdf_makespotcolor</function>により返されるスポット色ハ
     ンドルを指定し、<parameter>c2</parameter>には明度を0から1の範囲の
     値で指定します。<literal>pattern</literal>の場合、
     <parameter>c1</parameter> に
     <function>pdf_begin_pattern</function>により返されるパターンハン
     ドルを指定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setdash">
   <refnamediv>
    <refname>pdf_setdash</refname>
    <refpurpose>破線パターンを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setdash</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>b</parameter></paramdef>
      <paramdef>double <parameter>w</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントのダッシュパターンを黒<parameter>b</parameter>および白
     <parameter>w</parameter>単位で設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setflat">
   <refnamediv>
    <refname>pdf_setflat</refname>
    <refpurpose>平面度を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setflat</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>flatness</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     平面度を 0 から 100 の間の値に設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setfont">
   <refnamediv>
    <refname>pdf_setfont</refname>
    <refpurpose>カレントのフォントを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setfont</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>double <parameter>size</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>pdf_findfont</function>から返された
     <parameter>font</parameter>ハンドルを使用して指定したサイズでカレ
     ントのフォントを設定します。
    </para>
   </refsect1>
  </refentry>

  
  <refentry id="function.pdf-setgray">
   <refnamediv>
    <refname>pdf_setgray</refname>
    <refpurpose>描画および塗りつぶし色をグレー値に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setgray</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>gray</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの塗りつぶしおよび輪郭描画色を設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setgray-fill">
   <refnamediv>
    <refname>pdf_setgray_fill</refname>
    <refpurpose>塗りつぶし色をグレー値に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setgray_fill</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>gray</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの塗りつぶし色を0から1までのグレー値に設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-setgray-stroke">
   <refnamediv>
    <refname>pdf_setgray_stroke</refname>
    <refpurpose>描画色をグレー値に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setgray_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>gray</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの輪郭描画色を0から1までのグレー値に設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setlinecap">
   <refnamediv>
    <refname>pdf_setlinecap</refname>
    <refpurpose>linecap パラメータを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setlinecap</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>linecap</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>linecap</parameter>パラメータを0から2までの値に設定し
     ます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setlinejoin">
   <refnamediv>
    <refname>pdf_setlinejoin</refname>
    <refpurpose>linejoinパラメータを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setlinejoin</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>long <parameter>linejoin</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     line joinパラメータを0から2までの値に設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setlinewidth">
   <refnamediv>
    <refname>pdf_setlinewidth</refname>
    <refpurpose>線幅を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setlinewidth</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの線幅をwidthに設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setmiterlimit">
   <refnamediv>
    <refname>pdf_setmiterlimit</refname>
    <refpurpose>miter limitを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setmiterlimit</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>miter</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     miter limitを1以上の値に設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setpolydash">
   <refnamediv>
    <refname>pdf_setpolydash</refname>
    <refpurpose>複雑な破線パターンを設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setpolydash</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double *<parameter>dasharray</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     配列で定義されるより複雑な破線のパターンを設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-setrgbcolor">
   <refnamediv>
    <refname>pdf_setrgbcolor</refname>
    <refpurpose>描画色および塗りつぶし色をRGBカラー値で設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setrgbcolor</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>red value</parameter></paramdef>
      <paramdef>double <parameter>green value</parameter></paramdef>
      <paramdef>double <parameter>blue value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの塗りつぶし色と輪郭色を指定したRGB値に設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-setrgbcolor-fill">
   <refnamediv>
    <refname>pdf_setrgbcolor_fill</refname>
    <refpurpose>塗りつぶし色をRGBカラー値に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setrgbcolor_fill</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>red value</parameter></paramdef>
      <paramdef>double <parameter>green value</parameter></paramdef>
      <paramdef>double <parameter>blue value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの塗りつぶし色を指定したRGB値に設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-setrgbcolor-stroke">
   <refnamediv>
    <refname>pdf_setrgbcolor_stroke</refname>
    <refpurpose>描画色をRGBカラー値に設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_setrgbcolor_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>red value</parameter></paramdef>
      <paramdef>double <parameter>green value</parameter></paramdef>
      <paramdef>double <parameter>blue value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの輪郭色を指定したRGB値に設定します。
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.pdf-set-border-color">
   <refnamediv>
    <refname>pdf_set_border_color</refname>
    <refpurpose>リンクや注記の周りの境界色を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_set_border_color</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>red</parameter></paramdef>
      <paramdef>double <parameter>green</parameter></paramdef>
      <paramdef>double <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     全ての種類の注記の境界色を設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-border-dash">
   <refnamediv>
    <refname>pdf_set_border_dash</refname>
    <refpurpose>リンクおよび注記の周りの境界の破線形式を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_set_border_dash</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>black</parameter></paramdef>
      <paramdef>double <parameter>white</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     全ての種類の注記の境界の破線形式を設定します。
     <function>pdf_setdash</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-border-style">
   <refnamediv>
    <refname>pdf_set_border_style</refname>
    <refpurpose>
     リンクおよび注記の周りの境界の形式を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_set_border_style</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>style</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     全ての種類の注記の境界の形式を設定します。
     <parameter>style</parameter> は、"solid" または "dashed" です。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-char-spacing">
   <refnamediv>
    <refname>pdf_set_char_spacing</refname>
    <refpurpose>古い関数: 文字間隔を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_set_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-duration">
   <refnamediv>
    <refname>pdf_set_duration</refname>
    <refpurpose>古い関数: ページ間隔を設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_set_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-font">
   <refnamediv>
    <refname>pdf_set_font</refname>
    <refpurpose>古い関数: フォントの形式とサイズを選択</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。<function>pdf_findfont</function> と
     <function>pdf_setfont</function> を代わりに使用する必要があります。
    </para>
    <para>
     <function>pdf_findfont</function>,
     <function>pdf_setfont</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-horiz-scaling">
   <refnamediv>
    <refname>pdf_set_horiz_scaling</refname>
    <refpurpose>古い関数: テキストの横方向倍率を設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_set_horiz_scaling</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>scale</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_set_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-info">
   <refnamediv>
    <refname>pdf_set_info</refname>
    <refpurpose>ドキュメント情報のフィールドを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_set_info</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     ドキュメント情報フィールドkeyにvalueを設定します。
     <parameter>key</parameter> は、"Subject", "Title", "Creator",
      "Author", "Keywords", またはユーザが定義したキーのどれかです。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-leading">
   <refnamediv>
    <refname>pdf_set_leading</refname>
    <refpurpose>古い関数: テキストの行間を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_set_value</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-parameter">
   <refnamediv>
    <refname>pdf_set_parameter</refname>
    <refpurpose>パラメータを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_set_parameter</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     いくつかのPDFlibパラメータを文字列型で設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-text-pos">
   <refnamediv>
    <refname>pdf_set_text_pos</refname>
    <refpurpose>テキストの位置を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_set_text_pos</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     テキストの出力位置を設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-text-rendering">
   <refnamediv>
    <refname>pdf_set_text_rendering</refname>
    <refpurpose>古い関数: テキストの描画方法を設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_set_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-text-rise">
   <refnamediv>
    <refname>pdf_set_text_rise</refname>
    <refpurpose>古い関数: テキストの傾きを設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_set_value</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-transition">
   <refnamediv>
    <refname>pdf_set_text_matrix</refname>
    <refpurpose>古い関数: テキストのマトリックスを設定</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     <function>pdf_set_paramter</function>を参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-value">
   <refnamediv>
    <refname>pdf_set_value</refname>
    <refpurpose>数値を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_set_value</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>double <parameter>value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     PDFlibパラメータの値をfloat型で設定します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-set-word-spacing">
   <refnamediv>
    <refname>pdf_set_word_spacing</refname>
    <refpurpose>古い関数: 単語間の空白を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <para>
     古い関数です。
    </para>
    <para>
     <function>pdf_set_value</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-show">
   <refnamediv>
    <refname>pdf_show</refname>
    <refpurpose>カレントの位置にテキストを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_show</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの位置にカレントのフォントとサイズでテキストを出力します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-show-boxed">
   <refnamediv>
    <refname>pdf_show_boxed</refname>
    <refpurpose>ボックスにテキストを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_show_boxed</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>double <parameter>left</parameter></paramdef>
      <paramdef>double <parameter>top</parameter></paramdef>
      <paramdef>double <parameter>width</parameter></paramdef>
      <paramdef>double <parameter>height</parameter></paramdef>
      <paramdef>string <parameter>hmode</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>feature</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     指定したフォーマットモードに基づき指定したテキストボックスにカレ
     ントのフォントとサイズでテキストを出力します。フォーマットモード
     は、"left", "right", "center", "justify", "fulljustify"のどれかと
     する必要があります。width および height が 0の場合、リクエストモー
     ドの左上の点に最初の行のみが置かれます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-show-xy">
   <refnamediv>
    <refname>pdf_show_xy</refname>
    <refpurpose>指定した位置にテキストを出力する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_show_xy</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>double <parameter>x</parameter></paramdef>
      <paramdef>double <parameter>y</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     (x, y)にカレントのフォントでテキストを出力します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-skew">
   <refnamediv>
    <refname>pdf_skew</refname>
    <refpurpose>座標系を歪ませる</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_skew</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>alpha</parameter></paramdef>
      <paramdef>double <parameter>beta</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     座標系をxおよびy方向にそれぞれalpha度、beta度歪ませます。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-stringwidth">
   <refnamediv>
    <refname>pdf_stringwidth</refname>
    <refpurpose>カレントフォントを用いた際のテキスト幅を返す</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>double <function>pdf_stringwidth</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>font</optional></parameter>
      </paramdef>
      <paramdef>double 
       <parameter><optional>size</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>pdf_setfont</function>で設定した直近のフォントを使用し
     て<parameter>text</parameter>の幅を返します。オプションのパラメー
     タ<parameter>font</parameter> および <parameter>size</parameter>
     が指定された場合、幅は指定したフォントと幅に基づき計算されます。
     <parameter>font</parameter>は、<function>pdf_findfont</function>
     により返されたフォントハンドルである必要があることに注意して下さ
     い。
    </para>
    <note>
     <para>
      パラメータ<parameter>font</parameter> と
      <parameter>size</parameter>は同時に指定する必要があります。
     </para>
    </note>
    <para>
     <function>pdf_setfont</function> および
     <function>pdf_findfont</function> も参照下さい。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-stroke">
   <refnamediv>
    <refname>pdf_stroke</refname>
    <refpurpose>パスに沿って線を描く</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_stroke</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     カレントの色および線幅で、パスの輪郭を描画し、パスをクリアします。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-translate">
   <refnamediv>
    <refname>pdf_translate</refname>
    <refpurpose>座標系の原点を設定する</refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>pdf_translate</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>double <parameter>tx</parameter></paramdef>
      <paramdef>double <parameter>ty</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     座標系の原点を変更します。
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pdf-open-memory-image">
   <refnamediv>
    <refname>pdf_open_memory_image</refname>
    <refpurpose>
     PHPのイメージ関数で作成されたイメージをオープンする
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>説明</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pdf_open_memory_image</function></funcdef>
      <paramdef>int <parameter>pdf object</parameter></paramdef>
      <paramdef>int <parameter>image</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     関数<function>pdf_open_memory_image</function>は、PHPのイメージ関
     数で作成されたイメージを入力とし、PDFオブジェクトで利用可能としま
     す。関数は、PDFのイメージIDを返します。
     <example>
      <title>メモリイメージの読み込み</title>
      <programlisting role="php">
&lt;?php
$im = ImageCreate(100, 100);
$col = ImageColorAllocate($im, 80, 45, 190);
ImageFill($im, 10, 10, $col);
$pim = pdf_open_memory_image($pdf, $im);
ImageDestroy($im);
pdf_place_image($pdf, $pim, 100, 100, 1);
pdf_close_image($pdf, $pim);
?>
      </programlisting>
     </example>
    </para>
    <para>
     <function>pdf_close_image</function>,
     <function>pdf_place_image</function>も参照下さい。
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
