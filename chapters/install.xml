 <chapter id="installation">
  <title>インストール</title>

  <sect1 id="install.downloading">
   <title>最新版のダウンロード</title>
   <simpara>
    ソースコードおよび(Windowsを含む)いくつかのプラットフォーム用のバ
    イナリ配布ファイルは、<literal><ulink
    url="&url.php;">&url.php;</ulink></literal>にあります。
   </simpara>
  </sect1>

  <sect1 id="install.unix">
   <title>UNIX システムにおけるインストール</title>
   <para>
    本節においては、UNIXシステム上でのPHP のインストールと設定に関する
    手引きを示します。読み進む前に使用するプラットフォームまたはWebサー
    バについて必要な部分を調べるようにして下さい。
   </para>
   <para>
    事前に必要な知識とソフトウエアを以下に示します。
    <itemizedlist>
     <listitem>
      <simpara>
       UNIX に関する基本的な知識("make" およびC コンパイラを使える程度)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ANSI C コンパイラ(コンパイルする場合)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       flex(コンパイル用)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bison (コンパイル用)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Web サーバ
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       (gd、pdfライブラリ等のような)モジュール用のコンポーネント
      </simpara>
     </listitem>
    </itemizedlist>
   </para>

   <para>
    UNIXプラットフォームで様々なパッケージを使用してPHPのコンパイルお
    よび設定を行う方法は複数あります。ユーザ自身によるコンパイルおよび
    設定の処理はより複雑です。このため、この文書ではこれらの手順につい
    てより詳細に説明します。
   </para>
   
   <para>
    PHPの初期設定および設定処理は、<filename>configure</filename>スク
    リプトでコマンドラインのオプションを使用することにより制御されます。
    このページは、最も一般的なオプションの使用法を概説するものですが、
    この他にも多くの設定方法があります。詳細については、<link
    linkend="install.configure">configureオプションの完全なリスト
    </link> を参照下さい。PHPをインストールする方法は複数あります。
    <itemizedlist>
     <listitem>
      <simpara>
       <link linkend="install.unix.apache-module">Apacheモジュール</link>
       として
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <link linkend="install.fhttpd">fhttpdモジュール</link>とし
       て
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <link
       linkend="install.otherhttpd">AOLServer, NSAPI,
       phttpd, Pi3Web, Roxen, thttpd, Zeus</link>として使用する
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <link linkend="install.commandline">CGI実行ファイル</link>
       として
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   
   <sect2 id="install.unix.apache-module">
    <title>Apacheモジュール クイックリファレンス</title>

    <para>
     PHPは、Apacheモジュールとしてコンパイルする方法には異なった複数の
     方法があります。まず始めに簡単なインストール手順を示します。
    </para>

    <example id="install.unix.apache-module.quick">
     <title>
      PHP 4 の簡単なインストール手順 (Apache モジュール版)
     </title>
     <programlisting>
1.  gunzip apache_1.3.x.tar.gz
2.  tar xvf apache_1.3.x.tar
3.  gunzip php-x.x.x.tar.gz
4.  tar xvf php-x.x.x.tar
5.  cd apache_1.3.x
6.  ./configure --prefix=/www
7.  cd ../php-x.x.x
8.  ./configure --with-mysql --with-apache=../apache_1.3.x --enable-track-vars
9.  make
10. make install
11. cd ../apache_1.3.x
12. ./configure --activate-module=src/modules/php4/libphp4.a
13. make
14. make install
15. cd ../php-x.x.x
16. cp php.ini-dist /usr/local/lib/php.ini
17. httpd.conf または srm.conf ファイルを編集し、以下を追加: 
      AddType application/x-httpd-php .php

18. 通常の手順でApacheサーバを再起動して下さい。(再起動するためにHUPま
    たはUSR1シグナルを使用するのではなく、サーバを停止し、再起動する必
    要があります。)
     </programlisting>
    </example>
   </sect2>
    
   <sect2 id="install.building">
    <title>構築</title>
    <simpara>
     PHPを設定した後では、CGI実行バイナリまたはPHPライブラリを構築する
     準備ができています。コマンド <command>make</command> を実行する場
     合には注意を要します。このコマンドの実行が失敗し、その原因が不明
     な場合には、<link linkend="install-problems">問題に関するセクショ
     ン</link>を参照下さい。
    </simpara>
   </sect2>
  </sect1>

  <sect1 id="install.linux">
   <title>Linux インストール</title>
   <para>
    本節では、PHPをLinuxにインストールする場合の注意とコツについて説明
    します。
   </para>
   <sect2 id="install.linux.packages">
    <title>パッケージの使用法</title>
    <simpara>
     多くのLinuxディストリビューションではrpmファイルのようなパッケー
     ジインストール機能がサポートされています。これにより、標準設定の
     構築はかなり簡単になりますが、(セキュアサーバや標準以外のデータベー
     スドライバのような)標準以外の機能を必要とする場合には、PHPやWebサー
     バを再構築する必要があります。ソフトウエアの構築およびコンパイル
     に不慣れな場合には、必要とする機能を有するPHPが既にパッケージ化さ
     れていないかどうかを調べてみる価値はあります。
    </simpara>
   </sect2>
  </sect1>

  <sect1 id="install.hpux">
   <title>HP-UX インストール</title>
   <para>
    本節では、HP-UXへのインストールに固有の注意とコツについて説明しま
    す。
   </para>
   <example id="install.hpux.example">
    <title>
     HP-UX 10 へのインストール手順
    </title>
    <programlisting>
From: paul_mckay@clearwater-it.co.uk
04-Jan-2001 09:49
(この手順は、php v4.0.4 および apache v1.3.9 用です) 

PHPとApacheをHP-UX 10.20にインストールしたい?

1. gzipが必要です。
     http://hpux.connect.org.uk/ftp/hpux/Gnu/gzip-1.2.4a/gzip-1.2.4a-sd-10.20.depot.Z
     からバイナリファイルをダウンロード、ファイルを解凍し、swinstallを使用
     してインストールして下さい。


2. gccが必要です。
     http://gatekeep.cs.utah.edu/ftp/hpux/Gnu/gcc-2.95.2/gcc-2.95.2-sd-10.20.depot.gzからバイナリをダウンロードし、このファイルをgunzipにより解凍、swinstallによりインストールして下さい。


3. gnu binutilsが必要です。
     http://hpux.connect.org.uk/ftp/hpux/Gnu/binutils-2.9.1/binutils-2.9.1-sd-10.20.depot.gz
     からバイナリ配布ファイルをダウンロード可能で、gunzipにより解凍し、
     swinstallによりインストールして下さい。


4. bisonが必要です。バイナリ配布ファイルを
     http://hpux.connect.org.uk/ftp/hpux/Gnu/bison-1.28/bison-1.28-sd-10.20.depot.gz 
     からダウンロード可能で、インストールして下さい。

5. flexが必要です。http://www.gnu.org のミラーサイトのどれかからソース
   コードをダウンロードする必要があります。ftpサイトのnon-gnuディレク
   トリにあります。このファイルをダウンロードし、gunzipの後、tar -xvf
   を実行して下さい。新規に作成されたflexディレクトリに移動し、
     ./configure を実行し、makeを実行します。この後、make installを実
   行します。

     ここでエラーが発生した場合は、おそらくgcc等がPATHにはないためです
     ので、PATHにこれらを追加して下さい。

ここで、難しい手順を行います。

6.PHPとApacheのソースをダウンロードして下さい。

7.このファイルにgunzipとtar -xvfを実行して下さい。

コンパイルが通るようにいくつかのファイルを修正する必要があります。

8. まず、hpuxシステムの場合は、設定が認識できないようなので修正を要し
     ます。より良い方法があるかもしれませんが、手っ取り早く簡単な方法は、
     configureスクリプトの47286行目に次の行を追加することです。
    lt_target=hpux10.20 

9. 次の、apache GuessOS ファイルも修正を要します。
apache_1.3.9/src/helpers の89行目を
    "echo "hp${HPUXMACH}-hpux${HPUXVER}"; exit 0" 
から
    "echo "hp${HPUXMACH}-hp-hpux${HPUXVER}"; exit 0" 
に変更して下さい。
    
10. HP-UXではPHPを共有オブジェクトとしてインストールすることはできませ
     ん。このため、Apacheページの手順に従って静的にコンパイルする必要
     があります。

11. PHP および apache のコンパイルに成功しても、apache は起動しません。
     Apache用に wwwまたはapacheのような新規ユーザを作成する必要があり
     ます。Apacheのconf/httpd.confの252行目と253行目を
    User nobody 
    Group nogroup 
から例えば
    User www 
    Group sys 
に変更して下さい。

     これは、hp-uxではApacheをnobodyとして実行できないためです。Apache
     とPHPはこれにより動作するようになります。


この手引が手助けになることを願いつつ、
Paul Mckay
  </programlisting>
 </example>

</sect1>

<sect1 id="install.solaris">
<title>Solaris へのインストール</title>
   <para>
    本節は、SolaricにPHPをインストールする際の注意とコツを説明します。
   </para>
   <sect2 id="install.solaris.required">
    <title>必要なソフトウエア</title>
    <para>
     Solaris インストールは、Cコンパイラおよび関連するツールを欠いてい
     ることが多いです。必要なソフトウエアは次のようになります。
     <itemizedlist>
      <listitem>
       <simpara>
	gcc (推奨されますが、他のC コンパイラも動作するかもしれません)
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	make
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	flex
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	bison
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	m4
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	autoconf
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        automake
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        perl
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        gzip
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        tar
       </simpara>
      </listitem>
     </itemizedlist>
     加えて、(OracleまたはMySQLのような)使用する設定に応じた追加ソフト
     ウエアをインストール(おそらくはコンパイルも)する必要があります。
    </para>     
   </sect2>

   <sect2 id="install.solaris.packages">
    <title>パッケージの使用</title>
    <simpara>
     必要なコンポーネントのほとんどをインストールする際にpkgaddにより
     solarisインストール処理を簡単に行うことが可能です。
    </simpara>
   </sect2>
  </sect1>

  <sect1 id="install.macosx">
   <title>Mac OS X へのインストール</title>
   <para>
    本節は、PHPをMac OS Xをインストールする際の注意事項とコツを説明し
    ます。
   </para>
   <sect2 id="install.macosx.packages">
    <title>パッケージの使用法</title>
    <simpara>
     There are a few pre-packaged and pre-compiled versions of PHP for
     Mac OS X. This can greatly assist in building a standard
     configuration, but if you need to have a different set of features
     (such as a secure server, or a different database driver), you may
     need to build php and/or your webserver. If you are unfamiliar
     with building and compiling your own software, it's worth
     investigating whether or not somebody has already built a packaged
     version of PHP with the features you need.
     <ulink url="&url.lightyear;">Lightyear Design</ulink> offers a
     pre-built version of PHP for OS X, as does
     <ulink url="&url.tenon;">Tenon Intersystems</ulink>
    </simpara>
   </sect2>
   <sect2 id="install.macosx.compile">
    <title>OS X サーバでのコンパイル</title>
    <simpara>
     There are two slightly different versions of Mac OS X, client and
     server. The following is for OS X server.
    </simpara>
    <example id="install.macosx.compile.example">
     <title>
      Mac OS X サーバでのインストール
     </title>
     <programlisting>
1. Get the latest distributions of Apache and PHP
2. Untar them, and run the configure program on Apache like so.
    ./configure --exec-prefix=/usr \ 
    --localstatedir=/var \ 
    --mandir=/usr/share/man \ 
    --libexecdir=/System/Library/Apache/Modules \ 
    --iconsdir=/System/Library/Apache/Icons \ 
    --includedir=/System/Library/Frameworks/Apache.framework/Versions/1.3/Headers \ 
    --enable-shared=max \ 
    --enable-module=most \ 
    --target=apache 

4. You may also want to add this line: 
    setenv OPTIM=-O2 
    If you want the compiler to do some optimization. 
    
5. Next, go to the php4 source directory and configure it. 
    ./configure --prefix=/usr \ 
    --sysconfdir=/etc \ 
    --localstatedir=/var \ 
    --mandir=/usr/share/man \ 
    --with-xml \ 
    --with-apache=/src/apache_1.3.12 

    If you have any other addiitons (MySQL, GD, etc.), be sure to add
    them here. For the --with-apache string, put in the path to your 
    apache source directory, for example "/src/apache_1.3.12". 
6. make
7. make install    
    This will add a directory to your Apache source directory under
    src/modules/php4.
    
8. Now, reconfigure Apache to build in PHP4.
    ./configure --exec-prefix=/usr \ 
    --localstatedir=/var \ 
    --mandir=/usr/share/man \ 
    --libexecdir=/System/Library/Apache/Modules \ 
    --iconsdir=/System/Library/Apache/Icons \ 
    --includedir=/System/Library/Frameworks/Apache.framework/Versions/1.3/Headers \ 
    --enable-shared=max \ 
    --enable-module=most \ 
    --target=apache \ 
    --activate-module=src/modules/php4/libphp4.a 

    You may get a message telling you that libmodphp4.a is out of date.
    If so, go to the src/modules/php4 directory inside your apache
    source directory and run this command: 

    ranlib libmodphp4.a 

    Then go back to the root of the apache source directory and run the
    above configure command again. That'll bring the link table up to
    date. 

9. make
10. make install

11. copy and rename the php.ini-dist file to your "bin" directory from your
    php4 source directory:
    cp php.ini-dist /usr/local/bin/php.ini 

    or (if your don't have a local directory) 

    cp php.ini-dist /usr/bin/php.ini 
      </programlisting>
     </example>
     
    <simpara>
     Other examples for
     <ulink url="&url.stepwise.macosx-client;">Mac OS X client</ulink>
     and
     <ulink url="&url.stepwise.macosx-client;">Mac OS X server</ulink>
     are available at <ulink url="&url.stepwise;">Stepwise</ulink>.
    </simpara>
   </sect2>
  </sect1>

  <sect1 id="install.configure">
   <title>設定オプションの完全なリスト</title>
   <note>
    <para>
     これらのオプションは、コンパイル時にのみ使用可能です。PHPの実行設
     定を変更したい場合には、<link
      linkend="configuration">設定</link>を参照下さい。
    </para>
   </note>

   <para>
    以下にPHP 3およびPHP 4の<filename>configure</filename>スクリプトで
    サポートされるUNIXライクな環境でコンパイルする際に使用される
    オプションの完全なリストを示します。下記のようにいくつかのオプショ
    ンはPHP 3で、いくつかはPHP 4で、いくつかは両方のバージョンで使用可
    能です。PHP 3とPHP 4の間で多くのオプションの名前が変更されています
    が、これらの動作は同じです。これらのエントリは、相互に参照されてい
    るので、PHP 3時代の設定オプションの動作に問題を生じた場合には、名
    前が変更されていないかをここで確認して下さい。
   </para>

   <itemizedlist>
    <listitem>
     <para>
      <link linkend="install.configure.databases">データベース</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.ecommerce">Eコマース</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.graphics">グラフィックス</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.misc">その他</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.networking">ネットワーク</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.php">PHPの動作</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.servers">サーバー</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.text">テキストと言語</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.xml">XML</link>
     </para>
    </listitem>
   </itemizedlist>

   <sect2 id="install.configure.databases">
    <title>データベース</title>

    <variablelist>
     <varlistentry id="install.configure.with-adabas">
      <term>
       <parameter>--with-adabas[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Adabas D サポートを有効にします。DIR は、Adabas
        ベースインストールディレクトリで、デフォルトは/usr/localです。
       </para>
       <para>
        <ulink url="&url.adabas;">Adabas ホームページ</ulink>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-dba">
      <term>
       <parameter>--enable-dba=shared</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 では利用できないオプション
       </para>
       <para>
        PHP 4: 共有モジュールとしてDBAを構築
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-dbase">
      <term>
       <parameter>--enable-dbase</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: 利用不可なオプション。代わりに <link
         linkend="install.configure.with-dbase">--with-dbase</link>
        を使用して下さい。
       </para>
       <para>
        PHP 4: 付属のdbaseライブラリを有効にします。外部ライブラリは不
        要です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-dbase">
      <term>
       <parameter>--with-dbase</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: 付属のdbaseライブラリを有効にします。外部ライブラリは不
        要です。
       </para>
       <para>
        PHP 4: 利用できないオプション。代わりに<link
         linkend="install.configure.enable-dbase">--enable-dbase</link>
        を使用して下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-db2">
      <term>
       <parameter>--with-db2[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Berkeley DB2 サポートを有効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-db3">
      <term>
       <parameter>--with-db3[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 では利用できないオプション
       </para>
       <para>
        PHP 4: Berkeley DB3 サポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-dbm">
      <term>
       <parameter>--with-dbm[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: DBM サポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-dbmaker">
      <term>
       <parameter>--with-dbmaker[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3では利用できないオプション
       </para>
       <para>
        PHP 4: DBMaker サポートを有効にします。DIR は、DBMaker ベース
        インストールディレクトリであり、デフォルトでは
        (/home/dbmaker/3.6のような)DBMakerの最新バージョンがインストー
        ルされたディレクトリです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-empress">
      <term>
       <parameter>--with-empress[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Empress サポートを有効にします。DIR は Empress
        のベースディレクトリであり、デフォルトでは$EMPRESSPATHです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-filepro">
      <term>
       <parameter>--enable-filepro</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: 利用できないオプション。代わりに<link
         linkend="install.configure.with-filepro">--with-filepro</link>
        を使用して下さい。
       </para>
       <para>
        PHP 4: 付属の読み込みのみのfileProサポートを有効にします。外部
        ライブラリは必要ありません。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-filepro">
      <term>
       <parameter>--with-filepro</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: 付属の読み込みのみのfileProサポートを有効にします。外部
        ライブラリは不要です。
       </para>
       <para>
        PHP 4: 利用できないオプション。代わりに <link
         linkend="install.configure.enable-filepro">--enable-filepro</link>
        を使用して下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gdbm">
      <term>
       <parameter>--with-gdbm[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: GDBMサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-hyperwave">
      <term>
       <parameter>--with-hyperwave</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Hyperwaveサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ibm-db2">
      <term>
       <parameter>--with-ibm-db2[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: IBM DB2サポートを有効にします。DIR は、DB2ベース
        インストールディレクトリであり、デフォルトは
        <filename>/home/db2inst1/sqllib</filename>です。
       </para>
       <para>
        <ulink url="&url.ibmdb2;">IBM DB2 ホームページ</ulink>を参照下
        さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-informix">
      <term>
       <parameter>--with-informix[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Informixサポートを有効にします。DIR は Informix
        ベースインストールディレクトリであり、デフォルト値はありません。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ingres">
      <term>
       <parameter>--with-ingres[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション。
       </para>
       <para>
        PHP 4: Ingres II サポートを有効にします。DIR はIngresベースディレク
        トリ(デフォルトは /II/ingres)です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-interbase">
      <term>
       <parameter>--with-interbase[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: InterBase サポートを有効にします。DIR は
        InterBase ベースインストールディレクトリであり、デフォルトは
        <filename>/usr/interbase</filename>です。
       </para>
       <simpara>
        <link linkend="ref.ibase">Interbase 関数</link>
       </simpara>
       <simpara>
        <ulink url="&url.ibase;">Interbase ホームページ</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ldap">
      <term>
       <parameter>--with-ldap[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: LDAP サポートを有効にします。DIR は LDAP ベースインストー
        ルディレクトリです。デフォルトは、<filename>/usr</filename>お
        よび <filename>/usr/local</filename>です。
       </para>
       <para>
        PHP 4: LDAPサポートを有効にします。DIR はLDAPベースインストー
        ルディレクトリです。
       </para>
       <simpara>
        このオプションは、<acronym>LDAP</acronym> (Lightweight Directory Access
        Protocol サポート)を有効にします。パラメータは、LDAP ベースイ
        ンストールディレクトリであり、デフォルトは<filename
         class="directory">/usr/local/ldap</filename>です。
       </simpara>
       <simpara>
	LDAPに関する詳細な情報は、<ulink
         url="&url.rfc;rfc1777.html">RFC1777</ulink> および
        <ulink
         url="&url.rfc;rfc1778.html">RFC1778</ulink>で参照下さい。
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-msql">
      <term>
       <parameter>--with-msql[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: mSQL サポートを有効にします。このオプションへの
        パラメータは、mSQL をインストールしたディレクトリです。デフォ
        ルトでは、<filename
        class="directory">/usr/local/Hughes</filename>です。このデフォ
        ルト値は、mSQL 2.0 のデフォルトディレクトリです。
        <command>configure</command> は、自動的に実行中のmSQLのバージョ
        ンを検出?~す。PHP は、1.0 と 2.0 の両方をサポートします。し
        かし、PHP を mSQL 1.0 でコンパイルした場合には、mSQL 1.0 デー
        タベースのみにアクセスすることが可能です。逆の場合も同様です。
       </para>
       <simpara>
	<link linkend="configuration.file">設定ファイル</link>中の
	<link linkend="ini.sect.msql">mSQL 設定</link>用ディレクティブ
	も参照してください。
       </simpara>
       <simpara>
        <ulink url="&url.msql;">mSQL ホームページ</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mysql">
      <term>
       <parameter>--with-mysql[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3:  MySQL サポートを有効にします。DIR は、MySQL ベースイン
        ストールディレクトリであり、デフォルトでは複数のMySQLの一般的
        なインストールパスを探します。
       </para>
       <para>
        PHP 4:  MySQL サポートを有効にします。DIR が指定されない場合、
        付属のMySQLライブラリが使用されます。このオプションはデフォル
        トでオンになっています。
       </para>
       <para>
	<link linkend="configuration.file">設定ファイル</link>の
        <link linkend="ini.sect.mysql">MySQL設定</link>ディレクティブ
        も参照下さい。
       </para>
       <para>
        <ulink url="&url.mysql;">MySQL ホームページ</ulink>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ndbm">
      <term>
       <parameter>--with-ndbm[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: NDBM サポートを有効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-oci8">
      <term>
       <parameter>--with-oci8[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: Oracle-oci8 サポートを有効にします。DIRのデフォルトは
        ORACLE_HOMEです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-oracle">
      <term>
       <parameter>--with-oracle[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Oracleデータベースサポートを有効にします。DIRはOracleの
        ホームディレクトリであり、デフォルトは$ORACLE_HOMEです。
       </para>
       <para>
        PHP 4: Oracle-oci7サポートを有効にします。DIRのデフォルトは
        ORACLE_HOMEです。
       </para>
       <simpara>
	Oracle サポートを有効にします。この機能は既にテストが行われており、
	少なくとも Oracle 7.0 版から 7.3 版までは動作するはずです。
	パラメータは、<envar>ORACLE_HOME</envar> ディレクトリです。
	Oracle 環境が設定されている場合には、このパラメータを指定する
	必要はありません。
       </simpara>
       <simpara>
        <ulink url="&url.oracle;">Oracle ホームページ</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pgsql">
      <term>
       <parameter>--with-pgsql[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PostgresSQL サポートを有効にします。DIR はPostgresSQLベー
        スインストールディレクトリであり、デフォルトは
        <filename>/usr/local/pgsql</filename>です。
       </para>
       <para>
        PHP 4: PostgresSQL サポートを有効にします。DIR はPostgresSQLベー
        スインストールディレクトリであり、デフォルトは
        <filename>/usr/local/pgsql</filename>です。dlとして構築するに
        はDIRにsharedを、dlとして構築しかつDIRを指定するにはshared,DIR
        と設定して下さい。
       </para>
       <simpara>
	<link linkend="configuration.file">設定ファイル</link>の
        <link linkend="ini.sect.pgsql">Postgres設定</link>ディレクティ
	ブも参照下さい。
       </simpara>
       <simpara>
        <ulink url="&url.pgsql;">PostgreSQL ホームページ</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-solid">
      <term>
       <parameter>--with-solid[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Solid サポートを有効にします。DIR は、Solidベー
        スインストールディレクトリであり、デフォルトは、
	/usr/local/solidです。
       </para>
       <simpara>
        <ulink url="&url.solid;">Solid ホームページ</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-sybase-ct">
      <term>
       <parameter>--with-sybase-ct[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Sybase-CT サポートを有効にします。DIR はSybaseホー
        ムディレクトリであり、デフォルトは/home/sybaseです。
       </para>
       <simpara>
	<link linkend="configuration.file">設定ファイル</link>の
	<link linkend="ini.sect.sybct">Sybase-CT設定</link>ディレクティ
	ブも参照下さい。
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-sybase">
      <term>
       <parameter>--with-sybase[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Sybase-DBサポートを有効にします。DIR はSybaseホー
        ムディレクトリであり、デフォルトは、
        <filename>/home/sybase</filename>です。
       </para>
       <simpara>
	<link linkend="configuration.file">設定ファイル</link>の
        <link linkend="ini.sect.sybase">Sybase設定</link>ディレクティ
        ブも参照下さい。
       </simpara>
       <simpara>
        <ulink url="&url.sybase;">Sybase ホームページ</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-openlink">
      <term>
       <parameter>--with-openlink[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: OpenLink ODBC サポートを有効にします。DIR は、
        OpenLink ベースインストールディレクトリで、デフォルトは
        /usr/local/openlinkです。
       </para>
       <simpara>
        <ulink url="&url.openlink;">OpenLink ソフトウエアのホームペー
        ジ</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-iodbc">
      <term>
       <parameter>--with-iodbc[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: iODBC サポートを有効にします。DIR はiODBCベース
        インストールディレクトリで、デフォルトは
        <filename>/usr/local</filename>です。
       </para>
       <para>
	この機能は、当初 iODBCドライバマネージャ用に開発されましたが、多
	くのUNIXで動作する自由に再配布可能なODBCドライバマネージャです。
       </para>
       <simpara>
        <ulink url="&url.freeodbc;">FreeODBC ホームページ</ulink> 
        or <ulink url="&url.iodbc;">iODBC ホームページ</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-custom-odbc">
      <term>
       <parameter>--with-custom-odbc[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: 任意のカスタムODBCライブラリのサポートを有効にし
        ます。パラメータは、ベースディレクトリであり、デフォルトは
        <filename class="directory">/usr/local</filename>です。
       </para>
       <simpara>
	このオプションは、configureスクリプトを実行した際に、
	CUSTOM_ODBC_LIBSを定義済みであることを前提としています。
	また、有効なodbc.hヘッダファイルをインクルードパスのどこかに置い
	ておく必要があります。これがない場合には作成し、そこから必要
	なヘッダをインクルードしてください。特にマルチプラットフォーム
	である場合には、ヘッダ中で外部定義シンボルを必要とするかもしれ
	ません。これは、CFLAGS で定義して下さい。
       </simpara>
       <simpara>
	例えば、QNXでSybase SQL Anywhereを使用するには次のようにします。
        <literal>
         CFLAGS=-DODBC_QNX LDFLAGS=-lunix CUSTOM_ODBC_LIBS="-ldblib
         -lodbc" ./configure --with-custom-odbc=/usr/lib/sqlany50
        </literal>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-unified-odbc">
      <term>
       <parameter>--disable-unified-odbc</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: unified ODBC サポートを無効にします。iODBC, Adabas,
        Solid, Velocis custom ODBC インターフェースが有効な場合にのみ
        使用可能です。
       </para>
       <para>
        PHP 4: PHP 4では利用できないオプション
       </para>
       <simpara>
        Unified ODBC モジュールは、Solid、IBM DB2、AdabasDのようなODBC
        ベースのインターフェースを有する全てのデータベースにおいて共通
        に使用可能なインターフェースです。このモジュールは、通常のODBC
        ライブラリ用にも動作します。このモジュールは、
        iODBC,Solid,Adabas D,IBM DB2、Sybase SQL Anywhere でテスト済で
        す。これらのモジュールまたは Velocis モジュールの内の一つ（一
        つだけ）を有効にするか、カスタムODBCライブラリを指定する必要が
        あります。このオプションは、以下のオプションの一つが使用されて
        いる場合にのみ使用可能です。
	<link
        linkend="install.configure.with-iodbc">--with-iodbc</link>,
        <link
        linkend="install.configure.with-solid">--with-solid</link>,
        <link
        linkend="install.configure.with-ibm-db2">--with-ibm-db2</link>,
        <link
        linkend="install.configure.with-adabas">--with-adabas</link>,
        <link
        linkend="install.configure.with-velocis">--with-velocis</link>,
        <link
        linkend="install.configure.with-custom-odbc">--with-custom-odbc</link>
       </simpara>
       <simpara>
	<link linkend="configuration.file">設定ファイル</link>の
        <link linkend="ini.sect.uodbc">Unified ODBC設定</link>ディレク
        ティブも参照下さい。
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-unixODBC">
      <term>
       <parameter>--with-unixODBC[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: unixODBCサポートを有効にする。DIR は unixODBC ベースイ
        ンストールディレクトリであり、デフォルトは/usr/localです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-velocis">
      <term>
       <parameter>--with-velocis[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Velocisサポートを有効にします。DIR はVelocisベー
        スディレクトリであり、デフォルトは/usr/local/velocisです。
       </para>
       <simpara>
        <ulink url="&url.velocis;">Velocis ホームページ</ulink>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="install.configure.i18n">
    <title>国際化</title>

    <variablelist>
     <varlistentry id="install.configure.enable-i18n">
      <term>
       <parameter>--enable-i18n</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: (国際化版PHP 3において)国際化関数のサポートを有効にします。
       </para>
       <para>
        PHP 4: PHP 4では利用できないオプションです
       </para>
       <para>
	国際化サポート関数により文字コードの相互変換やマルチバイト検索
	を始めとする日本語を使用した処理を行う際に便利な機能が使用可能
	となります。
       </para>
       <para>
	この関数を使用するためには、国際化版PHP 3を次の場所から入手する必要が
	あります。
	<ulink url="http://php.jpnnet.com/">http://php.jpnnet.com/</ulink>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="install.configure.enable-mbregex">
      <term>
       <parameter>--enable-mbregex</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: マルチバイト文字対応の正規表現関数を使用可能にします。
       </para>
       <para>
        PHP 4: PHP 4では利用できないオプションです
       </para>
       <para>
	この関数を使用するためには、国際化版PHP 3を次の場所から入手する必要が
	あります。
	<ulink url="http://php.jpnnet.com/">http://php.jpnnet.com/</ulink>
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    
   </sect2>

   <sect2 id="install.configure.ecommerce">
    <title>Eコマース</title>

    <variablelist>
     <varlistentry id="install.configure.with-ccvs">
      <term>
       <parameter>--with-ccvs[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: CCVS サポートをPHP4でコンパイルします。CCVSベースインス
        トールディレクトリをDIRとして指定して下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mck">
      <term>
       <parameter>--with-mck[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Cybercash MCK サポートを有効にします。DIR はcybercash
        mck組み込みディレクトリであり、デフォルトでは
        <filename>/usr/src/mck-3.2.0.3-linux</filename>です。例えば、
        <filename>extra/cyberlib</filename>を探します。
       </para>
       <para>
        PHP 4: 利用できないオプションです。代わりに<link
         linkend="install.configure.with-cybercash">--with-cybercash</link>
        を使用して下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-cybercash">
      <term>
       <parameter>--with-cybercash[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: 利用できないオプション。代わりに<link
         linkend="install.configure.with-mck">--with-mck</link>
        を使用して下さい。
       </para>
       <para>
        PHP 4: CyberCash サポートを有効にします。DIR は CyberCash MCK
        インストールディレクトリです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pfpro">
      <term>
       <parameter>--with-pfpro[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: Verisign Payflow Pro サポートを有効にします
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="install.configure.graphics">
    <title>グラフィックス</title>

    <variablelist>
     <varlistentry id="install.configure.enable-freetype-4bit-antialias-hack">
      <term>
       <parameter>--enable-freetype-4bit-antialias-hack</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: FreeType2 (実験版)サポートを有効にします。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gd">
      <term>
       <parameter>--with-gd[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: GDサポートを有効にします(DIRはGDのインストールディレク
        トリ)。
       </para>
       <para>
        PHP 4: GDサポートを有効にします(DIRはGDのインストールディレク
        トリ)。dlとして構築するにはDIRにsharedを、dlとして構築しかつ
        DIRを指定するにはshared,DIRと設定して下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.without-gd">
      <term>
       <parameter>--without-gd</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: GDサポートを無効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-imagick">
      <term>
       <parameter>--with-imagick[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: ImageMagick サポートを有効にします。DIR はインストール
        ディレクトリであり、省略した場合、PHP は自分で見付けようとしま
        す。[実験版]
       </para>
       <para>
        PHP 4: PHP 4で利用できないオプション
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-jpeg-dir">
      <term>
       <parameter>--with-jpeg-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: pdflib 2.0用のjpegディレクトリ
       </para>
       <para>
        PHP 4: pdflib 3.x用のjpegディレクトリ
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-png-dir">
      <term>
       <parameter>--with-png-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3では利用できません
       </para>
       <para>
        PHP 4: pdflib 3.x用のpngディレクトリ
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-t1lib">
      <term>
       <parameter>--enable-t1lib</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: t1lib サポートを有効にします。
       </para>
       <para>
        PHP 4: 利用できないオプション。代わりに <link
         linkend="install.configure.with-t1lib">--with-t1lib</link>
        を使用して下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-t1lib">
      <term>
       <parameter>--with-t1lib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: 利用できないオプション。代わりに<link
         linkend="install.configure.enable-t1lib">--enable-t1lib</link>
        を使用して下さい。
       </para>
       <para>
        PHP 4: T1lib サポートを有効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-tiff-dir">
      <term>
       <parameter>--with-tiff-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: pdflib 2.0用のtiffディレクトリ
       </para>
       <para>
        PHP 4: pdflib 3.x用のtiffディレクトリ
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ttf">
      <term>
       <parameter>--with-ttf[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: FreeType サポートを有効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-xpm-dir">
      <term>
       <parameter>--with-xpm-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: gd-1.8+用のxpmディレクトリ
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="install.configure.misc">
    <title>その他</title>

    <para>
     どの場所が適当か不明なのをここに示します。
    </para>

    <variablelist>
     <varlistentry id="install.configure.disable-bcmath">
      <term>
       <parameter>--disable-bcmath</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Compile without BC arbitrary precision math
        functions. These functions allow you to operate with numbers
        outside of the ranges allowed by regular integers and floats;
        see <link linkend="ref.bc">BCMath Arbitrary Precision
         Mathematics Functions</link> for more information.
       </para>
       <para>
        PHP 4: Option not available; bcmath is not compiled in by
        default. Use <link
         linkend="install.configure.enable-bcmath">--enable-bcmath</link>
        to compile it in.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-display-source">
      <term>
       <parameter>--disable-display-source</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Compile without displaying source support
       </para>
       <para>
        PHP 4: PHP 4で利用できないオプション
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-libtool-lock">
      <term>
       <parameter>--disable-libtool-lock</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: avoid locking (might break parallel builds)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-pear">
      <term>
       <parameter>--disable-pear</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: PEARをインストールしない
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-pic">
      <term>
       <parameter>--disable-pic</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: 共有オブジェクトでPICを無効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-posix">
      <term>
       <parameter>--disable-posix</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション; use <link
         linkend="install.configure.without-posix">--without-posix</link>
        instead.
       </para>
       <para>
        PHP 4: POSIX互換関数を無効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-rpath">
      <term>
       <parameter>--disable-rpath</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: 実行ライブラリ検索パスの追加を無効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-session">
      <term>
       <parameter>--disable-session</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: セッションサポートを無効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-bcmath">
      <term>
       <parameter>--enable-bcmath</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション。bcmath はデフォルトでコ
        ンパイルされます。これを無効にするには、<link
         linkend="install.configure.disable-bcmath">--disable-bcmath</link>
        を使用して下さい。
       </para>
       <para>
        PHP 4: 任意精度の数学関数をコンパイルします。このモジュールを
        インストールする方法については README-BCMATH を参照して下さい。
        これらの関数により通常の整数や小数では範囲外となる数を処理する
        ことができるようになります。詳細については、<link
        linkend="ref.bc">BCMath 任意精度数学関数</link>を参照下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-c9x-inline">
      <term>
       <parameter>--enable-c9x-inline</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: C9xインラインセマンティックスを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-calendar">
      <term>
       <parameter>--enable-calendar</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: カレンダー変換のサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-debug">
      <term>
       <parameter>--enable-debug</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: デバッグ用シンボルを付けてコンパイルします。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-debugger">
      <term>
       <parameter>--enable-debugger</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: リモートデバック関数を有効にしてコンパイルします
       </para>
       <para>
        PHP 4: PHP 4で利用できないオプション
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-discard-path">
      <term>
       <parameter>--enable-discard-path</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: これを無効にした場合、PHP CGI バイナリは、Webツ
        リー外の安全な場所に置くことができ、.htaccessセキュリティを欺
        くことが不可能になります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-dmalloc">
      <term>
       <parameter>--enable-dmalloc</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: dmallocを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-exif">
      <term>
       <parameter>--enable-exif</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: exif サポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-experimental-zts">
      <term>
       <parameter>--enable-experimental-zts</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: このオプションは構築できない可能性が大きいです
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-fast-install">
      <term>
       <parameter>--enable-fast-install[=PKGS]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: 高速なインストールに最適化します [デフォルト=yes]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-force-cgi-redirect">
      <term>
       <parameter>--enable-force-cgi-redirect</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: 内部サーバーリダイレクトのセキュリティチェックを
        有効にします。ApacheでCGIバージョンを実行する場合にはこれを使
        用する必要があります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-inline-optimization">
      <term>
       <parameter>--enable-inline-optimization</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: 多くのメモリがあり、gccを使用している場合には、これを試
        すことが可能です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-libgcc">
      <term>
       <parameter>--enable-libgcc</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: libgccに対して明示的なリンクを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-maintainer-mode">
      <term>
       <parameter>--enable-maintainer-mode</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: make rules および dependencies を有効にします。
        一般的なインストールでは必要ありません(混乱することがあります)。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-memory-limit">
      <term>
       <parameter>--enable-memory-limit</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: メモリ制限機能を付けてコンパイルします。[デフォルト=no]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-safe-mode">
      <term>
       <parameter>--enable-safe-mode</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: デフォルトでセーフモードを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-satellite">
      <term>
       <parameter>--enable-satellite</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: Satellite によりCORBAを有効にします(ORBitが必要)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-shared">
      <term>
       <parameter>--enable-shared[=PKGS]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: 共有ライブラリを構築します [デフォルト=yes]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sigchild">
      <term>
       <parameter>--enable-sigchild</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: PHP付属の SIGCHLD ハンドラを有効にします。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-static">
      <term>
       <parameter>--enable-static[=PKGS]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: 静的なライブラリを組み込みます [デフォルト=yes]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sysvsem">
      <term>
       <parameter>--enable-sysvsem</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: System Vセマフォサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sysvshm">
      <term>
       <parameter>--enable-sysvshm</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: System V共有メモリサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-trans-sid">
      <term>
       <parameter>--enable-trans-sid</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: 透過的なセッションIDの伝達を有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-cdb">
      <term>
       <parameter>--with-cdb[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: CDBサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-config-file-path">
      <term>
       <parameter>--with-config-file-path=PATH</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: <filename>php3.ini</filename> を探すパスを設定します。
        デフォルトは、<filename>/usr/local/lib</filename>です。
       </para>
       <para>
        PHP 4: <filename>php.ini</filename>を探すパスを設定します。デ
        フォルトは、<filename>/usr/local/lib</filename>です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-cpdflib">
      <term>
       <parameter>--with-cpdflib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: ClibPDFサポートを有効にします。DIRはClibPDFインストール
        ディレクトリで、デフォルトは/usr/localです。
       </para>
       <para>
        PHP 4: cpdflibサポートを有効にします (cpdflib &gt;= 2が必要)。
        DIR は cpdfllib インストールディレクトリで、デフォルトは/usrで
        す。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-esoob">
      <term>
       <parameter>--with-esoob[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: Easysoft OOB サポートを有効にします。DIR はOOBベースイ
        ンストールディレクトリであり、デフォルトでは、
        /usr/local/easysoft/oob/clientです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-exec-dir">
      <term>
       <parameter>--with-exec-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: セーフモードの場合、DIRにあるもののみが実行可能
        であり、デフォルトでは/usr/local/php/binにあります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-fdftk">
      <term>
       <parameter>--with-fdftk[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: fdftkサポートを有効にします。DIRはfdftkインストー
        ルディレクトリであり、デフォルトは/usr/localです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gnu-ld">
      <term>
       <parameter>--with-gnu-ld</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: CコンパイラがGNU ldを使用すると仮定します [デフォルト=no]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-icap">
      <term>
       <parameter>--with-icap[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: ICAPサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-imap">
      <term>
       <parameter>--with-imap[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: IMAPサポートを有効にします。DIRはIMAPインクルー
        ドファイルおよびc-client.a があるディレクトリです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-imsp">
      <term>
       <parameter>--with-imsp[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: IMSPサポートを有効にします(DIRはIMSPのインクルードディ
        レクトリおよびlibimsp.aディレクトリ)
       </para>
       <para>
        PHP 4: PHP 4で利用できないオプション
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-java">
      <term>
       <parameter>--with-java[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: Javaサポートを有効にします。DIRはJDKのベースインストー
        ルディレクトリです。この拡張は、共有モジュールとしてのみ構築可
        能です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-kerberos">
      <term>
       <parameter>--with-kerberos[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3では利用できないオプション
       </para>
       <para>
        PHP 4: IMAPでKerberosサポートを有効にします。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mcal">
      <term>
       <parameter>--with-mcal[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: MCAL サポートを有効にします。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mcrypt">
      <term>
       <parameter>--with-mcrypt[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: mcrypt サポートを有効にします。DIR は mcrypt イ
        ンストールディレクトリです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mhash">
      <term>
       <parameter>--with-mhash[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: mhash サポートを有効にします。DIR は mhash イン
        ストールディレクトリです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mm">
      <term>
       <parameter>--with-mm[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: セッション記憶で mm サポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mod_charset">
      <term>
       <parameter>--with-mod_charset</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: mod_charset で変換テーブルを有効にします(Rus
        Apache)。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pdflib">
      <term>
       <parameter>--with-pdflib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: pdflib サポートを有効にします (0.6および2.0でテスト済)。
        DIR は、pdflib インストールディレクトリで、デフォルトは
        <filename>/usr/local</filename>です。
       </para>
       <para>
        PHP 4: pdflib 3.x サポートを有効にします。DIR は、pdflib イン
        ストールディレクトリであり、デフォルトでは
        <filename>/usr/local</filename>です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-readline">
      <term>
       <parameter>--with-readline[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: readlineサポートを有効にします。DIRはreadlineインストー
        ルディレクトリです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-regex">
      <term>
       <parameter>--with-regex=TYPE</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: 正規表現ライブラリ型: system, apache, php
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-servlet">
      <term>
       <parameter>--with-servlet[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: servletサポートを有効にします。DIRはJSDKのベースインス
        トールディレクトリです。このSAPIは、Java拡張を共有ライブラリと
        して構築することを必要とします。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-swf">
      <term>
       <parameter>--with-swf[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用可能なオプション
       </para>
       <para>
        PHP 4: swfサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-system-regex">
      <term>
       <parameter>--with-system-regex</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: 付属の正規表現ライブラリを使用しない
       </para>
       <para>
        PHP 4: (推奨されない) システムの正規表現ライブラリを使用します
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-tsrm-pth">
      <term>
       <parameter>--with-tsrm-pth[=pth-config]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用可能なオプション
       </para>
       <para>
        PHP 4: GNU Pthを使用します
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-tsrm-pthreads">
      <term>
       <parameter>--with-tsrm-pthreads</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: POSIX スレッド (デフォルト)を使用します
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-x">
      <term>
       <parameter>--with-x</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: X Window システムを使用します
       </para>
       <para>
        PHP 4: PHP 4で利用できないオプション
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zlib-dir">
      <term>
       <parameter>--with-zlib-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: pdflib 2.0 用または zlib サポートを有効にするための
        zlib ディレクトリ
       </para>
       <para>
        PHP 4: pdflib 3.x 用または zlibサポートを有効にするための zlib
        ディレクトリ
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zlib">
      <term>
       <parameter>--with-zlib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: zlib サポートを有効にします (zlib &gt;= 1.0.9 が
        必要です)。DIR は、zlib インストールディレクトリです。デフォル
        トは/usrです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.without-pcre-regex">
      <term>
       <parameter>--without-pcre-regex</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Perl互換の正規表現サポートを無効にします
       </para>
       <para>
        PHP 4: Perl互換の正規表現サポートを有効にします。付属のライブ
        ラリを使用しない場合には、PCREのインクルードおよびライブラリが
        インストールされている場所を指定するために
        --with-pcre-regex=DIR でDIRを指定して下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.without-posix">
      <term>
       <parameter>--without-posix</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: POSIX関数を有効にしない
       </para>
       <para>
        PHP 4: PHP 4では利用できないオプション。代わりに<link
         linkend="install.configure.disable-posix">--disable-posix</link>
        を使用して下さい。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="install.configure.networking">
    <title>ネットワーク</title>

    <variablelist>
     <varlistentry id="install.configure.with-curl">
      <term>
       <parameter>--with-curl[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: CURLサポートを有効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-ftp">
      <term>
       <parameter>--enable-ftp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: 利用できないオプション。代わりに <link
         linkend="install.configure.with-ftp">--with-ftp</link>
        を使用して下さい。
       </para>
       <para>
        PHP 4: FTP サポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ftp">
      <term>
       <parameter>--with-ftp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: FTP サポートを有効にします
       </para>
       <para>
        PHP 4: 利用できないオプション。代わりに <link
         linkend="install.configure.enable-ftp">--enable-ftp</link>
        を使用して下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-url-fopen-wrapper">
      <term>
       <parameter>--disable-url-fopen-wrapper</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: httpまたはftpによりファイルをアクセス可能なURL対
        応のfopenラッパーを無効にします
       </para>
       <warning>
	<para>
	 このスイッチはPHP 4.0.3 まででのみ利用可能です。より新しいバー
	 ジョンでは、コンパイル時にこの機能を決定する代わりに、 
         <parameter>allow_url_fopen</parameter> という名前のパラメータ
	 を指定可能です。
	</para>
       </warning>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mod-dav">
      <term>
       <parameter>--with-mod-dav=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Apacheのmod_davによるDAVサポートを有効にします。
        DIRは、mod_davのインストールディレクトリ(Apacheモジュール版の
        み!)です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-openssl">
      <term>
       <parameter>--with-openssl[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: SNMPでOpenSSLサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-snmp">
      <term>
       <parameter>--with-snmp[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: SNMPサポートを有効にします。DIRはSNMPベースイン
        ストールディレクトリ、デフォルトはSNMPがインストールされる一般
        的な複数の場所を探します。dlとして構築するに
        はDIRにsharedを、dlとして構築しかつDIRを指定するにはshared,DIR
        と設定して下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-ucd-snmp-hack">
      <term>
       <parameter>--enable-ucd-snmp-hack</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: UCD SNMP ハックを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sockets">
      <term>
       <parameter>--enable-sockets</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: ソケットサポートを有効にする
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-yaz">
      <term>
       <parameter>--with-yaz[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 で利用できないオプション
       </para>
       <para>
        PHP 4: YAZサポート(ANSI/NISO Z39.50)を有効にします。DIRは YAZ
        バイナリインストールディレクトリです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-yp">
      <term>
       <parameter>--enable-yp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: 利用できないオプションです。代わりに<link
         linkend="install.configure.with-yp">--with-yp</link>
        を使用して下さい。
       </para>
       <para>
        PHP 4: YP サポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-yp">
      <term>
       <parameter>--with-yp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: YP を有効にします
       </para>
       <para>
        PHP 4: 利用できないオプション。代わりに <link
         linkend="install.configure.enable-yp">--enable-yp</link>
        を使用して下さい。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>

   <sect2 id="install.configure.php">
    <title>PHP Behaviour</title>

    <variablelist>
     <varlistentry id="install.configure.enable-magic-quotes">
      <term>
       <parameter>--enable-magic-quotes</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: デフォルトでmagic quotesを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-short-tags">
      <term>
       <parameter>--disable-short-tags</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: デフォルトで開始タグの省略型 &lt;? を無効にしま
        す
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-track-vars">
      <term>
       <parameter>--enable-track-vars</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: デフォルトで GET/POST/Cookie トラック変数を有効にします
       </para>
       <para>
        PHP 4: PHP 4で利用できないオプションです。PHP 4.0.2現在
        track_varsは常にオンです。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>

   <sect2 id="install.configure.servers">
    <title>Server</title>
    
    <variablelist>
     <varlistentry id="install.configure.with-aolserver-src">
      <term>
       <parameter>--with-aolserver-src=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 で利用できないオプション
       </para>
       <para>
        PHP 4: AOLserverのソース配布ファイルの場所を指定します
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-aolserver">
      <term>
       <parameter>--with-aolserver=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 で利用できないオプション
       </para>
       <para>
        PHP 4: インストールされたAOLserverの場所を指定します
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-apache">
      <term>
       <parameter>--with-apache[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Apacheモジュールを構築します。DIR はトップレベル
        Apache構築ディレクトリであり、デフォルトは/usr/local/etc/httpd
        です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-apxs">
      <term>
       <parameter>--with-apxs[=FILE]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: 共有Apacheモジュールを構築します。FILEはオプショ
        ンでApacheのapxsツールのパスで、デフォルトではapxsです。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="install.configure.enable-versioning">
      <term>
       <parameter>--enable-versioning</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Solaris 2.xとLinuxで提供されたバージョン情報付加と変数
        のスコープ設定の機能を利用します
       </para>
       <para>
        PHP 4: 必要なシンボルのみをエクスポートします。詳細については
        INSTALLを参照下さい
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-fhttpd">
      <term>
       <parameter>--with-fhttpd[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: fhttpd モジュールを構築します。DIR はfhttpdソー
        スディレクトリで、デフォルトは/usr/local/src/fhttpdです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-nsapi">
      <term>
       <parameter>--with-nsapi=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 で利用できないオプション
       </para>
       <para>
        PHP 4: インストールされたNetscapeのパスを指定します
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-phttpd">
      <term>
       <parameter>--with-phttpd=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 で利用できないオプション
       </para>
       <para>
        PHP 4: 
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pi3web">
      <term>
       <parameter>--with-pi3web=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 で利用できないオプション
       </para>
       <para>
        PHP 4: Pi3Webで使用するモジュールとしてPHPを構築します
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-roxen">
      <term>
       <parameter>--with-roxen=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 で利用できないオプション
       </para>
       <para>
        PHP 4: Pike モジュールとしてPHPを構築します。DIRはRoxenのベー
        スディレクトリであり、通常は/usr/local/roxen/serverです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-roxen-zts">
      <term>
       <parameter>--enable-roxen-zts</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 で利用できないオプション
       </para>
       <para>
        PHP 4: Zend Thread Safety を使用して Roxen モジュールを構築し
        ます
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-thttpd">
      <term>
       <parameter>--with-thttpd=SRCDIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 で利用できないオプション
       </para>
       <para>
        PHP 4: 
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zeus">
      <term>
       <parameter>--with-zeus=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3 で利用できないオプション
       </para>
       <para>
        PHP 4: Zeusで使用するISAPIモジュールとしてPHPを構築します
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    
   </sect2>

   <sect2 id="install.configure.text">
    <title>テキストと言語</title>
 
    <variablelist>
     <varlistentry id="install.configure.with-aspell">
      <term>
       <parameter>--with-aspell[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: ASPELLサポートを有効にします。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gettext">
      <term>
       <parameter>--with-gettext[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: GNU gettext サポートを有効にします。DIR は
        gettext インストールディレクトリであり、デフォルトは/usr/local
        です
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pspell">
      <term>
       <parameter>--with-pspell[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプションです
       </para>
       <para>
        PHP 4: PSPELL サポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-recode">
      <term>
       <parameter>--with-recode[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: GNU recode サポートを有効にします。
       </para>
       <para>
        PHP 4: recode サポートを有効にします。DIRはrecodeをインストー
        ルしたディレクトリです。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>
   
   <sect2 id="install.configure.xml">
    <title>XML</title>

    <variablelist>   
     <varlistentry id="install.configure.with-dom">
      <term>
       <parameter>--with-dom[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: DOMサポートを有効にします(libxml &gt;= 2.0が必要です)
        DIR は libxml インストールディレクトリで、デフォルトは
        <filename>/usr</filename>です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sablot-errors-descriptive">
      <term>
       <parameter>--enable-sablot-errors-descriptive</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプション
       </para>
       <para>
        PHP 4: エラー内容の出力を有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-sablot">
      <term>
       <parameter>--with-sablot[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3では利用できないオプション
       </para>
       <para>
        PHP 4: Sablotronサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-wddx">
      <term>
       <parameter>--enable-wddx</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3では利用できないオプション
       </para>
       <para>
        PHP 4: WDDXサポートを有効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-xml">
      <term>
       <parameter>--disable-xml</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: PHP 3で利用できないオプションです。XML機能はデフォルト
        では組み込まれません。この機能を有効にするには、<link
         linkend="install.configure.with-xml">--with-xml</link>を使用
        して下さい。
       </para>
       <para>
        PHP 4: 付属のexpatライブラリを使用してXMLサポートを無効にします
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-xml">
      <term>
       <parameter>--with-xml</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: XMLサポートを有効にします
       </para>
       <para>
        PHP 4: このオプションは利用できません。XMLサポートはデフォルト
        で組み込まれます。オフにするには、<link
         linkend="install.configure.disable-xml">--disable-xml</link>
        を使用して下さい。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>

  <sect1 id="install-windows">
   <title>Windows 9x/Me/NT/2000システムへのインストール</title>
   <para>
    PHPをWindowsにインストールするには、<link
    linkend="install.windows.manual">マニュアルインストール</link>とイ
    ンストーラ<link
    linkend="install.windows.installer">InstallShield</link>による方法
    の2種類があります。
   </para>
   <para>
    Microsoft Visual Studioを持っている場合、オリジナルのソースコード
    からPHPを <link linkend="install.windows.build">構築</link>するこ
    とも可能です。
   </para>
   <para>
    WindowsシステムにPHPをインストールした後、機能を追加するために
    <link linkend="install.windows.extensions">様々な拡張モジュールの
    ロード</link>を行う可能性があります。
   </para>
   
   <sect2 id="install.windows.installer">
    <title>Windows InstallShield</title>

    <para>
     CGIバージョンのPHPをインストールする Windows 用 PHPインストーラが、
     <ulink url="&url.php;">&url.php;</ulink> から取得可能で、IIS、PWS、
     Xitami の場合、Web サーバーの設定も同時に行われます。
    </para>
    
    <simpara>
     使用する<acronym>HTTP</acronym>サーバーをシステムにインストールし、
     完全に動作するようにして下さい。
    </simpara>
    
    <simpara>
     インストーラを実行し、インストールウイザードの指示に従って下さい。
     2種類のインストール方法がサポートされています。一つ目は standard
     で、設定の選択肢についてデフォルト値が示されます。もう一つは
     advanced で、選択肢について質問が行われます。
    </simpara>
    
    <simpara>
     インストールウイザードは、<filename>php.ini</filename> ファイルを
     設定し、Web サーバーでPHPを使用するように設定するに必要な情報を集
     めます。IIS と NTワークステーションにおける PWS の場合、スクリプ
     トマップ設定を有するサーバーの全ノードのリストが表示され、PHPスク
     リプト用マッピングを追加したいと思う場所のノードを選択することが
     可能です。
    </simpara>

    <simpara>
     インストールが一旦完了すると、インストーラはシステムを再起動する
     か、または、単にPHPの使用を開始するかを聞いてきます。
    </simpara>
   
   </sect2>

   <sect2 id="install.windows.manual">
    <title>一般的なインストール手順</title>
   <simpara>
     このインストール手順は、Windows 9x/Me/NT/2000上のWebサーバにPHPを
     手動でインストールし、設定を際の手助けとなるものです。この手引は、
     &link.bob;により書かれたものです。オリジナル版は、<ulink
     url="&url.win32install;">&url.win32install;</ulink>にあります。
   </simpara>
   <para>
     この手引は、以下の環境へのマニュアルインストールをサポートします。
     <itemizedlist>
      <listitem>
       <para>
	Personal Web Server 3または4以降
       </para>
      </listitem>
      <listitem>
       <para>
	Internet Information Server 3 または 4以降
       </para>
      </listitem>
      <listitem>
       <para>
	Apache 1.3.x
       </para>
      </listitem> 
      <listitem>
       <para>
	Omni HTTPd 2.0b1 以降
       </para>
      </listitem>
      <listitem>
       <para>
        Oreilly Website Pro
       </para>
      </listitem>
      <listitem>
       <para>
        Xitami
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     PHP 4 for Windows comes in two flavours - a CGI executable (php.exe),
     and several SAPI modules (for exapmle php4isapi.dll). The latter form
     is new to PHP 4, and provides significantly improved performance and
     some new functionality. However, please note that the SAPI modules
     are <emphasis>NOT</emphasis> yet considered to be production quality.
     The reason for this is that the PHP SAPI modules are using the
     thread-safe version of the PHP code, which is new to PHP 4, and has
     not yet been tested and pounded enough to be considered completely
     stable, and there are actually a few known bugs. On the other hand,
     some people have reported very good results with the SAPI modules,
     even though we're not aware of anyone actually running it on a
     production site. In short - your mileage may vary;  If you need
     absolute stability, trade the performance of the SAPI modules
     with the stability of the CGI executable.
    </para>
    <para>
     If you choose one of the SAPI modules and use Windows 95, be sure
     to download the DCOM update from the <ulink
						url="http://download.microsoft.com/msdownload/dcom/95/x86/en/dcom95.exe">Microsoft
      DCOM pages</ulink>. For the ISAPI module, an ISAPI 4.0 compliant Web server
     is required (tested on IIS 4.0, PWS 4.0 and IIS 5.0). IIS 3.0 is
     <emphasis>NOT</emphasis> supported; You should download and
     install the Windows NT 4.0 Option Pack with IIS 4.0 if you
     want native PHP support.
    </para>
    <para>
     以下の手順は、個々のサーバーに関する手順の前に行う全てのインストー
     ルに共通する必須のものです。

     <itemizedlist>
      <listitem>
       <para>
        配布ファイルを好きなディレクトリに展開して下さい。
 	&quot;C:\PHP\&quot; が、良い例です。
       </para>
      </listitem>
      <listitem>
       <para>
 	&apos;php.ini-dist&apos; を Windows 95/98の場合は、
	&apos;%WINDOWS%&apos; ディレクトリ、Windows NT または Windows
	2000の場合は、&apos;%SYSTEMROOT%&apos;ディレクトリコピーし、
	&apos;php.ini&apos; にリネームして下さい。
	&apos;%WINDOWS%&apos; または &apos;%SYSTEMROOT%&apos;ディレク
	トリは、通常、次のようになります。
        <simplelist>
 	 <member>Windows 95/98 では、c:\windows</member>
 	 <member>NT/2000 サーバーでは、c:\winnt または c:\winnt40</member>
        </simplelist>
       </para>	
      </listitem>
      <listitem>
       <para>
        &apos;php.ini&apos; ファイルを編集して下さい。
        <itemizedlist>
         <listitem>
          <simpara>
 	   &apos;extension_dir&apos; の設定値を php-install-dir または
 	   &apos;php_*.dll&apos; を置いた場所に変更する必要があります。
 	   例えば、c:\php になります。
          </simpara>
         </listitem>
         <listitem>
          <simpara>
	   Omni Httpd を使用している場合、次の手順には従わないで下さい。
 	   'doc_root' に Web サーバーのドキュメントルートを設定して下
 	   さい。例: c:\apache\htdocs または c:\webroot
          </simpara>
         </listitem>
         <listitem>
          <simpara>
	   PHP 実行開始時にロードしたいモジュールを選択して下さい。こ
	   れらのモジュールをロードするためには、'extension=php_*.dll'
	   の行からコメントを外します。いくつかのモジュールは、正常に
	   動作するために追加のライブラリのインストールを必要とします。
	   PHP <ulink url="&url.php.faq;">FAQ</ulink>には、サポート用
	   ライブラリの在り処に関する更に詳細な情報が記載されています。
	   スクリプトの中で<function>dl</function>を使用することにより
	   動的にモジュールをロードすることもできます。
           <link linkend="install.windows.extensions">Windows
           拡張モジュール</link>に関する節を参照下さい。
          </simpara>
         </listitem>
         <listitem>
          <simpara>
	   PWS と IIS においては、<filename>browscap.ini</filename>を
	   次のように指定することができます。:
 	   Windows 9x/Me では 'c:\windows\system\inetsrv\browscap.ini' 、
	   NT/2000 サーバーでは
	   'c:\winnt\system32\inetsrv\browscap.ini'
	   PHP における browscap 機能に関する詳細な情報については、
 	   この <ulink url="&url.browscap;">ミラーサーバー</ulink> を見て、
	   "source" ボタンを押して動作を確認下さい。
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </listitem>
     </itemizedlist>
    </para>
   </sect2>

   <sect2 id="install.windows.build">
    <title>Building from source</title>
    <para>
     Before getting started, it is worthwhile answering the question:
     "Why is building on Windows so hard?" Two reasons come to mind:
    </para>
    <orderedlist>
     <listitem><simpara>
      Windows does not (yet) enjoy a large community of developers
      who are willing to freely share their source. As a direct
      result, the necessary investment in infrastructure required
      to support such development hasn't been made.  By and large,
      what is available has been made possible by the porting of
      necessary utilities from Unix. Don't be surprised if some of
      this heritage shows through from time to time.
     </simpara></listitem>
     <listitem><simpara>
      Pretty much all of the instructions that follow are of the
      "set and forget" variety. So sit back and try follow the
      instructions below as faithfully as you can.
     </simpara></listitem>
    </orderedlist>

    <sect3 id="install.windows.build.prepare">
     <title>Preparations</title>
     <para>
      Before you get started, you have a lot to download....
     </para>
     <itemizedlist>
      <listitem><simpara>
       For starters, get the Cygwin toolkit from the closest <ulink
       url="http://sources.redhat.com/cygwin/download.html">cygwin</ulink>
       mirror site.  This will provide you most of the popular GNU 
       utilities used by the build process.
      </simpara></listitem>
      <listitem><simpara>
       Download the rest of the build tools you will need from the PHP
       site at <ulink url="http://www.php.net/extra/win32build.zip"
       >http://www.php.net/extra/win32build.zip</ulink>.
      </simpara></listitem>
      <listitem><simpara>
       Get the source code for the DNS name resolver used by PHP
       at <ulink url="http://www.php.net/extra/bindlib_w32.zip"
       >http://www.php.net/extra/bindlib_w32.zip</ulink>. This
       is a replacement for the <filename>resolv.lib</filename>
       library included in <filename>win32build.zip</filename>.
      </simpara></listitem>
      <listitem><simpara>
       If you don't already have an unzip utility, you will
       need one.  A free version is available from <ulink
       url="http://www.cdrom.com/pub/infozip/UnZip.html">InfoZip</ulink>.
      </simpara></listitem>
     </itemizedlist>
     <simpara>
      Finally, you are going to need the source to PHP 4 itself.
      You can get the latest development version using <ulink
      url="http://www.php.net/anoncvs.php">anonymous CVS</ulink>. If you get
      a <ulink url="http://snaps.php.net/">snapshot</ulink> or a <ulink
      url="http://www.php.net/downloads.php">source</ulink> tarball, you
      not only will have to untar and ungzip it, but you will have to
      convert the bare linefeeds to crlf's in the <filename>*.dsp</filename>
      and <filename>*.dsw</filename> files before Microsoft Visual C++
      will have anything to do with them.
     </simpara>
     <note>
      <simpara>
       Place the <filename>Zend</filename> and
       <filename>TSRM</filename> directories inside the
       <filename>php4</filename> directory in order for the projects
       to be found during the build process.
      </simpara>
     </note>
    </sect3>
    <sect3 id="install.windows.build.install">
     <title>Putting it all together</title>
     <itemizedlist>
      <listitem><simpara>
       Follow the instructions for installing the unzip utility of
       your choosing.
      </simpara></listitem>
      <listitem>
       <simpara>
        Execute <filename>setup.exe</filename> and follow the installation
        instructions.  If you choose to install to a path other than
        <filename>c:\cygnus</filename>, let the build process know by setting
        the Cygwin environment variable. On Windows 95/98 setting
        an environment variable can be done by placing a line in
        your autoexec.bat. On Windows NT, go to My Computer =&gt;
        Control Panel =&gt; System and select the environment tab.
       </simpara>
       <warning>
        <simpara>
         Make a temporary directory for Cygwin to use, otherwise many
         commands (particularly bison) will fail. On Windows 95/98,
         <userinput>mkdir C:\TMP</userinput>. For Windows NT,
         <userinput>mkdir %SystemDrive%\tmp</userinput>.
        </simpara>
       </warning>
      </listitem>
      <listitem><simpara>
       Make a directory and unzip <filename>win32build.zip</filename> into it.
      </simpara></listitem>
      <listitem>
       <simpara>
        Launch Microsoft Visual C++, and from the menu select
        Tools =&gt; Options. In the dialog, select the
        directories tab. Sequentially change the dropdown
        to Executables, Includes, and Library files,
        and ensure that <filename>cygwin\bin</filename>,
        <filename>win32build\include</filename>, and
        <filename>win32build\lib</filename> are in each list,
        respectively. (To add an entry, select a blank line
        at the end of the list and begin typing).  Typical entries
        will look like this:
       </simpara>
       <itemizedlist>
        <listitem><simpara>
         <filename>c:\cygnus\bin</filename>
        </simpara></listitem>
        <listitem><simpara>
         <filename>c:\php-win32build\include</filename>
        </simpara></listitem>
        <listitem><simpara>
         <filename>c:\php-win32build\lib</filename>
        </simpara></listitem>
       </itemizedlist>
       <simpara>
        Press OK, and exit out of Visual C++.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Make another directory and unzip <filename>bindlib_w32.zip</filename>
        into it. Decide whether you want to have debug symbols available
        (bindlib - Win32 Debug) or not (bindlib - Win32 Release).
        Build the appropriate configuration:
       </simpara>
       <itemizedlist>
        <listitem><simpara>
         For GUI users, launch VC++, and then select File =&gt; Open
         Workspace and select bindlib.  Then select Build=&gt;Set
         Active Configuration and select the desired configuration.
         Finally select Build=&gt;Rebuild All.
        </simpara></listitem>
        <listitem>
         <simpara>
          For command line users, make sure that you either have
          the C++ environment variables registered, or have run
          <command>vcvars.bat</command>, and then execute one of the
          following:
         </simpara>
         <itemizedlist>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</userinput>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</userinput>
           </simpara>
          </listitem>
         </itemizedlist>
        </listitem>
        <listitem><simpara>
         At this point, you should have a usable
         <filename>resolv.lib</filename> in either your
         <filename>Debug</filename> or <filename>Release</filename>
         subdirectories.  Copy this file into your
         <filename>win32build\lib</filename> directory over the
         file by the same name found in there.
        </simpara></listitem>
       </itemizedlist>
      </listitem>
     </itemizedlist>
    </sect3>

    <sect3 id="install.windows.build.compile">
     <title>Compiling</title>
     <simpara>
      The best way to get started is to build the standalone/CGI version.
     </simpara>
     <itemizedlist>
      <listitem><simpara>
       For GUI users, launch VC++, and then select File =&gt; Open
       Workspace and select php4ts.  Then select Build=&gt;Set Active
       Configuration and select the desired configuration. Finally
       select Build=&gt;Rebuild All.
      </simpara></listitem>
      <listitem>
       <simpara>
        For command line users, make sure that you either have
        the C++ environment variables registered, or have run
        <command>vcvars.bat</command>, and then execute one of the
        following:
       </simpara>
       <itemizedlist>
        <listitem><simpara>
         <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</userinput>
        </simpara></listitem>
        <listitem><simpara>
         <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</userinput>
        </simpara></listitem>
        <listitem><simpara>
         At this point, you should have a usable
         <filename>php.exe</filename> in either
         your <filename>Debug_TS</filename> or
         <filename>Release_TS</filename> subdirectories.
        </simpara></listitem>
       </itemizedlist>
      </listitem>
     </itemizedlist>
     <simpara>
      Repeat the above steps with <filename>php4isapi.dsp</filename>
      (which can be found in <filename>sapi\isapi</filename>) in
      order to build the code necessary for integrating PHP with
      Microsoft IIS.
     </simpara>
    </sect3>
   </sect2>

   <sect2 id="install.windows.extensions">
    <title>Windows 用拡張モジュールのインストール</title>
    <para>
     PHPおよびWebサーバをWindowsにインストールした後、特定のモジュール
     を使用したくなる場合もあるでしょう。以下の表に現在のWindowモジュー
     ルを示します。マニュアルインストール手順で説明したように、PHPを起
     動する際に 'extension=php_*.dll' の行のコメントを外すことにより、
     ロードするモジュールを選択することが可能です。いくつかのモジュール
     は、正しく動作させるためにシステムに別のライブラリをインストールし
     ておく必要があります。PHP <ulink url="&url.php.faq;">FAQ</ulink>
     には、サポートするライブラリの取得場所に関する詳しい情報があります。
     スクリプトの中で<function>dl</function>を使用することにより、モ
     ジュールを動的にロードすることも可能です。
    </para>
    <para>
     The DLLs for PHP extensions are prefixed with 'php_'.  This
     prevents confusion between PHP extensions and their supporting
     libraries.
    </para>
    <note>
     <para>
      In PHP 4.0.4pl1 MySQL, ODBC, FTP, Calendar, BCMath, COM, PCRE,
      Session, WDDX and XML support is <emphasis>built-in</emphasis>.
      You don't need to load any additional extensions in order to
      use these functions. See your distributions
      <filename>README.txt</filename> or <filename>install.txt</filename>
      for a list of built in modules.
     </para>
    </note>

    <para>
     <table>
      <title>PHP モジュール</title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>php_calendar.dll</entry>
         <entry>カレンダ変換関数</entry>
        </row>
        <row>
         <entry>php_crypt.dll</entry>
         <entry>暗号化関数</entry>
        </row>
        <row>
         <entry>php_dbase.dll</entry>
         <entry>DBase 関数</entry>
        </row>
        <row>
         <entry>php_dbm.dll</entry>
         <entry>バークレーDB2ライブラリによるGDBM エミュレーション</entry>
        </row>
        <row>
         <entry>php_filepro.dll</entry>
         <entry>filepro データベースへのアクセス(読込みのみ)</entry>
        </row>
        <row>
         <entry>php_gd.dll</entry>
         <entry>イメージ処理用のGD ライブラリ関数</entry>
        </row>
        <row>
         <entry>php_hyperwave.dll</entry>
         <entry>HyperWave 関数</entry>
        </row>
        <row>
         <entry>php_imap4r2.dll</entry>
         <entry>IMAP 4 関数</entry>
        </row>
        <row>
         <entry>php_ldap.dll</entry>
         <entry>LDAP 関数</entry>
        </row>
        <row>
         <entry>php_msql1.dll</entry>
         <entry>mSQL 1 クライアント</entry>
        </row>
        <row>
         <entry>php_msql2.dll</entry>
         <entry>mSQL 2 クライアント</entry>
        </row>
        <row>
         <entry>php_mssql.dll</entry>
         <entry>MSSQL クライアント (MSSQL DBライブラリが必要</entry>
        </row>
        <row>
         <entry>php3_mysql.dll (PHP 4に組込み)</entry>
         <entry>MySQL 関数</entry>
        </row>
        <row>
         <entry>php_nsmail.dll</entry>
         <entry>Netscape メール関数</entry>
        </row>
        <row>
         <entry>php_oci73.dll</entry>
         <entry>Oracle 関数</entry>
        </row>
        <row>
         <entry>php_snmp.dll</entry>
         <entry>SNMP get および walk 関数 (NT のみ!)</entry>
        </row>
        <row>
         <entry>php_zlib.dll</entry>
         <entry>ZLib 関数</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </sect2>
  </sect1>

  <sect1 id="install.apache">
   <title>Apache サーバへのインストール</title>
   <para>
    本節では、PHPをApacheにインストールする際の注意事項とコツについて
    説明します。<link linkend="install.apache.unix">Unix</link> 版と
    <link linkend="install.apache.windows">Windows</link> 版の両方につ
    いて説明します。
   </para>   
   <sect2 id="install.apache.unix">
    <title>Unix上でApacheにPHPをインストールする手順</title>
    <para>
     以下の手順の8行目で<command>configure</command> に追加する引数を
     <link linkend="install.configure">configureのオプションの全て
     </link>から選択可能です。
    </para>

    <example id="install.apache.unix.longer">
     <title>
      インストール手順 (Apache モジュール版)
     </title>
     <programlisting>
1.  gunzip apache_1.3.x.tar.gz
2.  tar xvf apache_1.3.x.tar
3.  gunzip php-x.x.x.tar.gz
4.  tar xvf php-x.x.x.tar
5.  cd apache_1.3.x
6.  ./configure --prefix=/www
7.  cd ../php-x.x.x
8.  ./configure --with-mysql --with-apache=../apache_1.3.x --enable-track-vars
9.  make
10. make install
11. cd ../apache_1.3.x
12. for PHP 3: ./configure --activate-module=src/modules/php3/libphp3.a
    for PHP 4: ./configure --activate-module=src/modules/php4/libphp4.a
13. make
14. make install

  この手順の代わりに、単に既存バイナリにhttpdバイナリを上書きコピーす
  ることも可能です。この場合には、必ずWebサーバをまずシャットダウンさ
  せておいて下さい。

15. cd ../php-x.x.x
16. for PHP 3: cp php3.ini-dist /usr/local/lib/php3.ini
    for PHP 4: cp php.ini-dist /usr/local/lib/php.ini

  PHPオプションを設定するために.iniファイルを編集して下さい。このファ
 イルを他の場所に置きたい場合は、手順8でオプション
  --with-config-file-path=/path を使用して下さい。

17. httpd.conf または srm.conf ファイルを編集し、以下を追加して下さい。
      
     PHP 3の場合:   AddType application/x-httpd-php3 .php3
     PHP 4の場合:   AddType application/x-httpd-php .php
 
  ここで好きな拡張子を選択できます。.php は単に推奨されるだけです。
  .htmlを選択することも可能です。

18. 通常の手順により Apache サーバを起動して下さい。(HUPまたはUSR1シグ
    ナルを使用してリロードするのではなく)サーバを停止してから再起動す
    る必要があります。
     </programlisting>
    </example>
    
    <para>
     PHPをApache用にコンパイルする別の例を以下に示します。
     <informalexample>
      <programlisting>
./configure --with-apxs --with-pgsql
      </programlisting>
     </informalexample>
    </para>
    <para>
     これにより、共有ライブラリ <filename>libphp4.so</filename> が作成
     されます。Apacheの<filename>httpd.conf</filename>ファイルにおいて
     LoadModuleを使用してApacheにこのライブラリをロードすることが可能
     です。上の例では、PostgreSQLサポートがこの
     <filename>libphp4.so</filename>ライブラリに埋め込まれます。
    </para>
    <para>
     <informalexample>
      <programlisting>
./configure --with-apxs --with-pgsql=shared
      </programlisting>
     </informalexample>
    </para>
    <para>
     この例でも Apache用<filename>libphp4.so</filename> 共有ライブラリ
     が作成されます。しかし、共有ライブラリ
     <filename>pgsql.so</filename> も作成されます。この共有ライブラリ
     は、<filename>php.ini</filename> ファイルのextensionディレクティ
     ブまたはスクリプト内で<function>dl</function>関数を使用して明示的
     にロードすることが可能です。
    </para>
    <para>
     <informalexample>
      <programlisting>
./configure --with-apache=/path/to/apache_source --with-pgsql
      </programlisting>
     </informalexample>
    </para>
    <para>
     This will create a <filename>libmodphp4.a</filename> library, a
     <filename>mod_php4.c</filename> and some accompanying files and
     copy this into the <literal>src/modules/php4</literal> directory
     in the Apache source tree. Then you compile Apache using
     <literal>--activate-module=src/modules/php4/libphp4.a</literal>
     and the Apache build system will create
     <filename>libphp4.a</filename> and link it statically into the
     <filename>httpd</filename> binary. The PostgreSQL support is
     included directly into this <filename>httpd</filename> binary,
     so the final result here is a single <filename>httpd</filename>
     binary that includes all of Apache and all of PHP.
    </para>
    <para>
     <informalexample>
      <programlisting>
./configure --with-apache=/path/to/apache_source --with-pgsql=shared
      </programlisting>
     </informalexample>
    </para>
    <para>
     上と同じですが、最終的な<filename>httpd</filename>に
     PostgreSQLサポートを直接インクルードする代わりに、共有ライブラリ
     <filename>pgsql.so</filename>をファイル
     <filename>php.ini</filename>または<function>dl</function>により直
     接的にPHPにロードすることが可能です。
    </para>
    <para>
     異なったPHPの構築法を選択する際、各方法の利点と欠点を考慮する必要
     があります。共有オブジェクトとして構築する場合、Apacheと分割して
     コンパイルすることが可能で、PHPを追加または変更する際に全体を再コ
     ンパイルする必要がありません。PHPをApacheに(静的に)組み込む場合に
     は、PHPはより高速にロード/実行することが可能です。詳細な情報につ
     いては、Apacheの<ulink url="&url.apachedso;">DSOサポートのWebペー
     ジ</ulink>を参照下さい。
    </para>
   </sect2>
   
   
   <sect2 id="install.apache.windows">
    <title>Windows 9x/NT および Apache 1.3.x インストールの詳細</title>
    
    <simpara>
     ApacheでPHP CGIバイナリを使用するように設定するには、
     <literal>srm.conf</literal> または <literal>httpd.conf</literal>
     を編集する必要があります。
    </simpara>
    <simpara>
     Apache用にPHPを設定する手順にはいくつかありますが、この手順は入門
     者にも使用可能な程簡単です。設定用ディレクティブに関する詳細につ
     いては、Apacheのドキュメントを参照下さい。
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        <literal>
         ScriptAlias /php/ "c:/path-to-php-dir/"
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         AddType application/x-httpd-php .php
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         AddType application/x-httpd-php .phtml
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         Action application/x-httpd-php "/php/php.exe"
        </literal>
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     ソースコードハイライト機能を使用するには、PHPスクリプトファイルを
     作成し、次のようなコードを加えてください。<literal>&lt;?php
     show_source ("original_php_script.php"); ?></literal>
     <literal>original_php_script.php</literal> の部分を
     ソースを見たいと思うファイルの名前に置き換えてください。
     (これがこの機能を使用するための唯一の手段です。)
      <emphasis>注意:</emphasis> Windows版のApache においては、
     "c:\directory\file.ext" のようなパス設定におけるバックスラッシュは、
     全てスラッシュに変換する必要があります。
    </simpara>
   </sect2>
  </sect1>

  <sect1 id="install.commandline">
   <title>CGI/コマンドラインサーバインストール</title>
   <para>
    デフォルトでは、PHPはCGIプログラムとして構築されます。これにより
    CGI処理やWeb以外のPHPスクリプトの実行に使用可能なコマンドラインイ
    ンタプリタが作成されます。PHPのモジュール組込みをサポートしている
    Webサーバを実行している場合、通常は性能面からこちらを選択するべき
    です。しかし、CGIバージョンの場合、ApacheユーザがユーザID毎に異なっ
    たPHPを使用するページを実行することが可能になります。PHPをCGIとし
    て実行する場合には、<link linkend="security">セキュリティの章
    </link>全体をよく読んで下さい。
   </para>
   
   <sect2 id="install.commandline.testing">
    <title>テスト</title>
    <simpara>
     PHPをCGIプログラムとして実行した場合、<command>make
     test</command>と入力することにより構築したものをテストすることが
     可能です。常に構築後のテストを行うことを推奨します。これにより、
     使用する環境でのPHPの問題に対して後でその問題と格闘するのではなく、
     早期に見付けることが可能となります。
    </simpara>
   </sect2>

   <sect2 id="install.commandline.benchmarking">
    <title>ベンチマーク</title>
    <simpara>
     PHP 3をCGIプログラムとして構築した場合には、
     <command>make bench</command>とすることにより、ベンチマークを実行
     することが可能です。セーフモードがデフォルトでオンの場合、30秒以
     上かかるベンチマークは完了させることができません。これは、セーフ
     モードでは、<function>set_time_limit</function> を使用することが
     できないためです。スクリプト用にこの時間を設定するには、設定
     <link linkend="ini.max-execution-time">max_execution_time</link>
     を使用して設定して下さい。<command>make bench</command> は、<link
      linkend="configuration.file">設定ファイル</link>を無視します。
    </simpara>
    <note>
     <simpara>
      <command>make bench</command> は PHP 3 でのみ利用可能です。
     </simpara>
    </note>
   </sect2>
  </sect1>

  <sect1 id="install.fhttpd">
   <title>fhttpd サーバインストール</title>
    <para>
     PHPをfhttpdモジュールとして作成するには、"Build as an fhttpd
     module?" に対して、"yes" と答えてください。(configure の オプショ
     ン<link linkend="install.configure.with-fhttpd">
     <option>--with-fhttpd=<replaceable>DIR</replaceable></option></link>) 
     そして、fhttpd ソースのベースディレクトリを指定してください。
     デフォルトディレクトリは、<filename class="directory">
      /usr/local/src/fhttpd</filename>です。
     fhttpd を使用している場合には、PHP をモジュールとして作成した方が、
     より優れた性能、より高度な制御/リモート実行機能を使用することがで
     きます。
    </para>
  </sect1>

  <sect1 id="install.iis">
   <title>IIS/PWS サーバへのインストール</title>
   <para>
    本節では、PHPをIIS(Microsoft Internet Information Server) にインス
    トールする際の注意およびヒントについて説明します。
    <link linkend="install.iis.iis3">PWS/IIS 3</link>、
    <link linkend="install.iis.pws4">PWS 4 以降</link>、
    <link linkend="install.iis.iis4">IIS 4 以降</link> のバージョンに
    ついて説明します。
   </para>

   <sect2 id="install.iis.iis3">
    <title>Windows と PWS/IIS 3</title>
    
    <simpara>
     これらのサーバーを設定するために推奨される方法は、配布ファイルに
     含まれる INI ファイル (php_iis_reg.inf) を使用する方法です。この
     ファイルを編集し、拡張機能および PHP インストールディレクトリを自
     分用の設定に調整することが可能です。さもなくば、以下の手順により、
     手動でこの設定を行うことも可能です。
    </simpara>
    <simpara>
     警告: これらの手順は、windows レジストリに直接修正します。
     エラーを一つでも生じた場合、システムの状態が不安定になる可能性
     があります。まずレジストリのバックアップをとることを強く推奨します。
     PHP 開発チームは、レジストリが損傷した場合の責任を負いません。
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
 	Regedit を実行して下さい。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
 	次の場所に進んでください: <literal>HKEY_LOCAL_MACHINE /System
 	 /CurrentControlSet /Services /W3Svc /Parameters
 	 /ScriptMap</literal>. 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
 	editメニューで次のものを選択して下さい: 
	<literal>New->String Value</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
 	PHP スクリプトで使用したい拡張子を入力して下さい。
	例: <literal>.php</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	新しい文字列値をダブルクリックし、<literal>php.exe</literal>
	へのパスをデータのフィールドに入力して下さい。例えば、
 	<literal>c:\php\php.exe %s %s</literal> となります。
	'%s %s' は「非常に」重要で、これなしでは PHP は正常に動作しま
 	せん。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	PHP スクリプトに関連付けたい全ての拡張子に関してこれらの手順を
	繰り返します。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
 	次に<literal>HKEY_CLASSES_ROOT</literal>に進んでください。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
 	編集メニューから次のものを選んでください: <literal>新規作成->
 	キー</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	前のセクションで設定した拡張子をキーに入力して下さい。例:
 	<literal>.php</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	新規のキーをハイライト表示にし、右側ペーンで、"デフォルト値" を
	ダブルクリックした後、<literal>phpfile</literal> を入力して下
	さい。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	各拡張子に関して先のセクションの設定手順を繰り返してください。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
 	ここで他の <literal>新規作成->キー</literal> を
  	<literal>HKEY_CLASSES_ROOT</literal> のもとに作成し、
 	<literal>phpfile</literal> と名前を付けます。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	新規キー <literal>phpfile</literal> をハイライト表示し、
	右側ペーン上で、"デフォルト値" をダブルクリックし、
 	<literal>PHP スクリプト</literal> を入力します。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<literal>phpfile</literal> キーを右クリックし、
 	<literal>新規作成->キー</literal> を選択し、
	<literal>Shell</literal> という名前をつけます。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<literal>Shell</literal> キーを右クリックし、<literal>新規作成-
	>キー</literal> を選択し、<literal>open</literal> という名前を
	つけます。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<literal>open</literal> キーを右クリックし、
 	<literal>新規作成->キー</literal> を選択し、
	<literal>command</literal> という名前をつけます。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	新規キー <literal>command</literal> をハイライト表示し、
	右側ペーンにて "デフォルト値" をダブルクリックし、
	<literal>php.exe</literal> へのパスを入力します。例:
 	<literal>c:\php\php.exe -q %1</literal>. 
	(<literal>%1</literal> を忘れないで下さい。)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
 	Regedit を終了して下さい。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Windows で PWS を使用した場合、レジストリを再ロードするために
        リブートして下さい。
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <simpara>
     ここまでの作業で、PWSおよび IIS 3用のシステムインストールは完了します。
     IIS 3 ユーザーは、Steven Genusa が作成したスクリプトマップ設定用の
     すばらしい<ulink url="&url.iiscfg;">ツール</ulink>を使用すること
     ができます。
    </simpara>
    
   </sect2>

   <sect2 id="install.iis.pws4">
    <title>WindowsとPWS 4以降</title>

    <simpara>
     PWS 4以降を実行するWindows上にPHPをインストールする際には、二つの
     方法があります。一つは、PHP CGIバイナリを設定する方法で、もう一つ
     は、ISAPIモジュール dllを使用する方法です。
    </simpara>

    <para>
     If you choose the CGI binary, do the following:
     <itemizedlist>
      <listitem>
       <simpara>
        Edit the enclosed <filename>pws-php4cgi.reg</filename>
        file (look into the sapi dir) to reflect the location of
        your php.exe. Forward slashes should be escaped, for example:
        <literal>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\w3svc\parameters\Script Map] ".php"="C:\\PHP\\php.exe"</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        In the PWS Manager, right click on a given directory you want
        to add PHP support to, and select Properties. Check the 'Execute'
        checkbox, and confirm.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <para>
     If you choose the ISAPI module, do the following:
     <itemizedlist>
      <listitem>
       <simpara>
        Edit the enclosed <filename>pws-php4isapi.reg</filename>
        file (look into the sapi dir) to reflect the location of
        your php4isapi.dll. Forward slashes should be escaped, for example:
        <literal>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\w3svc\parameters\Script Map] ".php"="C:\\PHP\\sapi\\php4isapi.dll"</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        In the PWS Manager, right click on a given directory you want to
        add PHP support to, and select Properties. Check the 'Execute'
        checkbox, and confirm. 
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

   </sect2>

   <sect2 id="install.iis.iis4">
    <title>Windows NT/2000 and IIS 4 or newer</title>

    <simpara>
     To install PHP on an NT/2000 Server running IIS 4 or newer,
     follow these instructions. You have two options to set up
     PHP, using the CGI binary (php.exe) or with the ISAPI module.
    </simpara>
    
    <simpara>
     In either case, you need to start the Microsoft Management
     Console (may appear as 'Internet Services Manager', either
     in your Windows NT 4.0 Option Pack branch or the Control
     Panel=&gt;Administrative Tools under Windows 2000). Then 
     right click on your Web server node (this will most probably
     appear as 'Default Web Server'), and select 'Properties'.
    </simpara>

    <para>
     If you want to use the CGI binary, do the following:
     <itemizedlist>
      <listitem>
       <simpara>
        Under 'Home Directory', 'Virtual Directory', or
        'Directory', click on the 'Configuration' button,
        and then enter the App Mappings tab.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Click Add, and in the Executable box, type:
        <literal>c:\php\php.exe %s %s</literal> (assuming
        that you have unziped PHP in c:\php\). You MUST
        have the %s %s on the end, PHP will not function
        properly if you fail to do this.
        </simpara>
      </listitem>
      <listitem>
       <simpara>
        In the Extension box, type the file name extension you want
        associated with PHP scripts. Leave 'Method exclusions'
        blank, and check the Script engine checkbox.
        You must repeat step 3 and 4 for each extension you
        want associated with PHP scripts.
        (<literal>.php</literal> and <literal>.phtml</literal>
        are common.)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Set up the appropriate security. (This is done in Internet
        Service Manager), and if your NT Server uses NTFS file system,
        add execute rights for I_USR_ to the directory that contains
        <literal>php.exe</literal>.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    
    <para>
     To use the ISAPI module, do the following:
     <itemizedlist>
      <listitem>
       <simpara>
        If you don't want to perform HTTP Authentication using PHP,
        you can (and should) skip this step. Under ISAPI Filters,
        add a new ISAPI filter. Use PHP as the filter name, and
        supply a path to the php4isapi.dll.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Under 'Home Directory', click on the 'Configuration' button.
        Add a new entry to the Application Mappings. Use the path
        to the php4isapi.dll as the Executable, supply .php as the
        extension, leave Method exclusions blank, and check the
        Script engine checkbox.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Stop IIS completely
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Start IIS again
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </sect2>
  </sect1>
	
  <sect1 id="install.netscape-enterprise">
   <title>Netscape および iPlanet Enterprise サーバのインストール</title>
   <para>
    PHPをNESまたはiPlanet Webサーバ用に構築するには、適当なインストー
    ルディレクトリを付けて<option><link
    linkend="install.configure.with-nsapi">--with-nsapi</link> =
    <replaceable>DIR</replaceable></option> オプションを使用して下さい。
    デフォルトのディレクトリは、通常 <filename
    class="directory">/opt/netscape/suitespot/</filename>です。
    <filename>/php-xxx-version/sapi/nsapi/nsapi-readme.txt</filename>
    も参照下さい。
   </para>
   <para>
    <example id="install.netscape-enterprise.solaris">
     <title>
      Solaris 上の Netscape Enterprise へのインストール例
     </title>
     <programlisting>
      Sun Solaris 2.6 上の Netscape Enterprise Server 3.6 へのインストー
      ル手順
      from: bhager@invacare.com

1. www.sunfreeware.com または他のダウンロードサイトから以下のパッケー
   ジをインストールして下さい

      flex-2_5_4a-sol26-sparc-local 
      gcc-2_95_2-sol26-sparc-local 
      gzip-1.2.4-sol26-sparc-local 
      perl-5_005_03-sol26-sparc-local 
      bison-1_25-sol26-sparc-local 
      make-3_76_1-sol26-sparc-local 
      m4-1_4-sol26-sparc-local 
      autoconf-2.13 
      automake-1.4 
      mysql-3.23.24-beta (mysql サポートを使用する場合) 
      tar-1.13 (GNU tar) 
      
2. 適当なディレクトリがパスに含まれているかどうかを確認下さい
    PATH=.:/usr/local/bin:/usr/sbin:/usr/bin:/usr/ccs/bin 
    export PATH 

3. gunzip php-x.x.x.tar.gz (.gz配布の場合、そうでない場合は4へ進む) 
4. tar xvf php-x.x.x.tar 
5. cd ../php-x.x.x 

6. 以下の手順では、/opt/netscape/suitespot/ にNetscapeサーバがインス
      トールされたているとします。そうでない場合には、正確なパスに変更
      して下さい。
    /configure --with-mysql=/usr/local/mysql --with-nsapi=/opt/netscape/suitespot/ --enable-track-vars --enable-libgcc 
7. make 
8. make install
     </programlisting>
    </example>
    baseインストールを実行し、適当なreadmeファイルを読んだ後、いくつか
    の追加インストール手順を実行する必要があるかもしれません。
   </para>
   <para>
    まず、全ての共有ライブラリを見つけるためにNetscape用の環境変数
    LD_LIBRARY_PATH にいくつかのパスを追加する必要があります。これらの
    設定は、Netscapeサーバの開始スクリプトで行うのが最善でしょう。
    Windows ユーザは、おそらくこの手順をとばすことが可能です。開始スク
    リプトは、通常以下の場所にあります。
    <filename
     class="directory">/path/to/server/https-servername/start</filename> 
   </para>
   <para>
    <filename
    class="directory">/path/to/server/https-servername/config/</filename>
    にある設定ファイルを編集することも可能です。
   </para>
	 
   <example id="install.netscape-enterprise.configure">
    <title>
     Netscape Enterprise用の設定例
    </title>
    <programlisting>
Netscape Enterprise サーバ用の設定手順
bhager@invacare.comによる

1. 次の mime.types を追加します
    type=magnus-internal/x-httpd-php exts=php

2. obj.confに以下を追加して下さい。shlib はシステムにより異なります。
   使用するOSがUNIXの場合、mime型initの後に次の行を置く必要があります。
    Init fn="load-modules" funcs="php4_init,php4_close,php4_execute,php4_auth_trans" shlib="/php4/nsapiPHP4.dll"
    Init fn=php4_init errorString="Failed to initialize PHP!"

    &lt;object name="default"&gt;
    . 
    . 
    . 
    .#注意 この次の行は全ての'ObjectType'の後で、'AddLog'行の前とする必要があります
    Service fn="php4_execute" type="magnus-internal/x-httpd-php" 
    . 
    . 
    &lt;/Object&gt;


    &lt;Object name="x-httpd-php"&gt; 
    ObjectType fn="force-type" type="magnus-internal/x-httpd-php" 
    Service fn=php4_execute 
    &lt;/Object&gt; 


     認証設定

     PHP 認証は他の認証と併用することはできません。全ての認証は、PHPス
     クリプトに渡されます。サーバ全体についてPHP認証を設定するには、次
     の行を使用します。

    &lt;Object name="default"&gt; 
    AuthTrans fn=php4_auth_trans 
    . 
    . 
    . 
    . 
    &lt;/Object&gt; 

    PHP 認証を単一のディレクトリで行うには、次の行を追加します。

    &lt;Object ppath="d:\path\to\authenticated\dir\*"&gt; 
    AuthTrans fn=php4_auth_trans 
    &lt;/Object&gt;
     </programlisting>
    </example>
  </sect1>

  <sect1 id="install.omnihttpd">
   <title>Omni HTTPd サーバのインストール</title>
   <para>
    本節は、Omni HTTPdを使用する際の注意とコツについて説明します。
   </para>
   <sect2 id="install.omnihttpd.windows">
    <title>Windows用Omni HTTPd 2.0b1</title>
    
    <simpara>
     以下のように設定するのが最も簡単です。
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <para>
	手順 1: Omni サーバーをインストールします
       </para>
      </listitem>
      <listitem>
       <para>
	手順 2: システムトレイにある青い OmniHTTPd アイコンを
	右クリックし、<literal>Properties</literal>を選択します。
       </para>
      </listitem>
      <listitem>
       <para>
	手順 3: <literal>Web Server Global Settings</literal>をクリッ
	クします。
       </para>
      </listitem>
      <listitem>
       <para>
	 手順 4: 'External' タブにて次のように入力します。: 
	<literal>virtual = .php | actual =
	c:\path-to-php-dir\php.exe</literal>
       </para>
      </listitem>
      <listitem>
       <para>
	手順 5: <literal>Mime</literal> タブにて、次のように入力します。
	<literal>virtual = wwwserver/stdcgi | actual = .php</literal>
       </para>
      </listitem>
      <listitem>
       <para>
        手順 6: <literal>OK</literal>をクリックして下さい
       </para>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     PHPと共に実行したい各拡張機能毎に手順 2～6 を繰り返します。
    </simpara>
   </sect2>   
  </sect1>

  <sect1 id="install.oreilly">
   <title>Oreilly Website Pro Server installs</title>
   <para>
    This section contains notes and hints specific to Oreilly
    Website Pro.
   </para>
   <sect2 id="install.oreilly.windows">
    <title>Oreilly Website Pro 2.5 and up for Windows</title>
    
    <simpara>
     This list describes how to set up the PHP CGI binary
     or the ISAPI module to work with Oreilly Website Pro
     on Windows.
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <para>
        Edit the Server Properties and select the tab "Mapping".
       </para>
      </listitem>
      <listitem>
       <para>
        From the List select "Associations" and enter the desired
        extension (".php") and the path to the CGI exe
        (ex. c:\php\php.exe) or the ISAPI dll file
        (ex. c:\php\sapi\php4isapi.dll).
       </para>
      </listitem>
      <listitem>
       <para>
        Select "Content Types" add the same extension ".php"
        and enter the content type. If you choose the CGI exe
        file, enter 'wwwserver/shellcgi', if you chosse the
        ISAPI module, enter 'wwwserver/isapi' (both without
        quotes).
       </para>
      </listitem>
     </itemizedlist>
    </para>
   </sect2>
  </sect1>

  <sect1 id="install.xitami">
   <title>Xitami Server installs</title>
   <para>
    This section contains notes and hints specific to Xitami.
   </para>
   <sect2 id="install.xitami.windows">
    <title>Xitami for Windows</title>
    
    <simpara>
     This list describes how to set up the PHP CGI binary
     to work with Xitami on Windows.
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <para>
        Make sure the webserver is running, and point
        your browser to xitamis admin console
        (usually http://127.0.0.1/admin), and click on
        Configuration.
       </para>
      </listitem>
      <listitem>
       <para>
        Navigate to the Filters, and put the
        extension which php should parse (i.e. .php)
        into the field File extensions (.xxx).
       </para>
      </listitem>
      <listitem>
       <para>
        In Filter command or script put the path and name
        of your php executable i.e. c:\php\php.exe.
       </para>
      </listitem>
      <listitem>
       <para>
        Press the 'Save' icon.
       </para>
      </listitem>
     </itemizedlist>
    </para>
   </sect2>
  </sect1>

  <sect1 id="install.otherhttpd">
   <title>その他のWebサーバ</title>
   <para>
    PHPは、多くのWebサーバーをサポートするように構築することが可能で
    す。サーバーに関係する設定オプションの完全なリストについては、
    <link linkend="install.configure.servers">サーバーに関係した
     オプション</link> を参照下さい。
    The PHP CGI binaries are compatible with almost all
    webservers supporting the CGI interface.
   </para>
  </sect1>

  <sect1 id="install-problems">
   <title>インストール時の問題</title>

   <sect2>
    <title>FAQ を読んでください</title>
    <simpara>
     幾つかの問題が、その他の問題よりもより一般的に生じています。
     最も一般的な問題は、PHP FAQ に記載されています。
     PHP FAQ は、<ulink url="&url.php.faq;">&url.php.faq;</ulink>
     にあります。
    </simpara>
   </sect2>

   <sect2 id="install.bugreports">
    <title>バグの報告</title>
    <simpara>
     PHPのバグを発見した場合は報告して下さい。PHPの開発者は、あなたが
     そのバグをレポートしない限り、恐らくそのバグを知ることがなく、修
     正されることもないでしょう。バグのレポートは、<ulink
     url="&url.php.bugs;" >&url.php.bugs;</ulink>にあるバグ追跡システ
     ムを使用しても行うことができます。
    </simpara>
   </sect2>

   <sect2 id="install.otherproblems">
    <title>その他の問題</title>

    <simpara>
     問題がそれでも解決しない場合には、PHPインストール用メーリングリス
     トの誰かが助けてくれることでしょう。最初に、アーカイブをチェック
     して、過去に誰かが自分と同じ問題に関する質問を行い、既に解答を受
     けていないかをチェックする必要があります。アーカイブは、<ulink
     url="&url.php;">&url.php;</ulink>のサポートページで公開されていま
     す。PHPインストール用メーリングリストに加入するには、空のメールを
     <ulink url="mailto:&email.php.install.subscribe;">
      &email.php.install.subscribe;</ulink> に送信して下さい。メーリン
      グリストのアドレスは、<literal>&email.php.install;</literal>です。
    </simpara>
    <simpara>
     メーリングリストにおいて質問をしたい場合は、正確さを心がけ、
     解答に必要な使用環境に関する事項(オペレーティングシステムの種類、
     PHP のバージョン、Webサーバーの種類、PHP を CGI として使用しているのか
     サーバーモジュールとして使用しているのか、等)を明らかにするように
     して下さい。他の人が問題を再現し、テストできるのに充分なコードを
     示すことが好ましいです。
    </simpara>
   </sect2>

   <sect2>
    <title>国際化関数について</title>
    
    <simpara>
     国際化関数を有効にすることにより、日本語処理時の漢字コード自動変
     換機能を始めとする有用な機能が利用可能になります。(国際化版のPHP
     のみ対応)
    </simpara>   
    
    <sect3 id="i18n-abstract">
     <title>国際化関数の入手</title>
     <para>
      PHP 国際化パッケージは、「PHP国際化プロジェクト」により開発され、
      <ulink url="http://php.jpnnet.com/">
       http://php.jpnnet.com/</ulink>
      または
      <ulink url="ftp://ftp.happysize.co.jp/php-ja-jp/">
       ftp://ftp.happysize.co.jp/php-ja-jp/</ulink>で手に入ります。
     </para>
    </sect3>
    
    <sect3 id="i18n-compile-cgi">
     <title>CGI版のコンパイル</title>

     <para>
      <informalexample>
       <programlisting>
	% tar xvzf php-3.0.18-i18n-ja-2.tar.gz
	% cd php-3.0.18-i18n-ja-2
	% ./configure --enable-i18n --enable-mbregex
	% make
       </programlisting>
      </informalexample>
     </para>
    </sect3>

    <sect3 id="i18n-compile-apache">
     <title>Apache版のコンパイル例</title>
     <para>
      <informalexample>
       <programlisting>
% tar xvzf php-3.0.18-i18n-ja-2.tar.gz
% tar xvzf apache_1.3.x.tar.gz
% cd apache_1.3.x
% ./configure
% cd ../php-3.0.18-i18n-ja-2
% ./configure --with-apache=../apache_1.3.x --enable-i18n --enable-mbregex
% make
% make install
% cd ../apache_1.3.x
% ./configure --activate-module=src/modules/php3/libphp3.a
% make
% make install
       </programlisting>
      </informalexample>
     </para>
    </sect3>

    <sect3 id="i18n-compile-apache-dso">
     <title>Apache DSO版のコンパイル例</title>
     <para>
      DSO 機能付きのApacheを作成しておく。
      <informalexample>
       <programlisting>
	% tar xvzf apache_1.3.x.tar.gz
	% cd apache-1.3.x
	% ./configure --enable-shared=max
	% make
	% make install

	ここからがPHP3
	% cd php-3.0.18-i18n-ja-2
	% ./configure --with-apxs=/usr/local/apache/bin/apxs --enable-i18n \
        --enable-mbregex
	% make
	% make install
       </programlisting>
      </informalexample>
     </para>
    </sect3>
    
    <sect3 id="i18n-note">
     <title>国際化関数に関する注意事項</title>
     
     <note>
      <para>
       HTTP出力コードをpass以外に指定した場合、「内部コード」からHTTP
       出力コードへのコード変換が自動的に行われます。この結果、(GD等で
       画像出力を行う場合等)バイナリデータを出力したい場合に、期待しな
       いコード変換が行われてデータが壊れてしまいます。
       このような場合には、HTTP出力コードをpassに指定してください。
      </para>
     </note>
    </sect3>

   </sect2>

  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
