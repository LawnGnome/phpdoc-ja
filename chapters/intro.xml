<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.23 $ -->
<!-- EN-Revision: 1.39 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
 <chapter id="introduction">
  <title>入門</title>

  <sect1 id="intro-whatis">
   <title>PHPとはなんでしょう?</title>
   <simpara>
    <acronym>PHP</acronym>("PHP: Hypertext Preprocessor"
    の再帰的略語です)は、広く使われているオープンソースの汎用スクリ
    プト言語です。PHPは、特にWeb開発に適しており、
    HTMLに埋め込むことができます。
   </simpara>
   <para>
    この答は簡単ですが、実際どういう意味でしょう? 以下に例を示します。
   </para>

   <para>
    <example>
     <title>初歩的な例</title>
     <programlisting role="php">
<![CDATA[
<html>
    <head>
        <title>Example</title>
    </head>
    <body>

        <?php
        echo "Hi, I'm a PHP script!";
        ?>

     </body>
</html>
]]>
      </programlisting>
    </example>
   </para>
   <para>
    PerlやCのような他の言語で書かれたスクリプトとの違いは、
    HTMLを出力するために多くのコマンドを記述する代わりに、
    何かを行う(この場合はテキストを出力する)コードを埋め込んだ
    HTMLスクリプトを書くということです。PHPのコードは、"PHPモード" に入っ
    たり出たりする特別な<link linkend="language.basic-syntax.phpmode">
    開始および終了のタグ</link>で括られています。
   </para>
   <para>
    PHP がクライアントサイド JavaScript のようなものと異なっている点は、
    コードがサーバーで実行されるということです。上のようなスクリプトを
    サーバー上においていたとしたら、クライアントは、スクリプトを実行し
    た結果を受け取りますが、その出力を作成したコードに関する情報を得る
    ことはできません。全てのHTMLファイルをPHPで処理するようにWebサーバー
    を設定することさえ可能で、この場合、ユーザーが袖の内に何があるかを
    見分けることは不可能になることでしょう。
   </para>
   <para>
    PHPを使用する上で最も優れている点は、初心者に対しては非常に分かり
    易いと同時に、プロフェッショナルのプログラマに対しては多くの進んだ
    機能を提供している点です。PHPの機能を羅列した長い一覧表を読まなけ
    ればならないのかと心配する必要はありません。PHPはすぐに始められま
    すし、数時間の内に簡単なスクリプトが書けるようになります。
   </para>
   <para>
    PHPを使用した開発ではサーバサイドでの動作に焦点が当てられますが、
    他にも多くのことが可能です。<link linkend="intro-whatcando">
    PHPにできることは?</link>まで読み進めてみてください。
    Webプログラミングのみに関心がある場合には、<link linkend="tutorial">
    簡易チュートリアルき</link>に進んでください。
   </para>
  </sect1>

  <sect1 id="intro-whatcando">
   <title>PHPにできることは?</title>
   <para>
    あらゆることができます。PHPでは主にサーバサイドでの活用に焦点が
    当てられているため、フォームからデータを取得したり、動的にページ
    の内容を生成したり、クッキーを送信・受信するといった他のCGI
    プログラムに出来ることは全て行うことが出来ます。しかし、これが
    全てではありません。
   </para>
   <para>
    PHPスクリプトが使用される場所は主に3つあります。
    <itemizedlist>
     <listitem>
      <simpara>
       サーバサイドでのスクリプティング。これは最も古くからあり
       PHPの中心となる分野です。ここでPHPを動作させるには
       3つのものが必要です。PHPパーサ(CGIもしくはサーバモジュール)、
       ウェブサーバ、そしてブラウザです。ウェブサーバは
       インストールされたPHPと連結して起動されなければなりません。
       ブラウザでウェブサーバにアクセスし、PHPページを閲覧することで
       PHPプログラムの出力を得ることが出来ます。<link
       linkend="installation">インストール手順</link>の章に詳しい
       情報があります。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       コマンドラインでのスクリプティング。PHPスクリプトは
       サーバもブラウザも無しで動作させるようにすることも出来ます。
       この場合、PHPパーサだけが必要となります。このタイプは
       cron(Windowsではタスクスケジューラ)を使用して一定間隔で
       スクリプトを実行したい場合や、ちょっとした文書処理を
       行うのに最適な方法です。<link linkend="features.commandline">
       コマンドラインでPHPを使う</link>の章に詳しい情報があります。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       クライアントサイドでのGUIアプリケーション。PHPはおそらく
       ウィンドウを使用したアプリケーションを書くのに最適な言語
       では無いと思いますが、PHPに非常に慣れている場合には、そして
       PHPの進んだ機能をクライアントサイドでのアプリケーションで
       使用した場合にはPHP-GTKを使ってプログラムを書くことが出来ます。
       同様の方法でクロスプラットフォーム名アプリケーションを書く
       ことも出来ます。PHP-GTKはPHPを拡張するもので、通常の
       ディストリビューションには含まれません。もし興味があるなら
       <ulink url="&url.php.gtk;">PHP-GTKのサイト</ulink>を
       訪れてみてください。
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHPは Linux, 多くのUnix系システム(HP-UX, Solaris, OpenBSD等),
    Microsoft Windows, Mac OS X, RISC OS, その他全ての有名なOSで
    動作します。PHPはまた現在使用されているほとんど全てのウェブサーバを
    サポートします。これには、Apache, Microsoft Internet Information
    Server, Oreilly Website Pro server, Caudium, Xitami, OmniHTTPd等
    が含まれます。そうしたウェブサーバの大部分に対してPHPはモジュールを
    提供し、その他のものに対してはCGIが提供されます。
   </para>
   <para>
    つまりPHPを使用する場合にはOSとウェブサーバを自由に選ぶことが出来ます。
    さらに手続き型のプログラミングかオブジェクト指向のプログラミングか、
    もしくはそれらを混在させるかといった選択を行うこともできます。
    現在のバージョンのPHPでは標準的なOOPの機能が全て実現されている
    訳ではありませんが、(PEARライブラリを含め)多くのコードライブラリ
    や大きなアプリケーションがOOPのみを使用して書かれています。
   </para>
   <para>
    PHPはHTMLを出力するだけではありません。PHPはイメージやPDFファイル、
    そして(libswfやMingを使って)Flashムービーまでもをその場で生成する
    機能を備えています。またXHTMLやXMLといったその他の文書も自動的に
    生成することが出来ますし、ファイルシステムに保存したり、印刷したり
    サーバ側でキャッシュすることも出来ます。
   </para>
   <para>
    PHP の機能の中で最も強力で優れた機能は、広範なデータベースをサポー
    トしていることでしょう。データベース機能を用いたWebページの作成は、
    非常に簡単です。以下のデータベースが現在サポートされています。
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (読込みのみ)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 および OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>SQLite</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
    また、DBXデータベース抽象化モジュールもあります。これはこのモジュールで
    サポートされているデータベースに透過的にアクセスする機能を提供します。
    加えて、PHPはODBC(Open Datebase Connection)をサポートするので、この世界
    標準の機構をサポートするどんなデータベースにもアクセスすることが出来ます。
   </para>
   <para>
    PHP は、IMAP、SNMP、NNTP、POP3、HTTP、COM (Windowsのみ) やその他
    数え切れない程多くのプロトコルを用いる他のサービスの状態を追跡する
    機能もサポートしています。低レベルのネットワークソケットをオープンし、
    他のプロトコルを用いて通信を行うことも可能です。また、PHPはWDDXを
    サポートし、基本的に全てのウェブプログラミング言語間で複雑なデータ交換
    を行うことができます。相互接続機能としては、他にJavaオブジェクトの
    インスタンスを作成してそれをPHPのオブジェクトとして透過的にアクセス
    する機能や、CORBA拡張モジュールを使用してリモートオブジェクトにアクセス
    する機能があります。
   </para>
   <para>
    PHPにはPOSIX拡張正規表現もしくはPerl正規表現からXML文書の解析に至るまで
    非常に便利なテキスト処理の機能があります。XML文書の解析や操作のために
    SAXとDOMをサポートしています。XML文書の変換にはXSLT拡張モジュールを
    使用することが出来ます。
   </para>
   <para>
    eコマースでPHPを使用するのなら、オンラインでの支払いを処理するのに、
    Cybercash payment、CyberMUT、Verisign Payflow Pro、そしてCCVS関数が便利です。
   </para>
   <para>
    他にも多くの興味深い拡張モジュールがあります。mnoGoSearchサーチエ
    ンジン関数、IRCゲートウェイ関数、多くの圧縮ユーティリティ(gzip,
    bz2)、カレンダー関数等です。
   </para>
   <para>
    お分かりの通り、このページではPHPの機能やPHPを使用することの利点を全て
    紹介することは出来ません。<link linkend="installation">PHPのインストール
    </link>の章を読んで見てください。紹介された拡張モジュールに関しては<link
    linkend="funcref">関数リファレンス</link>を読んでみてください。
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
