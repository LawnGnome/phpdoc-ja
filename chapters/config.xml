<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.32 $ -->
<!-- sync: 1.114 -->
 <chapter id="configuration">
  <title>設定</title>
  
  <sect1 id="configuration.file">
   <title>設定ファイル</title>
   
   <simpara>
    設定ファイル (PHP 3.0 では <filename>php3.ini</filename>、
    PHP 4.0 では &php.ini;) は、PHP の起動時に読み込まれます。
    PHP のサーバーモジュール版では、このファイルは、Web サーバーの起動
    時に一度だけ読み込まれます。<acronym>CGI</acronym>と
    <acronym>CLI</acronym>版では、起動する度にこのファイルが読み込まれます。
   </simpara>
   <para>
    &php.ini; のデフォルトの場所は、コンパイル時のオプションです。
    (<link linkend="faq.installation.phpini">FAQ</link>エントリを参照下さい。)
    しかし、<acronym>CGI</acronym> および
    <acronym>CLI</acronym> 版の場合、コマンドラインスイッチ
    <literal>-c</literal>によりこれを変更することができます。
    <link linkend="features.commandline">コマンドライン</link>からの
    <literal>PHP</literal> の使用に関する章を参照下さい。
    &php.ini;を探すパスを追加するために環境変数
    <literal>PHPRC</literal> を使用することもできます。
   </para>
   <note>
    <para>
     Apache web サーバー は、スタート時に作業ディレクトリをルートディレクトリ
     に変更するので、PHPは、ルートディレクトリに
     <filename>php.ini</filename> が存在する場合、それを読もうとします。
    </para>
   </note>
   <para>
    下記では、必ずしもすべての PHP ディレクティブが説明されているわけでは
    ありません。すべてのディレクティブについての説明は、&php.ini; ファイル
    のコメントを参照してください。CVS にある最新の &php.ini; は、
    <ulink url="&url.php.cvs.phpini;">ここ</ulink> で見ることができます。
   </para>
   <note>
    <para>
     PHPディレクティブ
     <link linkend="ini.register-globals">register_globals</link>
     のデフォルト値は、PHP <ulink url="&url.php.release4.2.0;">4.2.0</ulink>
     以降では <emphasis>on</emphasis> から <emphasis>off</emphasis>
     に変更されました。
    </para>
   </note>
   <para>
    <example>
     <title>&php.ini; の例</title>
     <programlisting role="ini">
<![CDATA[
; 引用符をつけないセミコロン(;)の後のテキストは全て無視されます。
[php] ; セクションマーカ (角括弧の中のテキスト) は無視されます
; 論理値は次のどれかとなります:
;    true, on, yes
; または false, off, no, none
register_globals = off
magic_quotes_gpc = yes

; 文字列を二重引用符で括ることも可能です
include_path = ".:/usr/local/lib/php"

; バックスラッシュは他の文字と同様に処理されます
include_path = ".;c:\php\lib"
]]>
     </programlisting>
     <!-- TODO: add more details about values and expressions -->
    </example>
   </para>
  </sect1>

  <sect1 id="configuration.changes">
   <title>設定を変更するには</title>
   
   <sect2 id="configuration.changes.apache">
    <title>Apacheモジュールとして<literal>PHP</literal>を実行する</title>
    <simpara>
     PHP を Apache モジュールとして使用する場合、Apache用設定ファイルや
     .htaccess ファイルに命令を記述することによりPHPの設定を行うことが
     可能です("AllowOverride Options" もしくは "AllowOverride All"権限
     が必要)。
    </simpara>
   
    <para>
     PHP 4.0 においては、PHP設定用の複数のApacheディレクティブがあり、
     Apacheの設定ファイルでPHPの設定を変更可能です。どのディレクティブが、
     <constant>PHP_INI_ALL</constant> か, <constant>PHP_INI_PERDIR</constant>,
     または <constant>PHP_INI_SYSTEM</constant> なのかについてのリストは、
     <function>ini_set</function> の説明を参照下さい。
    </para>

    <note>
     <simpara>
      PHP 3.0 においては、<filename>php3.ini</filename>の各ディレクティ
      ブに対応した Apache 用ディレクティブが存在し、PHP 用のディレクティ
      ブの前に "php3_" を付けて使用することにより、設定の変更が可能です。
     </simpara>
    </note>  

    <para>
     <variablelist>
      <varlistentry>
       <term>
        <systemitem role="directive">php_value</systemitem>
        <parameter>name</parameter>
        <parameter>value</parameter>
       </term>
       <listitem>
        <para>
         指定した変数の値を設定します。<constant>PHP_INI_ALL</constant> と
         <constant>PHP_INI_PERDIR</constant> ディレクティブでのみ利用可能です。
         以前にセットされた値をクリアしたい場合は、<literal>none</literal> を
         値として使用してください。
        </para>
        <note>
         <simpara>
          ブーリアン値を設定するにあたり、<literal>php_value</literal> を
          使わないようにしてください。代わりに、<literal>php_flag</literal>
          (下記を参照) を使ってください。
         </simpara>
        </note>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         論理値のオプション設定を変更するために使用します。
         <constant>PHP_INI_PERDIR</constant> ディレクティブでのみ利用可能です。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_value</systemitem>
       <parameter>name</parameter>
        <parameter>value</parameter>
       </term>
       <listitem>
        <para>
         指定した変数の値を設定します。このディレクティブは、&htaccess;
         ファイルでは利用できません。
         <systemitem role="directive">php_admin_value</systemitem>
         で設定されたディレクティブの値は、&htaccess; や
         バーチャルホストディレクティブ内から上書きできません。
         以前にセットされた値をクリアしたい場合は、<literal>none</literal> を
         値として使用してください。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         論理値のオプションを設定するために使用されます。
         このディレクティブは、&htaccess; ファイルでは利用できません。
         php_admin_value で設定されたディレクティブの値は、&htaccess; や
         バーチャルホストディレクティブ内から上書きできません。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <example>
      <title>Apache 設定の例</title>
      <programlisting role="ini">
<![CDATA[
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_flag safe_mode on
</IfModule>
<IfModule mod_php3.c>
  php3_include_path ".:/usr/local/lib/php"
  php3_safe_mode on
</IfModule>
]]>
      </programlisting>
     </example>
    </para>
    <caution>
     <para>
      PHP定数はPHP以外では使用できません。例えば、
      <filename>httpd.conf</filename>の中で
      <link linkend="ini.error-reporting">error_reporting</link>
      ディレクティブを設定するために <constant>E_ALL</constant>
      または <constant>E_NOTICE</constant> のようなPHP定数を使用することは
      できません。これらは意味を有さないため、
      <emphasis>0</emphasis> と評価されてしまいます。
      代わりに対応するビットマスクを使用して下さい。これらの定数は、
      &php.ini; で使用することができます。
     </para>
    </caution>
   </sect2>

   <sect2 id="configuration.changes.windows">
    <title>Changing <literal>PHP</literal> configuration via the Windows registry</title>
     <simpara>
      When running PHP on Windows, the configuration values can be
      modified on per-directory basis using the Windows registry. The
      configuration values are stored in the registry key 
      <literal>HKLM\SOFTWARE\PHP\Per Directory Values</literal>, 
      in the sub-keys corresponding to the path names. For example, configuration 
      values for the directory <literal>c:\inetpub\wwwroot</literal> would
      be stored in the key <literal>HKLM\SOFTWARE\PHP\Per Directory
      Values\c\inetpub\wwwroot</literal>. The settings for the
      directory would be active for any script running from this
      directory or any subdirectory of it. The values under the key
      should have the name of <link linkend="configuration">PHP
      configuration directive</link> and the string value. PHP
      constants in the values would not be parsed. 
     </simpara>
   </sect2>

   <sect2 id="configuration.changes.other">
    <title><literal>PHP</literal>への別のインターフェイス</title>
    <para>
     <literal>PHP</literal> へのインターフェイスによらず、
     <function>ini_set</function>によりスクリプトの実行時ある種の値を
     変更することができます。以下の表にどのレベルのディレクティブを設
     定/変更できるかの概要を示します。
    </para>
    <para>
     <table>
      <title>PHP_INI_* 定数の定義</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>定数</entry>
         <entry>値</entry>
         <entry>意味</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>PHP_INI_USER</entry>
         <entry>1</entry>
         <entry>ユーザスクリプトで設定できるエントリ</entry>
        </row>
        <row>
         <entry>PHP_INI_PERDIR</entry>
         <entry>2</entry>
         <entry>
          &php.ini;, &htaccess; および &httpd.conf; で設定できるエントリ
         </entry>
        </row>
        <row>
         <entry>PHP_INI_SYSTEM</entry>
         <entry>4</entry>
         <entry>
          &php.ini; または &httpd.conf; で設定できるエントリ
         </entry>
        </row>
        <row>
         <entry>PHP_INI_ALL</entry>
         <entry>7</entry>
         <entry>どこでも設定できるエントリ</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <function>phpinfo</function>の出力で設定値を参照することができま
     す。また、<function>ini_get</function> または
     <function>get_cfg_var</function>により個々の設定値にアクセスする
     ことも可能です。
    </para>
   </sect2>
  </sect1>
  
  <sect1 id="configuration.directives">
   <title>設定ディレクティブ</title>
   <para>
    以下のリストは、PHPディレクティブの完全なリストではありません。ディレ
    クティブのリストは、例えばセッション関連のディレクティブは
    <link linkend="ref.session">セッションの章</link>にあるといったように
    各分野毎に適当な場所にあります。
   </para>
   
   <sect2 id="ini.sect.httpd-options">
    <title>httpdオプション</title>
    <para>
     <table>
      <title>httpdオプション</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>名前</entry>
         <entry>デフォルト</entry>
         <entry>変更の可否</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>async_send</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
    </para>
   </sect2>
   
   <sect2 id="ini.sect.language-options">
    <title>言語オプション</title>
    <para>
     <table>
      <title>言語およびその他の設定オプション</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>名前</entry>
         <entry>デフォルト</entry>
         <entry>変更の可否</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>short_open_tag</entry>
         <entry>On</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>asp_tags</entry>
         <entry>Off</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>precision</entry>
         <entry>"14"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>y2k_compliance</entry>
         <entry>Off</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>allow_call_time_pass_reference</entry>
         <entry>On</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>expose_php</entry>
         <entry>On</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    &ini.descriptions.title; 

    <para>
     <variablelist>
      <varlistentry id="ini.short-open-tag">
       <term>
        <parameter>short_open_tag</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         PHP タグの短縮型 (<userinput>&lt;? ?&gt;</userinput>) を使用
         可能にするかどうかを設定します。PHPをXMLと組み合わせて用いる
         場合は、<userinput>&lt;?xml ?&gt;</userinput>をファイル中で用
         いるためにこのオプションをオフにする必要があります。オンにし
         た場合にPHPでXMLを出力するには、例えば、次のようにします。
         <userinput>&lt;?php echo '&lt;?xml version="1.0"';
         ?&gt;</userinput> これをオフにした場合、長い方の形式のタグ	
         (<userinput>&lt;?php ?&gt;</userinput>)を使用する必要がありま
         す。
        </para>
        <note>
         <para>
          このディレクティブは、<userinput>&lt;? echo</userinput>と同じ形式の
          ショートカット<userinput>&lt;?=</userinput>も影響を受けます。
          このショートカットを使用するには、
          <systemitem role="directive">short_open_tag</systemitem>をonとする
          必要があります。
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.asp-tags">
       <term>
        <parameter>asp_tags</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         ASP 形式のタグ &lt;% %&gt; を通常のタグ &lt;?php ?&gt; 
         に加えて使用可能にします。
         このスイッチにより、出力の短縮形 &lt;%= $value %&gt; も
         使用できるようになります。
         詳細な情報は、<link linkend="language.basic-syntax.phpmode">
         HTML からのエスケープ</link>を参照下さい。
        </simpara>
        <note>
         <para>
          ASP形式のタグは3.0.4で追加されました。
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.precision">
       <term>
        <parameter>precision</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <simpara>
         浮動小数点数に関して表示される最大桁数を指定します。
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.y2k-compliance">
       <term>
        <parameter>y2k_compliance</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         2000年問題対応を強制します。(2000年問題非対応のブラウザにおいて、問題
         が発生する可能性があります。)
        </simpara>
       </listitem>
      </varlistentry>


      <varlistentry id="allow-call-time-pass-reference">
       <term>
        <parameter>allow_call_time_pass_reference</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         関数のコール時に引数を強制的に参照で渡す機能の有効/無効を設定
         します。この機能は過去のものであり、将来のバージョンの
         PHP/Zendではサポートされない可能性があります。
         推奨される方法は、関数宣言時に参照渡しとするべき引数を指定す
         る方法です。将来のバージョンでの動作を保障するために、このオ
         プションをoffとし、スクリプトがこの状態で正しく動作することを
         確認することが推奨されます。
         (この機能を使用する度に警告が発生し、引数は参照ではなく値で渡
         されます。)
        </para>
        <para>
         <link linkend="language.references">参照に関する説明</link>も
         参照下さい。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="expose-php">
       <term>
        <parameter>expose_php</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         (例えば、WebサーバヘッダにPHPのサインを追加することにより、)
         PHPがサーバーにインストールされていることを表示するかどうかを
         指定します。これは全くセキュリティ上の脅威ではなく、サーバ上
         でPHPを使用しているかどうかを調べられるようにするものです。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

   <sect2 id="ini.sect.resource-limits">
    <title>リソース制限</title>
    <para>
     <table>
      <title>リソース制限</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>名前</entry>
         <entry>デフォルト</entry>
         <entry>変更の可否</entry>
        </row>
       </thead>
       <tbody>
        <row>
        <entry>memory_limit</entry>
         <entry>"8M"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    &ini.descriptions.title;

    <para>
     <variablelist>
      <varlistentry id="ini.memory-limit">
       <term>
        <parameter>memory_limit</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <para>
         スクリプトが確保できる最大メモリをバイト数で指定します。この
         命令は、正しく書かれていないスクリプトがサーバーのメモリを食
         いつぶすことを防止するのに役立ちます。
         このディレクティブを使うためには、コンパイル時に有効にして
         おかなくてはなりません。このとき、configure のパラメータには、
         <literal>--enable-memory-limit</literal> が含まれているはずです。
         もし、使用可能メモリに制限を設けたくない場合は、-1 を指定して
         ください。
        </para>
        <para>
         As of PHP 4.3.2, and when memory_limit is enabled, the PHP function 
         <function>memory_get_usage</function> is made available.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <link linkend="ini.max-execution-time">max_execution_time</link>
     も参照下さい。
    </para>
   </sect2>

   <sect2 id="ini.sect.data-handling">
    <title>データ処理</title>
    <para>
     <table>
      <title>データ処理設定オプション</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>名前</entry>
         <entry>デフォルト</entry>
         <entry>変更の可否</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>track-vars</entry>
         <entry>"On"</entry>
         <entry>PHP_INI_??</entry>
        </row>
        <row>
         <entry>arg_separator.output</entry>
         <entry>"&amp;"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>arg_separator.input</entry>
         <entry>"&amp;"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>variables_order</entry>
         <entry>"EGPCS"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>register_globals</entry>
         <entry>"Off"</entry>
         <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>register_argc_argv</entry>
         <entry>"On"</entry>
         <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
       </row>
       <row>
        <entry>post_max_size</entry>
        <entry>"8M"</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
       <row>
        <entry>gpc_order</entry>
        <entry>"GPC"</entry>
        <entry>PHP_INI_ALL</entry>
       </row>
       <row>
        <entry>auto_prepend_file</entry>
        <entry>""</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
       <row>
        <entry>auto_append_file</entry>
        <entry>""</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
        <row>
         <entry>default_mimetype</entry>
         <entry>"text/html"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>default_charset</entry>
         <entry>"iso-8859-1"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>always_populate_raw_post_data</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>allow_webdav_methods</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    &ini.descriptions.title;

    <para>
     <variablelist>
      <varlistentry id="ini.track-vars">
       <term>
        <parameter>track_vars</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         このオプションを有効にした場合、環境変数、GET、POST、クッキー、
         サーバ変数はそれぞれ、グローバル連想配列
         <varname>$_ENV</varname>,
         <varname>$_GET</varname>,
         <varname>$_POST</varname>,
         <varname>$_COOKIE</varname>,
         <varname>$_SERVER</varname>で参照することができます。
        </para>
        <para>
         PHP 4.0.3以降, <systemitem
         role="directive">track_vars</systemitem> は常にonとなっている
         ことに注意して下さい。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.arg-separator.output">
       <term>
        <parameter>arg_separator.output</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         PHPがURLを生成する際にURL引数を区分するために使用されるセパレー
         タ。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="arg-separator.input">
       <term>
        <parameter>arg_separator.input</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         入力されたURLを変数にパースする際にPHPが使用するセパレータのリスト。
        </para>
        <note>
         <para>
          このディレクティブで指定した全ての文字はセパレータとして認識
          されます!
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.variables-order">
       <term>
        <parameter>variables_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         EGPCS (Environment, GET, POST, Cookie, Server) 変数のパースの
         順番を設定します。このディレクティブのデフォルトの設定値は、
         "EGPCS"です。例えば、これを"GP"に設定するとPHPは完全に環境変
         数、クッキー、サーバ変数を無視し、GETメソッド変数を同じ名前の
         POSTメソッド変数で全て上書きするようになります。
        </para>
        <para>
         <link linkend="ini.register-globals">register_globals</link>
         も参照下さい。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-globals">
       <term>
        <parameter>register_globals</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         EGPCS(Environment, GET, POST, Cookie, Server)変数を
         グローバル変数として登録するかどうかを指定します。例えば、
         register_globals = onの場合、URL
         <literal>http://www.example.com/test.php?id=3</literal>は、
         <varname>$id</varname>を生成します。また、
         <varname>$_SERVER['DOCUMENT_ROOT']</varname>から
         <varname>$DOCUMENT_ROOT</varname>が生成されます。
         使用するスクリプトのグローバルスコープをユーザのデータで混乱
         させられたくない場合には、このオプションをoffにするとよいでしょう。
         PHP <ulink url="&url.php.release4.2.0;">4.2.0</ulink>以降、
         このディレクティブのデフォルトは、<emphasis>off</emphasis>となっています。
         <link linkend="language.variables.superglobals">スーパーグローバル</link>: 
         <varname>$_ENV</varname>, <varname>$_GET</varname>, 
         <varname>$_POST</varname>, <varname>$_COOKIE</varname>, 
         <varname>$_SERVER</varname>のような
         PHPの<link linkend="reserved.variables">定義済みの変数</link>を
         かわりに使用することが推奨されています。
         関連する情報については、セキュリティの章の
         <link linkend="security.registerglobals">register_globalsの使用</link> 
         を参照してください。
        </para>
        <para>
         <systemitem role="directive">register_globals</systemitem>は、
         (<function>ini_set</function>で)実行時に設定することができないことに
         注意して下さい。しかし、前記のようにホストが許可している場合には、
         <filename>.htaccess</filename>を使用することができます。
         <filename>.htaccess</filename>エントリの例を以下に示します。
         <userinput>php_flag register_globals on</userinput>
        </para>
        <note>
         <para>
          <systemitem role="directive">register_globals</systemitem> は、
          <link linkend="ini.variables-order">variables_order</link>
          ディレクティブの影響を受けます。
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-argc-argv">
       <term>
        <parameter>register_argc_argv</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         PHPが変数argvとargcを宣言するかどうかを指定します
         (argvにはGETの情報が格納されます)。
        </simpara>
        <simpara>
         <link linkend="features.commandline">コマンドライン</link>
         も参照下さい。このディレクティブはPHP 4.0.0で
         追加されました。以前のバージョンでは常に"on"です。
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-long-arrays">
       <term>
        <parameter>register_long_arrays</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         PHPが、古い長い<varname>$HTTP_*_VARS</varname> 型の
         <link linkend="language.variables.predefined">定義済みの変数</link>
         を登録するかどうかを指定します。
         On (デフォルト)とした場合、<varname>$HTTP_GET_VARS</varname> のような
         長い定義済みのPHP変数が定義されます。
         これらの変数を使用していない場合には、性能面からこのオプションをoffとすることが
         推奨されています。
         代りに<varname>$_GET</varname>のようなスーパーグローバル変数を使用して下さい。
        </simpara>
        <simpara>
         このディレクティブはPHP 5.0.0で利用可能となりました。
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.post-max-size">
       <term>
        <parameter>post_max_size</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <simpara>
         POSTデータに許可される最大サイズを設定します。この設定は、ファ
         イルアップロードにも影響します。大きなファイルをアップロード
         するには、この値を <link
          linkend="ini.upload-max-filesize">upload_max_filesize</link>
         より大きく設定する必要があります。
        </simpara>
        <simpara>
         configureスクリプトでメモリ制限を有効とした場合、<link
         linkend="ini.memory-limit">memory_limit</link>も
         ファイルアップロードに影響します。一般的に <link
         linkend="ini.memory-limit">memory_limit</link> は、
         <link
         linkend="ini.post-max-size">post_max_size</link>よりも大きく
         する必要があります。
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.gpc-order">
       <term>
        <parameter>gpc_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         GET/POST/COOKIE 変数処理の順番を設定します。この命令の
         デフォルトの設定は、"GPC"です。例えば、これを"GP"にPHPはクッキーを
         完全に無視し、GETメソッド変数を同名のPOSTメソッド変数で上書き
         します。
        </para>
        <note>
         <para>
          このオプションは、PHP 4では利用できまないことに注意して下さい。
          代わりに、<link linkend="ini.variables-order">variables_order</link>
          を使用して下さい。
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-prepend-file">
       <term>
        <parameter>auto_prepend_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         メインファイルの前に自動的に付加されるファイルの名前を
         指定します。
         このファイルは、<function>include</function> 関数のコール時
         と同様に読み込まれます。
         このため、<link linkend="ini.include-path">include_path</link> 
         が使用されます。
        </para>
        <para>
         特別な値 <systemitem class="constant">none</systemitem> を指
         定すると、ファイルを前に追加する機能は無効となります。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-append-file">
       <term>
        <parameter>auto_append_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         メインファイルの後に自動的に追加されるファイルの
         名前を指定します。
         このファイルは、<function>include</function> 関数のコール時と同様に
         読み込まれます。
         このため、<link linkend="ini.include-path">include_path</link> 
         が使用されます。
        </para>
        <para>
         <systemitem class="constant">none</systemitem> を値として
         指定するとこの自動付加機能はオフとなります。		
         <note>
          <simpara>
           スクリプトが <function>exit</function> で終了する場合、
           この自動付加機能は使用されません 。
          </simpara>
         </note>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.default-mimetype">
       <term>
        <parameter>default_mimetype</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.default-charset">
       <term>
        <parameter>default_charset</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         4.0b4以降、PHP は、デフォルトで常にContent-type:ヘッダで
         character encodingを出力するようになっています。charsetの送信
         を無効にするには、これを空にして下さい。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.always-populate-raw-post-data">
       <term>
        <parameter>always_populate_raw_post_data</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         常に$HTTP_RAW_POST_DATA変数にアクセス可能とします。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.allow-webdav-methods">
       <term>
        <parameter>allow_webdav_methods</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         PHPスクリプトの中で WebDAV http リクエスト
         (例：PROPFIND, PROPPATCH, MOVE, COPY, 等..) の処理を可能にします。
         これらのリクエストのPOSTデータを取得したい場合、
         <link linkend="ini.always-populate-raw-post-data">
         always_populate_raw_post_data</link> も同時に設定する必要があ
         ります。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>,
     <link linkend="ini.magic-quotes-runtime">magic-quotes-runtime</link>,
     および
     <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>
     も参照下さい。
    </para>
   </sect2>

   <sect2 id="ini.sect.path-directory">
    <title>パスおよびディレクトリ</title>
    <para>
     <table>
      <title>パスおよびディレクトリ設定オプション</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>名前</entry>
         <entry>デフォルト</entry>
         <entry>変更の可否</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>include_path</entry>
         <entry>PHP_INCLUDE_PATH</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>doc_root</entry>
         <entry>PHP_INCLUDE_PATH</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>user_dir</entry>
         <entry>NULL</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>extension_dir</entry>
         <entry>PHP_EXTENSION_DIR</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.force_redirect</entry>
         <entry>"1"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.redirect_status_env</entry>
         <entry>""</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>fastcgi.impersonate</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.rfc2616_headers</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    &ini.descriptions.title;

    <para>
     <variablelist>
      <varlistentry id="ini.include-path">
       <term>
        <parameter>include_path</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         <function>require</function>、<function>include</function>、
         および <function>fopen_with_path</function> 関数がファイルを
         探すディレクトリのリストを指定します。フォーマットは、システ
         ムの環境変数 <envar>PATH</envar>と同じです。つまり、UNIXでは
         コロンで、Windowsではセミコロンで区切ったディレクトリのリスト
         で指定します。
         <example>
          <title>UNIX include_path</title>
          <programlisting role="php.ini">
<![CDATA[
include_path=".:/php/includes"
]]>
          </programlisting>
         </example>
         <example>
          <title>Windows include_path</title>
          <programlisting role="php.ini">
<![CDATA[
include_path=".;c:\php\includes"
]]>
          </programlisting>
         </example>
         このディレクティブのデフォルト値は、<literal>.</literal>(カレ
         ントディレクトリのみ)です。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.doc-root">
       <term>
        <parameter>doc_root</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         サーバーにおけるPHPの"ルートディレクトリ"です。この値は空で無
         い場合のみ使用されます。PHPが &safemode; で設定されている場合には、
         このディレクトリの外側にあるファイルは使用されません。
         PHPがFORCE_REDIRECTを指定してコンパイルされていない場合、
         (IIS以外の)WebサーバのもとでCGIとしてPHPを実行する際には、
         doc_rootを指定するべきです。
         他の方法としては、後述の <link linkend="ini.cgi.force-redirect">
         cgi.force_redirect</link> 設定の使用があります。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.user-dir">
       <term>
        <parameter>user_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         <literal>PHP</literal>ファイル用にユーザーのホームディレクトリ
         として使用する基本ディレクトリの名前。例えば、
         <literal>public_html</literal> となります。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.extension-dir">
       <term>
        <parameter>extension_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         動的にロード可能な拡張モジュールを置くディレクトリを
         指定します。
         <link linkend="ini.enable-dl">enable_dl</link> と
         <function>dl</function> も参照下さい。
        </para>
       </listitem>
      </varlistentry>
     
      <varlistentry id="ini.extension">
       <term>
        <parameter>extension</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         PHPの開始時に、どの動的ロード可能な拡張モジュールをロードするかを
         指定します。
        </para>
       </listitem>
      </varlistentry>

     <varlistentry id="ini.cgi.fix_pathinfo">
       <term>
        <parameter>cgi.fix_pathinfo</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         <emphasis>本来の</emphasis> PATH_INFO/PATH_TRANSLATED
         サポートをCGIで提供します。 PHPの以前の動作は、
         SCRIPT_FILENAMEにPATH_TRANSLATEDを設定するというもので、
         PATH_INFOの定義を理解していませんんでした。
         PATH_INFOに関する詳細については、cgiの仕様を参照して下さい。
         このオプションを１にすることにより、
         PHP CGIはこのパスを仕様にあうように修正します。
         ゼロとすると、 PHPは以前と同様に動作します。デフォルトは、ゼロです。
         PATH_TRANSLATEDではなく、SCRIPT_FILENAMEを使用するようにスクリプト
         を修正する必要があります。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.force-redirect">
       <term>
        <parameter>cgi.force_redirect</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         cgi.force_redirect は、ほとんどのWebサーバのもとで CGI として
         PHP を実行する際のセキュリティを確保するために必要です。
         未定義のままの場合、PHPはデフォルトでこれを on にします。
         これを off にする時は、<emphasis>自己責任</emphasis> の下に
         行なってください。
        </para>
        <note>
         <para>
          Windowsユーザ: IISでは安全にこれをoffにすることができ、
          実際には、off にすることが「必要」です。
          OmniHTTPD または Xitami を動作させるには、これを off にする「必要」
          があります。
         </para>
        </note>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.cgi.redirect-status-env">
       <term>
        <parameter>cgi.redirect_status_env</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         cgi.force_redirect を on にし、Apache または Netscape
         (iPlanet) Webサーバのもとで実行していない場合、
         実行を継続して良いかどうかをPHPが判断するために
         環境変数の名前を設定する必要があるかもしれません。
        </para>
        <note>
         <para>
          この変数を設定することにより、セキュリティ上の問題を発生する
          場合があります。行うことのリスクをまず把握して下さい。
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="fastcgi.impersonate">
       <term>
        <parameter>fastcgi.impersonate</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         IIS (または WINNT ベースの OS) のもとでの FastCGI は、
         クライアントをコールする際にセキュリティトークンを
         匿名化する機能をサポートしています。
         これにより、IIS がリクエストを処理するセキュリティコンテキストを
         定義できるようになります。Apacheのもとで実行される
         mod_fastcgi は現在 (2002/03/17) この機能をサポートしていません。
         IIS のもとで実行するには、1 に設定して下さい。
         デフォルトは 0 です。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.rfc2616-headers">
       <term>
        <parameter>cgi.rfc2616_headers</parameter>
        <type>int</type>
       </term>
       <listitem>
        <para>
         PHP に、HTTP レスポンスを返す際に、どの形式のヘッダーを使うか
         指示します。0 にセットした場合は、Apache やその他の web サーバで
         サポートされている Status: ヘッダーを送信します。このオプションの値を
         1 にセットした場合は、PHP は <ulink url="&url.rfc;2616">RFC 2616</ulink>
         の仕様に適合した形式のヘッダーを送信します。この意味がわからないときは、
         0 にしておいてください。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

   <sect2 id="ini.sect.file_uploads">
    <title>ファイルアップロード</title>
    <para>
     <table>
      <title>ファイルアップロード設定オプション</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>名前</entry>
         <entry>デフォルト</entry>
         <entry>変更の可否</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>file_uploads</entry>
         <entry>"1"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>upload_tmp_dir</entry>
         <entry>NULL</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>upload_max_filesize</entry>
         <entry>"2M"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    &ini.descriptions.title;

    <para>
     <variablelist>
      <varlistentry id="ini.file-uploads">
       <term>
        <parameter>file_uploads</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         HTTP <link linkend="features.file-upload">ファイルアップロード</link>
         を有効とするかどうか。
         <link linkend="ini.upload-max-filesize">upload_max_filesize</link>,
         <link linkend="ini.upload-tmp-dir">upload_tmp_dir</link>, 
         <link linkend="ini.post-max-size">post_max_size</link>
         ディレクティブも参照下さい。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-tmp-dir">
       <term>
        <parameter>upload_tmp_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         ファイルアップロード時にファイル保存に用いるテンポラリディレクトリ。
         <literal>PHP</literal>の実行ユーザーが書きこみ可能である必要が
         あります。指定されない場合、PHPはシステムのデフォルト設定を
         使用します。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-max-filesize">
       <term>
        <parameter>upload_max_filesize</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <para>
         アップロードされるファイルの最大サイズ。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

   <sect2 id="ini.sql-general">
    <title>SQL全般</title>
    <para>
     <table>
      <title>SQL全般の設定オプション</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>名前</entry>
         <entry>デフォルト</entry>
         <entry>変更の可否</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>sql.safe_mode</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    &ini.descriptions.title;

    <para>
     <variablelist>
      <varlistentry id="ini.sql.safe-mode">
       <term>
        <parameter>sql.safe_mode</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

   <sect2 id="ini.sect.debugger">
    <title>デバッガ設定ディレクティブ</title>
    <variablelist>

     <varlistentry id="ini.debugger.host">
      <term>
       <parameter>debugger.host</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        デバッガにより使用されるホストのDNS名またはIPアドレス。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.port">
      <term>
       <parameter>debugger.port</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        デバッガにより使用されるポート番号。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.enabled">
      <term>
       <parameter>debugger.enabled</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        デバッガを有効にするかどうか。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect2>

  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
