<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- sync: 1.18 -->
  <sect1 id="install.apache">
   <title>Apacheサーバ</title>
   <para>
    本節では、PHPをApacheにインストールする際の注意事項とコツについて
    説明します。<link linkend="install.apache.unix">Unix</link> 版と
    <link linkend="install.apache.windows">Windows</link> 版の両方につ
    いて説明します。
    <link linkend="install.apache2">instructions and notes for Apache 2
    on a separate page</link>もあります。
   </para>   
   <sect2 id="install.apache.unix">
    <title>Unix上でApacheにPHPをインストールする手順</title>
    <para>
     以下の手順の10行目で<command>configure</command> に追加する引数を
     <link linkend="install.configure">configureのオプションの全て
     </link>から選択可能です。ここではバージョン番号が意図的に省略
     されています。'xxx'の部分を貴方が使用するファイルに対応するものに
     置き換えてください。
    </para>

    <example id="install.apache.unix.longer">
     <title>
      PHP 4インストール手順 (Apache共有モジュール版)
     </title>
     <screen>
<![CDATA[
<![CDATA[
1.  gunzip apache_xxx.tar.gz
2.  tar -xvf apache_xxx.tar
3.  gunzip php-xxx.tar.gz
4.  tar -xvf php-xxx.tar
5.  cd apache_xxx
6.  ./configure --prefix=/www --enable-module=so
7.  make
8.  make install
9.  cd ../php-xxx
10. ./configure --with-mysql --with-apxs=/www/bin/apxs
11. make
12. make install

  インストール後にconfigureオプションを変更したくなった場合は
  最後の3つの手順を繰り返してください。新しいモジュールを有効
  にするにはapacheを再起動するだけです。apacheの再コンパイルは
  必要ありません。

13. cp php.ini-dist /usr/local/lib/php.ini

  PHPオプションを設定するために.iniファイルを編集して下さい。このファ
 イルを他の場所に置きたい場合は、手順10でオプション
  --with-config-file-path=/path を使用して下さい。

14. httpd.conf または srm.conf ファイルで以下の行がコメントアウト
    されていないかどうか(つまり有効になっているかどうか)確認して
    ください。

    AddType application/x-httpd-php .php

    LoadModule php4_module        libexec/libphp4.so
 
  ここで好きな拡張子を選択できます。.php は単に推奨されるだけです。
  .htmlを選択することも可能でし、旧バージョンとの互換のために.php3
  を使用することも出来ます。

  LoadModule文に記述されているパスはあなたのシステムにインストール
  されているPHPモジュールを指している必要があります。上記の例はこの
  手順に沿ってインストールを行った場合のパスです。

15. 通常の手順により Apache サーバを起動して下さい。(HUPまたはUSR1シグ
    ナルを使用してリロードするのではなく)サーバを停止してから再起動す
    る必要があります。
]]>
     </screen>
    </example>
   
    <para>
     Apache のインストールやUNIXの種類によりサーバを停止し、再起動する
     方法はいくつもあります。複数のApache/UNIXの組合せについてサーバを
     再起動する際に使用される典型的な方法を以下に示します。
     <literal>/path/to/</literal> を使用するシステムのアプリケーション
     へのパスに置き換えて読んで下さい。
     <informalexample>
      <screen>
<![CDATA[
1. 複数の Linux および SysV から派生したもの:
/etc/rc.d/init.d/httpd restart

2. apachectl スクリプトを使用する方法:
/path/to/apachectl stop
/path/to/apachectl start

3. (OpenSSL を使用している場合、) apachectl と同様に httpdctl および
       httpsdctl を使用する方法:
/path/to/httpsdctl stop
/path/to/httpsdctl start

4. mod_sslまたは他のSSLサーバを使用している場合、マニュアルでstopと
   startを行うかもしれません。:
/path/to/apachectl stop
/path/to/apachectl startssl
]]>
      </screen>
     </informalexample>
     apachectl および http(s)dctl の実行ファイルの位置はシステムにより
     異なります。システムが <literal>locate</literal> または
     <literal>whereis</literal> または <literal>which</literal> をサポー
     トしている場合、サーバ制御用プログラムを見つけるために使用するこ
     とが可能です。
    </para>
    
    <para>
     PHPをApache用にコンパイルする別の例を以下に示します。
     <informalexample>
       <programlisting role="shell">
<![CDATA[
./configure --with-apxs --with-pgsql
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     これにより、共有ライブラリ <filename>libphp4.so</filename> が作成
     されます。Apacheの&httpd.conf;ファイルにおいて
     LoadModuleを使用してApacheにこのライブラリをロードすることが可能
     です。上の例では、PostgreSQLサポートがこの
     <filename>libphp4.so</filename>ライブラリに埋め込まれます。
    </para>
    <para>
     <informalexample>
      <programlisting role="shell">
<![CDATA[
./configure --with-apxs --with-pgsql=shared
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     この例でも Apache用<filename>libphp4.so</filename> 共有ライブラリ
     が作成されます。しかし、共有ライブラリ
     <filename>pgsql.so</filename> も作成されます。この共有ライブラリ
     は、<filename>php.ini</filename> ファイルのextensionディレクティ
     ブまたはスクリプト内で<function>dl</function>関数を使用して明示的
     にロードすることが可能です。
    </para>
    <para>
     <informalexample>
      <programlisting>
<![CDATA[
./configure --with-apache=/path/to/apache_source --with-pgsql
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     これにより、<filename>libmodphp4.a</filename> ライブラリと
     <filename>mod_php4.c</filename> およびいくつかの付属ファ
     イルが作成され、Apacheにソースツリーのディレクトリ
     <literal>src/modules/php4</literal> にコピーされます。続いて、
     <literal>--activate-module=src/modules/php4/libphp4.a</literal>
     を指定してApacheをコンパイルして下さい。これにより、Apache構築シ
     ステムは、<filename>libphp4.a</filename> を作成し、
     <filename>httpd</filename> バイナリに静的にリンクされます。
     PostgreSQL サポートはこの<filename>httpd</filename>バイナリに直接
     インクルードされるため、最終的な結果は、Apache全体とPHP全体を含む
     単一の<filename>httpd</filename>バイナリになります。
    </para>
    <para>
     <informalexample>
      <programlisting>
<![CDATA[
./configure --with-apache=/path/to/apache_source --with-pgsql=shared
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     上と同じですが、最終的な<filename>httpd</filename>に
     PostgreSQLサポートを直接インクルードする代わりに、共有ライブラリ
     <filename>pgsql.so</filename>をファイル
     &php.ini;または<function>dl</function>により直
     接的にPHPにロードすることが可能です。
    </para>
    <para>
     異なったPHPの構築法を選択する際、各方法の利点と欠点を考慮する必要
     があります。共有オブジェクトとして構築する場合、Apacheと分割して
     コンパイルすることが可能で、PHPを追加または変更する際に全体を再コ
     ンパイルする必要がありません。PHPをApacheに(静的に)組み込む場合に
     は、PHPはより高速にロード/実行することが可能です。詳細な情報につ
     いては、Apacheの<ulink url="&url.apachedso;">DSOサポートのWebページ
     </ulink>を参照下さい。
    </para>
    <note>
     <para>
      Apacheのデフォルトの&httpd.conf;は次のようなセクションがあります。
      <informalexample>
       <programlisting>
<![CDATA[
User nobody
Group "#-1"
]]>
       </programlisting>
      </informalexample>
      これを"Group nogroup"やそれに類する値("Group daemon"も一般的です)に変更しない
      限り、PHPはファイルをオープンすることができません。
     </para>
    </note>  
    <note>
     <para>
     <option role="configure">--with-apxs=/path/to/apxs</option>オプションを
     指定する場合にはインストールされているバージョンのapxsを指定してください。
     Apacheのソースディレクトリ内にあるapxsバージョンではなく
     実際にシステムにインストールされているものでなければなりません。
     </para>
    </note>   
   </sect2>
   
   
   <sect2 id="install.apache.windows">
    <title>Windows上のApache 1.3.xへのPHPインストールの詳細</title>
    
    <simpara>
     PHP を Windows 上の Apache 1.3.x で動作させるには、2種類の方法が
     あります。一つは、CGIバイナリ (php.exe) を使用する方法、もう一つ
     は Apache モジュールDLL を使用する方法です。どちらの場合も Apache
     サーバを停止し、PHP と組み合むように Apache を設定するために
     &httpd.conf; を編集します。
    </simpara>
    <simpara>
     Windwos環境向けのSAPIモジュールはかなり安定してきているため、
     互換性と安全性の面からも、CGIバイナリよりSAPIモジュールの
     使用を推奨します。
    </simpara>
    <simpara>
     Apache用にPHPを設定する手順にはいくつかありますが、この手順は入門
     者にも使用可能な程簡単です。設定用ディレクティブに関する詳細につ
     いては、Apacheのドキュメントを参照下さい。
    </simpara>

    <para>
     <link linkend="install.windows.manual">マニュアルインストール手順
     </link>のセクションに説明されたようにPHPパッケージをunzipで
     <filename>c:\php\</filename>に展開した場合、
     CGIバイナリを設定するには以下の行をApache
     の設定ファイルに追加する必要があります。
     <itemizedlist>
      <listitem>
       <simpara>
        <literal>
         ScriptAlias /php/ "c:/php/"
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         AddType application/x-httpd-php .php .phtml
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         Action application/x-httpd-php "/php/php.exe"
        </literal>
       </simpara>
      </listitem>
     </itemizedlist>
     上記の2番目の行は現在のバージョンの&httpd.conf;でも
     確認できると思います。しかしそれはコメントアウトされています。
     <filename>c:/php/</filename>を
     実際のパスに合わせて置換することも忘れないでください。
    </para>

    <warning>
     <para>
      CGIセットアップを使用すると、
      種々の攻撃にさらされる可能性があります。
      <link linkend="security.cgi-bin">CGI security section</link>
      を読んで攻撃を防ぐ方法を学んでください。
     </para>
    </warning>

    <para>
     PHPをApacheのモジュールとして使用したい場合、必ず
     <filename>php4ts.dll</filename>をwindows/system (Windows 9x/Meの場
     合)またはwinnt/system32 (Windows NT/2000/XPの場合)ディレクトリに移
     動し、以前のファイルを上書きするようにして下さい。
     次に以下の行をApacheの&httpd.conf;ファイルに追加して下さい。
     <itemizedlist>
      <listitem>
       <simpara>
         &httpd.conf;をエディタで開き、<literal>LoadModule</literal>
         ディレクティブのリストの<emphasis>最後に</emphasis>以下のように追加
         してください。
         <literal>LoadModule php4_module c:/php/sapi/php4apache.dll</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        ApacheのWindows用インストーラーを使用した場合には
        <literal>AddModule</literal>ディレクティブに
        <filename>mod_php4.c</filename>を定義する必要があります。
        これは<literal>ClearModuleList</literal>ディレクティブが定義されて
        いる場合においては重要なことです。
        (少し行スクロールすると見つかるでしょう)
        <literal>AddModule</literal>のエントリのリストを探して、
        そのリストの<emphasis>最後</emphasis>に次のように追加します。
        <literal>AddModule mod_php4.c</literal>
        </simpara>
      </listitem>
      <listitem>
       <simpara>
         <literal># AddType allows you to tweak mime.types</literal>のような
         フレーズを探してください。<literal>AddType</literal>エントリが
         いくつか見つかるでしょう。そのリストの最後に次のように
         追加してください。
         <literal>AddType application/x-httpd-php .php</literal>.
         PHPにパースさせたい拡張子を好きなように設定できます。
         .php は単に推奨されるだけです。.htmlを選択することも可能ですし、
         旧バージョンとの互換のために .php3 を使用することも出来ます。
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
  
    <simpara>
     設定ファイルを変更した後、サーバーを再起動することを忘れないで
     ください。例えば、ApacheをWindowsのサービスとして実行する場合には
     <command>NET STOP APACHE</command>の後に<command>NET START APACHE</command>。
     あるいは通常のショートカットを使用してください。
    </simpara>

    <simpara>
     ソースコードハイライト機能を使用する方法は二つあります。
     しかしその機能はインストール方式に依存します。
     PHPをSAPIモジュールとして使用するようにApacheを設定している場合、
     &httpd.conf;に次の行を追加してください
     (<literal>AddType application/x-httpd-php .php</literal>を
     追加したのと同じ位置です。上記を参照)。
     <literal>AddType application/x-httpd-php-source .phps</literal>.
    </simpara>
    <simpara>
     CGIバイナリとしてPHPを使用するようにApacheを設定している場合には
     <function>show_source</function>関数を使う必要があります。
     PHPスクリプトファイルを 作成し、次のようなコードを加えてください。
     <literal>&lt;?php show_source ("original_php_script.php"); ?></literal> 
     <literal>original_php_script.php</literal>の部分を
     ソースを見たいと思うファイルの名前に置き換えてください。
    </simpara>
    <note>
     <simpara>
      Windows版のApache においては、"c:\directory\file.ext" のようなパ
      ス設定におけるバックスラッシュは、"c:/directory/file.ext"のよう
      に全てスラッシュに変換する必要があります。
     </simpara>
    </note>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
