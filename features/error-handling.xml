 <chapter id="features.error-handling">
  <title>エラー処理</title>

  <para>

   PHP には、複数のエラーと警告があります。これらを以下に示します。
 
   <table>
    <title>PHPエラーの型</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>値</entry>
       <entry>記号</entry>
       <entry>説明</entry>
       <entry>note</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1</entry>
       <entry>E_ERROR</entry>
       <entry>致命的なランタイムエラー</entry>
       <entry></entry>
      </row>
      <row>
       <entry>2</entry>
       <entry>E_WARNING</entry>
       <entry>ランタイム警告(致命的でないエラー)</entry>
       <entry></entry>
      </row>
      <row>
       <entry>4</entry>
       <entry>E_PARSE</entry>
       <entry>コンパイル時のパーサエラー</entry>
       <entry></entry>
      </row>
      <row>
       <entry>8</entry>
       <entry>E_NOTICE	</entry>
       <entry>
	実行時の通知(警告よりも重要度は低い)
       </entry>
       <entry></entry>
      </row>
      <row>
       <entry>16</entry>
       <entry>E_CORE_ERROR</entry>
       <entry>PHPの初期スタートアップ時に生じた致命的なエラー</entry>
       <entry>PHP 4のみ</entry>
      </row>
      <row>
       <entry>32</entry>
       <entry>E_CORE_WARNING</entry>
       <entry>PHPの初期スタートアップ時に生じた警告(致命的でないエラー)</entry>
       <entry>PHP 4のみ</entry>
      </row>
      <row>
       <entry>64</entry>
       <entry>E_COMPILE_ERROR</entry>
       <entry>致命的なコンパイルエラー</entry>
       <entry>PHP 4のみ</entry>
      </row>
      <row>
       <entry>128</entry>
       <entry>E_COMPILE_WARNING</entry>
       <entry>コンパイル時の警告(致命的ではないエラー)</entry>
       <entry>PHP 4のみ</entry>
      </row>
      <row>
       <entry>256</entry>
       <entry>E_USER_ERROR</entry>
       <entry>ユーザが生成したエラーメッセージ</entry>
       <entry>PHP 4のみ</entry>
      </row>
      <row>
       <entry>512</entry>
       <entry>E_USER_WARNING</entry>
       <entry>ユーザが生成した警告メッセージ</entry>
       <entry>PHP 4のみ</entry>
      </row>
      <row>
       <entry>1024</entry>
       <entry>E_USER_NOTICE	</entry>
       <entry>ユーザが生成した通知メッセージ</entry>
       <entry>PHP 4のみ</entry>
      </row>
      <row>
       <entry></entry>
       <entry>E_ALL</entry>
       <entry>上記のもの全て</entry>
       <entry>PHP 4のみ</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
 </para>
 <para>
   上記の値(数値または記号のどちらか)は、レポートするエラーの指定する
   ビットマスクを作成する際に使用されます。複数のエラー型を組み合わせ
   たりマスクしたりするためにビット演算子 '|'、'&amp;'、'~' を使用する
   ことが可能です。デフォルトの設定は通知以外の全てのエラーを出力する
   ようになっており、PHP4では<literal>E_ALL & ~E_NOTICE</literal>、
   (PHP3は定数記号をサポートしていないため、)PHP3では7となっています。
 </para>
 <para>
   この設定は、設定ファイルのerror_reporting命令で変更可能です。また、
   Apacheのhttpd.confファイルのphp_error_reporting命令(PHP3では
   php3_error_reporting)で設定することも可能です。また、実行時にスクリ
   プト内で関数<function>error_reporting</function>を使用して設定する
   ことも可能です。
 </para>
 <warning>
   <para>
    PHP3からPHP4にコードまたはサーバーを更新る場合、これらの設定および
    <function>error_reporting</function>のコールを確認する必要がありま
    す。新しいエラー型、特にE_COMPILE_ERRORの出力を無効にしたいと思う
    という人もいると思われます。これを無効にすると空の文書が出力される
    可能性があり、この場合には、生じた現象や問題の発見に関するフィード
    バックは全く得られません。
   </para>
 </warning>
  <para>	
   全ての <link linkend="language.expressions">PHP 式</link> は、先頭に
   "@" を付けてコールすることも可能です。
   この場合、その式に関するエラーメッセージの出力がオフにされます。
   そのような式においてエラーが発生し、
   <link linkend="ini.track-errors">track_errors</link> 機能が有効の
   場合、グローバル変数 $php_errormsg からエラーメッセージを
   得ることができます。 
  </para>
  <warning>
   <para>
    現在の実装では、"@"は、スクリプトの実行を終了するような致命的なエ
    ラー出力さえ無効にします。
   </para>
  </warning>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
