<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.11 $ -->
<!-- sync: 1.42 -->
 <chapter id="features.safe-mode">
  <title>セーフモード</title>

  <para>
   PHPのセーフモードは共有サーバでのセキュリティの問題を解決するための
   試みです。この問題をPHPのレベルで解決しようとするのはアーキテクチャ上
   正しくありません。しかし、WebサーバやOSレベルでの代替策はあまり現実的
   ではないため、多くのユーザ、特にISPではセーフモードが現在使用され
   ています。
  </para>

  <sect1 id="ini.sect.safe-mode">
   <title>セキュリティとセーフモード</title>
   <para>
    <table>
     <title>セキュリティとセーフモード設定ディレクティブ</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>名前</entry>
        <entry>デフォルト</entry>
        <entry>変更の可否</entry>
       </row>
      </thead>
      <tbody>
      <row>
       <entry>safe_mode</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_gid</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_include_dir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_exec_dir</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_allowed_env_vars</entry>
       <entry>PHP_</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_protected_env_vars</entry>
       <entry>LD_LIBRARY_PATH</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>open_basedir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>disable_functions</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>disable_classes</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      </tbody>
     </tgroup>
    </table>
    PHP_INI_*の定義と詳細については、
    <function>ini_set</function>を参照して下さい。
   </para>
   
   &ini.descriptions.title;
   
   <para>
   セーフモードの設定ディレクティブの簡単な説明を以下に示します。
    <variablelist>
     <varlistentry id="ini.safe-mode">
      <term>
       <parameter>safe_mode</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        セーフモードを有効にするか否か。詳細は
        <link linkend="security">セキュリティ</link>の章をご覧ください。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-gid">
      <term>
       <parameter>safe_mode_gid</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        デフォルトでは、セーフモードはオープンしようとするファイルの
        UIDの比較チェックを行います。GIDの比較にすることでこのチェックを
        緩やかなものにしたい場合、safe_mode_gidをオンにしてください。
        ファイルにアクセスする際に<literal>UID</literal> (&false;)を使用するか
        <literal>GID</literal> (&true;)を使用するか制御できます。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-include-dir">
      <term>
       <parameter>safe_mode_include_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        このディレクトリ（そのサブディレクトリも含む）の配下のファイルが
        インクルードされる場合、<literal>UID</literal>/<literal>GID</literal>
        のチェックはバイパスされます。（ディレクトリは
        <link linkend="ini.include-path">include_path</link>の配下であるか
        あるいはフルパスで記述される必要があります）
       </para>
       <simpara>
        PHP 4.2.0以降、このディレクティブは
        <link linkend="ini.include-path">include_path</link>と同様に
        セミコロンで分けた形式で複数のパスを書くことができます。
       </simpara>
       <simpara>
        ここで指定される制限は実はプレフィックスでありディレクトリ名ではありません。
        つまり、"safe_mode_include_dir = /dir/incl" と書くと
        "/dir/include" と "/dir/incls" の両方へのアクセスが許可されます（もし
        ディレクトリが存在すれば）。指定したディレクトリのみを許可したい
        場合には、最後にスラッシュを追加してください。
        例："safe_mode_include_dir = /dir/incl/"
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-exec-dir">
      <term>
       <parameter>safe_mode_exec_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        PHPがセーフモードで動作する場合、<function>system</function>や
        その他の<link linkend="ref.exec">プログラム実行関数</link>を、
        このディレクトリ以外で起動することは拒否されます。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-allowed-env-vars">
      <term>
       <parameter>safe_mode_allowed_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        ある種の環境変数の設定はセキュリティ上の潜在的な欠陥となりえます。
        このディレクティブにはプレフィックスをカンマで区切って書くことができます。
        セーフモードでは、ここに書かれたプレフィックスで始まる環境変数だけを
        ユーザーが変更できるようになります。デフォルトでは、ユーザーは
        PHP_で始まる名前の環境変数(e.g. PHP_FOO=BAR)だけをセットすることができます。
       </para>
       <note>
        <para>
         このディレクティブが空の場合、PHPは全ての環境変数について
         ユーザーが変更することを許可してしまいます。
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-protected-env-vars">
      <term>
       <parameter>safe_mode_protected_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        <function>putenv</function>を使ってエンドユーザーが変更するのを
        防ぎたい環境変数をカンマ区切りで記述します。ここで設定された環境変数は
        もしもsafe_mode_allowed_env_varsでは許可されているものであっても
        保護されます。
       </para>
      </listitem>
     </varlistentry>
      <varlistentry id="ini.open-basedir">
      <term>
       <parameter>open_basedir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        PHPによってオープンされうるファイルを特定のディレクトリツリー
        に制限します。このディレクティブはセーフモードのオン/オフに
        <emphasis>関わらず</emphasis>適用されます。
       </para>
       <para>
        例えばfopenやfzopenを使ってスクリプトがファイルをオープンしようと
        するとそのファイルの位置がチェックされます。指定された
        ディレクトリツリーの範囲外にあった場合、PHPはオープンを拒否します。
        全てのシンボリックリンクは解決されますので、シンボリックリンクを使って
        この制限を回避することは不可能です。
       </para>
       <para>
        <systemitem class="constant">.</systemitem>は特別な値で、
        スクリプトが格納されているディレクトリをbase-directoryとして
        使用することを意味します。
       </para>
       <para>
        Windows上では、ディレクトリをセミコロンで区切ってください。
        その他全てのシステムでは、ディレクトリをコロンで区切ってください。
        Apacheモジュールでは、親ディレクトリからopen_basedirへのパス
        は自動的に継承されます。
       </para>
       <para>
        ここで指定される制限は実はプレフィックスでありディレクトリ名ではありません。
        つまり、"open_basedir = /dir/incl" と書くと
        "/dir/include" と "/dir/incls" の両方へのアクセスが許可されます（もし
        ディレクトリが存在すれば）。指定したディレクトリのみを許可したい
        場合には、最後にスラッシュを追加してください。
        例："open_basedir = /dir/incl/"
       </para>
       <note>
        <para>
         複数のディレクトリへの対応は3.0.7で追加されました。
        </para>
       </note>
       <para>
        デフォルトでは全てのファイルのオープンが許可されます。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.disable-functions">
      <term>
       <parameter>disable_functions</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        <link linkend="security">セキュリティ</link>を考慮したい場合に
        このティレクティブを使って、特定の関数を無効にすることができます。
        関数名をカンマ区切りで表記してください。disable_functionsは
        <link linkend="ini.safe-mode">セーフモード</link>の影響を受けません。
       </simpara>
       <simpara>
        このディレクティブは &php.ini;上でセットされなければなりません。
        例えば、<filename>httpd.conf</filename>等でセットすることはできません。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.disable-classes">
      <term>
       <parameter>disable_classes</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        <link linkend="security">セキュリティ</link>を考慮したい場合に
        このティレクティブを使って特定のクラスを無効にすることができます。
        クラス名をカンマ区切りで表記してください。disable_classsは
        <link linkend="ini.safe-mode">セーフモード</link>の影響を受けません。
       </simpara>
       <simpara>
        このディレクティブは &php.ini;上でセットされなければなりません。
        例えば、<filename>httpd.conf</filename>等でセットすることはできません。
       </simpara>
       <note>
        <title>Availability note</title>
        <simpara>
         このディレクティブはPHP4.3.2で追加されました。
        </simpara>
       </note>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    <link linkend="ini.register-globals">register_globals</link>,
    <link linkend="ini.display-errors">display_errors</link>, 
    <link linkend="ini.log-errors">log_errors</link>も参照してください。
   </para>

  <para>
   <link linkend="ini.safe-mode">セーフモード</link>がonの場合、PHPは、
   現在のスクリプトの所有者がファイル関数により処理されているファイル
   の所有者に一致するかどうかを調べます。例えば、
   <programlisting role="ls">
<![CDATA[
-rw-rw-r--    1 rasmus   rasmus       33 Jul  1 19:20 script.php 
-rw-r--r--    1 root     root       1116 May 26 18:01 /etc/passwd 
]]>
   </programlisting>
    以下のscript.php を実行すると、
   <programlisting role="php">
<![CDATA[
<?php
 readfile('/etc/passwd'); 
?>
]]>
   </programlisting>
    セーフモードが有効な場合、以下のようなエラーが出力されます。
    <screen>
<![CDATA[
Warning: SAFE MODE Restriction in effect. The script whose uid is 500 is not 
allowed to access /etc/passwd owned by uid 0 in /docroot/script.php on line 2
]]>
    </screen>
   </para>
   <para>
   <literal>UID</literal> checking.
    しかし、多くの環境において、厳密な<literal>UID</literal>チェックは
    適切ではなく、より緩やかな<literal>GID</literal>チェックで十分です。
    これは<link linkend="ini.safe-mode-gid">safe_mode_gid</link>スイッチで
    サポートされます。これを<literal>On</literal>にすると制限の緩い
    <literal>GID</literal>チェックに、<literal>Off</literal>（デフォルト）
    にすると<literal>UID</literal>チェックになります。
  </para>
  <para>
   <link linkend="ini.safe-mode">safe_mode</link>の代わりに、
   <link linkend="ini.open-basedir">open_basedir</link>ディレクトリを
   セットすると、全てのファイル操作は特定のディレクトリ配下のみに制限されます。
   例えば(Apacheのhttpd.confの例):
   <programlisting role="ini">
<![CDATA[
<Directory /docroot>
  php_admin_value open_basedir /docroot 
</Directory>
]]>
   </programlisting>
   <link linkend="ini.open-basedir">open_basedir</link>でセットしたのと
   同じscript.phpを実行すると、以下のような結果になります:
   <screen>
<![CDATA[
Warning: open_basedir restriction in effect. File is in wrong directory in 
/docroot/script.php on line 2 
]]>
   </screen>
  </para>
  <para>
   特定の関数を無効にすることもできます。
   <link linkend="ini.disable-functions">disable_functions</link>ディレクティブは
   &php.ini;以外では使用できないことに注意してください。
   つまり、&httpd.conf;上のバーチャルホスト毎あるいはディレクトリ毎に
   関数を無効にすることはできない、ということになります。
   もし&php.ini;ファイルに以下を追加した場合:
   <programlisting role="ini">
<![CDATA[
disable_functions readfile,system  
]]>
   </programlisting>
   以下のような結果になります: 
   <screen>
<![CDATA[
Warning: readfile() has been disabled for security reasons in 
/docroot/script.php on line 2 
]]>
   </screen>
  </para>
 </sect1>

  <sect1 id="features.safe-mode.functions">
   <title>セーフモードにより制限を受けるか無効となる関数</title>
   <para>
    <link linkend="features.safe-mode">safe-mode</link>により制限される
    関数のリストを示します。ただし、まだ、不完全で、不正確である可能性
    があります。
    <!-- TODO: add &note.sm.*; to the functions mentioned here.
    That entity should link to this section -->
    <table>
     <title>セーフモードで制限される関数</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>関数</entry>
        <entry>制限</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><function>dbmopen</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>dbase_open</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_rowcount</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_retrieve</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>ifx_*</function></entry>
        <entry>sql_safe_mode restrictions, (!= safe mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry><function>ingres_*</function></entry>
        <entry>sql_safe_mode restrictions, (!= safe mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry><function>mysql_*</function></entry>
        <entry>sql_safe_mode restrictions, (!= safe mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry><function>pg_loimport</function></entry>
        <entry>&sm.uidcheck;</entry>
        <!-- source TODO: there is no PHP-warning for that safe-mode-restriction -->
       </row>
       <row>
        <entry><function>posix_mkfifo</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>putenv</function></entry>
        <entry>
     iniディレクティブのsafe_mode_protected_env_vars および
     safe_mode_allowed_env_varsに依存します。
     <function>putenv</function>のドキュメントも参照下さい。
    </entry>
        <!-- TODO: document those directives in chapters/config.xml -->
       </row>
       <row>
        <entry><function>move_uploaded_file</function></entry>
        <entry>&sm.uidcheck; <!-- TODO: check this --></entry>
       </row>

       <!-- TODO: from here on, add warning to the function itself -->

       <row>
        <entry><function>chdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>dl</function></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><link linkend="language.operators.execution">backtick operator</link></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>shell_exec</function> (functional equivalent 
        of backticks)</entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>exec</function></entry>
        <entry>
     <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>
     の中でのみ実行可能です。実行上の理由により、現在、実行パスに
     <literal>..</literal>を含めることは許可されていません。
    </entry>
       </row>
       <row>
        <entry><function>system</function></entry>
        <entry>
     <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>
     の中でのみ実行可能です。実行上の理由により、現在、実行パスに
     <literal>..</literal>を含めることは許可されていません。
    </entry>
       </row>
       <row>
        <entry><function>passthru</function></entry>
        <entry>
     <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>
     の中でのみ実行可能です。実行上の理由により、現在、実行パスに
     <literal>..</literal>を含めることは許可されていません。
    </entry>
       </row>
       <row>
        <entry><function>popen</function></entry>
        <entry>
     <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>
     の中でのみ実行可能です。実行上の理由により、現在、実行パスに
     <literal>..</literal>を含めることは許可されていません。
    </entry>
        <!-- TODO: not sure. popen uses a completely different implementation
        Don't know why, don't know whether it's behaving the same -->
       </row>
       <row>
        <entry><function>mkdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rmdir</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>rename</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;<!-- on the old name only, it seems. Is rename preventing moving files? --></entry>
       </row>
       <row>
        <entry><function>unlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>copy</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; ( 
        <parameter>source</parameter>および 
        <parameter>target</parameter>において) </entry>
       </row>
       <row>
        <entry><function>chgrp</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chown</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chmod</function></entry>
        <entry>
         &sm.uidcheck; 加えて、SUID, SGID, スティキービットを設定する
         ことはできません
        </entry>
       </row>
       <row>
        <entry><function>touch</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>symlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (注意: ターゲットのみが
        確認されます)</entry>
       </row>
       <row>
        <entry><function>link</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (注意: ターゲットのみが
        確認されます)</entry>
       </row>
       <row>
        <entry><function>getallheaders</function></entry>
        <entry>
     セーフモードでは、'authorization'で始まるヘッダ(大文字小文字は
     区別されません)は返されません。
     警告: これは、AOLサーバにおける
     <function>getallheaders</function>の実装では正常に動作しません!
    </entry>
       </row>
        <row>
        <entry><function>header</function></entry>
        <entry>
         セーフモードでは、<literal>WWW-Authenticate</literal>
         (HTTP認証)ヘッダをセットする場合に
         <literal>realm</literal>パートに
         スクリプトのUIDがセットされます。
        </entry>
       </row>
       <row>
        <entry><link linkend="features.http-auth">PHP_AUTH variables</link></entry>
        <entry>
         セーフモードでは、<varname>PHP_AUTH_USER</varname>,
         <varname>PHP_AUTH_PW</varname>, <varname>AUTH_TYPE</varname>は
         <varname>$_SERVER</varname>に含まれません。
         にも関わらず、USERに<varname>REMOTE_USER</varname>を使うことは未だ可能です。
         （PHP4.3.0以降でのみ影響）
        </entry>
       </row>
       <row>
        <entry>
         <function>highlight_file</function>,
         <function>show_source</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (注: PHP 4.2.1以降でのみ影響する)
        </entry>
       </row>
       <row>
        <entry>
         <function>parse_ini_file</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (注: PHP 4.2.1以降でのみ影響する)
        </entry>
       </row>
       <row>
        <entry>
         <function>set_time_limit</function>
        </entry>
        <entry>
         PHPが&safemode;で実行されている場合は影響を受けません。
        </entry>
       </row>
       <row>
        <entry>
         <link linkend="ini.max-execution-time">max_execution_time</link>
        </entry>
        <entry>
         PHPが&safemode;で実行されている場合は影響を受けません。
        </entry>
       </row>
       <row>
        <entry>Any function that uses 
         <filename>php4/main/fopen_wrappers.c</filename>
        </entry>
        <entry>??</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
