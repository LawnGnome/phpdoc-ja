  <chapter id="language.constants">
   <title>定数</title>

   <simpara>
   PHP は、いくつかの定数を定義します。また、実行時に定数の定義を追加する
   機構を提供します。
   定数は変数と良く似ていますが、定数は<function>define</function>
   関数を使って定義する必要があり、他の値に再定義することができないという
   二つの違いがあります。</simpara>

   <para>
   あらかじめ定義された定数(常に使用可能)を以下に示します。

	<variablelist>

	 <varlistentry>
	  <term>__FILE__</term>
	  <listitem>
	   <simpara>
	   現在処理中のスクリプトファイルの名前。includeあるいはrequireにより
	   読みこまれたファイルで使用された場合、親ファイルではなく
	   インクルードされたファイルとなります。
	   </simpara>
	  </listitem>
	 </varlistentry>

	 <varlistentry>
	  <term>__LINE__</term>
	  <listitem>
	   <simpara>
	   カレントのスクリプトファイルの現在処理中の行の番号。
	   includeあるいはrequireされたファイルで使用された場合、
	   includeされたファイルの中での位置となります。
	   </simpara>
	  </listitem>
	 </varlistentry>

	 <varlistentry>
	  <term>PHP_VERSION</term>
	  <listitem>
	   <simpara>
	   現在使用中のPHPパーサのバージョンを表す文字列。
	   例:'3.0.8-dev'
	   </simpara>
	  </listitem>
	 </varlistentry>

	 <varlistentry>
	  <term>PHP_OS</term>
	  <listitem>
	   <simpara>
	  PHPパーサを実行中のオペレーティングシステムの名前。
	  例:'Linux'
	   </simpara>
	  </listitem>
	 </varlistentry>

	 <varlistentry>
	  <term>TRUE</term>
	  <listitem>
	   <simpara>
	   真。
	   </simpara>
	  </listitem>
	 </varlistentry>

	 <varlistentry>
	  <term>FALSE</term>
	  <listitem>
	   <simpara>
	   偽。
	   </simpara>
	  </listitem>
	 </varlistentry>

	 <varlistentry>
	  <term>E_ERROR</term>
	  <listitem>
	   <simpara>
	   	構文エラー以外の回復不能なエラーを定義します。
	   </simpara>
	  </listitem>
	 </varlistentry>

	 <varlistentry>
	  <term>E_WARNING</term>
	  <listitem>
	   <simpara>
	   何か誤りがあるが、それでも実行を継続する条件を定義します。
	   スクリプト自体によりエラー処理を行うことが可能です。
	   例えば<function>ereg</function>における正規表現が不正であった
	   場合に発生します。
	   </simpara>
	  </listitem>
	 </varlistentry>

	 <varlistentry>
	  <term>E_PARSE</term>
	  <listitem>
	   <simpara>
	   スクリプトファイルの不正な構文によりパーサの処理が中断した
	   状態です。回復は不可能です。
	   </simpara>
	  </listitem>
	 </varlistentry>

	 <varlistentry>
	  <term>E_NOTICE</term>
	  <listitem>
	   <simpara>
	   エラーであるかにかかわらず何かが起きました。実行は継続されます。
	   例えば、引用符で括られていない文字列をハッシュインデックスとして
	   使用した場合や設定されていない変数にアクセスした場合。
	   </simpara>
	  </listitem>
	 </varlistentry>
	</variablelist></para>

   <para>
	E_* 定数は、エラーレポートレベルを設定するために通常
	<function>error_reporting</function> 関数と共に使用されます。</para>

   <para>
    <function>define</function> 関数により定数の定義を追加することができます。</para>
	
   <para>
   これらは定数であり、C 言語のマクロではないことに注意してください。
   有効なスカラーデータのみが定数として表現可能です。

    <example>
     <title>定数の定義</title>
     <programlisting>
&lt;?php
define("CONSTANT", "Hello world.");
echo CONSTANT; // outputs "Hello world."
?&gt;
     </programlisting>
    </example>

    <example>
     <title>__FILE__ および __LINE__ の使用</title>
     <programlisting>
&lt;?php
function report_error($file, $line, $message) {
    echo "An error occured in $file on line $line: $message.";
}

report_error(__FILE__,__LINE__, "Something went wrong!");
?&gt;
     </programlisting>
    </example></para>
	
  </chapter>
 
 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->
