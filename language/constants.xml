 <chapter id="language.constants">
  <title>定数</title>

  <simpara>
   定数は簡単な値のためのID(名前)です。この名前が示すように、定数の値
   はスクリプト実行中に変更できません。(特別な定数
   <constant>__FILE__</constant> および
   <constant>__LINE__</constant> は例外です。)
   デフォルトで定数では大文字小文字を区別します。定数の表記は常に大文
   字です。
  </simpara>
  <para>
   定数の名前は、PHPのラベルと同じ規則に従います。有効な定数の名前は、
   文字またはアンダースコアで始まり、任意の数の文字、数字、アンダース
   コアが後に続きます。正規表現で示すと、次のようになります。
   <literal>[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*</literal>

   <!-- TODO: Example of valid & invalid constant names -->
  </para>
				      
  <note>
   <simpara>
    本節の目的においては、文字は a-z, A-Z, および127から255まで
    (0x7f-0xff)のASCII文字を指します。
   </simpara>
  </note>
  <simpara>
   定数のスコープはグローバルです。
  </simpara>
  <sect1 id="language.constants.syntax">
   <title>構文</title>
   <simpara>
    <function>define</function>関数を使用することにより、定数を定義す
    ることが可能です。定数が一度定義されると、変更または未定義とするこ
    とはできません。
   </simpara>
   <simpara>
    スカラーデータ(<type>boolean</type>, <type>integer</type>, 
    <type>double</type>, <type>string</type>) のみが定数の中に含むこと
    が可能です。
   </simpara>
   <simpara>
    単に定数の名前を指定することにより、その値を得ることが可能です。
    変数とは異なり、その前に<literal>$</literal>は不要です。
    定数の名前を動的に得る必要がある場合、定数の値を読むために関数
    <function>constant</function>を使用することも可能です。
    定義済の定数の一覧を得るには、
    <function>get_defined_constants</function>を使用して下さい。
   </simpara>
   <note>
    <simpara>
     定数と(グローバル)変数は、異なる名前空間にあります。
     例えば、&true; と <varname>$TRUE</varname> は違うものを意味します。
    </simpara>
   </note>
   <simpara>
    未定義の定数を使用した場合、PHPはその定数自体の名前を使用したと仮
    定します。この際、<link
    linkend="features.error-handling">notice</link> が発生します。
    ある定数が設定されているかどうかを知るには、
    <function>defined</function>巻数を使用して下さい。
   </simpara>
   <para>
    変数との違いは次のようになります。
    <itemizedlist>
     <listitem>
      <simpara>
       定数は、前にドル記号(<literal>$</literal>)を要しません。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       定数は、定義することができ、変数のスコープ規則に関係なく、あら
       ゆる場所からアクセス可能です。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       定数は一度設定されると再定義または未定義とすることはできません。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       定数は、スカラー値としてのみ評価可能です。
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
    
   <para>
    <example>
     <title>定数の定義</title>
     <programlisting>
&lt;?php
define("CONSTANT", "Hello world.");
echo CONSTANT; // "Hello world."を出力
echo Constant; // outputs "Constant" および通知を発生。
?&gt;
     </programlisting>
    </example>

   </para>
   
  </sect1>
  
  <sect1 id="language.constants.predefined">
   <title>定義済の定数</title>
   <para>
    あらかじめ定義された定数(常に使用可能)を以下に示します。
    
    <variablelist>
     
     <varlistentry>
      <term>__FILE__ (大文字小文字区別せず)</term>
      <listitem>
       <simpara>
	現在処理中のスクリプトファイルの名前。includeまたはrequireによ
	り読みこまれたファイルで使用された場合、親ファイルの名前ではな
	く読みこまれたファイルの名前となります。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>__LINE__  (大文字小文字区別せず)</term>
      <listitem>
       <simpara>
	カレントのスクリプトファイルでパース中の行の番号。includeまた
	はrequireされたファイルで使用された場合、includeされたファイル
	の中での位置となります。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>PHP_VERSION</term>
      <listitem>
       <simpara>
	現在使用中のPHPパーサのバージョンを表す文字列。
	例:'4.0.7-dev'
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>PHP_OS</term>
      <listitem>
       <simpara>
	PHPパーサを実行中のオペレーティングシステムの名前。
	値として考えられるものは次のようになります。
	"AIX", "Darwin" (MacOS), "Linux", "SunOS", "WIN32", "WINNT"
	注意: 他の値もあり得ます。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>&true; (大文字小文字区別せず)</term>
      <listitem>
       <simpara>
	真値 (<type>boolean</type> 型参照)。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>&false; (大文字小文字区別せず)</term>
      <listitem>
       <simpara>
	偽値 (<type>boolean</type> 型参照)。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>&null;  (大文字小文字区別せず)</term>
      <listitem>
       <simpara>
	&null; 値 (<type>null</type> 型参照)
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>E_ERROR</term>
      <listitem>
       <simpara>
	構文エラー以外の回復不能なエラーを定義します。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>E_WARNING</term>
      <listitem>
       <simpara>
	何か誤りがあるが、それでも実行を継続する条件を定義します。
	スクリプト自体によりエラー処理を行うことが可能です。
	例えば<function>ereg</function>における正規表現が不正であった
	場合に発生します。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>E_PARSE</term>
      <listitem>
       <simpara>
	スクリプトファイルの不正な構文によりパーサの処理が中断した
	状態です。回復は不可能です。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>E_NOTICE</term>
      <listitem>
       <simpara>
	エラーであるかにかかわらず何かが起きました。実行は継続されます。
	例えば、引用符で括られていない文字列をハッシュインデックスとして
	使用した場合や設定されていない変数にアクセスした場合。
       </simpara>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>E_ALL</term>
      <listitem>
       <simpara>
	全ての定数E_*が含まれます。
	<function>error_reporting</function>で使用された場合、
	PHPにより通知された全種類の全ての問題がリポートされます。
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>

   <para>
    E_* 定数は、エラーレポートレベルを設定するために通常
    <function>error_reporting</function> 関数と共に使用されます。
    これら全ての定数については、
    <link linkend="features.error-handling">エラー処理</link>を参照下さい。
    
    <example>
     <title>__FILE__ および __LINE__ の使用</title>
     <programlisting>
&lt;?php
function report_error($file, $line, $message) {
    echo "An error occured in $file on line $line: $message.";
}

report_error(__FILE__,__LINE__, "Something went wrong!");
?&gt;
     </programlisting>
    </example>
   </para>
  </sect1>
 </chapter>
 
 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->
