<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.8 Maintainer: hirokawa Status: working -->

<sect1 id="language.oop5.visibility">
 <title>アクセス権</title>
 <para>
  プロパティまたはメソッドのアクセス権(visibility)は、
  キーワード: public, protected または privateを指定することにより、
  定義できます。
  publicとして定義されたアイテムには、どこからでもアクセス可能です。
  protectedは、派生クラスや親クラス(とそれを定義するクラス自体)にアクセスを
  制限します。privateは、それを定義するクラスのみにアクセス権を
  制限します。
 </para>
 <sect2 id="language.oop5.visiblity-members">
  <title>メンバのアクセス権</title>
  <para>
   クラスのメンバは、public, private, または protectedとして
   定義されなくてはなりません。
  </para>
  <para>
   <example>
    <title>メンバの宣言</title>
    <programlisting role="php">
<![CDATA[
<?php
/**
 * Define MyClass
 */
class MyClass
{
    public $public = 'Public';
    protected $protected = 'Protected';
    private $private = 'Private';

    function printHello()
    {
        echo $this->public;
        echo $this->protected;
        echo $this->private;
    }
}

$obj = new MyClass();
echo $obj->public; // Works
echo $obj->protected; // Fatal Error
echo $obj->private; // Fatal Error
$obj->printHello(); // Shows Public, Protected and Private


/**
 * Define MyClass2
 */
class MyClass2 extends MyClass
{
    // We can redeclare the public and protected method, but not private
    protected $protected = 'Protected2';

    function printHello()
    {
        echo $this->public;
        echo $this->protected;
        echo $this->private;
    }
}

$obj2 = new MyClass2();
echo $obj->public; // Works
echo $obj2->private; // Undefined
echo $obj2->protected; // Fatal Error
$obj2->printHello(); // Shows Public, Protected2, not Private

?> 
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <simpara>
    キーワード<emphasis>var</emphasis>で変数を宣言する
    PHP 4の方法は、PHP 5オブジェクトではもはや
    有効ではありません。
    互換性のためにPHPで宣言された変数は、publicのアクセス権を
    有していると仮定されますが、
    <constant>E_STRICT</constant>警告が発生します。
   </simpara>
  </note>
 </sect2>
 <sect2 id="language.oop5.visiblity-methods">
  <title>メソッドのアクセス権</title>
  <para>
   クラスメソッドは、public, private, または protectedとして
   定義される必要があります。どの宣言も有さないメソッドは、
   publicとして定義されます。
  </para>
  <para>
   <example>
    <title>メソッドの宣言</title>
    <programlisting role="php">
<![CDATA[
<?php
/**
 * Define MyClass
 */
class MyClass
{
    // Contructors must be public
    public function __construct() { }

    // Declare a public method
    public function MyPublic() { }

    // Declare a protected method
    protected function MyProtected() { }

    // Declare a private method
    private function MyPrivate() { }

    // This is public
    function Foo()
    {
        $this->MyPublic();
        $this->MyProtected();
        $this->MyPrivate();
    }
}

$myclass = new MyClass;
$myclass->MyPublic(); // Works
$myclass->MyProtected(); // Fatal Error
$myclass->MyPrivate(); // Fatal Error
$myclass->Foo(); // Public, Protected and Private work


/**
 * Define MyClass2
 */
class MyClass2 extends MyClass
{
    // This is public
    function Foo2()
    {
        $this->MyPublic();
        $this->MyProtected();
        $this->MyPrivate(); // Fatal Error
    }
}

$myclass2 = new MyClass2;
$myclass2->MyPublic(); // Works
$myclass2->Foo2(); // Public and Protected work, not Private
?>
]]>
    </programlisting>
   </example>
  </para>
 </sect2>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
