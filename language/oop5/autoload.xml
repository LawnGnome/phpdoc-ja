<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 289102 Maintainer: hirokawa Status: ready -->

 <sect1 xml:id="language.oop5.autoload" xmlns="http://docbook.org/ns/docbook">
 <title>クラスのオートローディング</title>
 <para>
  オブジェクト指向アプリケーションを作成する開発者の多くは、
  クラス定義毎に一つのPHPソースファイルを作成します。
  最大の問題は、各スクリプトの先頭に、必要な読み込みを行う長いリストを
  記述する必要があることです(各クラスについて一つ)。
 </para>
 <para>
  PHP 5では、これはもう不用です。
  未定義のクラス/インターフェイスを使用しようとした時に
  自動的にコールされる __autoload 関数を定義することができます。
  この関数をコールすることにより、
  スクリプトエンジンは、PHPがエラーで止まる前にクラスをロードする最後の
  チャンスを与えます。
 </para>
 <note>
  <para>
   __autoload 関数の内部でスローされた例外は、
   <link linkend="language.exceptions">catch</link> ブロックでキャッチすることが
   できず、致命的なエラーとなります。
  </para>
 </note>
  <note>
   <para>
    オートローディングは、PHP を CLI
    <link linkend="features.commandline">対話モード</link>
    で実行している場合は使用できません。
   </para>
  </note>
  <note>
   <para>
    クラス名をたとえば <function>call_user_func</function> などで使用する場合、
    <literal>../</literal> のような危険な文字が含まれることもあり得ます。
    このような関数にはユーザの入力を渡さないことをおすすめします。
    あるいは最低限 <function>__autoload</function> の中で入力内容を検証するようにします。
   </para>
  </note>
 <para>
  <example>
   <title>オートロードの例</title>
   <para>
    この例は、 クラス <literal>MyClass1</literal> および
    <literal>MyClass2</literal> をそれぞれ
    <filename>MyClass1.php</filename> および
    <filename>MyClass2.php</filename> からロードします。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
function __autoload($class_name) {
    include_once $class_name . '.php';
}

$obj  = new MyClass1();
$obj2 = new MyClass2();
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>オートロードの別の例</title>
    <para>
     この例は、インターフェイス <literal>ITest</literal> をロードしようとします。
    </para>
    <programlisting role="php">
<![CDATA[
<?php

function __autoload($name) {
    var_dump($name);
}

class Foo implements ITest {
}

/*
string(5) "ITest"

Fatal error: Interface 'ITest' not found in ...
*/
?>
]]>
   </programlisting>
  </example>
 </para>

  <simplesect role="seealso">
   &reftitle.seealso;
   <para>
    <simplelist>
     <member><function>unserialize</function></member>
     <member><link linkend="unserialize-callback-func">unserialize_callback_func</link></member>
     <member><function>spl_autoload</function></member>
     <member><function>spl_autoload_register</function></member>
    </simplelist>
   </para>
  </simplesect>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
