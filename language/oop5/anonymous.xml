<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337376 Maintainer: takagi Status: ready -->

<sect1 xml:id="language.oop5.anonymous" xmlns="http://docbook.org/ns/docbook">
 <title>無名クラス</title>

 <para>
  PHP 7 で、無名クラスをサポートするようになりました。
  その場限りの使い捨てのオブジェクトが必要になった場合に便利です。
 </para>

 <informalexample>
  <programlisting role="php">
<![CDATA[
<?php

// PHP 7 より前のバージョンのコード
class Logger
{
    public function log($msg)
    {
        echo $msg;
    }
}

$util->setLogger(new Logger());

// PHP 7 以降のコード
$util->setLogger(new class {
    public function log($msg)
    {
        echo $msg;
    }
});
]]>
  </programlisting>
 </informalexample>

 <para>
  コンストラクタを使って引数を渡したり、他のクラスを継承したり、
  インターフェイスを実装したり、トレイトを使ったりといった、
  普通のクラスと同じようなことが可能です。
 </para>

 <informalexample>
  <programlisting role="php">
<![CDATA[
<?php

class SomeClass {}
interface SomeInterface {}
trait SomeTrait {}

var_dump(new class(10) extends SomeClass implements SomeInterface {
    private $num;

    public function __construct($num)
    {
        $this->num = $num;
    }

    use SomeTrait;
});
]]>
  </programlisting>
  &example.outputs;
  <screen>
<![CDATA[
object(class@anonymous)#1 (1) {
  ["Command line code0x104c5b612":"class@anonymous":private]=>
  int(10)
}
]]>
  </screen>
 </informalexample>

 <para>
  無名クラスを別のクラス内で作っても、外側のクラスの private や protected なメソッドそしてプロパティにはアクセスできません。
  外側のクラスの protected プロパティやメソッドにアクセスするには、
  無名クラスに外側のクラスを継承させます。
  外側のクラスの private あるいは protected なプロパティを無名クラスで使うには、
  コンストラクタでそれを渡す必要があります。
 </para>

 <informalexample>
  <programlisting role="php">
<![CDATA[
<?php

class Outer
{
    private $prop = 1;
    protected $prop2 = 2;

    protected function func1()
    {
        return 3;
    }

    public function func2()
    {
        return new class($this->prop) extends Outer {
            private $prop3;

            public function __construct($prop)
            {
                $this->prop3 = $prop;
            }

            public function func3()
            {
                return $this->prop2 + $this->prop3 + $this->func1();
            }
        };
    }
}

echo (new Outer)->func2()->func3();
]]>
  </programlisting>
  &example.outputs;
  <screen>
<![CDATA[
6
]]>
  </screen>
 </informalexample>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
