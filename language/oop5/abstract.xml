<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.9 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->

<sect1 id="language.oop5.abstract">
 <title>オブジェクトアブストラクション</title>

 <para>
  PHP 5 では、抽象クラスとメソッドが導入されました。
  abstractとして宣言されたクラスのインスタンスを生成することはできません。
  １つ以上の抽象メソッドを含む全てのクラスもまた抽象クラスとなります。
  abstractとして定義されたメソッドは、そのメソッドの外観を宣言するのみで、
  実装を定義することはできません。
 </para>

 <para>
  抽象メソッドを実装するクラスは、同等以下の
  <link linkend="language.oop5.visibility">可視性</link>で
  定義される必要があります。抽象メソッドがprotectedとして定義された場合、
  その関数の実装はprotectedまたはpublicのどちらかとして定義する必要が
  あります。
 </para>

 <example>
  <title>抽象クラスの例</title>
  <programlisting role="php">
<![CDATA[
<?php
abstract class AbstractClass
{
    // 拡張クラスにこのメソッドの定義を強制する
    abstract protected function getValue();

    // Common method
    public function printOut() {
        print $this->getValue();
    }
}

class ConcreteClass1 extends AbstractClass
{
    protected function getValue() {
        return "ConcreteClass1";
    }
}

class ConcreteClass2 extends AbstractClass
{
    public function getValue() {
        return "ConcreteClass2";
    }

}

$class1 = new ConcreteClass1;
$class1->printOut();

$class2 = new ConcreteClass2;
$class2->printOut();
?>
]]>
  </programlisting>
 </example>

 <para>
  'abstract'という名前のユーザー定義関数または関数を有さない
  コードは修正なしに動作します。
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
