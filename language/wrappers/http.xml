<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 296080 Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa -->

<refentry xml:id="wrappers.http" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" role="noversion">
 <refnamediv>
  <refname>HTTP と HTTPS</refname>
  <refpurpose>HTTP(s) URL へのアクセス</refpurpose>
 </refnamediv>

 <refsect1 role="description"><!-- {{{ -->
  &reftitle.description;
  <para>
   HTTP 1.0 により HTTP GET メソッドを用いてファイル/リソースに読み込みのみの
   アクセスが可能です。仮想ホストにホスト名でアクセスするために、
   <literal>Host:</literal> ヘッダが送信されます。
   &php.ini; ファイルまたはストリームコンテキストによって
   <link linkend="ini.user-agent">user_agent</link> 文字列を設定している場合、
   それはリクエストの中にも含まれます。
  </para>
  <simpara>
   ストリームにより、リソースの <emphasis>body</emphasis> にアクセスすることが
   できます。ヘッダは、<varname>$http_response_header</varname> 変数に保存されます。
   PHP 4.3.0 以降は、ヘッダは <function>stream_get_meta_data</function>
   により取得できます。
  </simpara>
  &warn.ssl-non-standard;
  <simpara>
   PHP 4.0.5 以降、リダイレクトがサポートされています。これ以前のバージョンを
   使用している場合、URL の末尾にスラッシュを付ける必要があります。
   (全てのリダイレクトが処理された後に)ドキュメント取得元のリソースの URL を知ることが
   重要な場合、ストリームから返された一連のレスポンスヘッダを処理する必要があります。
  </simpara>
  <simpara>
   <link linkend="ini.from">from</link> ディレクティブを
   &php.ini; で設定して <xref linkend="context" /> では <literal>From:</literal>
   ヘッダを定義していない場合、この値が
   HTTP リクエストの <literal>From:</literal> ヘッダとして送信されます。
  </simpara>
 </refsect1><!-- }}} -->

 <refsect1 role="usage"> <!-- {{{ -->
  &reftitle.options;
  <itemizedlist>
   <listitem><simpara><filename>http://example.com</filename></simpara></listitem>
   <listitem><simpara><filename>http://example.com/file.php?var1=val1&amp;var2=val2</filename></simpara></listitem>
   <listitem><simpara><filename>http://user:password@example.com</filename></simpara></listitem>
   <listitem><simpara><filename>https://example.com</filename></simpara></listitem>
   <listitem><simpara><filename>https://example.com/file.php?var1=val1&amp;var2=val2</filename></simpara></listitem>
   <listitem><simpara><filename>https://user:password@example.com</filename></simpara></listitem>
  </itemizedlist>
 </refsect1> <!-- }}} -->

 <refsect1 role="options"><!-- {{{ -->
  &reftitle.options;
  <para>
   <table>
    <title>ラッパーの概要</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>属性</entry>
       <entry>サポートの可否</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.allow-url-fopen">allow_url_fopen</link> で制約される</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>読み込み可</entry>
       <entry>Yes</entry>
      </row>
      <row>
       <entry>書き込み可</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>追記可能</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>同時読み書き可</entry>
       <entry>N/A</entry>
      </row>
      <row>
       <entry><function>stat</function> をサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>unlink</function> をサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rename</function> をサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>mkdir</function> をサポート</entry>
       <entry>No</entry>
      </row>
      <row>
       <entry><function>rmdir</function> をサポート</entry>
       <entry>No</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1> <!-- }}} -->

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        <literal>https://</literal> が追加されました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <example xml:id="wrappers.http.example.basic"><!-- {{{ -->
   <programlisting role="php">
<![CDATA[
<?php
$url = 'http://www.example.com/redirecting_page.php';

$fp = fopen($url, 'r');

/* PHP 4.3.0 より前のバージョンの場合、stream_get_meta_data() の代わりに
   $http_response_header を使用してください */
$meta_data = stream_get_meta_data($fp);
foreach($meta_data['wrapper_data'] as $response) {

  /* リダイレクトされているか? */
  if (substr(strtolower($response), 0, 10) == 'location: ') {
    /* $url をリダイレクト先に書き換える */
    $url = substr($response, 18);
  }

}

?>
]]>
   </programlisting>
  </example><!-- }}} -->

  <example xml:id="wrappers.http.example.custom.headers"> <!-- {{{ -->
   <title>HTTP リクエストで独自のヘッダを送信する</title>
   <para>
    バージョン 5 より前では、HTTP リクエストで独自のヘッダを送信することができます。
    これは INI 設定項目 <literal>user_agent</literal>
    を処理する際の副作用によるものです。
    <literal>user_agent</literal> に何らかの正常な文字列
    (たとえばデフォルト設定の <literal>PHP/version</literal> など)
    を指定し、さらに続けて
    キャリッジリターン(\r) / ラインフィード(\n)
    を置いた後に任意のヘッダを記述します。
    この方法は、PHP 4 以降のバージョンで動作します。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
ini_set('user_agent', "PHP\r\nX-MyCustomHeader: Foo");

$fp = fopen('http://www.example.com/index.php', 'r');
?>
]]>
   </programlisting>
   <para>送信されるリクエストは次のようになります。</para>
   <screen>
<![CDATA[
GET /index.php HTTP/1.0
Host: www.example.com
User-Agent: PHP
X-MyCustomHeader: Foo
]]>
   </screen>
  </example><!-- }}} -->
 </refsect1><!-- }}} -->

 <refsect1 role="notes"><!-- {{{ -->
  &reftitle.notes;
  <note>
   <simpara>
    HTTPS がサポートされるのは、<link linkend="book.openssl">openssl</link>
    拡張モジュールが有効な場合のみです。
   </simpara>
  </note>
  <simpara>
   HTTP 接続は読み込みのみ可で、HTTP リソースにデータを書き込んだり
   ファイルをコピーしたりすることはできません。
  </simpara>
 </refsect1><!-- }}} -->

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

