<?xml version="1.0" encoding="utf-8"?>
 <chapter id="language.basic-syntax">
  <title>基本的な構文</title>

   <!--
   
    NOTE:                             Last modified: 2001-05-16 13:00 GMT
    
    the language part is currently under heavy revision. Please do not
    not make any heavy (i.e. structural) modifications to this part 
    for a moment. 
    
    You'd also better not start any translation yet.
    
    Comments are always welcome at phpdoc@lists.php.net
    
    Progress:
    
     intro : DOESN'T EXIST - yet?
             new chapter, with some introductionary remarks?
             Will be discussed on the ML soon.
     basic-syntax: 
             FINISHED
             except maybe moving the 'advanced escaping'
             to a better place?
             TODO: 
              - nada
     types : Being revised. Added all new types
             Boolean and Integer are more or less finished.
             The rest isn't.
             TODO: 
              - why is $foo[bar] bad syntax?
              - what's the difference between unset($bla) and
                $bla = NULL; (it is different!)
              - $obj->{expr} syntax
              - (unset) cast?????
              - $bla = unset <== should've been nuked, don't mention it
              - $str{offset} syntax, rather than $str[offset]
              - read notes and apply when any of them are useful
              - remove notes which have been included here.
              - ...
     the rest: Not yet started with.
             TODO: 
              - ?
     oop   : has been revised by Kristian, DONE.
   -->
  
  <sect1 id="language.basic-syntax.phpmode">
   <title>HTML からの脱出</title>
   
   <para>
    PHPがファイル処理を開始する際、PHPが処理するテキストを単純に出力し
    ます。このため、あるHTMLファイルの拡張子を.phpに変更した場合でも、
    出力は同じとなります。
   </para>
   
   <para>
    PHPの命令をファイルの中に挿入したい場合、以下の手段のどれかにより
    「PHPモード」に入ることにより、PHPにそれを示す必要があります。
   </para>
   
   <para>
    <example>
     <title>HTMLからの脱出法</title>
     <programlisting>
1.  &lt;? echo ("この方法は最も簡単で、SGMLの処理命令です\n"); ?&gt;
 
2.  &lt;?php echo("XHTMLまたはXMLドキュメントを処理したい場合は、この方法が良いでしょう\n"); ?&gt;

3.  &lt;script language="php"&gt;
        echo ("(FrontPageのような) いくつかのエディタ は処理命令を好み
        ません");
    &lt;/script&gt;

4.  &lt;% echo ("オプションでASP形式のタグを使用可能です"); %&gt;
    &lt;%= $variable; # これは、"&lt;%echo .." のショートカットです。%&gt;
     </programlisting>
    </example>
   </para>
   
   <para>
    最初の方法は、短縮型のタグが有効な場合にのみ利用可能です。
    短縮型のタグは、PHPの設定ファイルに
    <!-- <function>short_tags</function> 関数を使用するか、-->
    <link linkend="ini.short-open-tag">short_open_tag</link>を設定する
    か--enable-short-tags オプションを <command>configure</command> に
    指定して PHP をコンパイルすることにより、有効にできます。
   </para>
 
   <para>
    2番目の方法は、次世代のXHTMLをPHPで容易に実装することが可能とする
    ので、好ましい方法です。
   </para>

   <para>
    4番目の方法は、ASP型式のタグが 
    <link linkend="ini.asp-tags">asp_tags</link> の設定により有効となっ
    ている場合にのみ使用可能です。

    <note>
     <para>
      ASP 型のタグのサポートは、3.0.4で追加されました。
     </para>
    </note>
   </para>

   <para>
    ブロックの閉じ括弧(右括弧)タグは、直後に改行がある場合、それを含ん
    だものになります。
   </para>

   <para> <!-- TODO: find a better place for this para -->
    PHP は、次のような構造を使用可能です。
    <example><title>高度なエスケープ処理</title>
     <programlisting role="php">
&lt;?php

if ( boolean-expression )
{
    ?&gt;
&lt;strong&gt;This is true.&lt;/strong&gt;
    &lt;?php
}
else
{
    ?&gt;
&lt;strong&gt;This is false.&lt;/strong&gt;
    &lt;?php
}
      ?&gt;
     </programlisting>
    </example>
    
    このコードは期待通りに動作します。これは、PHPが?&gt; および
    &lt;?phpの中のテキストを<function>echo</function>命令として処理す
    るためです。
    <!-- without the parsing if vars, that is (hopefully?) obvious -->
   </para>

  </sect1>

  <sect1 id="language.basic-syntax.instruction-separation">
   <title>命令の分離</title>

   <simpara>
    命令は、C や Perl と同様に分離されます。つまり、各文はセミコロンで
    終了します。
   </simpara>
   
   <para>
    閉じるタグ (?&gt;) も文の終わりの意味を有します。このため、以下の
    文は等価です。
    
    <informalexample>
     <programlisting>
&lt;?php
    echo "This is a test";
?>

&lt;?php echo "This is a test" ?>
     </programlisting>
    </informalexample>
   </para>
  </sect1>
  
  <sect1 id="language.basic-syntax.comments">
   <title>コメント</title>
   
   <para>
    PHP は、'C', 'C++' および Unix シェル型のコメントをサポートします。
    例えば、
    
    <informalexample>
     <programlisting>
&lt;?php
echo "This is a test"; // C++型の単一行用のコメント
/* 複数行用のコメント
   もう一行分のコメント */
echo "This is yet another test";
echo "One Final Test"; # シェル型のコメント
?>
     </programlisting>
    </informalexample>
   </para>
   
   <simpara>
    "一行"コメントは、改行またはPHPコードのブロックの終わり
    のうちどちらか最初にくる方までです。
   </simpara>
   <informalexample>
    <programlisting>
&lt;h1>This is an &lt;?php # echo "simple";?> example.&lt;/h1>
&lt;p>The header above will say 'This is an example'.
    </programlisting>
   </informalexample>

   <simpara>
    'C'型のコメントがネストしないように注意する必要があります。
    ネストは、大きなブロックをコメントアウトする際に生じます。
   </simpara>

   <informalexample>
    <programlisting>
&lt;?php
 /* 
    echo "This is a test"; /* このコメントが問題を生じます */
 */
?>
    </programlisting>
   </informalexample>
  </sect1>
 </chapter>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
